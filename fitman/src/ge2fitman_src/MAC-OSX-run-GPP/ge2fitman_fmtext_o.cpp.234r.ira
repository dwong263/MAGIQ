
;; Function int read_data(int*, Preprocess*, IOFiles*, Data_file_header*, Data_block_header*, Precision2*, FILE**, Procpar_info*, Precision1*, float**, float**, int, InFile_struct*, bool) (_Z9read_dataPiP10PreprocessP7IOFilesP16Data_file_headerP17Data_block_headerP10Precision2PP8_IO_FILEP12Procpar_infoP10Precision1PPfSI_iP13InFile_structb, funcdef_no=1021, decl_uid=24381, cgraph_uid=226, symbol_order=227)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 79 n_edges 114 count 79 (    1)
Building IRA IR
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 213.
verify found no changes in insn with uid = 228.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 262.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 278.
verify found no changes in insn with uid = 287.
verify found no changes in insn with uid = 294.
verify found no changes in insn with uid = 362.
verify found no changes in insn with uid = 379.
verify found no changes in insn with uid = 383.
verify found no changes in insn with uid = 409.
verify found no changes in insn with uid = 426.
verify found no changes in insn with uid = 430.
verify found no changes in insn with uid = 444.
verify found no changes in insn with uid = 456.
verify found no changes in insn with uid = 473.
verify found no changes in insn with uid = 477.
verify found no changes in insn with uid = 495.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 559.
verify found no changes in insn with uid = 599.
verify found no changes in insn with uid = 604.
verify found no changes in insn with uid = 638.
verify found no changes in insn with uid = 662.
verify found no changes in insn with uid = 751.
verify found no changes in insn with uid = 775.
verify found no changes in insn with uid = 817.
verify found no changes in insn with uid = 853.
verify found no changes in insn with uid = 875.
verify found no changes in insn with uid = 1049.
verify found no changes in insn with uid = 1074.
verify found no changes in insn with uid = 1082.
verify found no changes in insn with uid = 1196.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r795: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r795,l0) best DIREG, allocno GENERAL_REGS
    r794: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r794,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r793: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r793,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r792: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r792,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r791: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r791,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r790: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r790,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r789: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r789,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r788: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r788,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r787: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r787,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r786: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r786,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r785: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r785,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r784: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r784,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r783: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r783,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r782: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r782,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r781: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r781,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r780: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r780,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r779: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r779,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r778: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r778,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r777: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r777,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r776: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r776,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r775: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r775,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r774: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r774,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r773: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r773,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r772: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r772,l0) best SIREG, allocno GENERAL_REGS
    r771: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r771,l0) best DREG, allocno GENERAL_REGS
    r770: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r770,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r769: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r769,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r768: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r768,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r767: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r767,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r766: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r766,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r765: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r765,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r764: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r764,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r763: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a107 (r763,l0) best SSE_REGS, allocno SSE_REGS
    r762: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r762,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r761: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r761,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r760: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r760,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r759: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a117 (r759,l0) best SSE_REGS, allocno SSE_REGS
    r758: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r758,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r757: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r757,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r756: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r756,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r755: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r755,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r754: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r754,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r753: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r753,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r752: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r752,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r751: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a142 (r751,l0) best SSE_REGS, allocno SSE_REGS
    r750: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r750,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r749: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r749,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r748: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r748,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r747: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a152 (r747,l0) best SSE_REGS, allocno SSE_REGS
    r746: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r746,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r745: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r745,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r744: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r744,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r743: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r743,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r742: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r742,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r741: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r741,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r740: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r740,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r739: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r739,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r738: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r738,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r737: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r737,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r736: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r736,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r735: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r735,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r734: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r734,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r733: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r733,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r732: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r732,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r731: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r731,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r730: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r730,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r729: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r729,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r728: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r728,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r727: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r727,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r726: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r726,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r725: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r725,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r724: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r724,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r723: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r723,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r722: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r722,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r721: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r721,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r720: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r720,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r719: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r719,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r718: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r718,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r717: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r717,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r716: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r716,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r715: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r715,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r714: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r714,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r713: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r713,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r712: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r712,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r711: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r711,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r710: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r710,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r709: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r709,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r708: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r708,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r707: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r707,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r706: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r706,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r705: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a292 (r705,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r704: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r704,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r703: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r703,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r702: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r702,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r701: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r701,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r700: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r700,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r699: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a314 (r699,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r698: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a319 (r698,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r697: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a322 (r697,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r696: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r696,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r695: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a330 (r695,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r694: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a331 (r694,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r693: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a336 (r693,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r692: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a339 (r692,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r691: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a343 (r691,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r690: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a345 (r690,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r689: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a348 (r689,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r688: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a353 (r688,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r687: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a356 (r687,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r686: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a357 (r686,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r685: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a359 (r685,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r684: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a360 (r684,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r683: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a362 (r683,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r682: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a361 (r682,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r681: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a367 (r681,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r680: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a370 (r680,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r679: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a371 (r679,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r678: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a373 (r678,l0) best DIREG, allocno GENERAL_REGS
    r677: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a378 (r677,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r676: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a379 (r676,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r675: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a381 (r675,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r674: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a383 (r674,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r673: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a386 (r673,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r672: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a390 (r672,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r671: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a393 (r671,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r670: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a395 (r670,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r669: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a398 (r669,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r668: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a402 (r668,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r667: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a405 (r667,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r666: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a406 (r666,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r665: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a407 (r665,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r664: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a411 (r664,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r663: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a414 (r663,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r662: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a413 (r662,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r661: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a416 (r661,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r660: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a418 (r660,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r659: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a421 (r659,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r658: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a420 (r658,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r657: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a423 (r657,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r656: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a427 (r656,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r655: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a430 (r655,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r654: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a434 (r654,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r653: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a435 (r653,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r652: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a436 (r652,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r651: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a437 (r651,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r650: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a441 (r650,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r649: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a444 (r649,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r648: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a443 (r648,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r647: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a446 (r647,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r646: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a448 (r646,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r645: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a451 (r645,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r644: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a450 (r644,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r643: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a453 (r643,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r642: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a457 (r642,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r641: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a460 (r641,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r640: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a464 (r640,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r639: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a465 (r639,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r638: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a467 (r638,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r637: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a468 (r637,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r636: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a471 (r636,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r635: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a474 (r635,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r634: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a480 (r634,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r633: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a475 (r633,l0) best DIREG, allocno GENERAL_REGS
    r632: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a476 (r632,l0) best DREG, allocno GENERAL_REGS
    r631: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a477 (r631,l0) best CREG, allocno GENERAL_REGS
    r630: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a478 (r630,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r629: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a479 (r629,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r628: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a481 (r628,l0) best AREG, allocno GENERAL_REGS
    r627: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a486 (r627,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r626: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a489 (r626,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r625: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a490 (r625,l0) best AREG, allocno GENERAL_REGS
    r624: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a495 (r624,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r623: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a498 (r623,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r622: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a504 (r622,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r621: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a499 (r621,l0) best DIREG, allocno GENERAL_REGS
    r620: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a500 (r620,l0) best DREG, allocno GENERAL_REGS
    r619: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a501 (r619,l0) best CREG, allocno GENERAL_REGS
    r618: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a502 (r618,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r617: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a503 (r617,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r616: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a505 (r616,l0) best AREG, allocno GENERAL_REGS
    r615: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a510 (r615,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r614: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a513 (r614,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r613: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a515 (r613,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r612: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a521 (r612,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r611: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a516 (r611,l0) best DIREG, allocno GENERAL_REGS
    r610: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a517 (r610,l0) best DREG, allocno GENERAL_REGS
    r609: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a518 (r609,l0) best CREG, allocno GENERAL_REGS
    r608: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a519 (r608,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r607: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a520 (r607,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r606: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a522 (r606,l0) best AREG, allocno GENERAL_REGS
    r605: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a526 (r605,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r604: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a530 (r604,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r603: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a533 (r603,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r602: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a536 (r602,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r601: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a535 (r601,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r600: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a538 (r600,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r599: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a539 (r599,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r598: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a544 (r598,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r597: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a547 (r597,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r596: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a546 (r596,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r595: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a549 (r595,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r594: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a553 (r594,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r593: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a556 (r593,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r592: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a558 (r592,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r591: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a561 (r591,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r590: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a562 (r590,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r589: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a566 (r589,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r588: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a569 (r588,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r587: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a571 (r587,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r586: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a574 (r586,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r585: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a577 (r585,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r584: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a580 (r584,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r583: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a583 (r583,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r582: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a586 (r582,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r581: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a589 (r581,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r580: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a592 (r580,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r579: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a595 (r579,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r578: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a598 (r578,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r577: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a601 (r577,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r576: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a603 (r576,l0) best SSE_REGS, allocno SSE_REGS
    r575: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a608 (r575,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r574: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a610 (r574,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r573: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a613 (r573,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r572: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a615 (r572,l0) best SSE_REGS, allocno SSE_REGS
    r571: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a619 (r571,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r570: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a621 (r570,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r569: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a624 (r569,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r568: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a625 (r568,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r567: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a628 (r567,l0) best AREG, allocno GENERAL_REGS
    r566: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a631 (r566,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r565: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a632 (r565,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r564: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a635 (r564,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r563: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a638 (r563,l0) best AREG, allocno GENERAL_REGS
    r562: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a641 (r562,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r561: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a642 (r561,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r560: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a645 (r560,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r559: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a648 (r559,l0) best AREG, allocno GENERAL_REGS
    r558: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a651 (r558,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r557: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a652 (r557,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r556: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a655 (r556,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r555: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a658 (r555,l0) best AREG, allocno GENERAL_REGS
    r554: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a661 (r554,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r553: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a662 (r553,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r552: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a665 (r552,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r551: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a668 (r551,l0) best AREG, allocno GENERAL_REGS
    r550: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a671 (r550,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r549: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a672 (r549,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r548: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a675 (r548,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r547: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a678 (r547,l0) best AREG, allocno GENERAL_REGS
    r546: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a681 (r546,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r545: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a682 (r545,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r544: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a685 (r544,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r543: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a686 (r543,l0) best AREG, allocno GENERAL_REGS
    r542: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a689 (r542,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r541: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a690 (r541,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r540: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a694 (r540,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r539: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a697 (r539,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r538: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a700 (r538,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r537: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a703 (r537,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r536: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a702 (r536,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r535: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a705 (r535,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r534: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a707 (r534,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r533: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a708 (r533,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r532: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r532,l0) best AREG, allocno GENERAL_REGS
    r531: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r531,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r530: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a4 (r530,l0) best SSE_REGS, allocno SSE_REGS
    r529: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r529,l0) best SSE_REGS, allocno SSE_REGS
    r528: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r528,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r527: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r527,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r526: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r526,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r525: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r525,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r524: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r524,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r523: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r523,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r522: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r522,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r521: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r521,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r520: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r520,l0) best SSE_REGS, allocno SSE_REGS
    r519: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r519,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r518: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r518,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r517: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r517,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r516: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r516,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r515: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r515,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r514: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r514,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r513: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r513,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r512: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r512,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r511: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r511,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r510: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r510,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r509: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r509,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r508: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r508,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r507: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r507,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r506: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r506,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r505: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r505,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r504: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r504,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r503: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a40 (r503,l0) best SSE_REGS, allocno SSE_REGS
    r502: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r502,l0) best SSE_REGS, allocno SSE_REGS
    r501: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r501,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r500: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r500,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r499: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r499,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r498: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r498,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r497: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r497,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r496: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r496,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r495: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r495,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r494: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r494,l0) best SSE_REGS, allocno SSE_REGS
    r493: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r493,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r492: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r492,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r491: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r491,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r490: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r490,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r489: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r489,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r488: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r488,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r487: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r487,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r486: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r486,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r485: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r485,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r484: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r484,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r483: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r483,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r482: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r482,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r481: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r481,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r480: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r480,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r479: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r479,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r478: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r478,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r477: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r477,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r476: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r476,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r475: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r475,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r474: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r474,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r473: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r473,l0) best SIREG, allocno GENERAL_REGS
    r472: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a83 (r472,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r471: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r471,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r470: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r470,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r469: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r469,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r468: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r468,l0) best DIREG, allocno GENERAL_REGS
    r467: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r467,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r466: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r466,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r465: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r465,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r464: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r464,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r463: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r463,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r462: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r462,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r461: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r461,l0) best CREG, allocno GENERAL_REGS
    r460: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r460,l0) best SIREG, allocno GENERAL_REGS
    r459: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r459,l0) best DREG, allocno GENERAL_REGS
    r458: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r458,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r457: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r457,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r456: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r456,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r455: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r455,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r454: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r454,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r453: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r453,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r452: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r452,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r451: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r451,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r450,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r449: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r449,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r448,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r447: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r447,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r446: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r446,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r445: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r445,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r444: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r444,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r443: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r443,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r442: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r442,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r441: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r441,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r440: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r440,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r439: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r439,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r438: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r438,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r437: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r437,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r436: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r436,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r435: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r435,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r434: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r434,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r433: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r433,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r432,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r429,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r428,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r427,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r426: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r426,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r425: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r425,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r424: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r424,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r419,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r415,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r412: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r412,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r411,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a182 (r408,l0) best SSE_REGS, allocno SSE_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r402,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r401,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r400: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r400,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r391,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r390,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r388,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r387: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r387,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r386,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a221 (r379,l0) best SIREG, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r378,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r377,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a231 (r374,l0) best DIREG, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r372,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r368,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r367: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a232 (r367,l0) best SIREG, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r364,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a259 (r354,l0) best DIREG, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a260 (r351,l0) best SIREG, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a266 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a290 (r332,l0) best DIREG, allocno GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a293 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a291 (r329,l0) best SIREG, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a301 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a304 (r322,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a305 (r315,l0) best SIREG, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a315 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a316 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a317 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a318 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a320 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a321 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a329 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a324 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a333 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a334 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a335 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a337 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a338 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a332 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a340 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a342 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a341 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a344 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a346 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a347 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a349 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a351 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a352 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a354 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a355 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a350 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a358 (r284,l0) best SIREG, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a363 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a365 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a366 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a368 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a369 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a364 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a372 (r277,l0) best AREG, allocno GENERAL_REGS
    r276: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a374 (r276,l0) best SIREG, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a377 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a380 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a382 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a384 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a385 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a375 (r270,l0) best DREG, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a387 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a388 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a389 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a391 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a392 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a376 (r264,l0) best CREG, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a394 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a396 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a397 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a399 (r260,l0) best AREG, allocno GENERAL_REGS
    r259: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a400 (r259,l0) best DIREG, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a401 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a403 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a404 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a408 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a410 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a412 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a415 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a409 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a417 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a419 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a422 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a424 (r247,l0) best DIREG, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a426 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a428 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a429 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a425 (r243,l0) best SIREG, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a431 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a433 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a432 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a438 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a440 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a442 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a445 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a439 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a447 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a449 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a452 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a454 (r231,l0) best DIREG, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a456 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a458 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a459 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a455 (r227,l0) best SIREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a461 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a463 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a462 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a466 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a469 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a470 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a472 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a473 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a482 (r218,l0) best DIREG, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a483 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a484 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a485 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a487 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a488 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a491 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a492 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a493 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a494 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a496 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a497 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a506 (r206,l0) best DIREG, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a507 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a508 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a509 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a511 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a512 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a514 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a523 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a524 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a525 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a527 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a528 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a529 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a531 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a532 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a534 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a537 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a540 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a542 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a543 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a545 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a548 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a541 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a550 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a552 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a554 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a555 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a551 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a557 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a559 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a560 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a563 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a565 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a567 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a568 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a564 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a570 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a572 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a573 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a575 (r167,l0) best AREG, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a576 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a578 (r165,l0) best AREG, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a579 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a581 (r163,l0) best AREG, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a582 (r162,l0) best DIREG, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a584 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a585 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a587 (r159,l0) best AREG, allocno GENERAL_REGS
    r158: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a588 (r158,l0) best DIREG, allocno GENERAL_REGS
    r157: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a590 (r157,l0) best AREG, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a591 (r156,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a593 (r155,l0) best AREG, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a594 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a596 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a597 (r152,l0) best DIREG, allocno GENERAL_REGS
    r151: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a599 (r151,l0) best AREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a600 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a602 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a604 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a606 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a607 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a605 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a609 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a611 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a612 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a614 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a616 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a618 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a617 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a620 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a622 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a623 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a627 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a629 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a630 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a626 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a633 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a634 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a637 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a639 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a640 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a636 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a643 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a644 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a647 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a649 (r121,l0) best DIREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a650 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a646 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a653 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a654 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a657 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a659 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a660 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a656 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a663 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a664 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a667 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a669 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a670 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a666 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a673 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a674 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a677 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a679 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a680 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a676 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a683 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a684 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a687 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a688 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a691 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a692 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a693 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a695 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a696 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a698 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a699 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a701 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a704 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a706 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r532,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r531,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r795,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r511,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r530,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a5(r529,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a6(r520,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a7(r528,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r527,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r524,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r526,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r525,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r794,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r523,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r793,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r522,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a16(r521,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r792,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r519,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r518,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r515,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r517,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r516,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r791,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r514,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r790,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r513,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a27(r512,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r789,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r510,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a30(r507,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r509,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r508,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r788,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r506,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r787,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r505,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a37(r504,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r786,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r486,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a40(r503,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a41(r502,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r494,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a43(r501,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r500,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r498,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a46(r499,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r785,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r497,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r784,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r496,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r495,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a52(r783,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a53(r493,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r492,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a55(r490,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a56(r491,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r782,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a58(r489,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a59(r781,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r488,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a61(r487,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r780,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r485,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a64(r483,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r484,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r779,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a67(r482,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r778,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r481,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a70(r480,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a71(r777,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r479,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a73(r474,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a74(r478,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r477,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r776,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r476,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a78(r475,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a79(r775,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a80(r774,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r473,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a82(r773,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r472,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a84(r468,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a85(r772,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r771,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a87(r461,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a88(r471,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a89(r770,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a90(r470,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a91(r469,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r769,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r467,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r466,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a95(r465,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r464,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r768,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a98(r463,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a99(r462,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a100(r767,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a101(r766,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r460,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a103(r459,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a104(r765,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a105(r764,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a106(r458,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r763,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a108(r457,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r455,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a110(r456,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a111(r762,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r454,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a113(r761,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r453,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a115(r452,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a116(r760,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a117(r759,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a118(r451,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:20 INT_SSE_REGS:20 ALL_REGS:204 MEM:5
  a119(r450,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a120(r758,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a121(r449,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a122(r448,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a123(r757,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a124(r447,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a125(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r445,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a128(r756,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a129(r444,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a130(r443,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a131(r755,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a132(r754,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r441,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r440,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a135(r439,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r438,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r753,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r437,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a139(r436,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a140(r752,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a141(r435,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r751,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a143(r434,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r433,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a146(r750,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a147(r431,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a148(r749,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a150(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r748,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r747,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a153(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:20 INT_SSE_REGS:20 ALL_REGS:204 MEM:5
  a154(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a155(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a156(r424,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a157(r425,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a158(r746,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a159(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a160(r745,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a161(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a162(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a163(r744,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a164(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a165(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a166(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a167(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a168(r743,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a169(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a170(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a171(r742,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a172(r741,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a173(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a174(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a175(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a176(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a177(r740,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a178(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a179(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r739,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a182(r408,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a183(r738,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:21 INT_SSE_REGS:21 ALL_REGS:308 MEM:5
  a184(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a185(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a186(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a187(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a188(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a189(r737,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a191(r736,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a192(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a193(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r735,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a195(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a196(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a197(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a198(r734,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a199(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a200(r733,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a201(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a202(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a203(r732,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a204(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a205(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a206(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a207(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a208(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a209(r731,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a211(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a212(r730,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a213(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a214(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a215(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a216(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a217(r729,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a218(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a219(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a220(r728,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a221(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a222(r727,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a223(r726,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a224(r378,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a225(r725,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a226(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a227(r724,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a228(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a229(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a230(r723,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a231(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a232(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a233(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a234(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a235(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a236(r722,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a237(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a238(r721,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a239(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a240(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a241(r720,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a242(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a243(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a244(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a245(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a246(r719,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a247(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a248(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a249(r718,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a250(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a251(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a252(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a253(r717,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a254(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a255(r716,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a256(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a257(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a258(r715,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a259(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a260(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a261(r714,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a262(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a263(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a264(r713,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a265(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a266(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a267(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a268(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a269(r712,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a270(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a271(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a272(r711,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a273(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a274(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a275(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a276(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a277(r710,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a278(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a279(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a280(r709,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a281(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a282(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a283(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a284(r708,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a285(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a286(r707,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a287(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a288(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a289(r706,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a290(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a291(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a292(r705,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a293(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a294(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a295(r704,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a296(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a297(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a298(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a299(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a300(r703,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a301(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a302(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a303(r702,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a304(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a305(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a306(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a307(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a308(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a309(r701,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a310(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a311(r700,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a312(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a313(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a314(r699,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a315(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a316(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a317(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a318(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a319(r698,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a320(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a321(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a322(r697,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a323(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a324(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a325(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a326(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a327(r696,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a328(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a329(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a330(r695,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a331(r694,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a332(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a333(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a334(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a335(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a336(r693,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a337(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a338(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a339(r692,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a340(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a341(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a342(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a343(r691,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a344(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a345(r690,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a346(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a347(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a348(r689,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a349(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a350(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a351(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a352(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a353(r688,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a354(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a355(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a356(r687,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a357(r686,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a358(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a359(r685,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a360(r684,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a361(r682,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a362(r683,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a363(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a364(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a365(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a366(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a367(r681,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a368(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a369(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a370(r680,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a371(r679,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a372(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a373(r678,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a374(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a375(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a376(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a377(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a378(r677,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a379(r676,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a380(r274,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a381(r675,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a382(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a383(r674,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a384(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a385(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a386(r673,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a387(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a388(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a389(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a390(r672,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a391(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a392(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a393(r671,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a394(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a395(r670,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a396(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a397(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a398(r669,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a399(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a400(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a401(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a402(r668,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a403(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a404(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a405(r667,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a406(r666,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a407(r665,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a408(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a409(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a410(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a411(r664,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a412(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a413(r662,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a414(r663,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a415(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a416(r661,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a417(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a418(r660,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a419(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a420(r658,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a421(r659,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a422(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a423(r657,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a424(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a425(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a426(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a427(r656,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a428(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a429(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a430(r655,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a431(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a432(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a433(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a434(r654,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a435(r653,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a436(r652,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a437(r651,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a438(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a439(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a440(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a441(r650,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a442(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a443(r648,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a444(r649,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a445(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a446(r647,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a447(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a448(r646,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a449(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a450(r644,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a451(r645,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a452(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a453(r643,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a454(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a455(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a456(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a457(r642,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a458(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a459(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a460(r641,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a461(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a462(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a463(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a464(r640,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a465(r639,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a466(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a467(r638,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a468(r637,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a469(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a470(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a471(r636,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a472(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a473(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a474(r635,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a475(r633,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a476(r632,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a477(r631,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a478(r630,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a479(r629,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a480(r634,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a481(r628,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a482(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a483(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a484(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a485(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a486(r627,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a487(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a488(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a489(r626,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a490(r625,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a491(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a492(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a493(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a494(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a495(r624,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a496(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a497(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a498(r623,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a499(r621,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a500(r620,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a501(r619,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a502(r618,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a503(r617,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a504(r622,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a505(r616,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a506(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a507(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a508(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a509(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a510(r615,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a511(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a512(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a513(r614,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a514(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a515(r613,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a516(r611,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a517(r610,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a518(r609,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a519(r608,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a520(r607,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a521(r612,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a522(r606,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a523(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a524(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a525(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a526(r605,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a527(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a528(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a529(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a530(r604,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a531(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a532(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a533(r603,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a534(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a535(r601,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a536(r602,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a537(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a538(r600,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a539(r599,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a540(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a541(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a542(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a543(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a544(r598,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a545(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a546(r596,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a547(r597,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a548(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a549(r595,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a550(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a551(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a552(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a553(r594,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a554(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a555(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a556(r593,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a557(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a558(r592,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a559(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a560(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a561(r591,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a562(r590,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a563(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a564(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a565(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a566(r589,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a567(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a568(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a569(r588,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a570(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a571(r587,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a572(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a573(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a574(r586,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a575(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a576(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a577(r585,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a578(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a579(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a580(r584,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a581(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a582(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a583(r583,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a584(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a585(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a586(r582,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a587(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a588(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a589(r581,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a590(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a591(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a592(r580,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a593(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a594(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a595(r579,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a596(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a597(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a598(r578,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a599(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a600(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a601(r577,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a602(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a603(r576,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a604(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a605(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a606(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a607(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a608(r575,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a609(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a610(r574,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a611(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a612(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a613(r573,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a614(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a615(r572,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a616(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a617(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a618(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a619(r571,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a620(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a621(r570,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a622(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a623(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a624(r569,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a625(r568,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a626(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a627(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a628(r567,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a629(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a630(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a631(r566,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a632(r565,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a633(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a634(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a635(r564,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a636(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a637(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a638(r563,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a639(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a640(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a641(r562,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a642(r561,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a643(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a644(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a645(r560,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a646(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a647(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a648(r559,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a649(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a650(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a651(r558,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a652(r557,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a653(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a654(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a655(r556,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a656(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a657(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a658(r555,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a659(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a660(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a661(r554,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a662(r553,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a663(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a664(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a665(r552,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a666(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a667(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a668(r551,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a669(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a670(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a671(r550,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a672(r549,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a673(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a674(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a675(r548,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a676(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a677(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a678(r547,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a679(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a680(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a681(r546,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a682(r545,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a683(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a684(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a685(r544,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a686(r543,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a687(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a688(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a689(r542,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a690(r541,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a691(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a692(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a693(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a694(r540,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a695(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a696(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a697(r539,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a698(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a699(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a700(r538,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a701(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a702(r536,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a703(r537,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a704(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a705(r535,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a706(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a707(r534,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a708(r533,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 1205(l0): point = 0
   Insn 1204(l0): point = 2
   Insn 1200(l0): point = 4
   Insn 1197(l0): point = 6
   Insn 1196(l0): point = 8
   Insn 1195(l0): point = 10
   Insn 1194(l0): point = 12
   Insn 27(l0): point = 15
   Insn 26(l0): point = 17
   Insn 25(l0): point = 19
   Insn 24(l0): point = 21
   Insn 1249(l0): point = 24
   Insn 1188(l0): point = 26
   Insn 43(l0): point = 29
   Insn 42(l0): point = 31
   Insn 41(l0): point = 33
   Insn 40(l0): point = 35
   Insn 39(l0): point = 37
   Insn 38(l0): point = 39
   Insn 37(l0): point = 41
   Insn 36(l0): point = 43
   Insn 35(l0): point = 45
   Insn 34(l0): point = 47
   Insn 33(l0): point = 49
   Insn 32(l0): point = 51
   Insn 31(l0): point = 53
   Insn 30(l0): point = 55
   Insn 29(l0): point = 57
   Insn 489(l0): point = 60
   Insn 488(l0): point = 62
   Insn 487(l0): point = 64
   Insn 486(l0): point = 66
   Insn 485(l0): point = 68
   Insn 484(l0): point = 70
   Insn 483(l0): point = 72
   Insn 482(l0): point = 74
   Insn 480(l0): point = 77
   Insn 477(l0): point = 80
   Insn 476(l0): point = 82
   Insn 475(l0): point = 84
   Insn 474(l0): point = 86
   Insn 473(l0): point = 88
   Insn 472(l0): point = 90
   Insn 471(l0): point = 92
   Insn 470(l0): point = 94
   Insn 469(l0): point = 96
   Insn 468(l0): point = 98
   Insn 467(l0): point = 100
   Insn 466(l0): point = 102
   Insn 465(l0): point = 104
   Insn 464(l0): point = 106
   Insn 463(l0): point = 108
   Insn 462(l0): point = 110
   Insn 461(l0): point = 112
   Insn 460(l0): point = 114
   Insn 459(l0): point = 116
   Insn 458(l0): point = 118
   Insn 457(l0): point = 120
   Insn 456(l0): point = 122
   Insn 455(l0): point = 124
   Insn 454(l0): point = 126
   Insn 453(l0): point = 128
   Insn 452(l0): point = 130
   Insn 451(l0): point = 132
   Insn 450(l0): point = 134
   Insn 449(l0): point = 136
   Insn 448(l0): point = 138
   Insn 447(l0): point = 140
   Insn 446(l0): point = 142
   Insn 445(l0): point = 144
   Insn 444(l0): point = 146
   Insn 443(l0): point = 148
   Insn 442(l0): point = 150
   Insn 441(l0): point = 152
   Insn 440(l0): point = 154
   Insn 439(l0): point = 156
   Insn 438(l0): point = 158
   Insn 437(l0): point = 160
   Insn 436(l0): point = 162
   Insn 435(l0): point = 164
   Insn 1219(l0): point = 167
   Insn 383(l0): point = 169
   Insn 382(l0): point = 171
   Insn 381(l0): point = 173
   Insn 380(l0): point = 175
   Insn 379(l0): point = 177
   Insn 378(l0): point = 179
   Insn 377(l0): point = 181
   Insn 376(l0): point = 183
   Insn 375(l0): point = 185
   Insn 374(l0): point = 187
   Insn 373(l0): point = 189
   Insn 372(l0): point = 191
   Insn 371(l0): point = 193
   Insn 370(l0): point = 195
   Insn 369(l0): point = 197
   Insn 368(l0): point = 199
   Insn 367(l0): point = 201
   Insn 366(l0): point = 203
   Insn 365(l0): point = 205
   Insn 364(l0): point = 207
   Insn 363(l0): point = 209
   Insn 362(l0): point = 211
   Insn 361(l0): point = 213
   Insn 360(l0): point = 215
   Insn 359(l0): point = 217
   Insn 358(l0): point = 219
   Insn 357(l0): point = 221
   Insn 1221(l0): point = 224
   Insn 430(l0): point = 226
   Insn 429(l0): point = 228
   Insn 428(l0): point = 230
   Insn 427(l0): point = 232
   Insn 426(l0): point = 234
   Insn 425(l0): point = 236
   Insn 424(l0): point = 238
   Insn 423(l0): point = 240
   Insn 422(l0): point = 242
   Insn 421(l0): point = 244
   Insn 420(l0): point = 246
   Insn 419(l0): point = 248
   Insn 418(l0): point = 250
   Insn 417(l0): point = 252
   Insn 416(l0): point = 254
   Insn 415(l0): point = 256
   Insn 414(l0): point = 258
   Insn 413(l0): point = 260
   Insn 412(l0): point = 262
   Insn 411(l0): point = 264
   Insn 410(l0): point = 266
   Insn 409(l0): point = 268
   Insn 408(l0): point = 270
   Insn 407(l0): point = 272
   Insn 406(l0): point = 274
   Insn 405(l0): point = 276
   Insn 404(l0): point = 278
   Insn 403(l0): point = 280
   Insn 394(l0): point = 283
   Insn 393(l0): point = 285
   Insn 392(l0): point = 287
   Insn 391(l0): point = 289
   Insn 389(l0): point = 292
   Insn 388(l0): point = 294
   Insn 355(l0): point = 297
   Insn 354(l0): point = 299
   Insn 353(l0): point = 301
   Insn 352(l0): point = 303
   Insn 351(l0): point = 305
   Insn 350(l0): point = 307
   Insn 349(l0): point = 309
   Insn 348(l0): point = 311
   Insn 347(l0): point = 313
   Insn 346(l0): point = 315
   Insn 345(l0): point = 317
   Insn 344(l0): point = 319
   Insn 343(l0): point = 321
   Insn 342(l0): point = 323
   Insn 341(l0): point = 325
   Insn 340(l0): point = 327
   Insn 339(l0): point = 329
   Insn 338(l0): point = 331
   Insn 337(l0): point = 333
   Insn 336(l0): point = 335
   Insn 335(l0): point = 337
   Insn 334(l0): point = 339
   Insn 333(l0): point = 341
   Insn 332(l0): point = 343
   Insn 331(l0): point = 345
   Insn 330(l0): point = 347
   Insn 329(l0): point = 349
   Insn 328(l0): point = 351
   Insn 327(l0): point = 353
   Insn 326(l0): point = 355
   Insn 325(l0): point = 357
   Insn 324(l0): point = 359
   Insn 323(l0): point = 361
   Insn 322(l0): point = 363
   Insn 321(l0): point = 365
   Insn 320(l0): point = 367
   Insn 319(l0): point = 369
   Insn 318(l0): point = 371
   Insn 317(l0): point = 373
   Insn 316(l0): point = 375
   Insn 315(l0): point = 377
   Insn 314(l0): point = 379
   Insn 313(l0): point = 381
   Insn 312(l0): point = 383
   Insn 311(l0): point = 385
   Insn 310(l0): point = 387
   Insn 309(l0): point = 389
   Insn 308(l0): point = 391
   Insn 307(l0): point = 393
   Insn 306(l0): point = 395
   Insn 305(l0): point = 397
   Insn 304(l0): point = 399
   Insn 303(l0): point = 401
   Insn 302(l0): point = 403
   Insn 301(l0): point = 405
   Insn 300(l0): point = 407
   Insn 299(l0): point = 409
   Insn 298(l0): point = 411
   Insn 297(l0): point = 413
   Insn 290(l0): point = 416
   Insn 289(l0): point = 418
   Insn 288(l0): point = 420
   Insn 287(l0): point = 422
   Insn 286(l0): point = 424
   Insn 285(l0): point = 426
   Insn 284(l0): point = 428
   Insn 283(l0): point = 430
   Insn 282(l0): point = 432
   Insn 279(l0): point = 435
   Insn 278(l0): point = 437
   Insn 277(l0): point = 439
   Insn 1209(l0): point = 442
   Insn 195(l0): point = 444
   Insn 1211(l0): point = 447
   Insn 219(l0): point = 449
   Insn 1213(l0): point = 452
   Insn 233(l0): point = 454
   Insn 1215(l0): point = 457
   Insn 247(l0): point = 459
   Insn 275(l0): point = 462
   Insn 274(l0): point = 464
   Insn 273(l0): point = 466
   Insn 272(l0): point = 468
   Insn 271(l0): point = 470
   Insn 270(l0): point = 472
   Insn 269(l0): point = 474
   Insn 268(l0): point = 476
   Insn 1217(l0): point = 479
   Insn 263(l0): point = 481
   Insn 262(l0): point = 483
   Insn 261(l0): point = 485
   Insn 259(l0): point = 488
   Insn 258(l0): point = 490
   Insn 257(l0): point = 492
   Insn 256(l0): point = 494
   Insn 255(l0): point = 496
   Insn 254(l0): point = 498
   Insn 253(l0): point = 500
   Insn 252(l0): point = 502
   Insn 245(l0): point = 505
   Insn 244(l0): point = 507
   Insn 243(l0): point = 509
   Insn 242(l0): point = 511
   Insn 241(l0): point = 513
   Insn 240(l0): point = 515
   Insn 239(l0): point = 517
   Insn 238(l0): point = 519
   Insn 231(l0): point = 522
   Insn 230(l0): point = 524
   Insn 229(l0): point = 526
   Insn 228(l0): point = 528
   Insn 227(l0): point = 530
   Insn 226(l0): point = 532
   Insn 225(l0): point = 534
   Insn 224(l0): point = 536
   Insn 216(l0): point = 539
   Insn 215(l0): point = 541
   Insn 214(l0): point = 543
   Insn 213(l0): point = 545
   Insn 212(l0): point = 547
   Insn 211(l0): point = 549
   Insn 210(l0): point = 551
   Insn 209(l0): point = 553
   Insn 207(l0): point = 556
   Insn 206(l0): point = 558
   Insn 205(l0): point = 560
   Insn 204(l0): point = 562
   Insn 203(l0): point = 564
   Insn 202(l0): point = 566
   Insn 201(l0): point = 568
   Insn 200(l0): point = 570
   Insn 192(l0): point = 573
   Insn 191(l0): point = 575
   Insn 190(l0): point = 577
   Insn 189(l0): point = 579
   Insn 188(l0): point = 581
   Insn 187(l0): point = 583
   Insn 186(l0): point = 585
   Insn 185(l0): point = 587
   Insn 183(l0): point = 590
   Insn 182(l0): point = 592
   Insn 181(l0): point = 594
   Insn 180(l0): point = 596
   Insn 179(l0): point = 598
   Insn 178(l0): point = 600
   Insn 177(l0): point = 602
   Insn 176(l0): point = 604
   Insn 143(l0): point = 607
   Insn 142(l0): point = 609
   Insn 141(l0): point = 611
   Insn 139(l0): point = 614
   Insn 138(l0): point = 616
   Insn 137(l0): point = 618
   Insn 136(l0): point = 620
   Insn 135(l0): point = 622
   Insn 134(l0): point = 624
   Insn 133(l0): point = 626
   Insn 132(l0): point = 628
   Insn 131(l0): point = 630
   Insn 130(l0): point = 632
   Insn 129(l0): point = 634
   Insn 128(l0): point = 636
   Insn 127(l0): point = 638
   Insn 126(l0): point = 640
   Insn 125(l0): point = 642
   Insn 124(l0): point = 644
   Insn 123(l0): point = 646
   Insn 122(l0): point = 648
   Insn 121(l0): point = 650
   Insn 120(l0): point = 652
   Insn 119(l0): point = 654
   Insn 118(l0): point = 656
   Insn 117(l0): point = 658
   Insn 116(l0): point = 660
   Insn 115(l0): point = 662
   Insn 114(l0): point = 664
   Insn 113(l0): point = 666
   Insn 112(l0): point = 668
   Insn 111(l0): point = 670
   Insn 110(l0): point = 672
   Insn 109(l0): point = 674
   Insn 108(l0): point = 676
   Insn 107(l0): point = 678
   Insn 106(l0): point = 680
   Insn 105(l0): point = 682
   Insn 104(l0): point = 684
   Insn 103(l0): point = 686
   Insn 102(l0): point = 688
   Insn 101(l0): point = 690
   Insn 100(l0): point = 692
   Insn 99(l0): point = 694
   Insn 98(l0): point = 696
   Insn 97(l0): point = 698
   Insn 96(l0): point = 700
   Insn 95(l0): point = 702
   Insn 94(l0): point = 704
   Insn 93(l0): point = 706
   Insn 92(l0): point = 708
   Insn 91(l0): point = 710
   Insn 90(l0): point = 712
   Insn 89(l0): point = 714
   Insn 88(l0): point = 716
   Insn 87(l0): point = 718
   Insn 86(l0): point = 720
   Insn 85(l0): point = 722
   Insn 84(l0): point = 724
   Insn 83(l0): point = 726
   Insn 82(l0): point = 728
   Insn 81(l0): point = 730
   Insn 80(l0): point = 732
   Insn 79(l0): point = 734
   Insn 78(l0): point = 736
   Insn 77(l0): point = 738
   Insn 76(l0): point = 740
   Insn 75(l0): point = 742
   Insn 74(l0): point = 744
   Insn 73(l0): point = 746
   Insn 72(l0): point = 748
   Insn 71(l0): point = 750
   Insn 70(l0): point = 752
   Insn 69(l0): point = 754
   Insn 68(l0): point = 756
   Insn 67(l0): point = 758
   Insn 66(l0): point = 760
   Insn 65(l0): point = 762
   Insn 64(l0): point = 764
   Insn 63(l0): point = 766
   Insn 62(l0): point = 768
   Insn 61(l0): point = 770
   Insn 60(l0): point = 772
   Insn 59(l0): point = 774
   Insn 58(l0): point = 776
   Insn 57(l0): point = 778
   Insn 56(l0): point = 780
   Insn 55(l0): point = 782
   Insn 54(l0): point = 784
   Insn 53(l0): point = 786
   Insn 52(l0): point = 788
   Insn 51(l0): point = 790
   Insn 50(l0): point = 792
   Insn 49(l0): point = 794
   Insn 48(l0): point = 796
   Insn 47(l0): point = 798
   Insn 46(l0): point = 800
   Insn 45(l0): point = 802
   Insn 1207(l0): point = 805
   Insn 170(l0): point = 807
   Insn 169(l0): point = 809
   Insn 168(l0): point = 811
   Insn 167(l0): point = 813
   Insn 166(l0): point = 815
   Insn 165(l0): point = 817
   Insn 164(l0): point = 819
   Insn 163(l0): point = 821
   Insn 162(l0): point = 823
   Insn 161(l0): point = 825
   Insn 160(l0): point = 827
   Insn 159(l0): point = 829
   Insn 158(l0): point = 831
   Insn 157(l0): point = 833
   Insn 156(l0): point = 835
   Insn 155(l0): point = 837
   Insn 154(l0): point = 839
   Insn 153(l0): point = 841
   Insn 152(l0): point = 843
   Insn 151(l0): point = 845
   Insn 150(l0): point = 847
   Insn 149(l0): point = 849
   Insn 148(l0): point = 851
   Insn 147(l0): point = 853
   Insn 146(l0): point = 855
   Insn 145(l0): point = 857
   Insn 294(l0): point = 860
   Insn 293(l0): point = 862
   Insn 292(l0): point = 864
   Insn 400(l0): point = 867
   Insn 399(l0): point = 869
   Insn 398(l0): point = 871
   Insn 397(l0): point = 873
   Insn 396(l0): point = 875
   Insn 1247(l0): point = 878
   Insn 1180(l0): point = 880
   Insn 590(l0): point = 883
   Insn 589(l0): point = 885
   Insn 588(l0): point = 887
   Insn 586(l0): point = 890
   Insn 583(l0): point = 893
   Insn 582(l0): point = 895
   Insn 581(l0): point = 897
   Insn 580(l0): point = 899
   Insn 579(l0): point = 901
   Insn 578(l0): point = 903
   Insn 577(l0): point = 905
   Insn 576(l0): point = 907
   Insn 575(l0): point = 909
   Insn 574(l0): point = 911
   Insn 573(l0): point = 913
   Insn 572(l0): point = 915
   Insn 571(l0): point = 917
   Insn 570(l0): point = 919
   Insn 569(l0): point = 921
   Insn 568(l0): point = 923
   Insn 567(l0): point = 925
   Insn 566(l0): point = 927
   Insn 565(l0): point = 929
   Insn 564(l0): point = 931
   Insn 563(l0): point = 933
   Insn 562(l0): point = 935
   Insn 561(l0): point = 937
   Insn 560(l0): point = 939
   Insn 559(l0): point = 941
   Insn 558(l0): point = 943
   Insn 557(l0): point = 945
   Insn 556(l0): point = 947
   Insn 555(l0): point = 949
   Insn 554(l0): point = 951
   Insn 553(l0): point = 953
   Insn 552(l0): point = 955
   Insn 551(l0): point = 957
   Insn 550(l0): point = 959
   Insn 549(l0): point = 961
   Insn 548(l0): point = 963
   Insn 547(l0): point = 965
   Insn 546(l0): point = 967
   Insn 545(l0): point = 969
   Insn 544(l0): point = 971
   Insn 543(l0): point = 973
   Insn 1223(l0): point = 976
   Insn 538(l0): point = 978
   Insn 537(l0): point = 980
   Insn 536(l0): point = 982
   Insn 535(l0): point = 984
   Insn 534(l0): point = 986
   Insn 533(l0): point = 988
   Insn 532(l0): point = 990
   Insn 531(l0): point = 992
   Insn 530(l0): point = 994
   Insn 529(l0): point = 996
   Insn 528(l0): point = 998
   Insn 527(l0): point = 1000
   Insn 526(l0): point = 1002
   Insn 525(l0): point = 1004
   Insn 524(l0): point = 1006
   Insn 523(l0): point = 1008
   Insn 522(l0): point = 1010
   Insn 521(l0): point = 1012
   Insn 520(l0): point = 1014
   Insn 519(l0): point = 1016
   Insn 518(l0): point = 1018
   Insn 517(l0): point = 1020
   Insn 516(l0): point = 1022
   Insn 515(l0): point = 1024
   Insn 514(l0): point = 1026
   Insn 513(l0): point = 1028
   Insn 512(l0): point = 1030
   Insn 511(l0): point = 1032
   Insn 510(l0): point = 1034
   Insn 509(l0): point = 1036
   Insn 508(l0): point = 1038
   Insn 507(l0): point = 1040
   Insn 506(l0): point = 1042
   Insn 505(l0): point = 1044
   Insn 504(l0): point = 1046
   Insn 503(l0): point = 1048
   Insn 502(l0): point = 1050
   Insn 501(l0): point = 1052
   Insn 500(l0): point = 1054
   Insn 499(l0): point = 1056
   Insn 498(l0): point = 1058
   Insn 497(l0): point = 1060
   Insn 496(l0): point = 1062
   Insn 495(l0): point = 1064
   Insn 494(l0): point = 1066
   Insn 492(l0): point = 1069
   Insn 491(l0): point = 1071
   Insn 1245(l0): point = 1074
   Insn 1174(l0): point = 1076
   Insn 1095(l0): point = 1079
   Insn 1094(l0): point = 1081
   Insn 1093(l0): point = 1083
   Insn 1092(l0): point = 1085
   Insn 1091(l0): point = 1087
   Insn 1090(l0): point = 1089
   Insn 1089(l0): point = 1091
   Insn 1088(l0): point = 1093
   Insn 1087(l0): point = 1095
   Insn 1086(l0): point = 1097
   Insn 1085(l0): point = 1099
   Insn 1083(l0): point = 1102
   Insn 1082(l0): point = 1104
   Insn 1081(l0): point = 1106
   Insn 1080(l0): point = 1108
   Insn 1079(l0): point = 1110
   Insn 1078(l0): point = 1112
   Insn 1077(l0): point = 1114
   Insn 1039(l0): point = 1117
   Insn 1038(l0): point = 1119
   Insn 899(l0): point = 1122
   Insn 898(l0): point = 1124
   Insn 896(l0): point = 1127
   Insn 895(l0): point = 1129
   Insn 894(l0): point = 1131
   Insn 893(l0): point = 1133
   Insn 892(l0): point = 1135
   Insn 891(l0): point = 1137
   Insn 890(l0): point = 1139
   Insn 889(l0): point = 1141
   Insn 888(l0): point = 1143
   Insn 887(l0): point = 1145
   Insn 1237(l0): point = 1148
   Insn 925(l0): point = 1150
   Insn 924(l0): point = 1152
   Insn 923(l0): point = 1154
   Insn 922(l0): point = 1156
   Insn 921(l0): point = 1158
   Insn 920(l0): point = 1160
   Insn 919(l0): point = 1162
   Insn 918(l0): point = 1164
   Insn 917(l0): point = 1166
   Insn 916(l0): point = 1168
   Insn 915(l0): point = 1170
   Insn 914(l0): point = 1172
   Insn 913(l0): point = 1174
   Insn 912(l0): point = 1176
   Insn 911(l0): point = 1178
   Insn 910(l0): point = 1180
   Insn 909(l0): point = 1182
   Insn 908(l0): point = 1184
   Insn 907(l0): point = 1186
   Insn 906(l0): point = 1188
   Insn 905(l0): point = 1190
   Insn 904(l0): point = 1192
   Insn 903(l0): point = 1194
   Insn 902(l0): point = 1196
   Insn 901(l0): point = 1198
   Insn 954(l0): point = 1201
   Insn 953(l0): point = 1203
   Insn 952(l0): point = 1205
   Insn 951(l0): point = 1207
   Insn 950(l0): point = 1209
   Insn 949(l0): point = 1211
   Insn 948(l0): point = 1213
   Insn 947(l0): point = 1215
   Insn 946(l0): point = 1217
   Insn 945(l0): point = 1219
   Insn 944(l0): point = 1221
   Insn 942(l0): point = 1224
   Insn 1239(l0): point = 1227
   Insn 981(l0): point = 1229
   Insn 980(l0): point = 1231
   Insn 979(l0): point = 1233
   Insn 978(l0): point = 1235
   Insn 977(l0): point = 1237
   Insn 976(l0): point = 1239
   Insn 975(l0): point = 1241
   Insn 974(l0): point = 1243
   Insn 973(l0): point = 1245
   Insn 972(l0): point = 1247
   Insn 971(l0): point = 1249
   Insn 970(l0): point = 1251
   Insn 969(l0): point = 1253
   Insn 968(l0): point = 1255
   Insn 967(l0): point = 1257
   Insn 966(l0): point = 1259
   Insn 965(l0): point = 1261
   Insn 964(l0): point = 1263
   Insn 963(l0): point = 1265
   Insn 962(l0): point = 1267
   Insn 961(l0): point = 1269
   Insn 960(l0): point = 1271
   Insn 959(l0): point = 1273
   Insn 958(l0): point = 1275
   Insn 957(l0): point = 1277
   Insn 956(l0): point = 1279
   Insn 996(l0): point = 1282
   Insn 995(l0): point = 1284
   Insn 994(l0): point = 1286
   Insn 993(l0): point = 1288
   Insn 992(l0): point = 1290
   Insn 991(l0): point = 1292
   Insn 990(l0): point = 1294
   Insn 989(l0): point = 1296
   Insn 988(l0): point = 1298
   Insn 987(l0): point = 1300
   Insn 940(l0): point = 1303
   Insn 939(l0): point = 1305
   Insn 938(l0): point = 1307
   Insn 937(l0): point = 1309
   Insn 936(l0): point = 1311
   Insn 935(l0): point = 1313
   Insn 934(l0): point = 1315
   Insn 933(l0): point = 1317
   Insn 932(l0): point = 1319
   Insn 931(l0): point = 1321
   Insn 885(l0): point = 1324
   Insn 884(l0): point = 1326
   Insn 883(l0): point = 1328
   Insn 882(l0): point = 1330
   Insn 881(l0): point = 1332
   Insn 880(l0): point = 1334
   Insn 879(l0): point = 1336
   Insn 878(l0): point = 1338
   Insn 877(l0): point = 1340
   Insn 876(l0): point = 1342
   Insn 875(l0): point = 1344
   Insn 874(l0): point = 1346
   Insn 873(l0): point = 1348
   Insn 872(l0): point = 1350
   Insn 871(l0): point = 1352
   Insn 870(l0): point = 1354
   Insn 869(l0): point = 1356
   Insn 868(l0): point = 1358
   Insn 867(l0): point = 1360
   Insn 866(l0): point = 1362
   Insn 865(l0): point = 1364
   Insn 864(l0): point = 1366
   Insn 863(l0): point = 1368
   Insn 862(l0): point = 1370
   Insn 711(l0): point = 1373
   Insn 710(l0): point = 1375
   Insn 679(l0): point = 1378
   Insn 678(l0): point = 1380
   Insn 677(l0): point = 1382
   Insn 676(l0): point = 1384
   Insn 675(l0): point = 1386
   Insn 674(l0): point = 1388
   Insn 673(l0): point = 1390
   Insn 672(l0): point = 1392
   Insn 671(l0): point = 1394
   Insn 670(l0): point = 1396
   Insn 669(l0): point = 1398
   Insn 667(l0): point = 1401
   Insn 1227(l0): point = 1404
   Insn 704(l0): point = 1406
   Insn 682(l0): point = 1409
   Insn 681(l0): point = 1411
   Insn 701(l0): point = 1414
   Insn 700(l0): point = 1416
   Insn 699(l0): point = 1418
   Insn 698(l0): point = 1420
   Insn 697(l0): point = 1422
   Insn 696(l0): point = 1424
   Insn 695(l0): point = 1426
   Insn 694(l0): point = 1428
   Insn 693(l0): point = 1430
   Insn 692(l0): point = 1432
   Insn 691(l0): point = 1434
   Insn 690(l0): point = 1436
   Insn 689(l0): point = 1438
   Insn 688(l0): point = 1440
   Insn 687(l0): point = 1442
   Insn 686(l0): point = 1444
   Insn 685(l0): point = 1446
   Insn 684(l0): point = 1448
   Insn 1225(l0): point = 1451
   Insn 662(l0): point = 1453
   Insn 661(l0): point = 1455
   Insn 660(l0): point = 1457
   Insn 659(l0): point = 1459
   Insn 658(l0): point = 1461
   Insn 657(l0): point = 1463
   Insn 656(l0): point = 1465
   Insn 655(l0): point = 1467
   Insn 653(l0): point = 1470
   Insn 652(l0): point = 1472
   Insn 651(l0): point = 1474
   Insn 650(l0): point = 1476
   Insn 649(l0): point = 1478
   Insn 648(l0): point = 1480
   Insn 647(l0): point = 1482
   Insn 646(l0): point = 1484
   Insn 645(l0): point = 1486
   Insn 644(l0): point = 1488
   Insn 643(l0): point = 1490
   Insn 606(l0): point = 1493
   Insn 605(l0): point = 1495
   Insn 604(l0): point = 1497
   Insn 603(l0): point = 1499
   Insn 602(l0): point = 1501
   Insn 601(l0): point = 1503
   Insn 600(l0): point = 1505
   Insn 599(l0): point = 1507
   Insn 598(l0): point = 1509
   Insn 597(l0): point = 1511
   Insn 596(l0): point = 1513
   Insn 595(l0): point = 1515
   Insn 594(l0): point = 1517
   Insn 593(l0): point = 1519
   Insn 592(l0): point = 1521
   Insn 640(l0): point = 1524
   Insn 639(l0): point = 1526
   Insn 638(l0): point = 1528
   Insn 637(l0): point = 1530
   Insn 636(l0): point = 1532
   Insn 635(l0): point = 1534
   Insn 634(l0): point = 1536
   Insn 633(l0): point = 1538
   Insn 632(l0): point = 1540
   Insn 631(l0): point = 1542
   Insn 630(l0): point = 1544
   Insn 629(l0): point = 1546
   Insn 628(l0): point = 1548
   Insn 627(l0): point = 1550
   Insn 626(l0): point = 1552
   Insn 625(l0): point = 1554
   Insn 624(l0): point = 1556
   Insn 623(l0): point = 1558
   Insn 622(l0): point = 1560
   Insn 621(l0): point = 1562
   Insn 620(l0): point = 1564
   Insn 619(l0): point = 1566
   Insn 618(l0): point = 1568
   Insn 617(l0): point = 1570
   Insn 616(l0): point = 1572
   Insn 615(l0): point = 1574
   Insn 614(l0): point = 1576
   Insn 613(l0): point = 1578
   Insn 612(l0): point = 1580
   Insn 611(l0): point = 1582
   Insn 610(l0): point = 1584
   Insn 609(l0): point = 1586
   Insn 608(l0): point = 1588
   Insn 725(l0): point = 1591
   Insn 724(l0): point = 1593
   Insn 723(l0): point = 1595
   Insn 722(l0): point = 1597
   Insn 721(l0): point = 1599
   Insn 720(l0): point = 1601
   Insn 719(l0): point = 1603
   Insn 718(l0): point = 1605
   Insn 717(l0): point = 1607
   Insn 716(l0): point = 1609
   Insn 715(l0): point = 1611
   Insn 713(l0): point = 1614
   Insn 1235(l0): point = 1617
   Insn 856(l0): point = 1619
   Insn 853(l0): point = 1622
   Insn 852(l0): point = 1624
   Insn 851(l0): point = 1626
   Insn 850(l0): point = 1628
   Insn 849(l0): point = 1630
   Insn 848(l0): point = 1632
   Insn 847(l0): point = 1634
   Insn 846(l0): point = 1636
   Insn 845(l0): point = 1638
   Insn 844(l0): point = 1640
   Insn 843(l0): point = 1642
   Insn 842(l0): point = 1644
   Insn 841(l0): point = 1646
   Insn 840(l0): point = 1648
   Insn 1229(l0): point = 1651
   Insn 751(l0): point = 1653
   Insn 750(l0): point = 1655
   Insn 749(l0): point = 1657
   Insn 748(l0): point = 1659
   Insn 747(l0): point = 1661
   Insn 746(l0): point = 1663
   Insn 745(l0): point = 1665
   Insn 744(l0): point = 1667
   Insn 743(l0): point = 1669
   Insn 742(l0): point = 1671
   Insn 741(l0): point = 1673
   Insn 740(l0): point = 1675
   Insn 739(l0): point = 1677
   Insn 738(l0): point = 1679
   Insn 1231(l0): point = 1682
   Insn 793(l0): point = 1684
   Insn 792(l0): point = 1686
   Insn 791(l0): point = 1688
   Insn 790(l0): point = 1690
   Insn 789(l0): point = 1692
   Insn 788(l0): point = 1694
   Insn 787(l0): point = 1696
   Insn 786(l0): point = 1698
   Insn 785(l0): point = 1700
   Insn 784(l0): point = 1702
   Insn 783(l0): point = 1704
   Insn 782(l0): point = 1706
   Insn 781(l0): point = 1708
   Insn 780(l0): point = 1710
   Insn 779(l0): point = 1712
   Insn 778(l0): point = 1714
   Insn 777(l0): point = 1716
   Insn 776(l0): point = 1718
   Insn 775(l0): point = 1720
   Insn 774(l0): point = 1722
   Insn 773(l0): point = 1724
   Insn 772(l0): point = 1726
   Insn 771(l0): point = 1728
   Insn 770(l0): point = 1730
   Insn 769(l0): point = 1732
   Insn 768(l0): point = 1734
   Insn 767(l0): point = 1736
   Insn 1233(l0): point = 1739
   Insn 835(l0): point = 1741
   Insn 834(l0): point = 1743
   Insn 833(l0): point = 1745
   Insn 832(l0): point = 1747
   Insn 831(l0): point = 1749
   Insn 830(l0): point = 1751
   Insn 829(l0): point = 1753
   Insn 828(l0): point = 1755
   Insn 827(l0): point = 1757
   Insn 826(l0): point = 1759
   Insn 825(l0): point = 1761
   Insn 824(l0): point = 1763
   Insn 823(l0): point = 1765
   Insn 822(l0): point = 1767
   Insn 821(l0): point = 1769
   Insn 820(l0): point = 1771
   Insn 819(l0): point = 1773
   Insn 818(l0): point = 1775
   Insn 817(l0): point = 1777
   Insn 816(l0): point = 1779
   Insn 815(l0): point = 1781
   Insn 814(l0): point = 1783
   Insn 813(l0): point = 1785
   Insn 812(l0): point = 1787
   Insn 811(l0): point = 1789
   Insn 810(l0): point = 1791
   Insn 809(l0): point = 1793
   Insn 807(l0): point = 1796
   Insn 806(l0): point = 1798
   Insn 805(l0): point = 1800
   Insn 804(l0): point = 1802
   Insn 803(l0): point = 1804
   Insn 802(l0): point = 1806
   Insn 801(l0): point = 1808
   Insn 800(l0): point = 1810
   Insn 799(l0): point = 1812
   Insn 798(l0): point = 1814
   Insn 765(l0): point = 1817
   Insn 764(l0): point = 1819
   Insn 763(l0): point = 1821
   Insn 762(l0): point = 1823
   Insn 761(l0): point = 1825
   Insn 760(l0): point = 1827
   Insn 759(l0): point = 1829
   Insn 758(l0): point = 1831
   Insn 757(l0): point = 1833
   Insn 756(l0): point = 1835
   Insn 736(l0): point = 1838
   Insn 735(l0): point = 1840
   Insn 734(l0): point = 1842
   Insn 733(l0): point = 1844
   Insn 732(l0): point = 1846
   Insn 731(l0): point = 1848
   Insn 730(l0): point = 1850
   Insn 729(l0): point = 1852
   Insn 728(l0): point = 1854
   Insn 727(l0): point = 1856
   Insn 1010(l0): point = 1859
   Insn 1009(l0): point = 1861
   Insn 1008(l0): point = 1863
   Insn 1007(l0): point = 1865
   Insn 1006(l0): point = 1867
   Insn 1005(l0): point = 1869
   Insn 1004(l0): point = 1871
   Insn 1003(l0): point = 1873
   Insn 1002(l0): point = 1875
   Insn 1001(l0): point = 1877
   Insn 1000(l0): point = 1879
   Insn 998(l0): point = 1882
   Insn 1241(l0): point = 1885
   Insn 1032(l0): point = 1887
   Insn 1031(l0): point = 1889
   Insn 1030(l0): point = 1891
   Insn 1029(l0): point = 1893
   Insn 1028(l0): point = 1895
   Insn 1027(l0): point = 1897
   Insn 1026(l0): point = 1899
   Insn 1025(l0): point = 1901
   Insn 1024(l0): point = 1903
   Insn 1023(l0): point = 1905
   Insn 1022(l0): point = 1907
   Insn 1021(l0): point = 1909
   Insn 1020(l0): point = 1911
   Insn 1019(l0): point = 1913
   Insn 1018(l0): point = 1915
   Insn 1017(l0): point = 1917
   Insn 1016(l0): point = 1919
   Insn 1015(l0): point = 1921
   Insn 1014(l0): point = 1923
   Insn 1013(l0): point = 1925
   Insn 1012(l0): point = 1927
   Insn 1074(l0): point = 1930
   Insn 1073(l0): point = 1932
   Insn 1072(l0): point = 1934
   Insn 1071(l0): point = 1936
   Insn 1070(l0): point = 1938
   Insn 1069(l0): point = 1940
   Insn 1068(l0): point = 1942
   Insn 1067(l0): point = 1944
   Insn 1066(l0): point = 1946
   Insn 1065(l0): point = 1948
   Insn 1064(l0): point = 1950
   Insn 1063(l0): point = 1952
   Insn 1062(l0): point = 1954
   Insn 1061(l0): point = 1956
   Insn 1060(l0): point = 1958
   Insn 1059(l0): point = 1960
   Insn 1058(l0): point = 1962
   Insn 1057(l0): point = 1964
   Insn 1056(l0): point = 1966
   Insn 1055(l0): point = 1968
   Insn 1054(l0): point = 1970
   Insn 1053(l0): point = 1972
   Insn 1052(l0): point = 1974
   Insn 1051(l0): point = 1976
   Insn 1050(l0): point = 1978
   Insn 1049(l0): point = 1980
   Insn 1048(l0): point = 1982
   Insn 1047(l0): point = 1984
   Insn 1046(l0): point = 1986
   Insn 1045(l0): point = 1988
   Insn 1044(l0): point = 1990
   Insn 1043(l0): point = 1992
   Insn 1042(l0): point = 1994
   Insn 1041(l0): point = 1996
   Insn 1243(l0): point = 1999
   Insn 1168(l0): point = 2001
   Insn 1167(l0): point = 2003
   Insn 1166(l0): point = 2005
   Insn 1165(l0): point = 2007
   Insn 1164(l0): point = 2009
   Insn 1163(l0): point = 2011
   Insn 1162(l0): point = 2013
   Insn 1161(l0): point = 2015
   Insn 1160(l0): point = 2017
   Insn 1159(l0): point = 2019
   Insn 1158(l0): point = 2021
   Insn 1157(l0): point = 2023
   Insn 1156(l0): point = 2025
   Insn 1155(l0): point = 2027
   Insn 1154(l0): point = 2029
   Insn 1153(l0): point = 2031
   Insn 1152(l0): point = 2033
   Insn 1151(l0): point = 2035
   Insn 1150(l0): point = 2037
   Insn 1149(l0): point = 2039
   Insn 1148(l0): point = 2041
   Insn 1147(l0): point = 2043
   Insn 1146(l0): point = 2045
   Insn 1145(l0): point = 2047
   Insn 1144(l0): point = 2049
   Insn 1143(l0): point = 2051
   Insn 1142(l0): point = 2053
   Insn 1141(l0): point = 2055
   Insn 1140(l0): point = 2057
   Insn 1139(l0): point = 2059
   Insn 1138(l0): point = 2061
   Insn 1137(l0): point = 2063
   Insn 1136(l0): point = 2065
   Insn 1135(l0): point = 2067
   Insn 1134(l0): point = 2069
   Insn 1133(l0): point = 2071
   Insn 1132(l0): point = 2073
   Insn 1131(l0): point = 2075
   Insn 1130(l0): point = 2077
   Insn 1129(l0): point = 2079
   Insn 1128(l0): point = 2081
   Insn 1127(l0): point = 2083
   Insn 1126(l0): point = 2085
   Insn 1125(l0): point = 2087
   Insn 1124(l0): point = 2089
   Insn 1123(l0): point = 2091
   Insn 1122(l0): point = 2093
   Insn 1121(l0): point = 2095
   Insn 1120(l0): point = 2097
   Insn 1119(l0): point = 2099
   Insn 1118(l0): point = 2101
   Insn 1117(l0): point = 2103
   Insn 1116(l0): point = 2105
   Insn 1115(l0): point = 2107
   Insn 1114(l0): point = 2109
   Insn 1113(l0): point = 2111
   Insn 1112(l0): point = 2113
   Insn 1111(l0): point = 2115
   Insn 1110(l0): point = 2117
   Insn 1109(l0): point = 2119
   Insn 1108(l0): point = 2121
   Insn 1107(l0): point = 2123
   Insn 1106(l0): point = 2125
   Insn 1105(l0): point = 2127
   Insn 1104(l0): point = 2129
   Insn 1103(l0): point = 2131
   Insn 1102(l0): point = 2133
   Insn 1101(l0): point = 2135
   Insn 1100(l0): point = 2137
   Insn 1099(l0): point = 2139
   Insn 1098(l0): point = 2141
   Insn 1097(l0): point = 2143
   Insn 22(l0): point = 2146
   Insn 21(l0): point = 2148
   Insn 20(l0): point = 2150
   Insn 19(l0): point = 2152
   Insn 18(l0): point = 2154
   Insn 17(l0): point = 2156
   Insn 16(l0): point = 2158
   Insn 15(l0): point = 2160
   Insn 14(l0): point = 2162
   Insn 13(l0): point = 2164
   Insn 9(l0): point = 2166
   Insn 8(l0): point = 2168
   Insn 7(l0): point = 2170
   Insn 6(l0): point = 2172
   Insn 5(l0): point = 2174
   Insn 4(l0): point = 2176
   Insn 3(l0): point = 2178
   Insn 2(l0): point = 2180
 a0(r532): [3..4]
 a1(r531): [5..6]
 a2(r795): [11..12]
 a3(r511): [2004..2055]
 a4(r530): [2004..2005]
 a5(r529): [2006..2007]
 a6(r520): [2006..2031]
 a7(r528): [2008..2009]
 a8(r527): [2010..2011]
 a9(r524): [2010..2019]
 a10(r526): [2012..2013]
 a11(r525): [2014..2015]
 a12(r794): [2016..2017]
 a13(r523): [2020..2021]
 a14(r793): [2022..2023]
 a15(r522): [2022..2025]
 a16(r521): [2026..2027]
 a17(r792): [2028..2029]
 a18(r519): [2032..2033]
 a19(r518): [2034..2035]
 a20(r515): [2034..2043]
 a21(r517): [2036..2037]
 a22(r516): [2038..2039]
 a23(r791): [2040..2041]
 a24(r514): [2044..2045]
 a25(r790): [2046..2047]
 a26(r513): [2046..2049]
 a27(r512): [2050..2051]
 a28(r789): [2052..2053]
 a29(r510): [2056..2057]
 a30(r507): [2056..2065]
 a31(r509): [2058..2059]
 a32(r508): [2060..2061]
 a33(r788): [2062..2063]
 a34(r506): [2066..2067]
 a35(r787): [2068..2069]
 a36(r505): [2068..2071]
 a37(r504): [2072..2073]
 a38(r786): [2074..2075]
 a39(r486): [2078..2125]
 a40(r503): [2078..2079]
 a41(r502): [2080..2081]
 a42(r494): [2080..2103]
 a43(r501): [2082..2083]
 a44(r500): [2084..2085]
 a45(r498): [2084..2091]
 a46(r499): [2086..2087]
 a47(r785): [2088..2089]
 a48(r497): [2092..2093]
 a49(r784): [2094..2095]
 a50(r496): [2094..2097]
 a51(r495): [2098..2099]
 a52(r783): [2100..2101]
 a53(r493): [2104..2105]
 a54(r492): [2106..2107]
 a55(r490): [2106..2113]
 a56(r491): [2108..2109]
 a57(r782): [2110..2111]
 a58(r489): [2114..2115]
 a59(r781): [2116..2117]
 a60(r488): [2116..2119]
 a61(r487): [2120..2121]
 a62(r780): [2122..2123]
 a63(r485): [2126..2127]
 a64(r483): [2126..2133]
 a65(r484): [2128..2129]
 a66(r779): [2130..2131]
 a67(r482): [2134..2135]
 a68(r778): [2136..2137]
 a69(r481): [2136..2139]
 a70(r480): [2140..2141]
 a71(r777): [2142..2143]
 a72(r479): [1082..1083]
 a73(r474): [1082..1097]
 a74(r478): [1084..1085]
 a75(r477): [1086..1087]
 a76(r776): [1088..1089]
 a77(r476): [1088..1091]
 a78(r475): [1092..1093]
 a79(r775): [1094..1095]
 a80(r774): [1098..1099]
 a81(r473): [1111..1112]
 a82(r773): [1113..1114]
 a83(r472): [1933..1946]
 a84(r468): [1935..1958]
 a85(r772): [1937..1942]
 a86(r771): [1939..1944]
 a87(r461): [1941..1976]
 a88(r471): [1947..1948]
 a89(r770): [1949..1950]
 a90(r470): [1949..1952]
 a91(r469): [1953..1954]
 a92(r769): [1955..1956]
 a93(r467): [1959..1960]
 a94(r466): [1961..1962]
 a95(r465): [1963..1964]
 a96(r464): [1965..1966]
 a97(r768): [1967..1968]
 a98(r463): [1967..1970]
 a99(r462): [1971..1972]
 a100(r767): [1973..1974]
 a101(r766): [1977..1978]
 a102(r460): [1987..1990]
 a103(r459): [1989..1994]
 a104(r765): [1991..1992]
 a105(r764): [1995..1996]
 a106(r458): [1890..1893]
 a107(r763): [1890..1891]
 a108(r457): [1894..1895]
 a109(r455): [1894..1901]
 a110(r456): [1896..1897]
 a111(r762): [1898..1899]
 a112(r454): [1902..1903]
 a113(r761): [1904..1905]
 a114(r453): [1904..1907]
 a115(r452): [1908..1909]
 a116(r760): [1910..1911]
 a117(r759): [1914..1915]
 a118(r451): [1916..1917]
 a119(r450): [1918..1919]
 a120(r758): [1920..1921]
 a121(r449): [1920..1923]
 a122(r448): [1924..1925]
 a123(r757): [1926..1927]
 a124(r447): [1862..1863]
 a125(r442): [1862..1877]
 a126(r446): [1864..1865]
 a127(r445): [1866..1867]
 a128(r756): [1868..1869]
 a129(r444): [1868..1871]
 a130(r443): [1872..1873]
 a131(r755): [1874..1875]
 a132(r754): [1878..1879]
 a133(r441): [1285..1286]
 a134(r440): [1287..1288]
 a135(r439): [1289..1290]
 a136(r438): [1291..1292]
 a137(r753): [1293..1294]
 a138(r437): [1293..1296]
 a139(r436): [1297..1298]
 a140(r752): [1299..1300]
 a141(r435): [1232..1235]
 a142(r751): [1232..1233]
 a143(r434): [1236..1237]
 a144(r432): [1236..1243]
 a145(r433): [1238..1239]
 a146(r750): [1240..1241]
 a147(r431): [1244..1245]
 a148(r749): [1246..1247]
 a149(r430): [1246..1249]
 a150(r429): [1250..1251]
 a151(r748): [1252..1253]
 a152(r747): [1256..1257]
 a153(r428): [1258..1259]
 a154(r427): [1260..1261]
 a155(r426): [1262..1263]
 a156(r424): [1262..1269]
 a157(r425): [1264..1265]
 a158(r746): [1266..1267]
 a159(r423): [1270..1271]
 a160(r745): [1272..1273]
 a161(r422): [1272..1275]
 a162(r421): [1276..1277]
 a163(r744): [1278..1279]
 a164(r420): [1204..1205]
 a165(r415): [1204..1219]
 a166(r419): [1206..1207]
 a167(r418): [1208..1209]
 a168(r743): [1210..1211]
 a169(r417): [1210..1213]
 a170(r416): [1214..1215]
 a171(r742): [1216..1217]
 a172(r741): [1220..1221]
 a173(r414): [1306..1307]
 a174(r413): [1308..1309]
 a175(r412): [1310..1311]
 a176(r411): [1312..1313]
 a177(r740): [1314..1315]
 a178(r410): [1314..1317]
 a179(r409): [1318..1319]
 a180(r739): [1320..1321]
 a181(r399): [1153..1180]
 a182(r408): [1153..1154]
 a183(r738): [1155..1156]
 a184(r407): [1157..1158]
 a185(r406): [1159..1160]
 a186(r405): [1161..1162]
 a187(r403): [1161..1168]
 a188(r404): [1163..1164]
 a189(r737): [1165..1166]
 a190(r402): [1169..1170]
 a191(r736): [1171..1172]
 a192(r401): [1171..1174]
 a193(r400): [1175..1176]
 a194(r735): [1177..1178]
 a195(r398): [1181..1182]
 a196(r396): [1181..1188]
 a197(r397): [1183..1184]
 a198(r734): [1185..1186]
 a199(r395): [1189..1190]
 a200(r733): [1191..1192]
 a201(r394): [1191..1194]
 a202(r393): [1195..1196]
 a203(r732): [1197..1198]
 a204(r392): [1128..1129]
 a205(r391): [1130..1131]
 a206(r390): [1132..1133]
 a207(r389): [1134..1135]
 a208(r388): [1136..1137]
 a209(r731): [1138..1139]
 a210(r387): [1138..1141]
 a211(r386): [1142..1143]
 a212(r730): [1144..1145]
 a213(r385): [1327..1328]
 a214(r384): [1329..1330]
 a215(r383): [1331..1332]
 a216(r382): [1333..1334]
 a217(r729): [1335..1336]
 a218(r381): [1335..1338]
 a219(r380): [1339..1340]
 a220(r728): [1341..1342]
 a221(r379): [1351..1352]
 a222(r727): [1353..1354]
 a223(r726): [1355..1356]
 a224(r378): [1357..1360]
 a225(r725): [1357..1358]
 a226(r377): [1361..1362]
 a227(r724): [1363..1364]
 a228(r376): [1363..1366]
 a229(r375): [1367..1368]
 a230(r723): [1369..1370]
 a231(r374): [1625..1628]
 a232(r367): [1627..1648]
 a233(r373): [1629..1630]
 a234(r371): [1629..1636]
 a235(r372): [1631..1632]
 a236(r722): [1633..1634]
 a237(r370): [1637..1638]
 a238(r721): [1639..1640]
 a239(r369): [1639..1642]
 a240(r368): [1643..1644]
 a241(r720): [1645..1646]
 a242(r361): [1742..1757]
 a243(r366): [1742..1743]
 a244(r365): [1744..1745]
 a245(r364): [1746..1747]
 a246(r719): [1748..1749]
 a247(r363): [1748..1751]
 a248(r362): [1752..1753]
 a249(r718): [1754..1755]
 a250(r360): [1758..1759]
 a251(r358): [1758..1765]
 a252(r359): [1760..1761]
 a253(r717): [1762..1763]
 a254(r357): [1766..1767]
 a255(r716): [1768..1769]
 a256(r356): [1768..1771]
 a257(r355): [1772..1773]
 a258(r715): [1774..1775]
 a259(r354): [1780..1783]
 a260(r351): [1782..1793]
 a261(r714): [1784..1785]
 a262(r353): [1784..1787]
 a263(r352): [1788..1789]
 a264(r713): [1790..1791]
 a265(r350): [1799..1800]
 a266(r349): [1801..1802]
 a267(r348): [1803..1804]
 a268(r347): [1805..1806]
 a269(r712): [1807..1808]
 a270(r346): [1807..1810]
 a271(r345): [1811..1812]
 a272(r711): [1813..1814]
 a273(r339): [1685..1700]
 a274(r344): [1685..1686]
 a275(r343): [1687..1688]
 a276(r342): [1689..1690]
 a277(r710): [1691..1692]
 a278(r341): [1691..1694]
 a279(r340): [1695..1696]
 a280(r709): [1697..1698]
 a281(r338): [1701..1702]
 a282(r336): [1701..1708]
 a283(r337): [1703..1704]
 a284(r708): [1705..1706]
 a285(r335): [1709..1710]
 a286(r707): [1711..1712]
 a287(r334): [1711..1714]
 a288(r333): [1715..1716]
 a289(r706): [1717..1718]
 a290(r332): [1723..1726]
 a291(r329): [1725..1736]
 a292(r705): [1727..1728]
 a293(r331): [1727..1730]
 a294(r330): [1731..1732]
 a295(r704): [1733..1734]
 a296(r328): [1820..1821]
 a297(r327): [1822..1823]
 a298(r326): [1824..1825]
 a299(r325): [1826..1827]
 a300(r703): [1828..1829]
 a301(r324): [1828..1831]
 a302(r323): [1832..1833]
 a303(r702): [1834..1835]
 a304(r322): [1656..1659]
 a305(r315): [1658..1679]
 a306(r321): [1660..1661]
 a307(r319): [1660..1667]
 a308(r320): [1662..1663]
 a309(r701): [1664..1665]
 a310(r318): [1668..1669]
 a311(r700): [1670..1671]
 a312(r317): [1670..1673]
 a313(r316): [1674..1675]
 a314(r699): [1676..1677]
 a315(r314): [1841..1842]
 a316(r313): [1843..1844]
 a317(r312): [1845..1846]
 a318(r311): [1847..1848]
 a319(r698): [1849..1850]
 a320(r310): [1849..1852]
 a321(r309): [1853..1854]
 a322(r697): [1855..1856]
 a323(r308): [1594..1595]
 a324(r303): [1594..1609]
 a325(r307): [1596..1597]
 a326(r306): [1598..1599]
 a327(r696): [1600..1601]
 a328(r305): [1600..1603]
 a329(r304): [1604..1605]
 a330(r695): [1606..1607]
 a331(r694): [1610..1611]
 a332(r297): [1415..1430]
 a333(r302): [1415..1416]
 a334(r301): [1417..1418]
 a335(r300): [1419..1420]
 a336(r693): [1421..1422]
 a337(r299): [1421..1424]
 a338(r298): [1425..1426]
 a339(r692): [1427..1428]
 a340(r296): [1431..1432]
 a341(r294): [1431..1438]
 a342(r295): [1433..1434]
 a343(r691): [1435..1436]
 a344(r293): [1439..1440]
 a345(r690): [1441..1442]
 a346(r292): [1441..1444]
 a347(r291): [1445..1446]
 a348(r689): [1447..1448]
 a349(r290): [1381..1382]
 a350(r285): [1381..1396]
 a351(r289): [1383..1384]
 a352(r288): [1385..1386]
 a353(r688): [1387..1388]
 a354(r287): [1387..1390]
 a355(r286): [1391..1392]
 a356(r687): [1393..1394]
 a357(r686): [1397..1398]
 a358(r284): [1458..1459]
 a359(r685): [1460..1461]
 a360(r684): [1460..1463]
 a361(r682): [1464..1465]
 a362(r683): [1466..1467]
 a363(r283): [1473..1474]
 a364(r278): [1473..1488]
 a365(r282): [1475..1476]
 a366(r281): [1477..1478]
 a367(r681): [1479..1480]
 a368(r280): [1479..1482]
 a369(r279): [1483..1484]
 a370(r680): [1485..1486]
 a371(r679): [1489..1490]
 a372(r277): [1525..1526]
 a373(r678): [1531..1538]
 a374(r276): [1533..1540]
 a375(r270): [1535..1562]
 a376(r264): [1537..1578]
 a377(r275): [1541..1542]
 a378(r677): [1543..1544]
 a379(r676): [1545..1546]
 a380(r274): [1547..1550]
 a381(r675): [1547..1548]
 a382(r273): [1551..1552]
 a383(r674): [1553..1554]
 a384(r272): [1553..1556]
 a385(r271): [1557..1558]
 a386(r673): [1559..1560]
 a387(r269): [1563..1564]
 a388(r268): [1565..1566]
 a389(r267): [1567..1568]
 a390(r672): [1569..1570]
 a391(r266): [1569..1572]
 a392(r265): [1573..1574]
 a393(r671): [1575..1576]
 a394(r263): [1579..1580]
 a395(r670): [1581..1582]
 a396(r262): [1581..1584]
 a397(r261): [1585..1586]
 a398(r669): [1587..1588]
 a399(r260): [1504..1505]
 a400(r259): [1510..1511]
 a401(r258): [1512..1513]
 a402(r668): [1514..1515]
 a403(r257): [1514..1517]
 a404(r256): [1518..1519]
 a405(r667): [1520..1521]
 a406(r666): [886..887]
 a407(r665): [894..895]
 a408(r255): [896..897]
 a409(r251): [896..919]
 a410(r254): [898..899]
 a411(r664): [900..901]
 a412(r253): [900..903]
 a413(r662): [908..913] [904..905]
 a414(r663): [906..907]
 a415(r252): [910..915]
 a416(r661): [916..917]
 a417(r250): [920..921]
 a418(r660): [922..923]
 a419(r249): [922..925]
 a420(r658): [930..935] [926..927]
 a421(r659): [928..929]
 a422(r248): [932..937]
 a423(r657): [938..939]
 a424(r247): [944..949]
 a425(r243): [946..961]
 a426(r246): [950..951]
 a427(r656): [952..953]
 a428(r245): [952..955]
 a429(r244): [956..957]
 a430(r655): [958..959]
 a431(r242): [962..963]
 a432(r240): [962..969]
 a433(r241): [964..965]
 a434(r654): [966..967]
 a435(r653): [970..971]
 a436(r652): [970..973]
 a437(r651): [979..980]
 a438(r239): [981..982]
 a439(r235): [981..1004]
 a440(r238): [983..984]
 a441(r650): [985..986]
 a442(r237): [985..988]
 a443(r648): [993..998] [989..990]
 a444(r649): [991..992]
 a445(r236): [995..1000]
 a446(r647): [1001..1002]
 a447(r234): [1005..1006]
 a448(r646): [1007..1008]
 a449(r233): [1007..1010]
 a450(r644): [1015..1020] [1011..1012]
 a451(r645): [1013..1014]
 a452(r232): [1017..1022]
 a453(r643): [1023..1024]
 a454(r231): [1029..1034]
 a455(r227): [1031..1046]
 a456(r230): [1035..1036]
 a457(r642): [1037..1038]
 a458(r229): [1037..1040]
 a459(r228): [1041..1042]
 a460(r641): [1043..1044]
 a461(r226): [1047..1048]
 a462(r224): [1047..1054]
 a463(r225): [1049..1050]
 a464(r640): [1051..1052]
 a465(r639): [1055..1056]
 a466(r223): [1055..1058]
 a467(r638): [1059..1060]
 a468(r637): [1059..1062]
 a469(r222): [63..64]
 a470(r221): [65..66]
 a471(r636): [67..68]
 a472(r220): [67..70]
 a473(r219): [71..72]
 a474(r635): [73..74]
 a475(r633): [91..108]
 a476(r632): [95..110]
 a477(r631): [97..112]
 a478(r630): [99..114]
 a479(r629): [101..116]
 a480(r634): [103..104]
 a481(r628): [119..120]
 a482(r218): [125..126]
 a483(r217): [127..128]
 a484(r216): [129..130]
 a485(r215): [131..132]
 a486(r627): [133..134]
 a487(r214): [133..136]
 a488(r213): [137..138]
 a489(r626): [139..140]
 a490(r625): [143..144]
 a491(r212): [149..150]
 a492(r211): [151..152]
 a493(r210): [153..154]
 a494(r209): [155..156]
 a495(r624): [157..158]
 a496(r208): [157..160]
 a497(r207): [161..162]
 a498(r623): [163..164]
 a499(r621): [237..254]
 a500(r620): [241..256]
 a501(r619): [243..258]
 a502(r618): [245..260]
 a503(r617): [247..262]
 a504(r622): [249..250]
 a505(r616): [265..266]
 a506(r206): [271..272]
 a507(r205): [273..274]
 a508(r204): [275..276]
 a509(r203): [277..278]
 a510(r615): [279..280]
 a511(r202): [870..871]
 a512(r201): [872..873]
 a513(r614): [874..875]
 a514(r200): [286..287]
 a515(r613): [288..289]
 a516(r611): [180..197]
 a517(r610): [184..199]
 a518(r609): [186..201]
 a519(r608): [188..203]
 a520(r607): [190..205]
 a521(r612): [192..193]
 a522(r606): [208..209]
 a523(r199): [214..215]
 a524(r198): [216..217]
 a525(r197): [218..219]
 a526(r605): [220..221]
 a527(r196): [302..303]
 a528(r195): [304..305]
 a529(r194): [304..309]
 a530(r604): [306..307]
 a531(r193): [310..311]
 a532(r192): [312..313]
 a533(r603): [314..315]
 a534(r191): [314..317]
 a535(r601): [322..327] [318..319]
 a536(r602): [320..321]
 a537(r190): [324..329]
 a538(r600): [330..331]
 a539(r599): [334..335]
 a540(r189): [336..337]
 a541(r184): [336..361]
 a542(r188): [338..339]
 a543(r187): [340..341]
 a544(r598): [342..343]
 a545(r186): [342..345]
 a546(r596): [350..355] [346..347]
 a547(r597): [348..349]
 a548(r185): [352..357]
 a549(r595): [358..359]
 a550(r183): [362..363]
 a551(r179): [362..375]
 a552(r182): [364..365]
 a553(r594): [366..367]
 a554(r181): [366..369]
 a555(r180): [370..371]
 a556(r593): [372..373]
 a557(r178): [376..377]
 a558(r592): [378..379]
 a559(r177): [378..381]
 a560(r176): [382..383]
 a561(r591): [384..385]
 a562(r590): [388..389]
 a563(r175): [390..391]
 a564(r171): [390..403]
 a565(r174): [392..393]
 a566(r589): [394..395]
 a567(r173): [394..397]
 a568(r172): [398..399]
 a569(r588): [400..401]
 a570(r170): [404..405]
 a571(r587): [406..407]
 a572(r169): [406..409]
 a573(r168): [410..411]
 a574(r586): [412..413]
 a575(r167): [419..420]
 a576(r166): [425..428]
 a577(r585): [429..430]
 a578(r165): [465..466]
 a579(r164): [471..474]
 a580(r584): [475..476]
 a581(r163): [491..492]
 a582(r162): [497..500]
 a583(r583): [501..502]
 a584(r161): [508..509]
 a585(r160): [514..517]
 a586(r582): [518..519]
 a587(r159): [525..526]
 a588(r158): [531..534]
 a589(r581): [535..536]
 a590(r157): [542..543]
 a591(r156): [548..551]
 a592(r580): [552..553]
 a593(r155): [559..560]
 a594(r154): [565..568]
 a595(r579): [569..570]
 a596(r153): [576..577]
 a597(r152): [582..585]
 a598(r578): [586..587]
 a599(r151): [593..594]
 a600(r150): [599..602]
 a601(r577): [603..604]
 a602(r149): [810..813]
 a603(r576): [810..811]
 a604(r148): [814..815]
 a605(r145): [814..823]
 a606(r147): [816..817]
 a607(r146): [818..819]
 a608(r575): [820..821]
 a609(r144): [824..825]
 a610(r574): [826..827]
 a611(r143): [826..829]
 a612(r142): [830..831]
 a613(r573): [832..833]
 a614(r141): [836..839]
 a615(r572): [836..837]
 a616(r140): [840..841]
 a617(r138): [840..847]
 a618(r139): [842..843]
 a619(r571): [844..845]
 a620(r137): [848..849]
 a621(r570): [850..851]
 a622(r136): [850..853]
 a623(r135): [854..855]
 a624(r569): [856..857]
 a625(r568): [610..611]
 a626(r131): [617..632]
 a627(r134): [617..618]
 a628(r567): [619..620]
 a629(r133): [625..626]
 a630(r132): [627..628]
 a631(r566): [629..630]
 a632(r565): [633..634]
 a633(r130): [633..636]
 a634(r129): [637..638]
 a635(r564): [639..640]
 a636(r125): [643..658]
 a637(r128): [643..644]
 a638(r563): [645..646]
 a639(r127): [651..652]
 a640(r126): [653..654]
 a641(r562): [655..656]
 a642(r561): [659..660]
 a643(r124): [659..662]
 a644(r123): [663..664]
 a645(r560): [665..666]
 a646(r119): [669..684]
 a647(r122): [669..670]
 a648(r559): [671..672]
 a649(r121): [677..678]
 a650(r120): [679..680]
 a651(r558): [681..682]
 a652(r557): [685..686]
 a653(r118): [685..688]
 a654(r117): [689..690]
 a655(r556): [691..692]
 a656(r113): [695..710]
 a657(r116): [695..696]
 a658(r555): [697..698]
 a659(r115): [703..704]
 a660(r114): [705..706]
 a661(r554): [707..708]
 a662(r553): [711..712]
 a663(r112): [711..714]
 a664(r111): [715..716]
 a665(r552): [717..718]
 a666(r107): [721..736]
 a667(r110): [721..722]
 a668(r551): [723..724]
 a669(r109): [729..730]
 a670(r108): [731..732]
 a671(r550): [733..734]
 a672(r549): [737..738]
 a673(r106): [737..740]
 a674(r105): [741..742]
 a675(r548): [743..744]
 a676(r101): [747..762]
 a677(r104): [747..748]
 a678(r547): [749..750]
 a679(r103): [755..756]
 a680(r102): [757..758]
 a681(r546): [759..760]
 a682(r545): [763..764]
 a683(r100): [763..766]
 a684(r99): [767..768]
 a685(r544): [769..770]
 a686(r543): [773..774]
 a687(r98): [779..780]
 a688(r97): [781..782]
 a689(r542): [783..784]
 a690(r541): [787..788]
 a691(r96): [789..790]
 a692(r95): [791..792]
 a693(r94): [793..794]
 a694(r540): [795..796]
 a695(r93): [795..798]
 a696(r92): [799..800]
 a697(r539): [801..802]
 a698(r91): [32..33]
 a699(r90): [34..35]
 a700(r538): [36..37]
 a701(r89): [36..39]
 a702(r536): [44..53] [40..41]
 a703(r537): [42..43]
 a704(r88): [46..55]
 a705(r535): [56..57]
 a706(r87): [18..19]
 a707(r534): [20..21]
 a708(r533): [2167..2168]
Compressing live ranges: from 2183 to 1114 - 51%
Ranges after the compression:
 a0(r532): [0..1]
 a1(r531): [2..3]
 a2(r795): [4..5]
 a3(r511): [1006..1045]
 a4(r530): [1006..1007]
 a5(r529): [1008..1009]
 a6(r520): [1008..1027]
 a7(r528): [1010..1011]
 a8(r527): [1012..1013]
 a9(r524): [1012..1019]
 a10(r526): [1014..1015]
 a11(r525): [1016..1017]
 a12(r794): [1018..1019]
 a13(r523): [1020..1021]
 a14(r793): [1022..1023]
 a15(r522): [1022..1023]
 a16(r521): [1024..1025]
 a17(r792): [1026..1027]
 a18(r519): [1028..1029]
 a19(r518): [1030..1031]
 a20(r515): [1030..1037]
 a21(r517): [1032..1033]
 a22(r516): [1034..1035]
 a23(r791): [1036..1037]
 a24(r514): [1038..1039]
 a25(r790): [1040..1041]
 a26(r513): [1040..1041]
 a27(r512): [1042..1043]
 a28(r789): [1044..1045]
 a29(r510): [1046..1047]
 a30(r507): [1046..1053]
 a31(r509): [1048..1049]
 a32(r508): [1050..1051]
 a33(r788): [1052..1053]
 a34(r506): [1054..1055]
 a35(r787): [1056..1057]
 a36(r505): [1056..1057]
 a37(r504): [1058..1059]
 a38(r786): [1060..1061]
 a39(r486): [1062..1097]
 a40(r503): [1062..1063]
 a41(r502): [1064..1065]
 a42(r494): [1064..1081]
 a43(r501): [1066..1067]
 a44(r500): [1068..1069]
 a45(r498): [1068..1073]
 a46(r499): [1070..1071]
 a47(r785): [1072..1073]
 a48(r497): [1074..1075]
 a49(r784): [1076..1077]
 a50(r496): [1076..1077]
 a51(r495): [1078..1079]
 a52(r783): [1080..1081]
 a53(r493): [1082..1083]
 a54(r492): [1084..1085]
 a55(r490): [1084..1089]
 a56(r491): [1086..1087]
 a57(r782): [1088..1089]
 a58(r489): [1090..1091]
 a59(r781): [1092..1093]
 a60(r488): [1092..1093]
 a61(r487): [1094..1095]
 a62(r780): [1096..1097]
 a63(r485): [1098..1099]
 a64(r483): [1098..1103]
 a65(r484): [1100..1101]
 a66(r779): [1102..1103]
 a67(r482): [1104..1105]
 a68(r778): [1106..1107]
 a69(r481): [1106..1107]
 a70(r480): [1108..1109]
 a71(r777): [1110..1111]
 a72(r479): [484..485]
 a73(r474): [484..495]
 a74(r478): [486..487]
 a75(r477): [488..489]
 a76(r776): [490..491]
 a77(r476): [490..491]
 a78(r475): [492..493]
 a79(r775): [494..495]
 a80(r774): [496..497]
 a81(r473): [498..499]
 a82(r773): [500..501]
 a83(r472): [974..975]
 a84(r468): [974..983]
 a85(r772): [974..975]
 a86(r771): [974..975]
 a87(r461): [974..997]
 a88(r471): [976..977]
 a89(r770): [978..979]
 a90(r470): [978..979]
 a91(r469): [980..981]
 a92(r769): [982..983]
 a93(r467): [984..985]
 a94(r466): [986..987]
 a95(r465): [988..989]
 a96(r464): [990..991]
 a97(r768): [992..993]
 a98(r463): [992..993]
 a99(r462): [994..995]
 a100(r767): [996..997]
 a101(r766): [998..999]
 a102(r460): [1000..1001]
 a103(r459): [1000..1003]
 a104(r765): [1002..1003]
 a105(r764): [1004..1005]
 a106(r458): [946..947]
 a107(r763): [946..947]
 a108(r457): [948..949]
 a109(r455): [948..953]
 a110(r456): [950..951]
 a111(r762): [952..953]
 a112(r454): [954..955]
 a113(r761): [956..957]
 a114(r453): [956..957]
 a115(r452): [958..959]
 a116(r760): [960..961]
 a117(r759): [962..963]
 a118(r451): [964..965]
 a119(r450): [966..967]
 a120(r758): [968..969]
 a121(r449): [968..969]
 a122(r448): [970..971]
 a123(r757): [972..973]
 a124(r447): [932..933]
 a125(r442): [932..943]
 a126(r446): [934..935]
 a127(r445): [936..937]
 a128(r756): [938..939]
 a129(r444): [938..939]
 a130(r443): [940..941]
 a131(r755): [942..943]
 a132(r754): [944..945]
 a133(r441): [604..605]
 a134(r440): [606..607]
 a135(r439): [608..609]
 a136(r438): [610..611]
 a137(r753): [612..613]
 a138(r437): [612..613]
 a139(r436): [614..615]
 a140(r752): [616..617]
 a141(r435): [568..569]
 a142(r751): [568..569]
 a143(r434): [570..571]
 a144(r432): [570..575]
 a145(r433): [572..573]
 a146(r750): [574..575]
 a147(r431): [576..577]
 a148(r749): [578..579]
 a149(r430): [578..579]
 a150(r429): [580..581]
 a151(r748): [582..583]
 a152(r747): [584..585]
 a153(r428): [586..587]
 a154(r427): [588..589]
 a155(r426): [590..591]
 a156(r424): [590..595]
 a157(r425): [592..593]
 a158(r746): [594..595]
 a159(r423): [596..597]
 a160(r745): [598..599]
 a161(r422): [598..599]
 a162(r421): [600..601]
 a163(r744): [602..603]
 a164(r420): [554..555]
 a165(r415): [554..565]
 a166(r419): [556..557]
 a167(r418): [558..559]
 a168(r743): [560..561]
 a169(r417): [560..561]
 a170(r416): [562..563]
 a171(r742): [564..565]
 a172(r741): [566..567]
 a173(r414): [618..619]
 a174(r413): [620..621]
 a175(r412): [622..623]
 a176(r411): [624..625]
 a177(r740): [626..627]
 a178(r410): [626..627]
 a179(r409): [628..629]
 a180(r739): [630..631]
 a181(r399): [518..539]
 a182(r408): [518..519]
 a183(r738): [520..521]
 a184(r407): [522..523]
 a185(r406): [524..525]
 a186(r405): [526..527]
 a187(r403): [526..531]
 a188(r404): [528..529]
 a189(r737): [530..531]
 a190(r402): [532..533]
 a191(r736): [534..535]
 a192(r401): [534..535]
 a193(r400): [536..537]
 a194(r735): [538..539]
 a195(r398): [540..541]
 a196(r396): [540..545]
 a197(r397): [542..543]
 a198(r734): [544..545]
 a199(r395): [546..547]
 a200(r733): [548..549]
 a201(r394): [548..549]
 a202(r393): [550..551]
 a203(r732): [552..553]
 a204(r392): [502..503]
 a205(r391): [504..505]
 a206(r390): [506..507]
 a207(r389): [508..509]
 a208(r388): [510..511]
 a209(r731): [512..513]
 a210(r387): [512..513]
 a211(r386): [514..515]
 a212(r730): [516..517]
 a213(r385): [632..633]
 a214(r384): [634..635]
 a215(r383): [636..637]
 a216(r382): [638..639]
 a217(r729): [640..641]
 a218(r381): [640..641]
 a219(r380): [642..643]
 a220(r728): [644..645]
 a221(r379): [646..647]
 a222(r727): [648..649]
 a223(r726): [650..651]
 a224(r378): [652..653]
 a225(r725): [652..653]
 a226(r377): [654..655]
 a227(r724): [656..657]
 a228(r376): [656..657]
 a229(r375): [658..659]
 a230(r723): [660..661]
 a231(r374): [790..791]
 a232(r367): [790..805]
 a233(r373): [792..793]
 a234(r371): [792..797]
 a235(r372): [794..795]
 a236(r722): [796..797]
 a237(r370): [798..799]
 a238(r721): [800..801]
 a239(r369): [800..801]
 a240(r368): [802..803]
 a241(r720): [804..805]
 a242(r361): [856..867]
 a243(r366): [856..857]
 a244(r365): [858..859]
 a245(r364): [860..861]
 a246(r719): [862..863]
 a247(r363): [862..863]
 a248(r362): [864..865]
 a249(r718): [866..867]
 a250(r360): [868..869]
 a251(r358): [868..873]
 a252(r359): [870..871]
 a253(r717): [872..873]
 a254(r357): [874..875]
 a255(r716): [876..877]
 a256(r356): [876..877]
 a257(r355): [878..879]
 a258(r715): [880..881]
 a259(r354): [882..883]
 a260(r351): [882..889]
 a261(r714): [884..885]
 a262(r353): [884..885]
 a263(r352): [886..887]
 a264(r713): [888..889]
 a265(r350): [890..891]
 a266(r349): [892..893]
 a267(r348): [894..895]
 a268(r347): [896..897]
 a269(r712): [898..899]
 a270(r346): [898..899]
 a271(r345): [900..901]
 a272(r711): [902..903]
 a273(r339): [822..833]
 a274(r344): [822..823]
 a275(r343): [824..825]
 a276(r342): [826..827]
 a277(r710): [828..829]
 a278(r341): [828..829]
 a279(r340): [830..831]
 a280(r709): [832..833]
 a281(r338): [834..835]
 a282(r336): [834..839]
 a283(r337): [836..837]
 a284(r708): [838..839]
 a285(r335): [840..841]
 a286(r707): [842..843]
 a287(r334): [842..843]
 a288(r333): [844..845]
 a289(r706): [846..847]
 a290(r332): [848..849]
 a291(r329): [848..855]
 a292(r705): [850..851]
 a293(r331): [850..851]
 a294(r330): [852..853]
 a295(r704): [854..855]
 a296(r328): [904..905]
 a297(r327): [906..907]
 a298(r326): [908..909]
 a299(r325): [910..911]
 a300(r703): [912..913]
 a301(r324): [912..913]
 a302(r323): [914..915]
 a303(r702): [916..917]
 a304(r322): [806..807]
 a305(r315): [806..821]
 a306(r321): [808..809]
 a307(r319): [808..813]
 a308(r320): [810..811]
 a309(r701): [812..813]
 a310(r318): [814..815]
 a311(r700): [816..817]
 a312(r317): [816..817]
 a313(r316): [818..819]
 a314(r699): [820..821]
 a315(r314): [918..919]
 a316(r313): [920..921]
 a317(r312): [922..923]
 a318(r311): [924..925]
 a319(r698): [926..927]
 a320(r310): [926..927]
 a321(r309): [928..929]
 a322(r697): [930..931]
 a323(r308): [776..777]
 a324(r303): [776..787]
 a325(r307): [778..779]
 a326(r306): [780..781]
 a327(r696): [782..783]
 a328(r305): [782..783]
 a329(r304): [784..785]
 a330(r695): [786..787]
 a331(r694): [788..789]
 a332(r297): [676..687]
 a333(r302): [676..677]
 a334(r301): [678..679]
 a335(r300): [680..681]
 a336(r693): [682..683]
 a337(r299): [682..683]
 a338(r298): [684..685]
 a339(r692): [686..687]
 a340(r296): [688..689]
 a341(r294): [688..693]
 a342(r295): [690..691]
 a343(r691): [692..693]
 a344(r293): [694..695]
 a345(r690): [696..697]
 a346(r292): [696..697]
 a347(r291): [698..699]
 a348(r689): [700..701]
 a349(r290): [662..663]
 a350(r285): [662..673]
 a351(r289): [664..665]
 a352(r288): [666..667]
 a353(r688): [668..669]
 a354(r287): [668..669]
 a355(r286): [670..671]
 a356(r687): [672..673]
 a357(r686): [674..675]
 a358(r284): [702..703]
 a359(r685): [704..705]
 a360(r684): [704..705]
 a361(r682): [706..707]
 a362(r683): [708..709]
 a363(r283): [710..711]
 a364(r278): [710..721]
 a365(r282): [712..713]
 a366(r281): [714..715]
 a367(r681): [716..717]
 a368(r280): [716..717]
 a369(r279): [718..719]
 a370(r680): [720..721]
 a371(r679): [722..723]
 a372(r277): [736..737]
 a373(r678): [738..739]
 a374(r276): [738..739]
 a375(r270): [738..755]
 a376(r264): [738..767]
 a377(r275): [740..741]
 a378(r677): [742..743]
 a379(r676): [744..745]
 a380(r274): [746..747]
 a381(r675): [746..747]
 a382(r273): [748..749]
 a383(r674): [750..751]
 a384(r272): [750..751]
 a385(r271): [752..753]
 a386(r673): [754..755]
 a387(r269): [756..757]
 a388(r268): [758..759]
 a389(r267): [760..761]
 a390(r672): [762..763]
 a391(r266): [762..763]
 a392(r265): [764..765]
 a393(r671): [766..767]
 a394(r263): [768..769]
 a395(r670): [770..771]
 a396(r262): [770..771]
 a397(r261): [772..773]
 a398(r669): [774..775]
 a399(r260): [724..725]
 a400(r259): [726..727]
 a401(r258): [728..729]
 a402(r668): [730..731]
 a403(r257): [730..731]
 a404(r256): [732..733]
 a405(r667): [734..735]
 a406(r666): [388..389]
 a407(r665): [390..391]
 a408(r255): [392..393]
 a409(r251): [392..405]
 a410(r254): [394..395]
 a411(r664): [396..397]
 a412(r253): [396..397]
 a413(r662): [402..403] [398..399]
 a414(r663): [400..401]
 a415(r252): [402..403]
 a416(r661): [404..405]
 a417(r250): [406..407]
 a418(r660): [408..409]
 a419(r249): [408..409]
 a420(r658): [414..415] [410..411]
 a421(r659): [412..413]
 a422(r248): [414..415]
 a423(r657): [416..417]
 a424(r247): [418..419]
 a425(r243): [418..427]
 a426(r246): [420..421]
 a427(r656): [422..423]
 a428(r245): [422..423]
 a429(r244): [424..425]
 a430(r655): [426..427]
 a431(r242): [428..429]
 a432(r240): [428..433]
 a433(r241): [430..431]
 a434(r654): [432..433]
 a435(r653): [434..435]
 a436(r652): [434..435]
 a437(r651): [436..437]
 a438(r239): [438..439]
 a439(r235): [438..451]
 a440(r238): [440..441]
 a441(r650): [442..443]
 a442(r237): [442..443]
 a443(r648): [448..449] [444..445]
 a444(r649): [446..447]
 a445(r236): [448..449]
 a446(r647): [450..451]
 a447(r234): [452..453]
 a448(r646): [454..455]
 a449(r233): [454..455]
 a450(r644): [460..461] [456..457]
 a451(r645): [458..459]
 a452(r232): [460..461]
 a453(r643): [462..463]
 a454(r231): [464..465]
 a455(r227): [464..473]
 a456(r230): [466..467]
 a457(r642): [468..469]
 a458(r229): [468..469]
 a459(r228): [470..471]
 a460(r641): [472..473]
 a461(r226): [474..475]
 a462(r224): [474..479]
 a463(r225): [476..477]
 a464(r640): [478..479]
 a465(r639): [480..481]
 a466(r223): [480..481]
 a467(r638): [482..483]
 a468(r637): [482..483]
 a469(r222): [24..25]
 a470(r221): [26..27]
 a471(r636): [28..29]
 a472(r220): [28..29]
 a473(r219): [30..31]
 a474(r635): [32..33]
 a475(r633): [34..35]
 a476(r632): [34..35]
 a477(r631): [34..35]
 a478(r630): [34..35]
 a479(r629): [34..35]
 a480(r634): [34..35]
 a481(r628): [36..37]
 a482(r218): [38..39]
 a483(r217): [40..41]
 a484(r216): [42..43]
 a485(r215): [44..45]
 a486(r627): [46..47]
 a487(r214): [46..47]
 a488(r213): [48..49]
 a489(r626): [50..51]
 a490(r625): [52..53]
 a491(r212): [54..55]
 a492(r211): [56..57]
 a493(r210): [58..59]
 a494(r209): [60..61]
 a495(r624): [62..63]
 a496(r208): [62..63]
 a497(r207): [64..65]
 a498(r623): [66..67]
 a499(r621): [80..81]
 a500(r620): [80..81]
 a501(r619): [80..81]
 a502(r618): [80..81]
 a503(r617): [80..81]
 a504(r622): [80..81]
 a505(r616): [82..83]
 a506(r206): [84..85]
 a507(r205): [86..87]
 a508(r204): [88..89]
 a509(r203): [90..91]
 a510(r615): [92..93]
 a511(r202): [382..383]
 a512(r201): [384..385]
 a513(r614): [386..387]
 a514(r200): [94..95]
 a515(r613): [96..97]
 a516(r611): [68..69]
 a517(r610): [68..69]
 a518(r609): [68..69]
 a519(r608): [68..69]
 a520(r607): [68..69]
 a521(r612): [68..69]
 a522(r606): [70..71]
 a523(r199): [72..73]
 a524(r198): [74..75]
 a525(r197): [76..77]
 a526(r605): [78..79]
 a527(r196): [98..99]
 a528(r195): [100..101]
 a529(r194): [100..103]
 a530(r604): [102..103]
 a531(r193): [104..105]
 a532(r192): [106..107]
 a533(r603): [108..109]
 a534(r191): [108..109]
 a535(r601): [114..115] [110..111]
 a536(r602): [112..113]
 a537(r190): [114..115]
 a538(r600): [116..117]
 a539(r599): [118..119]
 a540(r189): [120..121]
 a541(r184): [120..135]
 a542(r188): [122..123]
 a543(r187): [124..125]
 a544(r598): [126..127]
 a545(r186): [126..127]
 a546(r596): [132..133] [128..129]
 a547(r597): [130..131]
 a548(r185): [132..133]
 a549(r595): [134..135]
 a550(r183): [136..137]
 a551(r179): [136..145]
 a552(r182): [138..139]
 a553(r594): [140..141]
 a554(r181): [140..141]
 a555(r180): [142..143]
 a556(r593): [144..145]
 a557(r178): [146..147]
 a558(r592): [148..149]
 a559(r177): [148..149]
 a560(r176): [150..151]
 a561(r591): [152..153]
 a562(r590): [154..155]
 a563(r175): [156..157]
 a564(r171): [156..165]
 a565(r174): [158..159]
 a566(r589): [160..161]
 a567(r173): [160..161]
 a568(r172): [162..163]
 a569(r588): [164..165]
 a570(r170): [166..167]
 a571(r587): [168..169]
 a572(r169): [168..169]
 a573(r168): [170..171]
 a574(r586): [172..173]
 a575(r167): [174..175]
 a576(r166): [176..177]
 a577(r585): [178..179]
 a578(r165): [180..181]
 a579(r164): [182..183]
 a580(r584): [184..185]
 a581(r163): [186..187]
 a582(r162): [188..189]
 a583(r583): [190..191]
 a584(r161): [192..193]
 a585(r160): [194..195]
 a586(r582): [196..197]
 a587(r159): [198..199]
 a588(r158): [200..201]
 a589(r581): [202..203]
 a590(r157): [204..205]
 a591(r156): [206..207]
 a592(r580): [208..209]
 a593(r155): [210..211]
 a594(r154): [212..213]
 a595(r579): [214..215]
 a596(r153): [216..217]
 a597(r152): [218..219]
 a598(r578): [220..221]
 a599(r151): [222..223]
 a600(r150): [224..225]
 a601(r577): [226..227]
 a602(r149): [348..349]
 a603(r576): [348..349]
 a604(r148): [350..351]
 a605(r145): [350..357]
 a606(r147): [352..353]
 a607(r146): [354..355]
 a608(r575): [356..357]
 a609(r144): [358..359]
 a610(r574): [360..361]
 a611(r143): [360..361]
 a612(r142): [362..363]
 a613(r573): [364..365]
 a614(r141): [366..367]
 a615(r572): [366..367]
 a616(r140): [368..369]
 a617(r138): [368..373]
 a618(r139): [370..371]
 a619(r571): [372..373]
 a620(r137): [374..375]
 a621(r570): [376..377]
 a622(r136): [376..377]
 a623(r135): [378..379]
 a624(r569): [380..381]
 a625(r568): [228..229]
 a626(r131): [230..239]
 a627(r134): [230..231]
 a628(r567): [232..233]
 a629(r133): [234..235]
 a630(r132): [236..237]
 a631(r566): [238..239]
 a632(r565): [240..241]
 a633(r130): [240..241]
 a634(r129): [242..243]
 a635(r564): [244..245]
 a636(r125): [246..255]
 a637(r128): [246..247]
 a638(r563): [248..249]
 a639(r127): [250..251]
 a640(r126): [252..253]
 a641(r562): [254..255]
 a642(r561): [256..257]
 a643(r124): [256..257]
 a644(r123): [258..259]
 a645(r560): [260..261]
 a646(r119): [262..271]
 a647(r122): [262..263]
 a648(r559): [264..265]
 a649(r121): [266..267]
 a650(r120): [268..269]
 a651(r558): [270..271]
 a652(r557): [272..273]
 a653(r118): [272..273]
 a654(r117): [274..275]
 a655(r556): [276..277]
 a656(r113): [278..287]
 a657(r116): [278..279]
 a658(r555): [280..281]
 a659(r115): [282..283]
 a660(r114): [284..285]
 a661(r554): [286..287]
 a662(r553): [288..289]
 a663(r112): [288..289]
 a664(r111): [290..291]
 a665(r552): [292..293]
 a666(r107): [294..303]
 a667(r110): [294..295]
 a668(r551): [296..297]
 a669(r109): [298..299]
 a670(r108): [300..301]
 a671(r550): [302..303]
 a672(r549): [304..305]
 a673(r106): [304..305]
 a674(r105): [306..307]
 a675(r548): [308..309]
 a676(r101): [310..319]
 a677(r104): [310..311]
 a678(r547): [312..313]
 a679(r103): [314..315]
 a680(r102): [316..317]
 a681(r546): [318..319]
 a682(r545): [320..321]
 a683(r100): [320..321]
 a684(r99): [322..323]
 a685(r544): [324..325]
 a686(r543): [326..327]
 a687(r98): [328..329]
 a688(r97): [330..331]
 a689(r542): [332..333]
 a690(r541): [334..335]
 a691(r96): [336..337]
 a692(r95): [338..339]
 a693(r94): [340..341]
 a694(r540): [342..343]
 a695(r93): [342..343]
 a696(r92): [344..345]
 a697(r539): [346..347]
 a698(r91): [10..11]
 a699(r90): [12..13]
 a700(r538): [14..15]
 a701(r89): [14..15]
 a702(r536): [20..21] [16..17]
 a703(r537): [18..19]
 a704(r88): [20..21]
 a705(r535): [22..23]
 a706(r87): [6..7]
 a707(r534): [8..9]
 a708(r533): [1112..1113]
  pref0:a83(r472)<-hr21@1
  regions=1, blocks=79, points=1114
    allocnos=709 (big 0), copies=0, conflicts=0, ranges=716
Disposition:
  706:r87  l0     0  704:r88  l0     1  701:r89  l0     1  699:r90  l0     0
  698:r91  l0     0  696:r92  l0     0  695:r93  l0     1  693:r94  l0     0
  692:r95  l0     0  691:r96  l0     0  688:r97  l0     0  687:r98  l0     0
  684:r99  l0     0  683:r100 l0     1  676:r101 l0     3  680:r102 l0     0
  679:r103 l0     0  677:r104 l0     0  674:r105 l0     0  673:r106 l0     1
  666:r107 l0     3  670:r108 l0     0  669:r109 l0     0  667:r110 l0     0
  664:r111 l0     0  663:r112 l0     1  656:r113 l0     3  660:r114 l0     0
  659:r115 l0     0  657:r116 l0     0  654:r117 l0     0  653:r118 l0     1
  646:r119 l0     3  650:r120 l0     0  649:r121 l0     0  647:r122 l0     0
  644:r123 l0     0  643:r124 l0     1  636:r125 l0     3  640:r126 l0     0
  639:r127 l0     0  637:r128 l0     0  634:r129 l0     0  633:r130 l0     1
  626:r131 l0     3  630:r132 l0     0  629:r133 l0     0  627:r134 l0     0
  623:r135 l0     0  622:r136 l0     1  620:r137 l0     0  617:r138 l0     0
  618:r139 l0     1  616:r140 l0     1  614:r141 l0     0  612:r142 l0     0
  611:r143 l0     1  609:r144 l0     0  605:r145 l0     0  607:r146 l0     1
  606:r147 l0     1  604:r148 l0     1  602:r149 l0     0  600:r150 l0     0
  599:r151 l0     0  597:r152 l0     0  596:r153 l0     0  594:r154 l0     0
  593:r155 l0     0  591:r156 l0     0  590:r157 l0     0  588:r158 l0     0
  587:r159 l0     0  585:r160 l0     0  584:r161 l0     0  582:r162 l0     0
  581:r163 l0     0  579:r164 l0     0  578:r165 l0     0  576:r166 l0     0
  575:r167 l0     0  573:r168 l0     0  572:r169 l0     1  570:r170 l0     0
  564:r171 l0     1  568:r172 l0     0  567:r173 l0     2  565:r174 l0     0
  563:r175 l0     0  560:r176 l0     0  559:r177 l0     1  557:r178 l0     0
  551:r179 l0     1  555:r180 l0     0  554:r181 l0     2  552:r182 l0     0
  550:r183 l0     0  541:r184 l0     2  548:r185 l0     1  545:r186 l0     1
  543:r187 l0     0  542:r188 l0     0  540:r189 l0     0  537:r190 l0     1
  534:r191 l0     1  532:r192 l0     0  531:r193 l0     0  529:r194 l0     1
  528:r195 l0     0  527:r196 l0     0  525:r197 l0     0  524:r198 l0     0
  523:r199 l0     0  514:r200 l0     0  512:r201 l0     0  511:r202 l0     0
  509:r203 l0     0  508:r204 l0     0  507:r205 l0     0  506:r206 l0     0
  497:r207 l0     0  496:r208 l0     1  494:r209 l0     0  493:r210 l0     0
  492:r211 l0     0  491:r212 l0     0  488:r213 l0     0  487:r214 l0     1
  485:r215 l0     0  484:r216 l0     0  483:r217 l0     0  482:r218 l0     0
  473:r219 l0     0  472:r220 l0     1  470:r221 l0     0  469:r222 l0     0
  466:r223 l0     1  462:r224 l0     1  463:r225 l0     0  461:r226 l0     0
  455:r227 l0     2  459:r228 l0     0  458:r229 l0     1  456:r230 l0     0
  454:r231 l0     0  452:r232 l0     1  449:r233 l0     1  447:r234 l0     0
  439:r235 l0     2  445:r236 l0     1  442:r237 l0     1  440:r238 l0     0
  438:r239 l0     0  432:r240 l0     1  433:r241 l0     0  431:r242 l0     0
  425:r243 l0     2  429:r244 l0     0  428:r245 l0     1  426:r246 l0     0
  424:r247 l0     0  422:r248 l0     1  419:r249 l0     1  417:r250 l0     0
  409:r251 l0     2  415:r252 l0     1  412:r253 l0     1  410:r254 l0     0
  408:r255 l0     0  404:r256 l0     0  403:r257 l0     1  401:r258 l0     0
  400:r259 l0     0  399:r260 l0     0  397:r261 l0     0  396:r262 l0     1
  394:r263 l0     0  376:r264 l0     1  392:r265 l0     0  391:r266 l0     2
  389:r267 l0     0  388:r268 l0     0  387:r269 l0     0  375:r270 l0     5
  385:r271 l0     0  384:r272 l0     2  382:r273 l0     0  380:r274 l0     0
  377:r275 l0     0  374:r276 l0     4  372:r277 l0     0  364:r278 l0     0
  369:r279 l0     1  368:r280 l0     2  366:r281 l0     1  365:r282 l0     1
  363:r283 l0     1  358:r284 l0     0  350:r285 l0     0  355:r286 l0     1
  354:r287 l0     2  352:r288 l0     1  351:r289 l0     1  349:r290 l0     1
  347:r291 l0     0  346:r292 l0     1  344:r293 l0     0  341:r294 l0     0
  342:r295 l0     1  340:r296 l0     1  332:r297 l0     1  338:r298 l0     0
  337:r299 l0     2  335:r300 l0     0  334:r301 l0     0  333:r302 l0     0
  324:r303 l0     0  329:r304 l0     1  328:r305 l0     2  326:r306 l0     1
  325:r307 l0     1  323:r308 l0     1  321:r309 l0     0  320:r310 l0     1
  318:r311 l0     0  317:r312 l0     0  316:r313 l0     0  315:r314 l0     0
  305:r315 l0     2  313:r316 l0     0  312:r317 l0     1  310:r318 l0     0
  307:r319 l0     0  308:r320 l0     1  306:r321 l0     1  304:r322 l0     0
  302:r323 l0     0  301:r324 l0     1  299:r325 l0     0  298:r326 l0     0
  297:r327 l0     0  296:r328 l0     0  291:r329 l0     2  294:r330 l0     0
  293:r331 l0     1  290:r332 l0     0  288:r333 l0     0  287:r334 l0     1
  285:r335 l0     0  282:r336 l0     0  283:r337 l0     1  281:r338 l0     1
  273:r339 l0     1  279:r340 l0     0  278:r341 l0     2  276:r342 l0     0
  275:r343 l0     0  274:r344 l0     0  271:r345 l0     0  270:r346 l0     1
  268:r347 l0     0  267:r348 l0     0  266:r349 l0     0  265:r350 l0     0
  260:r351 l0     2  263:r352 l0     0  262:r353 l0     1  259:r354 l0     0
  257:r355 l0     0  256:r356 l0     1  254:r357 l0     0  251:r358 l0     0
  252:r359 l0     1  250:r360 l0     1  242:r361 l0     1  248:r362 l0     0
  247:r363 l0     2  245:r364 l0     0  244:r365 l0     0  243:r366 l0     0
  232:r367 l0     2  240:r368 l0     0  239:r369 l0     1  237:r370 l0     0
  234:r371 l0     0  235:r372 l0     1  233:r373 l0     1  231:r374 l0     0
  229:r375 l0     0  228:r376 l0     1  226:r377 l0     0  224:r378 l0     0
  221:r379 l0     0  219:r380 l0     0  218:r381 l0     1  216:r382 l0     0
  215:r383 l0     0  214:r384 l0     0  213:r385 l0     0  211:r386 l0     0
  210:r387 l0     1  208:r388 l0     0  207:r389 l0     0  206:r390 l0     0
  205:r391 l0     0  204:r392 l0     0  202:r393 l0     0  201:r394 l0     1
  199:r395 l0     0  196:r396 l0     0  197:r397 l0     1  195:r398 l0     1
  181:r399 l0     0  193:r400 l0     1  192:r401 l0     2  190:r402 l0     1
  187:r403 l0     1  188:r404 l0     2  186:r405 l0     2  185:r406 l0     1
  184:r407 l0     1  182:r408 l0    21  179:r409 l0     0  178:r410 l0     1
  176:r411 l0     0  175:r412 l0     0  174:r413 l0     0  173:r414 l0     0
  165:r415 l0     0  170:r416 l0     1  169:r417 l0     2  167:r418 l0     1
  166:r419 l0     1  164:r420 l0     1  162:r421 l0     0  161:r422 l0     1
  159:r423 l0     0  156:r424 l0     0  157:r425 l0     1  155:r426 l0     1
  154:r427 l0     0  153:r428 l0     0  150:r429 l0     0  149:r430 l0     1
  147:r431 l0     0  144:r432 l0     0  145:r433 l0     1  143:r434 l0     1
  141:r435 l0     0  139:r436 l0     0  138:r437 l0     1  136:r438 l0     0
  135:r439 l0     0  134:r440 l0     0  133:r441 l0     0  125:r442 l0     0
  130:r443 l0     1  129:r444 l0     2  127:r445 l0     1  126:r446 l0     1
  124:r447 l0     1  122:r448 l0     0  121:r449 l0     1  119:r450 l0     0
  118:r451 l0     0  115:r452 l0     0  114:r453 l0     1  112:r454 l0     0
  109:r455 l0     0  110:r456 l0     1  108:r457 l0     1  106:r458 l0     0
  103:r459 l0     1  102:r460 l0     0   87:r461 l0     2   99:r462 l0     0
   98:r463 l0     1   96:r464 l0     0   95:r465 l0     0   94:r466 l0     0
   93:r467 l0     0   84:r468 l0     5   91:r469 l0     0   90:r470 l0     1
   88:r471 l0     0   83:r472 l0     0   81:r473 l0     0   73:r474 l0     0
   78:r475 l0     1   77:r476 l0     2   75:r477 l0     1   74:r478 l0     1
   72:r479 l0     1   70:r480 l0     0   69:r481 l0     1   67:r482 l0     0
   64:r483 l0     0   65:r484 l0     1   63:r485 l0     1   39:r486 l0     0
   61:r487 l0     1   60:r488 l0     2   58:r489 l0     1   55:r490 l0     1
   56:r491 l0     2   54:r492 l0     2   53:r493 l0     1   42:r494 l0    22
   51:r495 l0     1   50:r496 l0     2   48:r497 l0     1   45:r498 l0     1
   46:r499 l0     2   44:r500 l0     2   43:r501 l0     1   41:r502 l0    21
   40:r503 l0    21   37:r504 l0     0   36:r505 l0     1   34:r506 l0     0
   30:r507 l0     0   32:r508 l0     1   31:r509 l0     1   29:r510 l0     1
    3:r511 l0     0   27:r512 l0     1   26:r513 l0     2   24:r514 l0     1
   20:r515 l0     1   22:r516 l0     2   21:r517 l0     2   19:r518 l0     2
   18:r519 l0     1    6:r520 l0    22   16:r521 l0     1   15:r522 l0     2
   13:r523 l0     1    9:r524 l0     1   11:r525 l0     2   10:r526 l0     2
    8:r527 l0     2    7:r528 l0     1    5:r529 l0    21    4:r530 l0    21
    1:r531 l0     0    0:r532 l0     0  708:r533 l0     0  707:r534 l0     0
  705:r535 l0     0  702:r536 l0     0  703:r537 l0     0  700:r538 l0     0
  697:r539 l0     0  694:r540 l0     0  690:r541 l0     0  689:r542 l0     0
  686:r543 l0     0  685:r544 l0     0  682:r545 l0     0  681:r546 l0     0
  678:r547 l0     0  675:r548 l0     0  672:r549 l0     0  671:r550 l0     0
  668:r551 l0     0  665:r552 l0     0  662:r553 l0     0  661:r554 l0     0
  658:r555 l0     0  655:r556 l0     0  652:r557 l0     0  651:r558 l0     0
  648:r559 l0     0  645:r560 l0     0  642:r561 l0     0  641:r562 l0     0
  638:r563 l0     0  635:r564 l0     0  632:r565 l0     0  631:r566 l0     0
  628:r567 l0     0  625:r568 l0     0  624:r569 l0     0  621:r570 l0     0
  619:r571 l0     1  615:r572 l0    21  613:r573 l0     0  610:r574 l0     0
  608:r575 l0     1  603:r576 l0    21  601:r577 l0     0  598:r578 l0     0
  595:r579 l0     0  592:r580 l0     0  589:r581 l0     0  586:r582 l0     0
  583:r583 l0     0  580:r584 l0     0  577:r585 l0     0  574:r586 l0     0
  571:r587 l0     0  569:r588 l0     0  566:r589 l0     0  562:r590 l0     0
  561:r591 l0     0  558:r592 l0     0  556:r593 l0     0  553:r594 l0     0
  549:r595 l0     0  546:r596 l0     0  547:r597 l0     0  544:r598 l0     0
  539:r599 l0     0  538:r600 l0     0  535:r601 l0     0  536:r602 l0     0
  533:r603 l0     0  530:r604 l0     0  526:r605 l0     0  522:r606 l0     0
  520:r607 l0    37  519:r608 l0     5  518:r609 l0     2  517:r610 l0     1
  516:r611 l0     0  521:r612 l0     4  515:r613 l0     0  513:r614 l0     0
  510:r615 l0     0  505:r616 l0     0  503:r617 l0    37  502:r618 l0     5
  501:r619 l0     2  500:r620 l0     1  499:r621 l0     0  504:r622 l0     4
  498:r623 l0     0  495:r624 l0     0  490:r625 l0     0  489:r626 l0     0
  486:r627 l0     0  481:r628 l0     0  479:r629 l0    37  478:r630 l0     5
  477:r631 l0     2  476:r632 l0     1  475:r633 l0     0  480:r634 l0     4
  474:r635 l0     0  471:r636 l0     0  468:r637 l0     1  467:r638 l0     0
  465:r639 l0     0  464:r640 l0     0  460:r641 l0     0  457:r642 l0     0
  453:r643 l0     0  450:r644 l0     0  451:r645 l0     0  448:r646 l0     0
  446:r647 l0     0  443:r648 l0     0  444:r649 l0     0  441:r650 l0     0
  437:r651 l0     0  436:r652 l0     1  435:r653 l0     0  434:r654 l0     0
  430:r655 l0     0  427:r656 l0     0  423:r657 l0     0  420:r658 l0     0
  421:r659 l0     0  418:r660 l0     0  416:r661 l0     0  413:r662 l0     0
  414:r663 l0     0  411:r664 l0     0  407:r665 l0     0  406:r666 l0     0
  405:r667 l0     0  402:r668 l0     0  398:r669 l0     0  395:r670 l0     0
  393:r671 l0     0  390:r672 l0     0  386:r673 l0     0  383:r674 l0     0
  381:r675 l0     2  379:r676 l0     0  378:r677 l0     0  373:r678 l0     0
  371:r679 l0     0  370:r680 l0     1  367:r681 l0     1  361:r682 l0     0
  362:r683 l0     0  360:r684 l0     1  359:r685 l0     0  357:r686 l0     0
  356:r687 l0     1  353:r688 l0     1  348:r689 l0     0  345:r690 l0     0
  343:r691 l0     1  339:r692 l0     0  336:r693 l0     0  331:r694 l0     0
  330:r695 l0     1  327:r696 l0     1  322:r697 l0     0  319:r698 l0     0
  314:r699 l0     0  311:r700 l0     0  309:r701 l0     1  303:r702 l0     0
  300:r703 l0     0  295:r704 l0     0  292:r705 l0     0  289:r706 l0     0
  286:r707 l0     0  284:r708 l0     1  280:r709 l0     0  277:r710 l0     0
  272:r711 l0     0  269:r712 l0     0  264:r713 l0     0  261:r714 l0     0
  258:r715 l0     0  255:r716 l0     0  253:r717 l0     1  249:r718 l0     0
  246:r719 l0     0  241:r720 l0     0  238:r721 l0     0  236:r722 l0     1
  230:r723 l0     0  227:r724 l0     0  225:r725 l0     1  223:r726 l0     0
  222:r727 l0     0  220:r728 l0     0  217:r729 l0     0  212:r730 l0     0
  209:r731 l0     0  203:r732 l0     0  200:r733 l0     0  198:r734 l0     1
  194:r735 l0     1  191:r736 l0     1  189:r737 l0     2  183:r738 l0     1
  180:r739 l0     0  177:r740 l0     0  172:r741 l0     0  171:r742 l0     1
  168:r743 l0     1  163:r744 l0     0  160:r745 l0     0  158:r746 l0     1
  152:r747 l0    21  151:r748 l0     0  148:r749 l0     0  146:r750 l0     1
  142:r751 l0    21  140:r752 l0     0  137:r753 l0     0  132:r754 l0     0
  131:r755 l0     1  128:r756 l0     1  123:r757 l0     0  120:r758 l0     0
  117:r759 l0    21  116:r760 l0     0  113:r761 l0     0  111:r762 l0     1
  107:r763 l0    21  105:r764 l0     0  104:r765 l0     0  101:r766 l0     0
  100:r767 l0     0   97:r768 l0     0   92:r769 l0     0   89:r770 l0     0
   86:r771 l0     1   85:r772 l0     4   82:r773 l0     0   80:r774 l0     0
   79:r775 l0     1   76:r776 l0     1   71:r777 l0     0   68:r778 l0     0
   66:r779 l0     1   62:r780 l0     1   59:r781 l0     1   57:r782 l0     2
   52:r783 l0     1   49:r784 l0     1   47:r785 l0     2   38:r786 l0     0
   35:r787 l0     0   33:r788 l0     1   28:r789 l0     1   25:r790 l0     1
   23:r791 l0     2   17:r792 l0     1   14:r793 l0     1   12:r794 l0     2
    2:r795 l0     0
+++Costs: overall -72, reg -72, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int read_data(int*, Preprocess*, IOFiles*, Data_file_header*, Data_block_header*, Precision2*, FILE**, Procpar_info*, Precision1*, float**, float**, int, InFile_struct*, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={51d,28u} r1={54d,9u} r2={51d,6u} r4={71d,26u} r5={91d,46u} r6={1d,78u} r7={10d,138u} r8={45d} r9={45d} r10={45d} r11={45d} r12={45d} r13={45d} r14={45d} r15={45d} r16={1d,135u,40e} r17={348d,36u} r18={45d} r19={45d} r20={1d,332u,48e} r21={47d,1u} r22={46d} r23={46d} r24={46d} r25={46d} r26={46d} r27={46d} r28={46d} r29={45d} r30={45d} r31={45d} r32={45d} r33={45d} r34={45d} r35={45d} r36={45d} r37={49d,4u} r38={49d,4u} r39={45d} r40={45d} r45={45d} r46={45d} r47={45d} r48={45d} r49={45d} r50={45d} r51={45d} r52={45d} r53={45d} r54={45d} r55={45d} r56={45d} r57={45d} r58={45d} r59={45d} r60={45d} r61={45d} r62={45d} r63={45d} r64={45d} r65={45d} r66={45d} r67={45d} r68={45d} r69={45d} r70={45d} r71={45d} r72={45d} r73={45d} r74={45d} r75={45d} r76={45d} r77={45d} r78={45d} r79={45d} r80={45d} r87={1d,1u} r88={1d,3u,2e} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u,1e} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u,1e} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u,1e} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1e} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u,1e} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u,1e} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,2u,1e} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,2u,1e} r191={1d,1u,1e} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u,1e} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u,1e} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u,1e} r221={1d,1u} r222={1d,1u} r223={1d,1u,1e} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u,1e} r230={1d,1u} r231={1d,1u} r232={1d,2u,1e} r233={1d,1u,1e} r234={1d,1u} r235={1d,1u} r236={1d,2u,1e} r237={1d,1u,1e} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u,1e} r246={1d,1u} r247={1d,1u} r248={1d,2u,1e} r249={1d,1u,1e} r250={1d,1u} r251={1d,1u} r252={1d,2u,1e} r253={1d,1u,1e} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u,1e} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u,1e} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u,1e} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u,1e} r273={1d,1u} r274={1d,2u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u,1e} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u,1e} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u,1e} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u,1e} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u,1e} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u,1e} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u,1e} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u,1e} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u,1e} r332={1d,1u} r333={1d,1u} r334={1d,1u,1e} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u,1e} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u,1e} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u,1e} r354={1d,1u} r355={1d,1u} r356={1d,1u,1e} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u,1e} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u,1e} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u,1e} r377={1d,1u} r378={1d,2u} r379={1d,1u} r380={1d,1u} r381={1d,1u,1e} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u,1e} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u,1e} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u,1e} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u,1e} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u,1e} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u,1e} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u,1e} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u,1e} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,1u,1e} r445={1d,1u} r446={1d,1u} r447={1d,1u} r448={1d,1u} r449={1d,1u,1e} r450={1d,1u} r451={1d,1u} r452={1d,1u} r453={1d,1u,1e} r454={1d,1u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={1d,1u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r462={1d,1u} r463={1d,1u,1e} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,1u,1e} r471={1d,1u} r472={1d,1u} r473={1d,1u} r474={1d,1u} r475={1d,1u} r476={1d,1u,1e} r477={1d,1u} r478={1d,1u} r479={1d,1u} r480={1d,1u} r481={1d,1u,1e} r482={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,1u} r486={1d,1u} r487={1d,1u} r488={1d,1u,1e} r489={1d,1u} r490={1d,1u} r491={1d,1u} r492={1d,1u} r493={1d,1u} r494={1d,1u} r495={1d,1u} r496={1d,1u,1e} r497={1d,1u} r498={1d,1u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r505={1d,1u,1e} r506={1d,1u} r507={1d,1u} r508={1d,1u} r509={1d,1u} r510={1d,1u} r511={1d,1u} r512={1d,1u} r513={1d,1u,1e} r514={1d,1u} r515={1d,1u} r516={1d,1u} r517={1d,1u} r518={1d,1u} r519={1d,1u} r520={1d,1u} r521={1d,1u} r522={1d,1u,1e} r523={1d,1u} r524={1d,1u} r525={1d,1u} r526={1d,1u} r527={1d,1u} r528={1d,1u} r529={1d,1u} r530={1d,1u} r531={1d,1u} r532={1d,1u} r533={1d,1u} r534={1d,1u} r535={1d,1u} r536={6d,6u} r537={1d,1u} r538={1d,1u} r539={1d,1u} r540={1d,1u} r541={1d,1u} r542={1d,1u} r543={1d,1u} r544={1d,1u} r545={1d,1u} r546={1d,1u} r547={1d,1u} r548={1d,1u} r549={1d,1u} r550={1d,1u} r551={1d,1u} r552={1d,1u} r553={1d,1u} r554={1d,1u} r555={1d,1u} r556={1d,1u} r557={1d,1u} r558={1d,1u} r559={1d,1u} r560={1d,1u} r561={1d,1u} r562={1d,1u} r563={1d,1u} r564={1d,1u} r565={1d,1u} r566={1d,1u} r567={1d,1u} r568={1d,1u} r569={1d,1u} r570={1d,1u} r571={1d,1u} r572={1d,1u} r573={1d,1u} r574={1d,1u} r575={1d,1u} r576={1d,1u} r577={1d,1u} r578={1d,1u} r579={1d,1u} r580={1d,1u} r581={1d,1u} r582={1d,1u} r583={1d,1u} r584={1d,1u} r585={1d,1u} r586={1d,1u} r587={1d,1u} r588={1d,1u} r589={1d,1u} r590={1d,1u} r591={1d,1u} r592={1d,1u} r593={1d,1u} r594={1d,1u} r595={1d,1u} r596={4d,4u} r597={1d,1u} r598={1d,1u} r599={1d,1u} r600={1d,1u} r601={4d,4u} r602={1d,1u} r603={1d,1u} r604={1d,1u} r605={1d,1u} r606={1d,1u} r607={1d,1u} r608={1d,1u} r609={1d,1u} r610={1d,1u} r611={1d,1u} r612={1d,1u} r613={1d,1u} r614={1d,1u} r615={1d,1u} r616={1d,1u} r617={1d,1u} r618={1d,1u} r619={1d,1u} r620={1d,1u} r621={1d,1u} r622={1d,1u} r623={1d,1u} r624={1d,1u} r625={1d,1u} r626={1d,1u} r627={1d,1u} r628={1d,1u} r629={1d,1u} r630={1d,1u} r631={1d,1u} r632={1d,1u} r633={1d,1u} r634={1d,1u} r635={1d,1u} r636={1d,1u} r637={1d,1u} r638={1d,1u} r639={1d,1u} r640={1d,1u} r641={1d,1u} r642={1d,1u} r643={1d,1u} r644={4d,4u} r645={1d,1u} r646={1d,1u} r647={1d,1u} r648={4d,4u} r649={1d,1u} r650={1d,1u} r651={1d,1u} r652={1d,1u} r653={1d,1u} r654={1d,1u} r655={1d,1u} r656={1d,1u} r657={1d,1u} r658={4d,4u} r659={1d,1u} r660={1d,1u} r661={1d,1u} r662={4d,4u} r663={1d,1u} r664={1d,1u} r665={1d,1u} r666={1d,1u} r667={1d,1u} r668={1d,1u} r669={1d,1u} r670={1d,1u} r671={1d,1u} r672={1d,1u} r673={1d,1u} r674={1d,1u} r675={1d,1u} r676={1d,1u} r677={1d,1u} r678={1d,1u} r679={1d,1u} r680={1d,1u} r681={1d,1u} r682={1d,1u} r683={1d,1u} r684={1d,1u,1e} r685={1d,1u} r686={1d,1u} r687={1d,1u} r688={1d,1u} r689={1d,1u} r690={1d,1u} r691={1d,1u} r692={1d,1u} r693={1d,1u} r694={1d,1u} r695={1d,1u} r696={1d,1u} r697={1d,1u} r698={1d,1u} r699={1d,1u} r700={1d,1u} r701={1d,1u} r702={1d,1u} r703={1d,1u} r704={1d,1u} r705={1d,1u} r706={1d,1u} r707={1d,1u} r708={1d,1u} r709={1d,1u} r710={1d,1u} r711={1d,1u} r712={1d,1u} r713={1d,1u} r714={1d,1u} r715={1d,1u} r716={1d,1u} r717={1d,1u} r718={1d,1u} r719={1d,1u} r720={1d,1u} r721={1d,1u} r722={1d,1u} r723={1d,1u} r724={1d,1u} r725={1d,1u} r726={1d,1u} r727={1d,1u} r728={1d,1u} r729={1d,1u} r730={1d,1u} r731={1d,1u} r732={1d,1u} r733={1d,1u} r734={1d,1u} r735={1d,1u} r736={1d,1u} r737={1d,1u} r738={1d,1u} r739={1d,1u} r740={1d,1u} r741={1d,1u} r742={1d,1u} r743={1d,1u} r744={1d,1u} r745={1d,1u} r746={1d,1u} r747={1d,1u} r748={1d,1u} r749={1d,1u} r750={1d,1u} r751={1d,1u} r752={1d,1u} r753={1d,1u} r754={1d,1u} r755={1d,1u} r756={1d,1u} r757={1d,1u} r758={1d,1u} r759={1d,1u} r760={1d,1u} r761={1d,1u} r762={1d,1u} r763={1d,1u} r764={1d,1u} r765={1d,1u} r766={1d,1u} r767={1d,1u} r768={1d,1u} r769={1d,1u} r770={1d,1u} r771={1d,1u} r772={1d,1u} r773={1d,1u} r774={1d,1u} r775={1d,1u} r776={1d,1u} r777={1d,1u} r778={1d,1u} r779={1d,1u} r780={1d,1u} r781={1d,1u} r782={1d,1u} r783={1d,1u} r784={1d,1u} r785={1d,1u} r786={1d,1u} r787={1d,1u} r788={1d,1u} r789={1d,1u} r790={1d,1u} r791={1d,1u} r792={1d,1u} r793={1d,1u} r794={1d,1u} r795={1d,1u} 
;;    total ref usage 6148{4398d,1585u,165e} in 1053{1008 regular + 45 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 533
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 fid+0 S8 A64])
        (reg:DI 5 di [ fid ])) ge2fitman_fmtext_o.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fid ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 preprocess+0 S8 A64])
        (reg:DI 4 si [ preprocess ])) ge2fitman_fmtext_o.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ preprocess ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 file+0 S8 A64])
        (reg:DI 1 dx [ file ])) ge2fitman_fmtext_o.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ file ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
        (reg:DI 2 cx [ main_header ])) ge2fitman_fmtext_o.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ main_header ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 block_header+0 S8 A64])
        (reg:DI 37 r8 [ block_header ])) ge2fitman_fmtext_o.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ block_header ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
        (reg:DI 38 r9 [ switch_data ])) ge2fitman_fmtext_o.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ switch_data ])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 533)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 56 [0x38])) [0 verbose+0 S4 A64])) ge2fitman_fmtext_o.cpp:25 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [0 verbose+0 S1 A32])
        (subreg:QI (reg:SI 533) 0)) ge2fitman_fmtext_o.cpp:25 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 533)
        (nil)))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:28 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:29 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:30 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 numSets+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:31 90 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 dataSizeChannel+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:32 90 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:33 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 unsup_set_size+0 S8 A64])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:34 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:35 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -77 [0xffffffffffffffb3])) [0 phaseIt+0 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:53 93 {*movqi_internal}
     (nil))
(insn 22 21 1189 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:63 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              77 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 534
(code_label 1189 22 23 3 45 "" [1 uses])
(note 23 1189 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 534)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 fid+0 S8 A64])) ge2fitman_fmtext_o.cpp:63 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:SI 87 [ D.25517 ])
        (mem:SI (reg/f:DI 534) [0 *fid_57(D)+0 S4 A32])) ge2fitman_fmtext_o.cpp:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 534)
        (nil)))
(insn 26 25 27 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.25517 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32]))) ge2fitman_fmtext_o.cpp:63 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.25517 ])
        (nil)))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1192)
            (pc))) ge2fitman_fmtext_o.cpp:63 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1192)
;;  succ:       78
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 91 535 536 537 538
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 535)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:67 90 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 88 [ D.25518 ])
        (sign_extend:DI (reg:SI 535))) ge2fitman_fmtext_o.cpp:67 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 535)
        (nil)))
(insn 31 30 32 4 (set (reg:DI 536)
        (reg:DI 88 [ D.25518 ])) ge2fitman_fmtext_o.cpp:67 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 536)
                (ashift:DI (reg:DI 536)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:67 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 536)
                (plus:DI (reg:DI 536)
                    (reg:DI 88 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:67 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.25518 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 536)
                (ashift:DI (reg:DI 536)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:67 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 536)
                (plus:DI (reg:DI 536)
                    (reg:DI 88 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:67 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 88 [ D.25518 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 537)
                (ashift:DI (reg:DI 536)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:67 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 536)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (set (reg:DI 536)
        (reg:DI 537)) ge2fitman_fmtext_o.cpp:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 537)
        (nil)))
(insn 38 37 39 4 (set (reg:DI 89 [ D.25518 ])
        (reg:DI 536)) ge2fitman_fmtext_o.cpp:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 536)
        (nil)))
(insn 39 38 40 4 (set (reg/f:DI 538)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 preprocess+0 S8 A64])) ge2fitman_fmtext_o.cpp:67 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 90 [ D.25519 ])
                (plus:DI (reg:DI 89 [ D.25518 ])
                    (reg/f:DI 538)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:67 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 538)
        (expr_list:REG_DEAD (reg:DI 89 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -96 [0xffffffffffffffa0])) [0 preprocess+0 S8 A64])
                        (reg:DI 89 [ D.25518 ]))
                    (nil))))))
(insn 41 40 42 4 (set (reg:SI 91 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 90 [ D.25519 ])
                (const_int 20 [0x14])) [0 _62->file_type+0 S4 A32])) ge2fitman_fmtext_o.cpp:67 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.25519 ])
        (nil)))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:67 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.25517 ])
        (nil)))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1186)
            (pc))) ge2fitman_fmtext_o.cpp:67 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1186)
;;  succ:       5 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:SI 539)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:73 90 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 92 [ D.25518 ])
        (sign_extend:DI (reg:SI 539))) ge2fitman_fmtext_o.cpp:73 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 539)
        (nil)))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 93 [ D.25518 ])
                (ashift:DI (reg:DI 92 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:73 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 5 (set (reg/f:DI 540)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:73 89 {*movdi_internal}
     (nil))
(insn 49 48 50 5 (parallel [
            (set (reg/f:DI 94 [ D.25520 ])
                (plus:DI (reg:DI 93 [ D.25518 ])
                    (reg/f:DI 540)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:73 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 540)
        (expr_list:REG_DEAD (reg:DI 93 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 93 [ D.25518 ]))
                    (nil))))))
(insn 50 49 51 5 (set (reg:DI 95 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 94 [ D.25520 ])
                (const_int 16 [0x10])) [0 _67->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.25520 ])
        (nil)))
(insn 51 50 52 5 (set (reg:SI 96 [ D.25517 ])
        (subreg:SI (reg:DI 95 [ D.25521 ]) 0)) ge2fitman_fmtext_o.cpp:73 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ D.25521 ])
        (nil)))
(insn 52 51 53 5 (parallel [
            (set (reg:SI 541)
                (ashift:SI (reg:SI 96 [ D.25517 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:73 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.25517 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])
        (reg:SI 541)) ge2fitman_fmtext_o.cpp:73 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 541)
        (nil)))
(insn 54 53 55 5 (set (reg:SI 542)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:80 90 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg:DI 97 [ D.25518 ])
        (sign_extend:DI (reg:SI 542))) ge2fitman_fmtext_o.cpp:80 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 542)
        (nil)))
(insn 56 55 57 5 (parallel [
            (set (reg:DI 98 [ D.25518 ])
                (ashift:DI (reg:DI 97 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:80 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 5 (set (reg:DI 5 di)
        (reg:DI 98 [ D.25518 ])) ge2fitman_fmtext_o.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ D.25518 ])
        (nil)))
(call_insn 58 57 59 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:80 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 58 60 5 (set (reg/f:DI 543)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 543)
            (nil))))
(insn 60 59 61 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
        (reg/f:DI 543)) ge2fitman_fmtext_o.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 543)
        (nil)))
(insn 61 60 62 5 (set (reg:SI 544)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:91 90 {*movsi_internal}
     (nil))
(insn 62 61 63 5 (set (reg:DI 99 [ D.25518 ])
        (sign_extend:DI (reg:SI 544))) ge2fitman_fmtext_o.cpp:91 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 544)
        (nil)))
(insn 63 62 64 5 (parallel [
            (set (reg:DI 100 [ D.25518 ])
                (ashift:DI (reg:DI 99 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:91 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 64 63 65 5 (set (reg/f:DI 545)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 24 [0x18])) [0 out_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:91 89 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (parallel [
            (set (reg/f:DI 101 [ D.25522 ])
                (plus:DI (reg:DI 100 [ D.25518 ])
                    (reg/f:DI 545)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:91 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 545)
        (expr_list:REG_DEAD (reg:DI 100 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 24 [0x18])) [0 out_data+0 S8 A64])
                        (reg:DI 100 [ D.25518 ]))
                    (nil))))))
(insn 66 65 67 5 (set (reg:SI 546)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:91 90 {*movsi_internal}
     (nil))
(insn 67 66 68 5 (set (reg:DI 102 [ D.25518 ])
        (sign_extend:DI (reg:SI 546))) ge2fitman_fmtext_o.cpp:91 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 546)
        (nil)))
(insn 68 67 69 5 (parallel [
            (set (reg:DI 103 [ D.25518 ])
                (ashift:DI (reg:DI 102 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:91 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 102 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 5 (set (reg:DI 5 di)
        (reg:DI 103 [ D.25518 ])) ge2fitman_fmtext_o.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103 [ D.25518 ])
        (nil)))
(call_insn 70 69 71 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:91 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 71 70 72 5 (set (reg/f:DI 547)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 547)
            (nil))))
(insn 72 71 73 5 (set (reg/f:DI 104 [ D.25523 ])
        (reg/f:DI 547)) ge2fitman_fmtext_o.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 547)
        (nil)))
(insn 73 72 74 5 (set (mem/f:DI (reg/f:DI 101 [ D.25522 ]) [0 *_78+0 S8 A64])
        (reg/f:DI 104 [ D.25523 ])) ge2fitman_fmtext_o.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.25523 ])
        (expr_list:REG_DEAD (reg/f:DI 101 [ D.25522 ])
            (nil))))
(insn 74 73 75 5 (set (reg:SI 548)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:92 90 {*movsi_internal}
     (nil))
(insn 75 74 76 5 (set (reg:DI 105 [ D.25518 ])
        (sign_extend:DI (reg:SI 548))) ge2fitman_fmtext_o.cpp:92 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 548)
        (nil)))
(insn 76 75 77 5 (parallel [
            (set (reg:DI 106 [ D.25518 ])
                (ashift:DI (reg:DI 105 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:92 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 5 (set (reg/f:DI 549)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 32 [0x20])) [0 scratch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:92 89 {*movdi_internal}
     (nil))
(insn 78 77 79 5 (parallel [
            (set (reg/f:DI 107 [ D.25522 ])
                (plus:DI (reg:DI 106 [ D.25518 ])
                    (reg/f:DI 549)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:92 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 549)
        (expr_list:REG_DEAD (reg:DI 106 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 32 [0x20])) [0 scratch_data+0 S8 A64])
                        (reg:DI 106 [ D.25518 ]))
                    (nil))))))
(insn 79 78 80 5 (set (reg:SI 550)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:92 90 {*movsi_internal}
     (nil))
(insn 80 79 81 5 (set (reg:DI 108 [ D.25518 ])
        (sign_extend:DI (reg:SI 550))) ge2fitman_fmtext_o.cpp:92 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 550)
        (nil)))
(insn 81 80 82 5 (parallel [
            (set (reg:DI 109 [ D.25518 ])
                (ashift:DI (reg:DI 108 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:92 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 5 (set (reg:DI 5 di)
        (reg:DI 109 [ D.25518 ])) ge2fitman_fmtext_o.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.25518 ])
        (nil)))
(call_insn 83 82 84 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:92 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 5 (set (reg/f:DI 551)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 551)
            (nil))))
(insn 85 84 86 5 (set (reg/f:DI 110 [ D.25523 ])
        (reg/f:DI 551)) ge2fitman_fmtext_o.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 551)
        (nil)))
(insn 86 85 87 5 (set (mem/f:DI (reg/f:DI 107 [ D.25522 ]) [0 *_87+0 S8 A64])
        (reg/f:DI 110 [ D.25523 ])) ge2fitman_fmtext_o.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.25523 ])
        (expr_list:REG_DEAD (reg/f:DI 107 [ D.25522 ])
            (nil))))
(insn 87 86 88 5 (set (reg:SI 552)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:94 90 {*movsi_internal}
     (nil))
(insn 88 87 89 5 (set (reg:DI 111 [ D.25518 ])
        (sign_extend:DI (reg:SI 552))) ge2fitman_fmtext_o.cpp:94 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 552)
        (nil)))
(insn 89 88 90 5 (parallel [
            (set (reg:DI 112 [ D.25518 ])
                (ashift:DI (reg:DI 111 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:94 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 111 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 5 (set (reg/f:DI 553)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:94 89 {*movdi_internal}
     (nil))
(insn 91 90 92 5 (parallel [
            (set (reg/f:DI 113 [ D.25524 ])
                (plus:DI (reg:DI 112 [ D.25518 ])
                    (reg/f:DI 553)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:94 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 553)
        (expr_list:REG_DEAD (reg:DI 112 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 112 [ D.25518 ]))
                    (nil))))))
(insn 92 91 93 5 (set (reg:SI 554)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:94 90 {*movsi_internal}
     (nil))
(insn 93 92 94 5 (set (reg:DI 114 [ D.25518 ])
        (sign_extend:DI (reg:SI 554))) ge2fitman_fmtext_o.cpp:94 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 554)
        (nil)))
(insn 94 93 95 5 (parallel [
            (set (reg:DI 115 [ D.25518 ])
                (ashift:DI (reg:DI 114 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:94 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 5 (set (reg:DI 5 di)
        (reg:DI 115 [ D.25518 ])) ge2fitman_fmtext_o.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ D.25518 ])
        (nil)))
(call_insn 96 95 97 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:94 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 97 96 98 5 (set (reg/f:DI 555)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 555)
            (nil))))
(insn 98 97 99 5 (set (reg/f:DI 116 [ D.25523 ])
        (reg/f:DI 555)) ge2fitman_fmtext_o.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 555)
        (nil)))
(insn 99 98 100 5 (set (mem/f/j:DI (reg/f:DI 113 [ D.25524 ]) [0 _96->fl+0 S8 A64])
        (reg/f:DI 116 [ D.25523 ])) ge2fitman_fmtext_o.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.25523 ])
        (expr_list:REG_DEAD (reg/f:DI 113 [ D.25524 ])
            (nil))))
(insn 100 99 101 5 (set (reg:SI 556)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:95 90 {*movsi_internal}
     (nil))
(insn 101 100 102 5 (set (reg:DI 117 [ D.25518 ])
        (sign_extend:DI (reg:SI 556))) ge2fitman_fmtext_o.cpp:95 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 556)
        (nil)))
(insn 102 101 103 5 (parallel [
            (set (reg:DI 118 [ D.25518 ])
                (ashift:DI (reg:DI 117 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:95 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 5 (set (reg/f:DI 557)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:95 89 {*movdi_internal}
     (nil))
(insn 104 103 105 5 (parallel [
            (set (reg/f:DI 119 [ D.25525 ])
                (plus:DI (reg:DI 118 [ D.25518 ])
                    (reg/f:DI 557)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:95 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 557)
        (expr_list:REG_DEAD (reg:DI 118 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 118 [ D.25518 ]))
                    (nil))))))
(insn 105 104 106 5 (set (reg:SI 558)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:95 90 {*movsi_internal}
     (nil))
(insn 106 105 107 5 (set (reg:DI 120 [ D.25518 ])
        (sign_extend:DI (reg:SI 558))) ge2fitman_fmtext_o.cpp:95 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 558)
        (nil)))
(insn 107 106 108 5 (parallel [
            (set (reg:DI 121 [ D.25518 ])
                (ashift:DI (reg:DI 120 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:95 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 5 (set (reg:DI 5 di)
        (reg:DI 121 [ D.25518 ])) ge2fitman_fmtext_o.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121 [ D.25518 ])
        (nil)))
(call_insn 109 108 110 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:95 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 110 109 111 5 (set (reg/f:DI 559)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 559)
            (nil))))
(insn 111 110 112 5 (set (reg/f:DI 122 [ D.25523 ])
        (reg/f:DI 559)) ge2fitman_fmtext_o.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 559)
        (nil)))
(insn 112 111 113 5 (set (mem/f/j:DI (reg/f:DI 119 [ D.25525 ]) [0 _105->fl+0 S8 A64])
        (reg/f:DI 122 [ D.25523 ])) ge2fitman_fmtext_o.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.25523 ])
        (expr_list:REG_DEAD (reg/f:DI 119 [ D.25525 ])
            (nil))))
(insn 113 112 114 5 (set (reg:SI 560)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:98 90 {*movsi_internal}
     (nil))
(insn 114 113 115 5 (set (reg:DI 123 [ D.25518 ])
        (sign_extend:DI (reg:SI 560))) ge2fitman_fmtext_o.cpp:98 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 560)
        (nil)))
(insn 115 114 116 5 (parallel [
            (set (reg:DI 124 [ D.25518 ])
                (ashift:DI (reg:DI 123 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 5 (set (reg/f:DI 561)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:98 89 {*movdi_internal}
     (nil))
(insn 117 116 118 5 (parallel [
            (set (reg/f:DI 125 [ D.25524 ])
                (plus:DI (reg:DI 124 [ D.25518 ])
                    (reg/f:DI 561)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 561)
        (expr_list:REG_DEAD (reg:DI 124 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 124 [ D.25518 ]))
                    (nil))))))
(insn 118 117 119 5 (set (reg:SI 562)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:98 90 {*movsi_internal}
     (nil))
(insn 119 118 120 5 (set (reg:DI 126 [ D.25518 ])
        (sign_extend:DI (reg:SI 562))) ge2fitman_fmtext_o.cpp:98 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 562)
        (nil)))
(insn 120 119 121 5 (parallel [
            (set (reg:DI 127 [ D.25518 ])
                (ashift:DI (reg:DI 126 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 120 122 5 (set (reg:DI 5 di)
        (reg:DI 127 [ D.25518 ])) ge2fitman_fmtext_o.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ D.25518 ])
        (nil)))
(call_insn 122 121 123 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:98 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 123 122 124 5 (set (reg/f:DI 563)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 563)
            (nil))))
(insn 124 123 125 5 (set (reg/f:DI 128 [ D.25523 ])
        (reg/f:DI 563)) ge2fitman_fmtext_o.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 563)
        (nil)))
(insn 125 124 126 5 (set (mem/f/j:DI (reg/f:DI 125 [ D.25524 ]) [0 _113->lo+0 S8 A64])
        (reg/f:DI 128 [ D.25523 ])) ge2fitman_fmtext_o.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.25523 ])
        (expr_list:REG_DEAD (reg/f:DI 125 [ D.25524 ])
            (nil))))
(insn 126 125 127 5 (set (reg:SI 564)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:99 90 {*movsi_internal}
     (nil))
(insn 127 126 128 5 (set (reg:DI 129 [ D.25518 ])
        (sign_extend:DI (reg:SI 564))) ge2fitman_fmtext_o.cpp:99 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 564)
        (nil)))
(insn 128 127 129 5 (parallel [
            (set (reg:DI 130 [ D.25518 ])
                (ashift:DI (reg:DI 129 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:99 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 5 (set (reg/f:DI 565)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:99 89 {*movdi_internal}
     (nil))
(insn 130 129 131 5 (parallel [
            (set (reg/f:DI 131 [ D.25525 ])
                (plus:DI (reg:DI 130 [ D.25518 ])
                    (reg/f:DI 565)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:99 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 565)
        (expr_list:REG_DEAD (reg:DI 130 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 130 [ D.25518 ]))
                    (nil))))))
(insn 131 130 132 5 (set (reg:SI 566)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32])) ge2fitman_fmtext_o.cpp:99 90 {*movsi_internal}
     (nil))
(insn 132 131 133 5 (set (reg:DI 132 [ D.25518 ])
        (sign_extend:DI (reg:SI 566))) ge2fitman_fmtext_o.cpp:99 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 566)
        (nil)))
(insn 133 132 134 5 (parallel [
            (set (reg:DI 133 [ D.25518 ])
                (ashift:DI (reg:DI 132 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:99 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 132 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 5 (set (reg:DI 5 di)
        (reg:DI 133 [ D.25518 ])) ge2fitman_fmtext_o.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133 [ D.25518 ])
        (nil)))
(call_insn 135 134 136 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:99 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 5 (set (reg/f:DI 567)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 567)
            (nil))))
(insn 137 136 138 5 (set (reg/f:DI 134 [ D.25523 ])
        (reg/f:DI 567)) ge2fitman_fmtext_o.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 567)
        (nil)))
(insn 138 137 139 5 (set (mem/f/j:DI (reg/f:DI 131 [ D.25525 ]) [0 _121->lo+0 S8 A64])
        (reg/f:DI 134 [ D.25523 ])) ge2fitman_fmtext_o.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ D.25523 ])
        (expr_list:REG_DEAD (reg/f:DI 131 [ D.25525 ])
            (nil))))
(insn 139 138 171 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:104 90 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 568
(code_label 171 139 140 6 5 "" [1 uses])
(note 140 171 141 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 6 (set (reg:SI 568)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:104 90 {*movsi_internal}
     (nil))
(insn 142 141 143 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 568)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 out_data_size+0 S4 A32]))) ge2fitman_fmtext_o.cpp:104 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 568)
        (nil)))
(jump_insn 143 142 144 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) ge2fitman_fmtext_o.cpp:104 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 174)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 569 570 571 572 573 574 575 576
(note 144 143 145 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 7 (set (reg:SI 569)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:105 90 {*movsi_internal}
     (nil))
(insn 146 145 147 7 (set (reg:DI 135 [ D.25518 ])
        (sign_extend:DI (reg:SI 569))) ge2fitman_fmtext_o.cpp:105 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 569)
        (nil)))
(insn 147 146 148 7 (parallel [
            (set (reg:DI 136 [ D.25518 ])
                (ashift:DI (reg:DI 135 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:105 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 148 147 149 7 (set (reg/f:DI 570)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:105 89 {*movdi_internal}
     (nil))
(insn 149 148 150 7 (parallel [
            (set (reg/f:DI 137 [ D.25525 ])
                (plus:DI (reg:DI 136 [ D.25518 ])
                    (reg/f:DI 570)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 570)
        (expr_list:REG_DEAD (reg:DI 136 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 136 [ D.25518 ]))
                    (nil))))))
(insn 150 149 151 7 (set (reg/f:DI 138 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 137 [ D.25525 ]) [0 _130->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ D.25525 ])
        (nil)))
(insn 151 150 152 7 (set (reg:SI 571)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:105 90 {*movsi_internal}
     (nil))
(insn 152 151 153 7 (set (reg:DI 139 [ D.25518 ])
        (sign_extend:DI (reg:SI 571))) ge2fitman_fmtext_o.cpp:105 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 571)
        (nil)))
(insn 153 152 154 7 (parallel [
            (set (reg:DI 140 [ D.25518 ])
                (ashift:DI (reg:DI 139 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:105 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 139 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 7 (parallel [
            (set (reg/f:DI 141 [ D.25526 ])
                (plus:DI (reg/f:DI 138 [ D.25526 ])
                    (reg:DI 140 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 138 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 155 154 156 7 (set (reg:SF 572)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:105 129 {*movsf_internal}
     (nil))
(insn 156 155 157 7 (set (mem:SF (reg/f:DI 141 [ D.25526 ]) [0 *_134+0 S4 A32])
        (reg:SF 572)) ge2fitman_fmtext_o.cpp:105 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 572)
        (expr_list:REG_DEAD (reg/f:DI 141 [ D.25526 ])
            (nil))))
(insn 157 156 158 7 (set (reg:SI 573)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:106 90 {*movsi_internal}
     (nil))
(insn 158 157 159 7 (set (reg:DI 142 [ D.25518 ])
        (sign_extend:DI (reg:SI 573))) ge2fitman_fmtext_o.cpp:106 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 573)
        (nil)))
(insn 159 158 160 7 (parallel [
            (set (reg:DI 143 [ D.25518 ])
                (ashift:DI (reg:DI 142 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:106 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 160 159 161 7 (set (reg/f:DI 574)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:106 89 {*movdi_internal}
     (nil))
(insn 161 160 162 7 (parallel [
            (set (reg/f:DI 144 [ D.25525 ])
                (plus:DI (reg:DI 143 [ D.25518 ])
                    (reg/f:DI 574)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:106 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 574)
        (expr_list:REG_DEAD (reg:DI 143 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 143 [ D.25518 ]))
                    (nil))))))
(insn 162 161 163 7 (set (reg/f:DI 145 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 144 [ D.25525 ]) [0 _138->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.25525 ])
        (nil)))
(insn 163 162 164 7 (set (reg:SI 575)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:106 90 {*movsi_internal}
     (nil))
(insn 164 163 165 7 (set (reg:DI 146 [ D.25527 ])
        (sign_extend:DI (reg:SI 575))) ge2fitman_fmtext_o.cpp:106 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 575)
        (nil)))
(insn 165 164 166 7 (parallel [
            (set (reg:DI 147 [ D.25527 ])
                (plus:DI (reg:DI 146 [ D.25527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:106 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 7 (parallel [
            (set (reg:DI 148 [ D.25527 ])
                (ashift:DI (reg:DI 147 [ D.25527 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:106 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 147 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 7 (parallel [
            (set (reg/f:DI 149 [ D.25526 ])
                (plus:DI (reg/f:DI 145 [ D.25526 ])
                    (reg:DI 148 [ D.25527 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:106 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ D.25527 ])
        (expr_list:REG_DEAD (reg/f:DI 145 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 168 167 169 7 (set (reg:SF 576)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:106 129 {*movsf_internal}
     (nil))
(insn 169 168 170 7 (set (mem:SF (reg/f:DI 149 [ D.25526 ]) [0 *_143+0 S4 A32])
        (reg:SF 576)) ge2fitman_fmtext_o.cpp:106 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 576)
        (expr_list:REG_DEAD (reg/f:DI 149 [ D.25526 ])
            (nil))))
(insn 170 169 1207 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:104 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1207 170 1208 7 (set (pc)
        (label_ref 171)) ge2fitman_fmtext_o.cpp:104 654 {jump}
     (nil)
 -> 171)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1208 1207 174)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 150 151 577
(code_label 174 1208 175 8 4 "" [1 uses])
(note 175 174 176 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 8 (set (reg/f:DI 577)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:110 89 {*movdi_internal}
     (nil))
(insn 177 176 178 8 (parallel [
            (set (reg/f:DI 150 [ D.25528 ])
                (plus:DI (reg/f:DI 577)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:110 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 577)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 178 177 179 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7c3720e7e0 *.LC1>)) ge2fitman_fmtext_o.cpp:110 89 {*movdi_internal}
     (nil))
(insn 179 178 180 8 (set (reg:DI 5 di)
        (reg/f:DI 150 [ D.25528 ])) ge2fitman_fmtext_o.cpp:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150 [ D.25528 ])
        (nil)))
(call_insn/i 180 179 181 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:110 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 181 180 182 8 (set (reg:SI 151 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 182 181 183 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:110 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 151 [ D.25517 ])
        (nil)))
(jump_insn 183 182 184 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) ge2fitman_fmtext_o.cpp:110 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 193)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 152 153 578
(note 184 183 185 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 9 (set (reg/f:DI 578)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:111 89 {*movdi_internal}
     (nil))
(insn 186 185 187 9 (parallel [
            (set (reg/f:DI 152 [ D.25528 ])
                (plus:DI (reg/f:DI 578)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:111 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 578)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 187 186 188 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7c3720e870 *.LC2>)) ge2fitman_fmtext_o.cpp:111 89 {*movdi_internal}
     (nil))
(insn 188 187 189 9 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.25528 ])) ge2fitman_fmtext_o.cpp:111 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.25528 ])
        (nil)))
(call_insn/i 189 188 190 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:111 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 190 189 191 9 (set (reg:SI 153 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:111 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 191 190 192 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:110 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 153 [ D.25517 ])
        (nil)))
(jump_insn 192 191 193 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) ge2fitman_fmtext_o.cpp:110 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 198)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 193 192 194 10 6 "" [1 uses])
(note 194 193 195 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 1209 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 39984 [0x9c30])) ge2fitman_fmtext_o.cpp:112 89 {*movdi_internal}
     (nil))
(jump_insn 1209 195 1210 10 (set (pc)
        (label_ref 280)) ge2fitman_fmtext_o.cpp:112 654 {jump}
     (nil)
 -> 280)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1210 1209 198)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 154 155 579
(code_label 198 1210 199 11 7 "" [1 uses])
(note 199 198 200 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 11 (set (reg/f:DI 579)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:113 89 {*movdi_internal}
     (nil))
(insn 201 200 202 11 (parallel [
            (set (reg/f:DI 154 [ D.25528 ])
                (plus:DI (reg/f:DI 579)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:113 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 579)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 202 201 203 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7c3720e900 *.LC3>)) ge2fitman_fmtext_o.cpp:113 89 {*movdi_internal}
     (nil))
(insn 203 202 204 11 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.25528 ])) ge2fitman_fmtext_o.cpp:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ D.25528 ])
        (nil)))
(call_insn/i 204 203 205 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:113 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 205 204 206 11 (set (reg:SI 155 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:113 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 206 205 207 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:113 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 155 [ D.25517 ])
        (nil)))
(jump_insn 207 206 208 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) ge2fitman_fmtext_o.cpp:113 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 217)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 156 157 580
(note 208 207 209 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 12 (set (reg/f:DI 580)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:114 89 {*movdi_internal}
     (nil))
(insn 210 209 211 12 (parallel [
            (set (reg/f:DI 156 [ D.25528 ])
                (plus:DI (reg/f:DI 580)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:114 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 580)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 211 210 212 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7c3720e990 *.LC4>)) ge2fitman_fmtext_o.cpp:114 89 {*movdi_internal}
     (nil))
(insn 212 211 213 12 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.25528 ])) ge2fitman_fmtext_o.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156 [ D.25528 ])
        (nil)))
(call_insn/i 213 212 214 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:114 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 214 213 215 12 (set (reg:SI 157 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:114 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 215 214 216 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:113 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 157 [ D.25517 ])
        (nil)))
(jump_insn 216 215 217 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) ge2fitman_fmtext_o.cpp:113 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 222)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 217 216 218 13 9 "" [1 uses])
(note 218 217 219 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 1211 13 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 60464 [0xec30])) ge2fitman_fmtext_o.cpp:115 89 {*movdi_internal}
     (nil))
(jump_insn 1211 219 1212 13 (set (pc)
        (label_ref 280)) ge2fitman_fmtext_o.cpp:115 654 {jump}
     (nil)
 -> 280)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1212 1211 222)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 158 159 581
(code_label 222 1212 223 14 10 "" [1 uses])
(note 223 222 224 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 14 (set (reg/f:DI 581)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:116 89 {*movdi_internal}
     (nil))
(insn 225 224 226 14 (parallel [
            (set (reg/f:DI 158 [ D.25528 ])
                (plus:DI (reg/f:DI 581)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:116 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 581)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 226 225 227 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7c3720ea20 *.LC5>)) ge2fitman_fmtext_o.cpp:116 89 {*movdi_internal}
     (nil))
(insn 227 226 228 14 (set (reg:DI 5 di)
        (reg/f:DI 158 [ D.25528 ])) ge2fitman_fmtext_o.cpp:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.25528 ])
        (nil)))
(call_insn/i 228 227 229 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:116 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 229 228 230 14 (set (reg:SI 159 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:116 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 230 229 231 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:116 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 159 [ D.25517 ])
        (nil)))
(jump_insn 231 230 232 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) ge2fitman_fmtext_o.cpp:116 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 236)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 232 231 233 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 1213 15 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 61464 [0xf018])) ge2fitman_fmtext_o.cpp:117 89 {*movdi_internal}
     (nil))
(jump_insn 1213 233 1214 15 (set (pc)
        (label_ref 280)) 654 {jump}
     (nil)
 -> 280)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1214 1213 236)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 160 161 582
(code_label 236 1214 237 16 11 "" [1 uses])
(note 237 236 238 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 16 (set (reg/f:DI 582)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:118 89 {*movdi_internal}
     (nil))
(insn 239 238 240 16 (parallel [
            (set (reg/f:DI 160 [ D.25528 ])
                (plus:DI (reg/f:DI 582)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:118 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 582)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 240 239 241 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7c3720eab0 *.LC6>)) ge2fitman_fmtext_o.cpp:118 89 {*movdi_internal}
     (nil))
(insn 241 240 242 16 (set (reg:DI 5 di)
        (reg/f:DI 160 [ D.25528 ])) ge2fitman_fmtext_o.cpp:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.25528 ])
        (nil)))
(call_insn/i 242 241 243 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:118 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 243 242 244 16 (set (reg:SI 161 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:118 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 244 243 245 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:118 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 161 [ D.25517 ])
        (nil)))
(jump_insn 245 244 246 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) ge2fitman_fmtext_o.cpp:118 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 250)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 246 245 247 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 1215 17 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 66072 [0x10218])) ge2fitman_fmtext_o.cpp:120 89 {*movdi_internal}
     (nil))
(jump_insn 1215 247 1216 17 (set (pc)
        (label_ref 280)) 654 {jump}
     (nil)
 -> 280)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1216 1215 250)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 162 163 583
(code_label 250 1216 251 18 12 "" [1 uses])
(note 251 250 252 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 18 (set (reg/f:DI 583)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:121 89 {*movdi_internal}
     (nil))
(insn 253 252 254 18 (parallel [
            (set (reg/f:DI 162 [ D.25528 ])
                (plus:DI (reg/f:DI 583)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:121 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 583)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 254 253 255 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7c3720eb40 *.LC7>)) ge2fitman_fmtext_o.cpp:121 89 {*movdi_internal}
     (nil))
(insn 255 254 256 18 (set (reg:DI 5 di)
        (reg/f:DI 162 [ D.25528 ])) ge2fitman_fmtext_o.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 162 [ D.25528 ])
        (nil)))
(call_insn/i 256 255 257 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:121 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 257 256 258 18 (set (reg:SI 163 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:121 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 258 257 259 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:121 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 163 [ D.25517 ])
        (nil)))
(jump_insn 259 258 260 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) ge2fitman_fmtext_o.cpp:121 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 266)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 260 259 261 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7c3720eb40 *.LC7>)) ge2fitman_fmtext_o.cpp:122 89 {*movdi_internal}
     (nil))
(call_insn 262 261 263 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:122 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 263 262 1217 19 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_fmtext_o.cpp:126 89 {*movdi_internal}
     (nil))
(jump_insn 1217 263 1218 19 (set (pc)
        (label_ref 280)) 654 {jump}
     (nil)
 -> 280)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1218 1217 266)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 164 165 584
(code_label 266 1218 267 20 13 "" [1 uses])
(note 267 266 268 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 20 (set (reg/f:DI 584)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:128 89 {*movdi_internal}
     (nil))
(insn 269 268 270 20 (parallel [
            (set (reg/f:DI 164 [ D.25528 ])
                (plus:DI (reg/f:DI 584)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:128 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 584)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 270 269 271 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7c3720ebd0 *.LC8>)) ge2fitman_fmtext_o.cpp:128 89 {*movdi_internal}
     (nil))
(insn 271 270 272 20 (set (reg:DI 5 di)
        (reg/f:DI 164 [ D.25528 ])) ge2fitman_fmtext_o.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 164 [ D.25528 ])
        (nil)))
(call_insn/i 272 271 273 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:128 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 273 272 274 20 (set (reg:SI 165 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:128 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 274 273 275 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:128 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 165 [ D.25517 ])
        (nil)))
(jump_insn 275 274 276 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) ge2fitman_fmtext_o.cpp:128 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 280)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 276 275 277 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7c3720ebd0 *.LC8>)) ge2fitman_fmtext_o.cpp:129 89 {*movdi_internal}
     (nil))
(call_insn 278 277 279 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:129 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 279 278 280 21 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_fmtext_o.cpp:130 89 {*movdi_internal}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              10 [100.0%] 
;;              13 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;;              20
;;              19 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 166 167 585
(code_label 280 279 281 22 8 "" [6 uses])
(note 281 280 282 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 22 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_fmtext_o.cpp:141 89 {*movdi_internal}
     (nil))
(insn 283 282 284 22 (set (reg/f:DI 585)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:143 89 {*movdi_internal}
     (nil))
(insn 284 283 285 22 (parallel [
            (set (reg/f:DI 166 [ D.25528 ])
                (plus:DI (reg/f:DI 585)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:143 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 585)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 285 284 286 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7c3720ebd0 *.LC8>)) ge2fitman_fmtext_o.cpp:143 89 {*movdi_internal}
     (nil))
(insn 286 285 287 22 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.25528 ])) ge2fitman_fmtext_o.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166 [ D.25528 ])
        (nil)))
(call_insn/i 287 286 288 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7c3898f360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:143 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 288 287 289 22 (set (reg:SI 167 [ D.25517 ])
        (reg:SI 0 ax)) ge2fitman_fmtext_o.cpp:143 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 289 288 290 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.25517 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:143 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 167 [ D.25517 ])
        (nil)))
(jump_insn 290 289 291 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) ge2fitman_fmtext_o.cpp:143 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 295)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 291 290 292 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 23 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
        (const_int 145908 [0x239f4])) ge2fitman_fmtext_o.cpp:144 89 {*movdi_internal}
     (nil))
(insn 293 292 294 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f7c3720ec60 *.LC9>)) ge2fitman_fmtext_o.cpp:145 89 {*movdi_internal}
     (nil))
(call_insn 294 293 295 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604
(code_label 295 294 296 24 14 "" [1 uses])
(note 296 295 297 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 24 (set (reg:SI 586)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:162 90 {*movsi_internal}
     (nil))
(insn 298 297 299 24 (set (reg:DI 168 [ D.25518 ])
        (sign_extend:DI (reg:SI 586))) ge2fitman_fmtext_o.cpp:162 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 586)
        (nil)))
(insn 299 298 300 24 (parallel [
            (set (reg:DI 169 [ D.25518 ])
                (ashift:DI (reg:DI 168 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:162 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 300 299 301 24 (set (reg/f:DI 587)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:162 89 {*movdi_internal}
     (nil))
(insn 301 300 302 24 (parallel [
            (set (reg/f:DI 170 [ D.25520 ])
                (plus:DI (reg:DI 169 [ D.25518 ])
                    (reg/f:DI 587)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 587)
        (expr_list:REG_DEAD (reg:DI 169 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 169 [ D.25518 ]))
                    (nil))))))
(insn 302 301 303 24 (set (reg:DI 171 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 170 [ D.25520 ])
                (const_int 24 [0x18])) [0 _178->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 170 [ D.25520 ])
        (nil)))
(insn 303 302 304 24 (set (reg:SI 588)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:162 90 {*movsi_internal}
     (nil))
(insn 304 303 305 24 (set (reg:DI 172 [ D.25518 ])
        (sign_extend:DI (reg:SI 588))) ge2fitman_fmtext_o.cpp:162 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 588)
        (nil)))
(insn 305 304 306 24 (parallel [
            (set (reg:DI 173 [ D.25518 ])
                (ashift:DI (reg:DI 172 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:162 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 172 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 306 305 307 24 (set (reg/f:DI 589)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:162 89 {*movdi_internal}
     (nil))
(insn 307 306 308 24 (parallel [
            (set (reg/f:DI 174 [ D.25520 ])
                (plus:DI (reg:DI 173 [ D.25518 ])
                    (reg/f:DI 589)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:162 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 589)
        (expr_list:REG_DEAD (reg:DI 173 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 173 [ D.25518 ]))
                    (nil))))))
(insn 308 307 309 24 (set (reg:DI 175 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 174 [ D.25520 ])
                (const_int 16 [0x10])) [0 _182->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ D.25520 ])
        (nil)))
(insn 309 308 310 24 (parallel [
            (set (reg:DI 590)
                (mult:DI (reg:DI 171 [ D.25521 ])
                    (reg:DI 175 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:162 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 175 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 171 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 310 309 311 24 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64])
        (reg:DI 590)) ge2fitman_fmtext_o.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 590)
        (nil)))
(insn 311 310 312 24 (set (reg:SI 591)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:167 90 {*movsi_internal}
     (nil))
(insn 312 311 313 24 (set (reg:DI 176 [ D.25518 ])
        (sign_extend:DI (reg:SI 591))) ge2fitman_fmtext_o.cpp:167 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 591)
        (nil)))
(insn 313 312 314 24 (parallel [
            (set (reg:DI 177 [ D.25518 ])
                (ashift:DI (reg:DI 176 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:167 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 176 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 314 313 315 24 (set (reg/f:DI 592)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:167 89 {*movdi_internal}
     (nil))
(insn 315 314 316 24 (parallel [
            (set (reg/f:DI 178 [ D.25520 ])
                (plus:DI (reg:DI 177 [ D.25518 ])
                    (reg/f:DI 592)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:167 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 592)
        (expr_list:REG_DEAD (reg:DI 177 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 177 [ D.25518 ]))
                    (nil))))))
(insn 316 315 317 24 (set (reg:DI 179 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 178 [ D.25520 ])
                (const_int 24 [0x18])) [0 _187->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178 [ D.25520 ])
        (nil)))
(insn 317 316 318 24 (set (reg:SI 593)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:167 90 {*movsi_internal}
     (nil))
(insn 318 317 319 24 (set (reg:DI 180 [ D.25518 ])
        (sign_extend:DI (reg:SI 593))) ge2fitman_fmtext_o.cpp:167 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 593)
        (nil)))
(insn 319 318 320 24 (parallel [
            (set (reg:DI 181 [ D.25518 ])
                (ashift:DI (reg:DI 180 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:167 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 180 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 320 319 321 24 (set (reg/f:DI 594)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:167 89 {*movdi_internal}
     (nil))
(insn 321 320 322 24 (parallel [
            (set (reg/f:DI 182 [ D.25520 ])
                (plus:DI (reg:DI 181 [ D.25518 ])
                    (reg/f:DI 594)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:167 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 594)
        (expr_list:REG_DEAD (reg:DI 181 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 181 [ D.25518 ]))
                    (nil))))))
(insn 322 321 323 24 (set (reg:DI 183 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 182 [ D.25520 ])
                (const_int 16 [0x10])) [0 _191->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ D.25520 ])
        (nil)))
(insn 323 322 324 24 (parallel [
            (set (reg:DI 184 [ D.25521 ])
                (mult:DI (reg:DI 179 [ D.25521 ])
                    (reg:DI 183 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:167 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 183 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 179 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 324 323 325 24 (set (reg:SI 595)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:168 90 {*movsi_internal}
     (nil))
(insn 325 324 326 24 (set (reg:DI 185 [ D.25518 ])
        (sign_extend:DI (reg:SI 595))) ge2fitman_fmtext_o.cpp:168 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 595)
        (nil)))
(insn 326 325 327 24 (set (reg:DI 596)
        (reg:DI 185 [ D.25518 ])) ge2fitman_fmtext_o.cpp:168 89 {*movdi_internal}
     (nil))
(insn 327 326 328 24 (parallel [
            (set (reg:DI 596)
                (ashift:DI (reg:DI 596)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:168 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 328 327 329 24 (parallel [
            (set (reg:DI 596)
                (plus:DI (reg:DI 596)
                    (reg:DI 185 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:168 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.25518 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 329 328 330 24 (parallel [
            (set (reg:DI 597)
                (ashift:DI (reg:DI 596)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:168 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 596)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 330 329 331 24 (set (reg:DI 596)
        (reg:DI 597)) ge2fitman_fmtext_o.cpp:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 597)
        (nil)))
(insn 331 330 332 24 (set (reg:DI 186 [ D.25518 ])
        (reg:DI 596)) ge2fitman_fmtext_o.cpp:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 596)
        (nil)))
(insn 332 331 333 24 (set (reg/f:DI 598)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:168 89 {*movdi_internal}
     (nil))
(insn 333 332 334 24 (parallel [
            (set (reg/f:DI 187 [ D.25529 ])
                (plus:DI (reg:DI 186 [ D.25518 ])
                    (reg/f:DI 598)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:168 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 598)
        (expr_list:REG_DEAD (reg:DI 186 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                        (reg:DI 186 [ D.25518 ]))
                    (nil))))))
(insn 334 333 335 24 (set (reg:SI 188 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 187 [ D.25529 ])
                (const_int 4 [0x4])) [0 _196->num_unsup_sets+0 S4 A32])) ge2fitman_fmtext_o.cpp:168 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.25529 ])
        (nil)))
(insn 335 334 336 24 (set (reg:DI 189 [ D.25521 ])
        (sign_extend:DI (reg:SI 188 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:168 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 188 [ D.25517 ])
        (nil)))
(insn 336 335 337 24 (parallel [
            (set (reg:DI 599)
                (mult:DI (reg:DI 184 [ D.25521 ])
                    (reg:DI 189 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:168 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 189 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 184 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 337 336 338 24 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 unsup_set_size+0 S8 A64])
        (reg:DI 599)) ge2fitman_fmtext_o.cpp:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 599)
        (nil)))
(insn 338 337 339 24 (set (reg:SI 600)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:174 90 {*movsi_internal}
     (nil))
(insn 339 338 340 24 (set (reg:DI 190 [ D.25518 ])
        (sign_extend:DI (reg:SI 600))) ge2fitman_fmtext_o.cpp:174 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 600)
        (nil)))
(insn 340 339 341 24 (set (reg:DI 601)
        (reg:DI 190 [ D.25518 ])) ge2fitman_fmtext_o.cpp:174 89 {*movdi_internal}
     (nil))
(insn 341 340 342 24 (parallel [
            (set (reg:DI 601)
                (ashift:DI (reg:DI 601)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:174 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 342 341 343 24 (parallel [
            (set (reg:DI 601)
                (plus:DI (reg:DI 601)
                    (reg:DI 190 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:174 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 190 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 190 [ D.25518 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 343 342 344 24 (parallel [
            (set (reg:DI 602)
                (ashift:DI (reg:DI 601)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:174 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 601)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 344 343 345 24 (set (reg:DI 601)
        (reg:DI 602)) ge2fitman_fmtext_o.cpp:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 602)
        (nil)))
(insn 345 344 346 24 (set (reg:DI 191 [ D.25518 ])
        (reg:DI 601)) ge2fitman_fmtext_o.cpp:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 601)
        (nil)))
(insn 346 345 347 24 (set (reg/f:DI 603)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:174 89 {*movdi_internal}
     (nil))
(insn 347 346 348 24 (parallel [
            (set (reg/f:DI 192 [ D.25529 ])
                (plus:DI (reg:DI 191 [ D.25518 ])
                    (reg/f:DI 603)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:174 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 603)
        (expr_list:REG_DEAD (reg:DI 191 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                        (reg:DI 191 [ D.25518 ]))
                    (nil))))))
(insn 348 347 349 24 (set (reg:SI 193 [ D.25517 ])
        (mem/j:SI (reg/f:DI 192 [ D.25529 ]) [0 _202->num_datasets+0 S4 A32])) ge2fitman_fmtext_o.cpp:174 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192 [ D.25529 ])
        (nil)))
(insn 349 348 350 24 (set (reg:SI 194 [ D.25530 ])
        (reg:SI 193 [ D.25517 ])) ge2fitman_fmtext_o.cpp:174 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 193 [ D.25517 ])
        (nil)))
(insn 350 349 351 24 (set (reg:DI 604)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:174 89 {*movdi_internal}
     (nil))
(insn 351 350 352 24 (set (reg:SI 195 [ D.25530 ])
        (subreg:SI (reg:DI 604) 0)) ge2fitman_fmtext_o.cpp:174 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 604)
        (nil)))
(insn 352 351 353 24 (parallel [
            (set (reg:SI 196 [ D.25530 ])
                (mult:SI (reg:SI 194 [ D.25530 ])
                    (reg:SI 195 [ D.25530 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:174 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 195 [ D.25530 ])
        (expr_list:REG_DEAD (reg:SI 194 [ D.25530 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 353 352 354 24 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 dataSizeChannel+0 S4 A32])
        (reg:SI 196 [ D.25530 ])) ge2fitman_fmtext_o.cpp:174 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196 [ D.25530 ])
        (nil)))
(insn 354 353 355 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:232 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 355 354 356 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 386)
            (pc))) ge2fitman_fmtext_o.cpp:232 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 386)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 197 198 199 605 606 607 608 609 610 611 612
(note 356 355 357 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 25 (set (reg/f:DI 605)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:233 89 {*movdi_internal}
     (nil))
(insn 358 357 359 25 (set (reg:SI 197 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 605)
                (const_int 508 [0x1fc])) [0 procpar_info_208(D)->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:233 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 605)
        (nil)))
(insn 359 358 360 25 (set (reg:DI 198 [ D.25518 ])
        (sign_extend:DI (reg:SI 197 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:233 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197 [ D.25517 ])
        (nil)))
(insn 360 359 361 25 (parallel [
            (set (reg:DI 199 [ D.25518 ])
                (ashift:DI (reg:DI 198 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:233 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 198 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 361 360 362 25 (set (reg:DI 5 di)
        (reg:DI 199 [ D.25518 ])) ge2fitman_fmtext_o.cpp:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199 [ D.25518 ])
        (nil)))
(call_insn 362 361 363 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:233 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 363 362 364 25 (set (reg/f:DI 606)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 606)
            (nil))))
(insn 364 363 365 25 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])
        (reg/f:DI 606)) ge2fitman_fmtext_o.cpp:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 606)
        (nil)))
(insn 365 364 366 25 (set (reg:DI 607)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 file+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (nil))
(insn 366 365 367 25 (set (reg:DI 608)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (nil))
(insn 367 366 368 25 (set (reg:DI 609)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (nil))
(insn 368 367 369 25 (set (reg:DI 610)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (nil))
(insn 369 368 370 25 (set (reg:DI 611)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (nil))
(insn 370 369 371 25 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 371 370 372 25 (set (reg:SI 612)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [0 swap_bytes+0 S4 A64])) ge2fitman_fmtext_o.cpp:240 90 {*movsi_internal}
     (nil))
(insn 372 371 373 25 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 612)) ge2fitman_fmtext_o.cpp:240 69 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 612)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 373 372 374 25 (set (reg:DI 38 r9)
        (reg:DI 607)) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 607)
        (nil)))
(insn 374 373 375 25 (set (reg:DI 37 r8)
        (reg:DI 608)) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 608)
        (nil)))
(insn 375 374 376 25 (set (reg:DI 2 cx)
        (reg:DI 609)) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 609)
        (nil)))
(insn 376 375 377 25 (set (reg:DI 1 dx)
        (reg:DI 610)) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 610)
        (nil)))
(insn 377 376 378 25 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (nil))
(insn 378 377 379 25 (set (reg:DI 5 di)
        (reg:DI 611)) ge2fitman_fmtext_o.cpp:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 611)
        (nil)))
(call_insn 379 378 380 25 (call (mem:QI (symbol_ref:DI ("_Z9get_phasePfPP8_IO_FILEP16Data_file_headerP13InFile_structlP7IOFilesiP12Procpar_info") [flags 0x3]  <function_decl 0x7f7c37522948 get_phase>) [0 get_phase S1 A8])
        (const_int 16 [0x10])) ge2fitman_fmtext_o.cpp:240 660 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 380 379 381 25 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:240 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 381 380 382 25 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -77 [0xffffffffffffffb3])) [0 phaseIt+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:241 93 {*movqi_internal}
     (nil))
(insn 382 381 383 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7c3720ecf0 *.LC10>)) ge2fitman_fmtext_o.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn 383 382 1219 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:242 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1219 383 1220 25 (set (pc)
        (label_ref 478)) 654 {jump}
     (nil)
 -> 478)
;;  succ:       31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1220 1219 386)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 386 1220 387 26 15 "" [1 uses])
(note 387 386 388 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:249 7 {*cmpsi_1}
     (nil))
(jump_insn 389 388 390 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) ge2fitman_fmtext_o.cpp:249 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 433)
;;  succ:       27 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 200 613
(note 390 389 391 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 27 (set (reg/f:DI 613)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:249 89 {*movdi_internal}
     (nil))
(insn 392 391 393 27 (set (reg:SI 200 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 613)
                (const_int 508 [0x1fc])) [0 procpar_info_208(D)->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:249 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 613)
        (nil)))
(insn 393 392 394 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 200 [ D.25517 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:249 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 200 [ D.25517 ])
        (nil)))
(jump_insn 394 393 395 27 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) ge2fitman_fmtext_o.cpp:249 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 401)
;;  succ:       29
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 201 202 614
(note 395 394 396 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 28 (set (reg/f:DI 614)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:249 89 {*movdi_internal}
     (nil))
(insn 397 396 398 28 (parallel [
            (set (reg/f:DI 201 [ D.25531 ])
                (plus:DI (reg/f:DI 614)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:249 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 614)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 398 397 399 28 (set (reg:SI 202 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 201 [ D.25531 ])
                (const_int 508 [0x1fc])) [0 _221->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:249 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 201 [ D.25531 ])
        (nil)))
(insn 399 398 400 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 202 [ D.25517 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:249 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 202 [ D.25517 ])
        (nil)))
(jump_insn 400 399 401 28 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) ge2fitman_fmtext_o.cpp:249 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 433)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;;              28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 203 204 205 206 615 616 617 618 619 620 621 622
(code_label 401 400 402 29 18 "" [1 uses])
(note 402 401 403 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 29 (set (reg/f:DI 615)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:251 89 {*movdi_internal}
     (nil))
(insn 404 403 405 29 (parallel [
            (set (reg/f:DI 203 [ D.25531 ])
                (plus:DI (reg/f:DI 615)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:251 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 615)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                            (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 405 404 406 29 (set (reg:SI 204 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 203 [ D.25531 ])
                (const_int 508 [0x1fc])) [0 _223->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:251 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 203 [ D.25531 ])
        (nil)))
(insn 406 405 407 29 (set (reg:DI 205 [ D.25518 ])
        (sign_extend:DI (reg:SI 204 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:251 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 204 [ D.25517 ])
        (nil)))
(insn 407 406 408 29 (parallel [
            (set (reg:DI 206 [ D.25518 ])
                (ashift:DI (reg:DI 205 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:251 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 408 407 409 29 (set (reg:DI 5 di)
        (reg:DI 206 [ D.25518 ])) ge2fitman_fmtext_o.cpp:251 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206 [ D.25518 ])
        (nil)))
(call_insn 409 408 410 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:251 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 410 409 411 29 (set (reg/f:DI 616)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:251 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 616)
            (nil))))
(insn 411 410 412 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])
        (reg/f:DI 616)) ge2fitman_fmtext_o.cpp:251 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 616)
        (nil)))
(insn 412 411 413 29 (set (reg:DI 617)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 file+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (nil))
(insn 413 412 414 29 (set (reg:DI 618)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (nil))
(insn 414 413 415 29 (set (reg:DI 619)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (nil))
(insn 415 414 416 29 (set (reg:DI 620)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (nil))
(insn 416 415 417 29 (set (reg:DI 621)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (nil))
(insn 417 416 418 29 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 418 417 419 29 (set (reg:SI 622)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [0 swap_bytes+0 S4 A64])) ge2fitman_fmtext_o.cpp:253 90 {*movsi_internal}
     (nil))
(insn 419 418 420 29 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 622)) ge2fitman_fmtext_o.cpp:253 69 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 622)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 420 419 421 29 (set (reg:DI 38 r9)
        (reg:DI 617)) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 617)
        (nil)))
(insn 421 420 422 29 (set (reg:DI 37 r8)
        (reg:DI 618)) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 618)
        (nil)))
(insn 422 421 423 29 (set (reg:DI 2 cx)
        (reg:DI 619)) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 619)
        (nil)))
(insn 423 422 424 29 (set (reg:DI 1 dx)
        (reg:DI 620)) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 620)
        (nil)))
(insn 424 423 425 29 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (nil))
(insn 425 424 426 29 (set (reg:DI 5 di)
        (reg:DI 621)) ge2fitman_fmtext_o.cpp:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 621)
        (nil)))
(call_insn 426 425 427 29 (call (mem:QI (symbol_ref:DI ("_Z9get_phasePfPP8_IO_FILEP16Data_file_headerP13InFile_structlP7IOFilesiP12Procpar_info") [flags 0x3]  <function_decl 0x7f7c37522948 get_phase>) [0 get_phase S1 A8])
        (const_int 16 [0x10])) ge2fitman_fmtext_o.cpp:253 660 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 427 426 428 29 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:253 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 428 427 429 29 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -77 [0xffffffffffffffb3])) [0 phaseIt+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:254 93 {*movqi_internal}
     (nil))
(insn 429 428 430 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7c3720ecf0 *.LC10>)) ge2fitman_fmtext_o.cpp:255 89 {*movdi_internal}
     (nil))
(call_insn 430 429 1221 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:255 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1221 430 1222 29 (set (pc)
        (label_ref 478)) ge2fitman_fmtext_o.cpp:255 654 {jump}
     (nil)
 -> 478)
;;  succ:       31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1222 1221 433)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;;              28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 207 208 209 210 211 212 213 214 215 216 217 218 623 624 625 626 627 628 629 630 631 632 633 634
(code_label 433 1222 434 30 17 "" [2 uses])
(note 434 433 435 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 30 (set (reg:SI 623)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:261 90 {*movsi_internal}
     (nil))
(insn 436 435 437 30 (set (reg:DI 207 [ D.25518 ])
        (sign_extend:DI (reg:SI 623))) ge2fitman_fmtext_o.cpp:261 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 623)
        (nil)))
(insn 437 436 438 30 (parallel [
            (set (reg:DI 208 [ D.25518 ])
                (ashift:DI (reg:DI 207 [ D.25518 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:261 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 207 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 438 437 439 30 (set (reg/f:DI 624)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:261 89 {*movdi_internal}
     (nil))
(insn 439 438 440 30 (parallel [
            (set (reg/f:DI 209 [ D.25531 ])
                (plus:DI (reg:DI 208 [ D.25518 ])
                    (reg/f:DI 624)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:261 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 624)
        (expr_list:REG_DEAD (reg:DI 208 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 208 [ D.25518 ]))
                    (nil))))))
(insn 440 439 441 30 (set (reg:SI 210 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 209 [ D.25531 ])
                (const_int 508 [0x1fc])) [0 _234->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:261 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209 [ D.25531 ])
        (nil)))
(insn 441 440 442 30 (set (reg:DI 211 [ D.25518 ])
        (sign_extend:DI (reg:SI 210 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:261 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 210 [ D.25517 ])
        (nil)))
(insn 442 441 443 30 (parallel [
            (set (reg:DI 212 [ D.25518 ])
                (ashift:DI (reg:DI 211 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:261 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 211 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 443 442 444 30 (set (reg:DI 5 di)
        (reg:DI 212 [ D.25518 ])) ge2fitman_fmtext_o.cpp:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 212 [ D.25518 ])
        (nil)))
(call_insn 444 443 445 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:261 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 445 444 446 30 (set (reg/f:DI 625)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 625)
            (nil))))
(insn 446 445 447 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])
        (reg/f:DI 625)) ge2fitman_fmtext_o.cpp:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 625)
        (nil)))
(insn 447 446 448 30 (set (reg:SI 626)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:266 90 {*movsi_internal}
     (nil))
(insn 448 447 449 30 (set (reg:DI 213 [ D.25518 ])
        (sign_extend:DI (reg:SI 626))) ge2fitman_fmtext_o.cpp:266 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 626)
        (nil)))
(insn 449 448 450 30 (parallel [
            (set (reg:DI 214 [ D.25518 ])
                (ashift:DI (reg:DI 213 [ D.25518 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:266 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 213 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 450 449 451 30 (set (reg/f:DI 627)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:266 89 {*movdi_internal}
     (nil))
(insn 451 450 452 30 (parallel [
            (set (reg/f:DI 215 [ D.25531 ])
                (plus:DI (reg:DI 214 [ D.25518 ])
                    (reg/f:DI 627)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:266 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 627)
        (expr_list:REG_DEAD (reg:DI 214 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 214 [ D.25518 ]))
                    (nil))))))
(insn 452 451 453 30 (set (reg:SI 216 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 215 [ D.25531 ])
                (const_int 508 [0x1fc])) [0 _242->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:266 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 215 [ D.25531 ])
        (nil)))
(insn 453 452 454 30 (set (reg:DI 217 [ D.25518 ])
        (sign_extend:DI (reg:SI 216 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:266 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 216 [ D.25517 ])
        (nil)))
(insn 454 453 455 30 (parallel [
            (set (reg:DI 218 [ D.25518 ])
                (ashift:DI (reg:DI 217 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:266 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 217 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 455 454 456 30 (set (reg:DI 5 di)
        (reg:DI 218 [ D.25518 ])) ge2fitman_fmtext_o.cpp:266 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 218 [ D.25518 ])
        (nil)))
(call_insn 456 455 457 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:266 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 457 456 458 30 (set (reg/f:DI 628)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:266 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 628)
            (nil))))
(insn 458 457 459 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])
        (reg/f:DI 628)) ge2fitman_fmtext_o.cpp:266 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 628)
        (nil)))
(insn 459 458 460 30 (set (reg:DI 629)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 file+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (nil))
(insn 460 459 461 30 (set (reg:DI 630)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (nil))
(insn 461 460 462 30 (set (reg:DI 631)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (nil))
(insn 462 461 463 30 (set (reg:DI 632)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (nil))
(insn 463 462 464 30 (set (reg:DI 633)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (nil))
(insn 464 463 465 30 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 465 464 466 30 (set (reg:SI 634)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 40 [0x28])) [0 swap_bytes+0 S4 A64])) ge2fitman_fmtext_o.cpp:269 90 {*movsi_internal}
     (nil))
(insn 466 465 467 30 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 634)) ge2fitman_fmtext_o.cpp:269 69 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 634)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 467 466 468 30 (set (reg:DI 38 r9)
        (reg:DI 629)) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 629)
        (nil)))
(insn 468 467 469 30 (set (reg:DI 37 r8)
        (reg:DI 630)) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 630)
        (nil)))
(insn 469 468 470 30 (set (reg:DI 2 cx)
        (reg:DI 631)) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 631)
        (nil)))
(insn 470 469 471 30 (set (reg:DI 1 dx)
        (reg:DI 632)) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 632)
        (nil)))
(insn 471 470 472 30 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (nil))
(insn 472 471 473 30 (set (reg:DI 5 di)
        (reg:DI 633)) ge2fitman_fmtext_o.cpp:269 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 633)
        (nil)))
(call_insn 473 472 474 30 (call (mem:QI (symbol_ref:DI ("_Z9get_phasePfPP8_IO_FILEP16Data_file_headerP13InFile_structlP7IOFilesiP12Procpar_info") [flags 0x3]  <function_decl 0x7f7c37522948 get_phase>) [0 get_phase S1 A8])
        (const_int 16 [0x10])) ge2fitman_fmtext_o.cpp:269 660 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 474 473 475 30 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:269 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 475 474 476 30 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -77 [0xffffffffffffffb3])) [0 phaseIt+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:270 93 {*movqi_internal}
     (nil))
(insn 476 475 477 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7c3720ecf0 *.LC10>)) ge2fitman_fmtext_o.cpp:271 89 {*movdi_internal}
     (nil))
(call_insn 477 476 478 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:271 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;;              25 [100.0%] 
;;              29 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 478 477 479 31 16 "" [2 uses])
(note 479 478 480 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 1181 31 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:301 90 {*movsi_internal}
     (nil))
;;  succ:       32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;;              76 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 219 220 221 222 635 636
(code_label 1181 480 481 32 44 "" [1 uses])
(note 481 1181 482 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 32 (set (reg:SI 635)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:301 90 {*movsi_internal}
     (nil))
(insn 483 482 484 32 (set (reg:DI 219 [ D.25518 ])
        (sign_extend:DI (reg:SI 635))) ge2fitman_fmtext_o.cpp:301 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 635)
        (nil)))
(insn 484 483 485 32 (parallel [
            (set (reg:DI 220 [ D.25518 ])
                (ashift:DI (reg:DI 219 [ D.25518 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:301 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 485 484 486 32 (set (reg/f:DI 636)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:301 89 {*movdi_internal}
     (nil))
(insn 486 485 487 32 (parallel [
            (set (reg/f:DI 221 [ D.25531 ])
                (plus:DI (reg:DI 220 [ D.25518 ])
                    (reg/f:DI 636)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:301 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 636)
        (expr_list:REG_DEAD (reg:DI 220 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 220 [ D.25518 ]))
                    (nil))))))
(insn 487 486 488 32 (set (reg:SI 222 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 221 [ D.25531 ])
                (const_int 508 [0x1fc])) [0 _254->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:301 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 221 [ D.25531 ])
        (nil)))
(insn 488 487 489 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 222 [ D.25517 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32]))) ge2fitman_fmtext_o.cpp:301 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 222 [ D.25517 ])
        (nil)))
(jump_insn 489 488 490 32 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1186)
            (pc))) ge2fitman_fmtext_o.cpp:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1186)
;;  succ:       77
;;              33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 490 489 491 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:325 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 492 491 493 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 541)
            (pc))) ge2fitman_fmtext_o.cpp:325 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 541)
;;  succ:       34 (FALLTHRU)
;;              35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651
(note 493 492 494 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f7c3720ed80 *.LC11>)) ge2fitman_fmtext_o.cpp:326 89 {*movdi_internal}
     (nil))
(call_insn 495 494 496 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:326 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 496 495 497 34 (set (reg:DI 637)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:331 89 {*movdi_internal}
     (nil))
(insn 497 496 498 34 (set (reg:DI 638)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:331 89 {*movdi_internal}
     (nil))
(insn 498 497 499 34 (parallel [
            (set (reg:DI 223 [ D.25521 ])
                (plus:DI (reg:DI 637)
                    (reg:DI 638)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 638)
        (expr_list:REG_DEAD (reg:DI 637)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64]))
                    (nil))))))
(insn 499 498 500 34 (set (reg:DI 639)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 unsup_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:332 89 {*movdi_internal}
     (nil))
(insn 500 499 501 34 (parallel [
            (set (reg:DI 224 [ D.25521 ])
                (plus:DI (reg:DI 223 [ D.25521 ])
                    (reg:DI 639)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:332 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 639)
        (expr_list:REG_DEAD (reg:DI 223 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 223 [ D.25521 ])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 unsup_set_size+0 S8 A64]))
                    (nil))))))
(insn 501 500 502 34 (set (reg:SI 640)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 dataSizeChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:332 90 {*movsi_internal}
     (nil))
(insn 502 501 503 34 (parallel [
            (set (reg:SI 225 [ D.25517 ])
                (mult:SI (reg:SI 640)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:332 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 640)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 503 502 504 34 (set (reg:DI 226 [ D.25521 ])
        (sign_extend:DI (reg:SI 225 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:331 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225 [ D.25517 ])
        (nil)))
(insn 504 503 505 34 (parallel [
            (set (reg:DI 227 [ D.25521 ])
                (plus:DI (reg:DI 224 [ D.25521 ])
                    (reg:DI 226 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 226 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 224 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 505 504 506 34 (set (reg:SI 641)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:331 90 {*movsi_internal}
     (nil))
(insn 506 505 507 34 (set (reg:DI 228 [ D.25518 ])
        (sign_extend:DI (reg:SI 641))) ge2fitman_fmtext_o.cpp:331 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 641)
        (nil)))
(insn 507 506 508 34 (parallel [
            (set (reg:DI 229 [ D.25518 ])
                (ashift:DI (reg:DI 228 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:331 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 508 507 509 34 (set (reg/f:DI 642)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:331 89 {*movdi_internal}
     (nil))
(insn 509 508 510 34 (parallel [
            (set (reg/f:DI 230 [ D.25532 ])
                (plus:DI (reg:DI 229 [ D.25518 ])
                    (reg/f:DI 642)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 642)
        (expr_list:REG_DEAD (reg:DI 229 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])
                        (reg:DI 229 [ D.25518 ]))
                    (nil))))))
(insn 510 509 511 34 (set (reg/f:DI 231 [ D.25533 ])
        (mem/f:DI (reg/f:DI 230 [ D.25532 ]) [0 *_264+0 S8 A64])) ge2fitman_fmtext_o.cpp:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230 [ D.25532 ])
        (nil)))
(insn 511 510 512 34 (set (reg:SI 1 dx)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:332 90 {*movsi_internal}
     (nil))
(insn 512 511 513 34 (set (reg:DI 4 si)
        (reg:DI 227 [ D.25521 ])) ge2fitman_fmtext_o.cpp:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 227 [ D.25521 ])
        (nil)))
(insn 513 512 514 34 (set (reg:DI 5 di)
        (reg/f:DI 231 [ D.25533 ])) ge2fitman_fmtext_o.cpp:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 231 [ D.25533 ])
        (nil)))
(call_insn 514 513 515 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7c387db948 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:332 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 515 514 516 34 (set (reg:SI 643)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:337 90 {*movsi_internal}
     (nil))
(insn 516 515 517 34 (set (reg:DI 232 [ D.25518 ])
        (sign_extend:DI (reg:SI 643))) ge2fitman_fmtext_o.cpp:337 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 643)
        (nil)))
(insn 517 516 518 34 (set (reg:DI 644)
        (reg:DI 232 [ D.25518 ])) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (nil))
(insn 518 517 519 34 (parallel [
            (set (reg:DI 644)
                (ashift:DI (reg:DI 644)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 519 518 520 34 (parallel [
            (set (reg:DI 644)
                (plus:DI (reg:DI 644)
                    (reg:DI 232 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 232 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 232 [ D.25518 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 520 519 521 34 (parallel [
            (set (reg:DI 645)
                (ashift:DI (reg:DI 644)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 644)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 521 520 522 34 (set (reg:DI 644)
        (reg:DI 645)) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 645)
        (nil)))
(insn 522 521 523 34 (set (reg:DI 233 [ D.25518 ])
        (reg:DI 644)) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 644)
        (nil)))
(insn 523 522 524 34 (set (reg/f:DI 646)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (nil))
(insn 524 523 525 34 (parallel [
            (set (reg/f:DI 234 [ D.25529 ])
                (plus:DI (reg:DI 233 [ D.25518 ])
                    (reg/f:DI 646)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 646)
        (expr_list:REG_DEAD (reg:DI 233 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                        (reg:DI 233 [ D.25518 ]))
                    (nil))))))
(insn 525 524 526 34 (set (reg:SI 235 [ D.25517 ])
        (mem/j:SI (reg/f:DI 234 [ D.25529 ]) [0 _269->num_datasets+0 S4 A32])) ge2fitman_fmtext_o.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 234 [ D.25529 ])
        (nil)))
(insn 526 525 527 34 (set (reg:SI 647)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:337 90 {*movsi_internal}
     (nil))
(insn 527 526 528 34 (set (reg:DI 236 [ D.25518 ])
        (sign_extend:DI (reg:SI 647))) ge2fitman_fmtext_o.cpp:337 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 647)
        (nil)))
(insn 528 527 529 34 (set (reg:DI 648)
        (reg:DI 236 [ D.25518 ])) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (nil))
(insn 529 528 530 34 (parallel [
            (set (reg:DI 648)
                (ashift:DI (reg:DI 648)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 530 529 531 34 (parallel [
            (set (reg:DI 648)
                (plus:DI (reg:DI 648)
                    (reg:DI 236 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 236 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.25518 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 531 530 532 34 (parallel [
            (set (reg:DI 649)
                (ashift:DI (reg:DI 648)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 648)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 532 531 533 34 (set (reg:DI 648)
        (reg:DI 649)) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 649)
        (nil)))
(insn 533 532 534 34 (set (reg:DI 237 [ D.25518 ])
        (reg:DI 648)) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 648)
        (nil)))
(insn 534 533 535 34 (set (reg/f:DI 650)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:337 89 {*movdi_internal}
     (nil))
(insn 535 534 536 34 (parallel [
            (set (reg/f:DI 238 [ D.25529 ])
                (plus:DI (reg:DI 237 [ D.25518 ])
                    (reg/f:DI 650)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 650)
        (expr_list:REG_DEAD (reg:DI 237 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                        (reg:DI 237 [ D.25518 ]))
                    (nil))))))
(insn 536 535 537 34 (set (reg:SI 239 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 238 [ D.25529 ])
                (const_int 4 [0x4])) [0 _273->num_unsup_sets+0 S4 A32])) ge2fitman_fmtext_o.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238 [ D.25529 ])
        (nil)))
(insn 537 536 538 34 (parallel [
            (set (reg:SI 651)
                (minus:SI (reg:SI 235 [ D.25517 ])
                    (reg:SI 239 [ D.25517 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:337 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 239 [ D.25517 ])
        (expr_list:REG_DEAD (reg:SI 235 [ D.25517 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 538 537 1223 34 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 numSets+0 S4 A32])
        (reg:SI 651)) ge2fitman_fmtext_o.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 651)
        (nil)))
(jump_insn 1223 538 1224 34 (set (pc)
        (label_ref 584)) 654 {jump}
     (nil)
 -> 584)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1224 1223 541)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 652 653 654 655 656 657 658 659 660 661 662 663 664 665
(code_label 541 1224 542 35 20 "" [1 uses])
(note 542 541 543 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 35 (set (reg:DI 652)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:347 89 {*movdi_internal}
     (nil))
(insn 544 543 545 35 (set (reg:DI 653)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:347 89 {*movdi_internal}
     (nil))
(insn 545 544 546 35 (parallel [
            (set (reg:DI 240 [ D.25521 ])
                (plus:DI (reg:DI 652)
                    (reg:DI 653)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:347 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 653)
        (expr_list:REG_DEAD (reg:DI 652)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 baseline_set_size+0 S8 A64]))
                    (nil))))))
(insn 546 545 547 35 (set (reg:SI 654)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 dataSizeChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:347 90 {*movsi_internal}
     (nil))
(insn 547 546 548 35 (parallel [
            (set (reg:SI 241 [ D.25517 ])
                (mult:SI (reg:SI 654)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:347 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 654)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 548 547 549 35 (set (reg:DI 242 [ D.25521 ])
        (sign_extend:DI (reg:SI 241 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:347 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 241 [ D.25517 ])
        (nil)))
(insn 549 548 550 35 (parallel [
            (set (reg:DI 243 [ D.25521 ])
                (plus:DI (reg:DI 240 [ D.25521 ])
                    (reg:DI 242 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:347 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 242 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 240 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 550 549 551 35 (set (reg:SI 655)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:347 90 {*movsi_internal}
     (nil))
(insn 551 550 552 35 (set (reg:DI 244 [ D.25518 ])
        (sign_extend:DI (reg:SI 655))) ge2fitman_fmtext_o.cpp:347 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 655)
        (nil)))
(insn 552 551 553 35 (parallel [
            (set (reg:DI 245 [ D.25518 ])
                (ashift:DI (reg:DI 244 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:347 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 244 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 553 552 554 35 (set (reg/f:DI 656)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:347 89 {*movdi_internal}
     (nil))
(insn 554 553 555 35 (parallel [
            (set (reg/f:DI 246 [ D.25532 ])
                (plus:DI (reg:DI 245 [ D.25518 ])
                    (reg/f:DI 656)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:347 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 656)
        (expr_list:REG_DEAD (reg:DI 245 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])
                        (reg:DI 245 [ D.25518 ]))
                    (nil))))))
(insn 555 554 556 35 (set (reg/f:DI 247 [ D.25533 ])
        (mem/f:DI (reg/f:DI 246 [ D.25532 ]) [0 *_282+0 S8 A64])) ge2fitman_fmtext_o.cpp:347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 246 [ D.25532 ])
        (nil)))
(insn 556 555 557 35 (set (reg:SI 1 dx)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:347 90 {*movsi_internal}
     (nil))
(insn 557 556 558 35 (set (reg:DI 4 si)
        (reg:DI 243 [ D.25521 ])) ge2fitman_fmtext_o.cpp:347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 243 [ D.25521 ])
        (nil)))
(insn 558 557 559 35 (set (reg:DI 5 di)
        (reg/f:DI 247 [ D.25533 ])) ge2fitman_fmtext_o.cpp:347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 247 [ D.25533 ])
        (nil)))
(call_insn 559 558 560 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7c387db948 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:347 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 560 559 561 35 (set (reg:SI 657)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:360 90 {*movsi_internal}
     (nil))
(insn 561 560 562 35 (set (reg:DI 248 [ D.25518 ])
        (sign_extend:DI (reg:SI 657))) ge2fitman_fmtext_o.cpp:360 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 657)
        (nil)))
(insn 562 561 563 35 (set (reg:DI 658)
        (reg:DI 248 [ D.25518 ])) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (nil))
(insn 563 562 564 35 (parallel [
            (set (reg:DI 658)
                (ashift:DI (reg:DI 658)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 564 563 565 35 (parallel [
            (set (reg:DI 658)
                (plus:DI (reg:DI 658)
                    (reg:DI 248 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 248 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 248 [ D.25518 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 565 564 566 35 (parallel [
            (set (reg:DI 659)
                (ashift:DI (reg:DI 658)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 658)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 566 565 567 35 (set (reg:DI 658)
        (reg:DI 659)) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 659)
        (nil)))
(insn 567 566 568 35 (set (reg:DI 249 [ D.25518 ])
        (reg:DI 658)) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 658)
        (nil)))
(insn 568 567 569 35 (set (reg/f:DI 660)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (nil))
(insn 569 568 570 35 (parallel [
            (set (reg/f:DI 250 [ D.25529 ])
                (plus:DI (reg:DI 249 [ D.25518 ])
                    (reg/f:DI 660)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 660)
        (expr_list:REG_DEAD (reg:DI 249 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                        (reg:DI 249 [ D.25518 ]))
                    (nil))))))
(insn 570 569 571 35 (set (reg:SI 251 [ D.25517 ])
        (mem/j:SI (reg/f:DI 250 [ D.25529 ]) [0 _287->num_datasets+0 S4 A32])) ge2fitman_fmtext_o.cpp:360 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 250 [ D.25529 ])
        (nil)))
(insn 571 570 572 35 (set (reg:SI 661)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:360 90 {*movsi_internal}
     (nil))
(insn 572 571 573 35 (set (reg:DI 252 [ D.25518 ])
        (sign_extend:DI (reg:SI 661))) ge2fitman_fmtext_o.cpp:360 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 661)
        (nil)))
(insn 573 572 574 35 (set (reg:DI 662)
        (reg:DI 252 [ D.25518 ])) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (nil))
(insn 574 573 575 35 (parallel [
            (set (reg:DI 662)
                (ashift:DI (reg:DI 662)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 575 574 576 35 (parallel [
            (set (reg:DI 662)
                (plus:DI (reg:DI 662)
                    (reg:DI 252 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 252 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 252 [ D.25518 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 576 575 577 35 (parallel [
            (set (reg:DI 663)
                (ashift:DI (reg:DI 662)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 662)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 577 576 578 35 (set (reg:DI 662)
        (reg:DI 663)) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 663)
        (nil)))
(insn 578 577 579 35 (set (reg:DI 253 [ D.25518 ])
        (reg:DI 662)) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 662)
        (nil)))
(insn 579 578 580 35 (set (reg/f:DI 664)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:360 89 {*movdi_internal}
     (nil))
(insn 580 579 581 35 (parallel [
            (set (reg/f:DI 254 [ D.25529 ])
                (plus:DI (reg:DI 253 [ D.25518 ])
                    (reg/f:DI 664)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 664)
        (expr_list:REG_DEAD (reg:DI 253 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 48 [0x30])) [0 infile_struct+0 S8 A64])
                        (reg:DI 253 [ D.25518 ]))
                    (nil))))))
(insn 581 580 582 35 (set (reg:SI 255 [ D.25517 ])
        (mem/j:SI (plus:DI (reg/f:DI 254 [ D.25529 ])
                (const_int 4 [0x4])) [0 _291->num_unsup_sets+0 S4 A32])) ge2fitman_fmtext_o.cpp:360 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.25529 ])
        (nil)))
(insn 582 581 583 35 (parallel [
            (set (reg:SI 665)
                (minus:SI (reg:SI 251 [ D.25517 ])
                    (reg:SI 255 [ D.25517 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:360 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 255 [ D.25517 ])
        (expr_list:REG_DEAD (reg:SI 251 [ D.25517 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 583 582 584 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 numSets+0 S4 A32])
        (reg:SI 665)) ge2fitman_fmtext_o.cpp:360 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 665)
        (nil)))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;;              34 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 584 583 585 36 21 "" [1 uses])
(note 585 584 586 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 586 585 1175 36 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:364 90 {*movsi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;;              75 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 666
(code_label 1175 586 587 37 43 "" [1 uses])
(note 587 1175 588 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 37 (set (reg:SI 666)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])) ge2fitman_fmtext_o.cpp:364 90 {*movsi_internal}
     (nil))
(insn 589 588 590 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 666)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 numSets+0 S4 A32]))) ge2fitman_fmtext_o.cpp:364 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 666)
        (nil)))
(jump_insn 590 589 591 37 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1178)
            (pc))) ge2fitman_fmtext_o.cpp:364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1178)
;;  succ:       76
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 256 257 258 259 260 667 668
(note 591 590 592 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 38 (set (reg:SI 667)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:367 90 {*movsi_internal}
     (nil))
(insn 593 592 594 38 (set (reg:DI 256 [ D.25518 ])
        (sign_extend:DI (reg:SI 667))) ge2fitman_fmtext_o.cpp:367 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 667)
        (nil)))
(insn 594 593 595 38 (parallel [
            (set (reg:DI 257 [ D.25518 ])
                (ashift:DI (reg:DI 256 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:367 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 256 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 595 594 596 38 (set (reg/f:DI 668)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:367 89 {*movdi_internal}
     (nil))
(insn 596 595 597 38 (parallel [
            (set (reg/f:DI 258 [ D.25532 ])
                (plus:DI (reg:DI 257 [ D.25518 ])
                    (reg/f:DI 668)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:367 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 668)
        (expr_list:REG_DEAD (reg:DI 257 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])
                        (reg:DI 257 [ D.25518 ]))
                    (nil))))))
(insn 597 596 598 38 (set (reg/f:DI 259 [ D.25533 ])
        (mem/f:DI (reg/f:DI 258 [ D.25532 ]) [0 *_297+0 S8 A64])) ge2fitman_fmtext_o.cpp:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 258 [ D.25532 ])
        (nil)))
(insn 598 597 599 38 (set (reg:DI 5 di)
        (reg/f:DI 259 [ D.25533 ])) ge2fitman_fmtext_o.cpp:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 259 [ D.25533 ])
        (nil)))
(call_insn 599 598 600 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f7c387dba20 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:367 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 600 599 601 38 (set (reg:DI 260 [ D.25521 ])
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 601 600 602 38 (set (reg:DI 4 si)
        (reg:DI 260 [ D.25521 ])) ge2fitman_fmtext_o.cpp:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 260 [ D.25521 ])
        (nil)))
(insn 602 601 603 38 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7c3720ee10 *.LC12>)) ge2fitman_fmtext_o.cpp:367 89 {*movdi_internal}
     (nil))
(insn 603 602 604 38 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:367 93 {*movqi_internal}
     (nil))
(call_insn 604 603 605 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7c3899a5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:367 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 605 604 606 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:377 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 606 605 607 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 641)
            (pc))) ge2fitman_fmtext_o.cpp:377 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 641)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 669 670 671 672 673 674 675 676 677 678
(note 607 606 608 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 609 39 (set (reg:SI 669)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:380 90 {*movsi_internal}
     (nil))
(insn 609 608 610 39 (set (reg:DI 261 [ D.25518 ])
        (sign_extend:DI (reg:SI 669))) ge2fitman_fmtext_o.cpp:380 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 669)
        (nil)))
(insn 610 609 611 39 (parallel [
            (set (reg:DI 262 [ D.25518 ])
                (ashift:DI (reg:DI 261 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:380 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 261 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 611 610 612 39 (set (reg/f:DI 670)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:380 89 {*movdi_internal}
     (nil))
(insn 612 611 613 39 (parallel [
            (set (reg/f:DI 263 [ D.25532 ])
                (plus:DI (reg:DI 262 [ D.25518 ])
                    (reg/f:DI 670)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:380 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 670)
        (expr_list:REG_DEAD (reg:DI 262 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])
                        (reg:DI 262 [ D.25518 ]))
                    (nil))))))
(insn 613 612 614 39 (set (reg/f:DI 264 [ D.25533 ])
        (mem/f:DI (reg/f:DI 263 [ D.25532 ]) [0 *_305+0 S8 A64])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 263 [ D.25532 ])
        (nil)))
(insn 614 613 615 39 (set (reg:SI 671)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:380 90 {*movsi_internal}
     (nil))
(insn 615 614 616 39 (set (reg:DI 265 [ D.25518 ])
        (sign_extend:DI (reg:SI 671))) ge2fitman_fmtext_o.cpp:380 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 671)
        (nil)))
(insn 616 615 617 39 (parallel [
            (set (reg:DI 266 [ D.25518 ])
                (ashift:DI (reg:DI 265 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:380 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 265 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 617 616 618 39 (set (reg/f:DI 672)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:380 89 {*movdi_internal}
     (nil))
(insn 618 617 619 39 (parallel [
            (set (reg/f:DI 267 [ D.25520 ])
                (plus:DI (reg:DI 266 [ D.25518 ])
                    (reg/f:DI 672)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:380 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 672)
        (expr_list:REG_DEAD (reg:DI 266 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 266 [ D.25518 ]))
                    (nil))))))
(insn 619 618 620 39 (set (reg:DI 268 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 267 [ D.25520 ])
                (const_int 16 [0x10])) [0 _309->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 267 [ D.25520 ])
        (nil)))
(insn 620 619 621 39 (parallel [
            (set (reg:DI 269 [ D.25521 ])
                (ashift:DI (reg:DI 268 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:380 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 268 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 621 620 622 39 (set (reg:DI 270 [ D.25518 ])
        (reg:DI 269 [ D.25521 ])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 269 [ D.25521 ])
        (nil)))
(insn 622 621 623 39 (set (reg:SI 673)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:379 90 {*movsi_internal}
     (nil))
(insn 623 622 624 39 (set (reg:DI 271 [ D.25518 ])
        (sign_extend:DI (reg:SI 673))) ge2fitman_fmtext_o.cpp:379 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 673)
        (nil)))
(insn 624 623 625 39 (parallel [
            (set (reg:DI 272 [ D.25518 ])
                (ashift:DI (reg:DI 271 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:379 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 271 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 625 624 626 39 (set (reg/f:DI 674)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (nil))
(insn 626 625 627 39 (parallel [
            (set (reg/f:DI 273 [ D.25520 ])
                (plus:DI (reg:DI 272 [ D.25518 ])
                    (reg/f:DI 674)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:379 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 674)
        (expr_list:REG_DEAD (reg:DI 272 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 272 [ D.25518 ]))
                    (nil))))))
(insn 627 626 628 39 (set (reg:DI 274 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 273 [ D.25520 ])
                (const_int 24 [0x18])) [0 _315->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 273 [ D.25520 ])
        (nil)))
(insn 628 627 629 39 (parallel [
            (set (reg:DI 675)
                (lshiftrt:DI (reg:DI 274 [ D.25521 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:379 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 629 628 630 39 (parallel [
            (set (reg:DI 676)
                (plus:DI (reg:DI 675)
                    (reg:DI 274 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:379 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 675)
        (expr_list:REG_DEAD (reg:DI 274 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 630 629 631 39 (parallel [
            (set (reg:DI 677)
                (ashiftrt:DI (reg:DI 676)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:379 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 676)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 631 630 632 39 (set (reg:DI 275 [ D.25521 ])
        (reg:DI 677)) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 677)
        (nil)))
(insn 632 631 633 39 (set (reg:DI 276 [ D.25518 ])
        (reg:DI 275 [ D.25521 ])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 275 [ D.25521 ])
        (nil)))
(insn 633 632 634 39 (set (reg:DI 678)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (nil))
(insn 634 633 635 39 (set (reg:DI 2 cx)
        (reg/f:DI 264 [ D.25533 ])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 264 [ D.25533 ])
        (nil)))
(insn 635 634 636 39 (set (reg:DI 1 dx)
        (reg:DI 270 [ D.25518 ])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270 [ D.25518 ])
        (nil)))
(insn 636 635 637 39 (set (reg:DI 4 si)
        (reg:DI 276 [ D.25518 ])) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 276 [ D.25518 ])
        (nil)))
(insn 637 636 638 39 (set (reg:DI 5 di)
        (reg:DI 678)) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 678)
        (nil)))
(call_insn 638 637 639 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f7c387db510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:379 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 639 638 640 39 (set (reg:DI 277 [ D.25518 ])
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:379 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 640 639 641 39 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 k+0 S4 A32])
        (subreg:SI (reg:DI 277 [ D.25518 ]) 0)) ge2fitman_fmtext_o.cpp:380 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 277 [ D.25518 ])
        (nil)))
;;  succ:       40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
;;              39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 278 279 280 281 282 283 679 680 681
(code_label 641 640 642 40 23 "" [1 uses])
(note 642 641 643 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 643 642 644 40 (set (reg:SI 679)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 k+0 S4 A32])) ge2fitman_fmtext_o.cpp:383 90 {*movsi_internal}
     (nil))
(insn 644 643 645 40 (set (reg:DI 278 [ D.25521 ])
        (sign_extend:DI (reg:SI 679))) ge2fitman_fmtext_o.cpp:383 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 679)
        (nil)))
(insn 645 644 646 40 (set (reg:SI 680)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:383 90 {*movsi_internal}
     (nil))
(insn 646 645 647 40 (set (reg:DI 279 [ D.25518 ])
        (sign_extend:DI (reg:SI 680))) ge2fitman_fmtext_o.cpp:383 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 680)
        (nil)))
(insn 647 646 648 40 (parallel [
            (set (reg:DI 280 [ D.25518 ])
                (ashift:DI (reg:DI 279 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:383 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 279 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 648 647 649 40 (set (reg/f:DI 681)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:383 89 {*movdi_internal}
     (nil))
(insn 649 648 650 40 (parallel [
            (set (reg/f:DI 281 [ D.25520 ])
                (plus:DI (reg:DI 280 [ D.25518 ])
                    (reg/f:DI 681)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:383 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 681)
        (expr_list:REG_DEAD (reg:DI 280 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 280 [ D.25518 ]))
                    (nil))))))
(insn 650 649 651 40 (set (reg:DI 282 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 281 [ D.25520 ])
                (const_int 16 [0x10])) [0 _326->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 281 [ D.25520 ])
        (nil)))
(insn 651 650 652 40 (parallel [
            (set (reg:DI 283 [ D.25521 ])
                (ashift:DI (reg:DI 282 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:383 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 282 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 652 651 653 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 278 [ D.25521 ])
            (reg:DI 283 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:383 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 283 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 278 [ D.25521 ])
            (nil))))
(jump_insn 653 652 654 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) ge2fitman_fmtext_o.cpp:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 665)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 284 682 683 684 685
(note 654 653 655 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 655 654 656 41 (set (reg:SI 683)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:384 90 {*movsi_internal}
     (nil))
(insn 656 655 657 41 (set (reg:DI 682)
        (sign_extend:DI (reg:SI 683))) ge2fitman_fmtext_o.cpp:384 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 683)
        (nil)))
(insn 657 656 658 41 (parallel [
            (set (reg:DI 684)
                (ashift:DI (reg:DI 682)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:384 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 682)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 658 657 659 41 (set (reg/f:DI 685)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 file+0 S8 A64])) ge2fitman_fmtext_o.cpp:384 89 {*movdi_internal}
     (nil))
(insn 659 658 660 41 (parallel [
            (set (reg/f:DI 284 [ D.25534 ])
                (plus:DI (reg:DI 684)
                    (reg/f:DI 685)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:384 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 685)
        (expr_list:REG_DEAD (reg:DI 684)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 file+0 S8 A64])
                        (reg:DI 684))
                    (nil))))))
(insn 660 659 661 41 (set (reg:DI 4 si)
        (reg/f:DI 284 [ D.25534 ])) ge2fitman_fmtext_o.cpp:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 284 [ D.25534 ])
        (nil)))
(insn 661 660 662 41 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:384 89 {*movdi_internal}
     (nil))
(call_insn 662 661 1225 41 (call (mem:QI (symbol_ref:DI ("_Z7exit_06PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f7c375505e8 exit_06>) [0 exit_06 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:384 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1225 662 1226 41 (set (pc)
        (label_ref 708)) 654 {jump}
     (nil)
 -> 708)
;;  succ:       47 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1226 1225 665)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 665 1226 666 42 24 "" [1 uses])
(note 666 665 667 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 667 666 705 42 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:388 90 {*movsi_internal}
     (nil))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;;              46 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 285 286 287 288 289 290 686 687 688
(code_label 705 667 668 43 27 "" [1 uses])
(note 668 705 669 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 669 668 670 43 (set (reg:SI 686)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:388 90 {*movsi_internal}
     (nil))
(insn 670 669 671 43 (set (reg:DI 285 [ D.25521 ])
        (sign_extend:DI (reg:SI 686))) ge2fitman_fmtext_o.cpp:388 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 686)
        (nil)))
(insn 671 670 672 43 (set (reg:SI 687)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:388 90 {*movsi_internal}
     (nil))
(insn 672 671 673 43 (set (reg:DI 286 [ D.25518 ])
        (sign_extend:DI (reg:SI 687))) ge2fitman_fmtext_o.cpp:388 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 687)
        (nil)))
(insn 673 672 674 43 (parallel [
            (set (reg:DI 287 [ D.25518 ])
                (ashift:DI (reg:DI 286 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:388 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 286 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 674 673 675 43 (set (reg/f:DI 688)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:388 89 {*movdi_internal}
     (nil))
(insn 675 674 676 43 (parallel [
            (set (reg/f:DI 288 [ D.25520 ])
                (plus:DI (reg:DI 287 [ D.25518 ])
                    (reg/f:DI 688)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 688)
        (expr_list:REG_DEAD (reg:DI 287 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 287 [ D.25518 ]))
                    (nil))))))
(insn 676 675 677 43 (set (reg:DI 289 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 288 [ D.25520 ])
                (const_int 16 [0x10])) [0 _335->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:388 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 288 [ D.25520 ])
        (nil)))
(insn 677 676 678 43 (parallel [
            (set (reg:DI 290 [ D.25521 ])
                (ashift:DI (reg:DI 289 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:388 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 289 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 678 677 679 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 285 [ D.25521 ])
            (reg:DI 290 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:388 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 290 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 285 [ D.25521 ])
            (nil))))
(jump_insn 679 678 680 43 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 708)
            (pc))) ge2fitman_fmtext_o.cpp:388 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 708)
;;  succ:       47
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 680 679 681 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:390 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 682 681 683 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 702)
            (pc))) ge2fitman_fmtext_o.cpp:390 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 702)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 291 292 293 294 295 296 297 298 299 300 301 302 689 690 691 692 693
(note 683 682 684 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 684 683 685 45 (set (reg:SI 689)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:393 90 {*movsi_internal}
     (nil))
(insn 685 684 686 45 (set (reg:DI 291 [ D.25518 ])
        (sign_extend:DI (reg:SI 689))) ge2fitman_fmtext_o.cpp:393 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 689)
        (nil)))
(insn 686 685 687 45 (parallel [
            (set (reg:DI 292 [ D.25518 ])
                (ashift:DI (reg:DI 291 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:393 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 291 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 687 686 688 45 (set (reg/f:DI 690)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:393 89 {*movdi_internal}
     (nil))
(insn 688 687 689 45 (parallel [
            (set (reg/f:DI 293 [ D.25524 ])
                (plus:DI (reg:DI 292 [ D.25518 ])
                    (reg/f:DI 690)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 690)
        (expr_list:REG_DEAD (reg:DI 292 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 292 [ D.25518 ]))
                    (nil))))))
(insn 689 688 690 45 (set (reg/f:DI 294 [ D.25535 ])
        (mem/f/j:DI (reg/f:DI 293 [ D.25524 ]) [0 _340->lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:393 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 293 [ D.25524 ])
        (nil)))
(insn 690 689 691 45 (set (reg:SI 691)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:393 90 {*movsi_internal}
     (nil))
(insn 691 690 692 45 (set (reg:DI 295 [ D.25518 ])
        (sign_extend:DI (reg:SI 691))) ge2fitman_fmtext_o.cpp:393 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 691)
        (nil)))
(insn 692 691 693 45 (parallel [
            (set (reg:DI 296 [ D.25518 ])
                (ashift:DI (reg:DI 295 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:393 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 295 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 693 692 694 45 (parallel [
            (set (reg/f:DI 297 [ D.25535 ])
                (plus:DI (reg/f:DI 294 [ D.25535 ])
                    (reg:DI 296 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 296 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 294 [ D.25535 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 694 693 695 45 (set (reg:SI 692)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:393 90 {*movsi_internal}
     (nil))
(insn 695 694 696 45 (set (reg:DI 298 [ D.25518 ])
        (sign_extend:DI (reg:SI 692))) ge2fitman_fmtext_o.cpp:393 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 692)
        (nil)))
(insn 696 695 697 45 (parallel [
            (set (reg:DI 299 [ D.25518 ])
                (ashift:DI (reg:DI 298 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:393 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 298 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 697 696 698 45 (set (reg/f:DI 693)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:393 89 {*movdi_internal}
     (nil))
(insn 698 697 699 45 (parallel [
            (set (reg/f:DI 300 [ D.25536 ])
                (plus:DI (reg:DI 299 [ D.25518 ])
                    (reg/f:DI 693)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 693)
        (expr_list:REG_DEAD (reg:DI 299 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
                        (reg:DI 299 [ D.25518 ]))
                    (nil))))))
(insn 699 698 700 45 (set (reg:SI 301 [ D.25517 ])
        (mem:SI (reg/f:DI 300 [ D.25536 ]) [0 *_347+0 S4 A32])) ge2fitman_fmtext_o.cpp:393 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 300 [ D.25536 ])
        (nil)))
(insn 700 699 701 45 (set (reg:DI 302 [ D.25521 ])
        (sign_extend:DI (reg:SI 301 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:393 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 301 [ D.25517 ])
        (nil)))
(insn 701 700 702 45 (set (mem:DI (reg/f:DI 297 [ D.25535 ]) [0 *_344+0 S8 A64])
        (reg:DI 302 [ D.25521 ])) ge2fitman_fmtext_o.cpp:393 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 302 [ D.25521 ])
        (expr_list:REG_DEAD (reg/f:DI 297 [ D.25535 ])
            (nil))))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 702 701 703 46 26 "" [1 uses])
(note 703 702 704 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 1227 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:388 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1227 704 1228 46 (set (pc)
        (label_ref 705)) ge2fitman_fmtext_o.cpp:388 654 {jump}
     (nil)
 -> 705)
;;  succ:       43 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1228 1227 708)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              41 [100.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 708 1228 709 47 25 "" [2 uses])
(note 709 708 710 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 710 709 711 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                    (const_int 40 [0x28])) [0 swap_bytes+0 S4 A64])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:406 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 711 710 712 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 860)
            (pc))) ge2fitman_fmtext_o.cpp:406 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 860)
;;  succ:       48 (FALLTHRU)
;;              58
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 712 711 713 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 857 48 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:407 90 {*movsi_internal}
     (nil))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;;              57 [100.0%] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 303 304 305 306 307 308 694 695 696
(code_label 857 713 714 49 33 "" [1 uses])
(note 714 857 715 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 49 (set (reg:SI 694)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:407 90 {*movsi_internal}
     (nil))
(insn 716 715 717 49 (set (reg:DI 303 [ D.25521 ])
        (sign_extend:DI (reg:SI 694))) ge2fitman_fmtext_o.cpp:407 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 694)
        (nil)))
(insn 717 716 718 49 (set (reg:SI 695)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:407 90 {*movsi_internal}
     (nil))
(insn 718 717 719 49 (set (reg:DI 304 [ D.25518 ])
        (sign_extend:DI (reg:SI 695))) ge2fitman_fmtext_o.cpp:407 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 695)
        (nil)))
(insn 719 718 720 49 (parallel [
            (set (reg:DI 305 [ D.25518 ])
                (ashift:DI (reg:DI 304 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:407 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 304 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 720 719 721 49 (set (reg/f:DI 696)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:407 89 {*movdi_internal}
     (nil))
(insn 721 720 722 49 (parallel [
            (set (reg/f:DI 306 [ D.25520 ])
                (plus:DI (reg:DI 305 [ D.25518 ])
                    (reg/f:DI 696)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:407 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 696)
        (expr_list:REG_DEAD (reg:DI 305 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 305 [ D.25518 ]))
                    (nil))))))
(insn 722 721 723 49 (set (reg:DI 307 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 306 [ D.25520 ])
                (const_int 16 [0x10])) [0 _356->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 306 [ D.25520 ])
        (nil)))
(insn 723 722 724 49 (parallel [
            (set (reg:DI 308 [ D.25521 ])
                (ashift:DI (reg:DI 307 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:407 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 307 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 724 723 725 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 303 [ D.25521 ])
            (reg:DI 308 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:407 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 308 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 303 [ D.25521 ])
            (nil))))
(jump_insn 725 724 726 49 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 860)
            (pc))) ge2fitman_fmtext_o.cpp:407 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 860)
;;  succ:       58
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 309 310 311 312 313 314 697 698
(note 726 725 727 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 727 726 728 50 (set (reg:SI 697)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:408 90 {*movsi_internal}
     (nil))
(insn 728 727 729 50 (set (reg:DI 309 [ D.25518 ])
        (sign_extend:DI (reg:SI 697))) ge2fitman_fmtext_o.cpp:408 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 697)
        (nil)))
(insn 729 728 730 50 (parallel [
            (set (reg:DI 310 [ D.25518 ])
                (ashift:DI (reg:DI 309 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:408 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 309 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 730 729 731 50 (set (reg/f:DI 698)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:408 89 {*movdi_internal}
     (nil))
(insn 731 730 732 50 (parallel [
            (set (reg/f:DI 311 [ D.25520 ])
                (plus:DI (reg:DI 310 [ D.25518 ])
                    (reg/f:DI 698)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 698)
        (expr_list:REG_DEAD (reg:DI 310 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 310 [ D.25518 ]))
                    (nil))))))
(insn 732 731 733 50 (set (reg:DI 312 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 311 [ D.25520 ])
                (const_int 24 [0x18])) [0 _361->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:408 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 311 [ D.25520 ])
        (nil)))
(insn 733 732 734 50 (set (reg:DI 313 [ D.25537 ])
        (reg:DI 312 [ D.25521 ])) ge2fitman_fmtext_o.cpp:408 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312 [ D.25521 ])
        (nil)))
(insn 734 733 735 50 (parallel [
            (set (reg:DI 314 [ D.25537 ])
                (plus:DI (reg:DI 313 [ D.25537 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 313 [ D.25537 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 735 734 736 50 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 314 [ D.25537 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:408 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 314 [ D.25537 ])
        (nil)))
(jump_insn 736 735 737 50 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 754)
            (pc))) ge2fitman_fmtext_o.cpp:408 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 754)
;;  succ:       51 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 315 316 317 318 319 320 321 322 699 700 701
(note 737 736 738 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 738 737 739 51 (set (reg:SI 315 [ D.25517 ])
        (const_int 2 [0x2])) ge2fitman_fmtext_o.cpp:409 90 {*movsi_internal}
     (nil))
(insn 739 738 740 51 (set (reg:SI 699)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:409 90 {*movsi_internal}
     (nil))
(insn 740 739 741 51 (set (reg:DI 316 [ D.25518 ])
        (sign_extend:DI (reg:SI 699))) ge2fitman_fmtext_o.cpp:409 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 699)
        (nil)))
(insn 741 740 742 51 (parallel [
            (set (reg:DI 317 [ D.25518 ])
                (ashift:DI (reg:DI 316 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:409 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 316 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 742 741 743 51 (set (reg/f:DI 700)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:409 89 {*movdi_internal}
     (nil))
(insn 743 742 744 51 (parallel [
            (set (reg/f:DI 318 [ D.25524 ])
                (plus:DI (reg:DI 317 [ D.25518 ])
                    (reg/f:DI 700)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:409 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 700)
        (expr_list:REG_DEAD (reg:DI 317 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 317 [ D.25518 ]))
                    (nil))))))
(insn 744 743 745 51 (set (reg/f:DI 319 [ D.25538 ])
        (mem/f/j:DI (reg/f:DI 318 [ D.25524 ]) [0 _368->sh+0 S8 A64])) ge2fitman_fmtext_o.cpp:409 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 318 [ D.25524 ])
        (nil)))
(insn 745 744 746 51 (set (reg:SI 701)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:409 90 {*movsi_internal}
     (nil))
(insn 746 745 747 51 (set (reg:DI 320 [ D.25518 ])
        (sign_extend:DI (reg:SI 701))) ge2fitman_fmtext_o.cpp:409 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 701)
        (nil)))
(insn 747 746 748 51 (parallel [
            (set (reg:DI 321 [ D.25518 ])
                (ashift:DI (reg:DI 320 [ D.25518 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:409 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 320 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 748 747 749 51 (parallel [
            (set (reg/f:DI 322 [ D.25539 ])
                (plus:DI (reg/f:DI 319 [ D.25538 ])
                    (reg:DI 321 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:409 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 321 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 319 [ D.25538 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 749 748 750 51 (set (reg:SI 4 si)
        (reg:SI 315 [ D.25517 ])) ge2fitman_fmtext_o.cpp:409 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 315 [ D.25517 ])
        (nil)))
(insn 750 749 751 51 (set (reg:DI 5 di)
        (reg/f:DI 322 [ D.25539 ])) ge2fitman_fmtext_o.cpp:409 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 322 [ D.25539 ])
        (nil)))
(call_insn 751 750 1229 51 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f7c3754b6c0 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:409 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 1229 751 1230 51 (set (pc)
        (label_ref 854)) 654 {jump}
     (nil)
 -> 854)
;;  succ:       57 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1230 1229 754)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 323 324 325 326 327 328 702 703
(code_label 754 1230 755 52 29 "" [1 uses])
(note 755 754 756 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 757 52 (set (reg:SI 702)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:411 90 {*movsi_internal}
     (nil))
(insn 757 756 758 52 (set (reg:DI 323 [ D.25518 ])
        (sign_extend:DI (reg:SI 702))) ge2fitman_fmtext_o.cpp:411 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 702)
        (nil)))
(insn 758 757 759 52 (parallel [
            (set (reg:DI 324 [ D.25518 ])
                (ashift:DI (reg:DI 323 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:411 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 323 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 759 758 760 52 (set (reg/f:DI 703)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:411 89 {*movdi_internal}
     (nil))
(insn 760 759 761 52 (parallel [
            (set (reg/f:DI 325 [ D.25520 ])
                (plus:DI (reg:DI 324 [ D.25518 ])
                    (reg/f:DI 703)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:411 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 703)
        (expr_list:REG_DEAD (reg:DI 324 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 324 [ D.25518 ]))
                    (nil))))))
(insn 761 760 762 52 (set (reg:DI 326 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 325 [ D.25520 ])
                (const_int 24 [0x18])) [0 _376->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 325 [ D.25520 ])
        (nil)))
(insn 762 761 763 52 (set (reg:DI 327 [ D.25537 ])
        (reg:DI 326 [ D.25521 ])) ge2fitman_fmtext_o.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326 [ D.25521 ])
        (nil)))
(insn 763 762 764 52 (parallel [
            (set (reg:DI 328 [ D.25537 ])
                (plus:DI (reg:DI 327 [ D.25537 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:411 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 327 [ D.25537 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 764 763 765 52 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 328 [ D.25537 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:411 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 328 [ D.25537 ])
        (nil)))
(jump_insn 765 764 766 52 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 796)
            (pc))) ge2fitman_fmtext_o.cpp:411 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 796)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 704 705 706 707 708 709 710
(note 766 765 767 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 767 766 768 53 (set (reg:SI 329 [ D.25517 ])
        (const_int 4 [0x4])) ge2fitman_fmtext_o.cpp:412 90 {*movsi_internal}
     (nil))
(insn 768 767 769 53 (set (reg:SI 704)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:412 90 {*movsi_internal}
     (nil))
(insn 769 768 770 53 (set (reg:DI 330 [ D.25518 ])
        (sign_extend:DI (reg:SI 704))) ge2fitman_fmtext_o.cpp:412 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 704)
        (nil)))
(insn 770 769 771 53 (parallel [
            (set (reg:DI 331 [ D.25518 ])
                (ashift:DI (reg:DI 330 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:412 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 330 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 771 770 772 53 (set (reg/f:DI 705)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:412 89 {*movdi_internal}
     (nil))
(insn 772 771 773 53 (parallel [
            (set (reg/f:DI 332 [ D.25539 ])
                (plus:DI (reg:DI 331 [ D.25518 ])
                    (reg/f:DI 705)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:412 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 705)
        (expr_list:REG_DEAD (reg:DI 331 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
                        (reg:DI 331 [ D.25518 ]))
                    (nil))))))
(insn 773 772 774 53 (set (reg:SI 4 si)
        (reg:SI 329 [ D.25517 ])) ge2fitman_fmtext_o.cpp:412 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 329 [ D.25517 ])
        (nil)))
(insn 774 773 775 53 (set (reg:DI 5 di)
        (reg/f:DI 332 [ D.25539 ])) ge2fitman_fmtext_o.cpp:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 332 [ D.25539 ])
        (nil)))
(call_insn 775 774 776 53 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f7c3754b6c0 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:412 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 776 775 777 53 (set (reg:SI 706)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:413 90 {*movsi_internal}
     (nil))
(insn 777 776 778 53 (set (reg:DI 333 [ D.25518 ])
        (sign_extend:DI (reg:SI 706))) ge2fitman_fmtext_o.cpp:413 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 706)
        (nil)))
(insn 778 777 779 53 (parallel [
            (set (reg:DI 334 [ D.25518 ])
                (ashift:DI (reg:DI 333 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:413 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 333 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 779 778 780 53 (set (reg/f:DI 707)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:413 89 {*movdi_internal}
     (nil))
(insn 780 779 781 53 (parallel [
            (set (reg/f:DI 335 [ D.25524 ])
                (plus:DI (reg:DI 334 [ D.25518 ])
                    (reg/f:DI 707)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:413 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 707)
        (expr_list:REG_DEAD (reg:DI 334 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 334 [ D.25518 ]))
                    (nil))))))
(insn 781 780 782 53 (set (reg/f:DI 336 [ D.25535 ])
        (mem/f/j:DI (reg/f:DI 335 [ D.25524 ]) [0 _387->lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:413 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 335 [ D.25524 ])
        (nil)))
(insn 782 781 783 53 (set (reg:SI 708)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:413 90 {*movsi_internal}
     (nil))
(insn 783 782 784 53 (set (reg:DI 337 [ D.25518 ])
        (sign_extend:DI (reg:SI 708))) ge2fitman_fmtext_o.cpp:413 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 708)
        (nil)))
(insn 784 783 785 53 (parallel [
            (set (reg:DI 338 [ D.25518 ])
                (ashift:DI (reg:DI 337 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:413 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 337 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 785 784 786 53 (parallel [
            (set (reg/f:DI 339 [ D.25535 ])
                (plus:DI (reg/f:DI 336 [ D.25535 ])
                    (reg:DI 338 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:413 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 338 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 336 [ D.25535 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 786 785 787 53 (set (reg:SI 709)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:413 90 {*movsi_internal}
     (nil))
(insn 787 786 788 53 (set (reg:DI 340 [ D.25518 ])
        (sign_extend:DI (reg:SI 709))) ge2fitman_fmtext_o.cpp:413 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 709)
        (nil)))
(insn 788 787 789 53 (parallel [
            (set (reg:DI 341 [ D.25518 ])
                (ashift:DI (reg:DI 340 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:413 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 340 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 789 788 790 53 (set (reg/f:DI 710)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:413 89 {*movdi_internal}
     (nil))
(insn 790 789 791 53 (parallel [
            (set (reg/f:DI 342 [ D.25536 ])
                (plus:DI (reg:DI 341 [ D.25518 ])
                    (reg/f:DI 710)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:413 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 710)
        (expr_list:REG_DEAD (reg:DI 341 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
                        (reg:DI 341 [ D.25518 ]))
                    (nil))))))
(insn 791 790 792 53 (set (reg:SI 343 [ D.25517 ])
        (mem:SI (reg/f:DI 342 [ D.25536 ]) [0 *_394+0 S4 A32])) ge2fitman_fmtext_o.cpp:413 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 342 [ D.25536 ])
        (nil)))
(insn 792 791 793 53 (set (reg:DI 344 [ D.25521 ])
        (sign_extend:DI (reg:SI 343 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:413 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 343 [ D.25517 ])
        (nil)))
(insn 793 792 1231 53 (set (mem:DI (reg/f:DI 339 [ D.25535 ]) [0 *_391+0 S8 A64])
        (reg:DI 344 [ D.25521 ])) ge2fitman_fmtext_o.cpp:413 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 344 [ D.25521 ])
        (expr_list:REG_DEAD (reg/f:DI 339 [ D.25535 ])
            (nil))))
(jump_insn 1231 793 1232 53 (set (pc)
        (label_ref 854)) 654 {jump}
     (nil)
 -> 854)
;;  succ:       57 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1232 1231 796)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 345 346 347 348 349 350 711 712
(code_label 796 1232 797 54 31 "" [1 uses])
(note 797 796 798 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 54 (set (reg:SI 711)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:414 90 {*movsi_internal}
     (nil))
(insn 799 798 800 54 (set (reg:DI 345 [ D.25518 ])
        (sign_extend:DI (reg:SI 711))) ge2fitman_fmtext_o.cpp:414 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 711)
        (nil)))
(insn 800 799 801 54 (parallel [
            (set (reg:DI 346 [ D.25518 ])
                (ashift:DI (reg:DI 345 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:414 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 345 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 801 800 802 54 (set (reg/f:DI 712)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:414 89 {*movdi_internal}
     (nil))
(insn 802 801 803 54 (parallel [
            (set (reg/f:DI 347 [ D.25520 ])
                (plus:DI (reg:DI 346 [ D.25518 ])
                    (reg/f:DI 712)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:414 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 712)
        (expr_list:REG_DEAD (reg:DI 346 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 346 [ D.25518 ]))
                    (nil))))))
(insn 803 802 804 54 (set (reg:DI 348 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 347 [ D.25520 ])
                (const_int 24 [0x18])) [0 _400->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:414 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 347 [ D.25520 ])
        (nil)))
(insn 804 803 805 54 (set (reg:DI 349 [ D.25537 ])
        (reg:DI 348 [ D.25521 ])) ge2fitman_fmtext_o.cpp:414 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 348 [ D.25521 ])
        (nil)))
(insn 805 804 806 54 (parallel [
            (set (reg:DI 350 [ D.25537 ])
                (plus:DI (reg:DI 349 [ D.25537 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:414 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 349 [ D.25537 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 806 805 807 54 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 350 [ D.25537 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:414 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 350 [ D.25537 ])
        (nil)))
(jump_insn 807 806 808 54 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 838)
            (pc))) ge2fitman_fmtext_o.cpp:414 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 838)
;;  succ:       55 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 713 714 715 716 717 718 719
(note 808 807 809 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 55 (set (reg:SI 351 [ D.25517 ])
        (const_int 4 [0x4])) ge2fitman_fmtext_o.cpp:415 90 {*movsi_internal}
     (nil))
(insn 810 809 811 55 (set (reg:SI 713)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:415 90 {*movsi_internal}
     (nil))
(insn 811 810 812 55 (set (reg:DI 352 [ D.25518 ])
        (sign_extend:DI (reg:SI 713))) ge2fitman_fmtext_o.cpp:415 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 713)
        (nil)))
(insn 812 811 813 55 (parallel [
            (set (reg:DI 353 [ D.25518 ])
                (ashift:DI (reg:DI 352 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:415 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 352 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 813 812 814 55 (set (reg/f:DI 714)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:415 89 {*movdi_internal}
     (nil))
(insn 814 813 815 55 (parallel [
            (set (reg/f:DI 354 [ D.25539 ])
                (plus:DI (reg:DI 353 [ D.25518 ])
                    (reg/f:DI 714)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:415 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 714)
        (expr_list:REG_DEAD (reg:DI 353 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
                        (reg:DI 353 [ D.25518 ]))
                    (nil))))))
(insn 815 814 816 55 (set (reg:SI 4 si)
        (reg:SI 351 [ D.25517 ])) ge2fitman_fmtext_o.cpp:415 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 351 [ D.25517 ])
        (nil)))
(insn 816 815 817 55 (set (reg:DI 5 di)
        (reg/f:DI 354 [ D.25539 ])) ge2fitman_fmtext_o.cpp:415 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 354 [ D.25539 ])
        (nil)))
(call_insn 817 816 818 55 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f7c3754b6c0 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:415 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 818 817 819 55 (set (reg:SI 715)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:416 90 {*movsi_internal}
     (nil))
(insn 819 818 820 55 (set (reg:DI 355 [ D.25518 ])
        (sign_extend:DI (reg:SI 715))) ge2fitman_fmtext_o.cpp:416 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 715)
        (nil)))
(insn 820 819 821 55 (parallel [
            (set (reg:DI 356 [ D.25518 ])
                (ashift:DI (reg:DI 355 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:416 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 355 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 821 820 822 55 (set (reg/f:DI 716)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:416 89 {*movdi_internal}
     (nil))
(insn 822 821 823 55 (parallel [
            (set (reg/f:DI 357 [ D.25524 ])
                (plus:DI (reg:DI 356 [ D.25518 ])
                    (reg/f:DI 716)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 716)
        (expr_list:REG_DEAD (reg:DI 356 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 356 [ D.25518 ]))
                    (nil))))))
(insn 823 822 824 55 (set (reg/f:DI 358 [ D.25535 ])
        (mem/f/j:DI (reg/f:DI 357 [ D.25524 ]) [0 _411->lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 357 [ D.25524 ])
        (nil)))
(insn 824 823 825 55 (set (reg:SI 717)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:416 90 {*movsi_internal}
     (nil))
(insn 825 824 826 55 (set (reg:DI 359 [ D.25518 ])
        (sign_extend:DI (reg:SI 717))) ge2fitman_fmtext_o.cpp:416 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 717)
        (nil)))
(insn 826 825 827 55 (parallel [
            (set (reg:DI 360 [ D.25518 ])
                (ashift:DI (reg:DI 359 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:416 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 359 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 827 826 828 55 (parallel [
            (set (reg/f:DI 361 [ D.25535 ])
                (plus:DI (reg/f:DI 358 [ D.25535 ])
                    (reg:DI 360 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 360 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 358 [ D.25535 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 828 827 829 55 (set (reg:SI 718)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:416 90 {*movsi_internal}
     (nil))
(insn 829 828 830 55 (set (reg:DI 362 [ D.25518 ])
        (sign_extend:DI (reg:SI 718))) ge2fitman_fmtext_o.cpp:416 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 718)
        (nil)))
(insn 830 829 831 55 (parallel [
            (set (reg:DI 363 [ D.25518 ])
                (ashift:DI (reg:DI 362 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:416 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 362 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 831 830 832 55 (set (reg/f:DI 719)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:416 89 {*movdi_internal}
     (nil))
(insn 832 831 833 55 (parallel [
            (set (reg/f:DI 364 [ D.25536 ])
                (plus:DI (reg:DI 363 [ D.25518 ])
                    (reg/f:DI 719)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 719)
        (expr_list:REG_DEAD (reg:DI 363 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
                        (reg:DI 363 [ D.25518 ]))
                    (nil))))))
(insn 833 832 834 55 (set (reg:SI 365 [ D.25517 ])
        (mem:SI (reg/f:DI 364 [ D.25536 ]) [0 *_418+0 S4 A32])) ge2fitman_fmtext_o.cpp:416 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 364 [ D.25536 ])
        (nil)))
(insn 834 833 835 55 (set (reg:DI 366 [ D.25521 ])
        (sign_extend:DI (reg:SI 365 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:416 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 365 [ D.25517 ])
        (nil)))
(insn 835 834 1233 55 (set (mem:DI (reg/f:DI 361 [ D.25535 ]) [0 *_415+0 S8 A64])
        (reg:DI 366 [ D.25521 ])) ge2fitman_fmtext_o.cpp:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 366 [ D.25521 ])
        (expr_list:REG_DEAD (reg/f:DI 361 [ D.25535 ])
            (nil))))
(jump_insn 1233 835 1234 55 (set (pc)
        (label_ref 854)) 654 {jump}
     (nil)
 -> 854)
;;  succ:       57 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1234 1233 838)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 367 368 369 370 371 372 373 374 720 721 722
(code_label 838 1234 839 56 32 "" [1 uses])
(note 839 838 840 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 56 (set (reg:SI 367 [ D.25517 ])
        (const_int 8 [0x8])) ge2fitman_fmtext_o.cpp:418 90 {*movsi_internal}
     (nil))
(insn 841 840 842 56 (set (reg:SI 720)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:418 90 {*movsi_internal}
     (nil))
(insn 842 841 843 56 (set (reg:DI 368 [ D.25518 ])
        (sign_extend:DI (reg:SI 720))) ge2fitman_fmtext_o.cpp:418 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 720)
        (nil)))
(insn 843 842 844 56 (parallel [
            (set (reg:DI 369 [ D.25518 ])
                (ashift:DI (reg:DI 368 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:418 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 368 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 844 843 845 56 (set (reg/f:DI 721)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:418 89 {*movdi_internal}
     (nil))
(insn 845 844 846 56 (parallel [
            (set (reg/f:DI 370 [ D.25524 ])
                (plus:DI (reg:DI 369 [ D.25518 ])
                    (reg/f:DI 721)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:418 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 721)
        (expr_list:REG_DEAD (reg:DI 369 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 369 [ D.25518 ]))
                    (nil))))))
(insn 846 845 847 56 (set (reg/f:DI 371 [ D.25535 ])
        (mem/f/j:DI (reg/f:DI 370 [ D.25524 ]) [0 _425->lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:418 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 370 [ D.25524 ])
        (nil)))
(insn 847 846 848 56 (set (reg:SI 722)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:418 90 {*movsi_internal}
     (nil))
(insn 848 847 849 56 (set (reg:DI 372 [ D.25518 ])
        (sign_extend:DI (reg:SI 722))) ge2fitman_fmtext_o.cpp:418 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 722)
        (nil)))
(insn 849 848 850 56 (parallel [
            (set (reg:DI 373 [ D.25518 ])
                (ashift:DI (reg:DI 372 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:418 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 372 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 850 849 851 56 (parallel [
            (set (reg/f:DI 374 [ D.25539 ])
                (plus:DI (reg/f:DI 371 [ D.25535 ])
                    (reg:DI 373 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:418 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 373 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 371 [ D.25535 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 851 850 852 56 (set (reg:SI 4 si)
        (reg:SI 367 [ D.25517 ])) ge2fitman_fmtext_o.cpp:418 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 367 [ D.25517 ])
        (nil)))
(insn 852 851 853 56 (set (reg:DI 5 di)
        (reg/f:DI 374 [ D.25539 ])) ge2fitman_fmtext_o.cpp:418 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 374 [ D.25539 ])
        (nil)))
(call_insn 853 852 854 56 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f7c3754b6c0 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:418 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       57 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              51 [100.0%] 
;;              53 [100.0%] 
;;              55 [100.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 854 853 855 57 30 "" [3 uses])
(note 855 854 856 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 856 855 1235 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:407 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1235 856 1236 57 (set (pc)
        (label_ref 857)) ge2fitman_fmtext_o.cpp:407 654 {jump}
     (nil)
 -> 857)
;;  succ:       49 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1236 1235 860)
;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;;              49
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 375 376 377 378 379 380 381 382 383 384 385 723 724 725 726 727 728 729
(code_label 860 1236 861 58 28 "" [2 uses])
(note 861 860 862 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 862 861 863 58 (set (reg:SI 723)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:429 90 {*movsi_internal}
     (nil))
(insn 863 862 864 58 (set (reg:DI 375 [ D.25518 ])
        (sign_extend:DI (reg:SI 723))) ge2fitman_fmtext_o.cpp:429 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 723)
        (nil)))
(insn 864 863 865 58 (parallel [
            (set (reg:DI 376 [ D.25518 ])
                (ashift:DI (reg:DI 375 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:429 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 375 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 865 864 866 58 (set (reg/f:DI 724)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:429 89 {*movdi_internal}
     (nil))
(insn 866 865 867 58 (parallel [
            (set (reg/f:DI 377 [ D.25520 ])
                (plus:DI (reg:DI 376 [ D.25518 ])
                    (reg/f:DI 724)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:429 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 724)
        (expr_list:REG_DEAD (reg:DI 376 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 376 [ D.25518 ]))
                    (nil))))))
(insn 867 866 868 58 (set (reg:DI 378 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 377 [ D.25520 ])
                (const_int 24 [0x18])) [0 _434->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 377 [ D.25520 ])
        (nil)))
(insn 868 867 869 58 (parallel [
            (set (reg:DI 725)
                (lshiftrt:DI (reg:DI 378 [ D.25521 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:429 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 869 868 870 58 (parallel [
            (set (reg:DI 726)
                (plus:DI (reg:DI 725)
                    (reg:DI 378 [ D.25521 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:429 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 725)
        (expr_list:REG_DEAD (reg:DI 378 [ D.25521 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 870 869 871 58 (parallel [
            (set (reg:DI 727)
                (ashiftrt:DI (reg:DI 726)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:429 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 726)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 871 870 872 58 (set (reg:DI 379 [ D.25521 ])
        (reg:DI 727)) ge2fitman_fmtext_o.cpp:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 727)
        (nil)))
(insn 872 871 873 58 (set (reg:DI 4 si)
        (reg:DI 379 [ D.25521 ])) ge2fitman_fmtext_o.cpp:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 379 [ D.25521 ])
        (nil)))
(insn 873 872 874 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f7c3720eea0 *.LC13>)) ge2fitman_fmtext_o.cpp:429 89 {*movdi_internal}
     (nil))
(insn 874 873 875 58 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:429 93 {*movqi_internal}
     (nil))
(call_insn 875 874 876 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7c3899a5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:429 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 876 875 877 58 (set (reg:SI 728)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:433 90 {*movsi_internal}
     (nil))
(insn 877 876 878 58 (set (reg:DI 380 [ D.25518 ])
        (sign_extend:DI (reg:SI 728))) ge2fitman_fmtext_o.cpp:433 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 728)
        (nil)))
(insn 878 877 879 58 (parallel [
            (set (reg:DI 381 [ D.25518 ])
                (ashift:DI (reg:DI 380 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:433 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 380 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 879 878 880 58 (set (reg/f:DI 729)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:433 89 {*movdi_internal}
     (nil))
(insn 880 879 881 58 (parallel [
            (set (reg/f:DI 382 [ D.25520 ])
                (plus:DI (reg:DI 381 [ D.25518 ])
                    (reg/f:DI 729)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:433 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 729)
        (expr_list:REG_DEAD (reg:DI 381 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 381 [ D.25518 ]))
                    (nil))))))
(insn 881 880 882 58 (set (reg:DI 383 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 382 [ D.25520 ])
                (const_int 24 [0x18])) [0 _440->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 382 [ D.25520 ])
        (nil)))
(insn 882 881 883 58 (set (reg:DI 384 [ D.25537 ])
        (reg:DI 383 [ D.25521 ])) ge2fitman_fmtext_o.cpp:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 383 [ D.25521 ])
        (nil)))
(insn 883 882 884 58 (parallel [
            (set (reg:DI 385 [ D.25537 ])
                (plus:DI (reg:DI 384 [ D.25537 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:433 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 384 [ D.25537 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 884 883 885 58 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 385 [ D.25537 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:433 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 385 [ D.25537 ])
        (nil)))
(jump_insn 885 884 886 58 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 929)
            (pc))) ge2fitman_fmtext_o.cpp:433 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 929)
;;  succ:       59 (FALLTHRU)
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 386 387 388 389 390 391 392 730 731
(note 886 885 887 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 887 886 888 59 (set (reg:SI 730)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:434 90 {*movsi_internal}
     (nil))
(insn 888 887 889 59 (set (reg:DI 386 [ D.25518 ])
        (sign_extend:DI (reg:SI 730))) ge2fitman_fmtext_o.cpp:434 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 730)
        (nil)))
(insn 889 888 890 59 (parallel [
            (set (reg:DI 387 [ D.25518 ])
                (ashift:DI (reg:DI 386 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:434 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 386 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 890 889 891 59 (set (reg/f:DI 731)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:434 89 {*movdi_internal}
     (nil))
(insn 891 890 892 59 (parallel [
            (set (reg/f:DI 388 [ D.25520 ])
                (plus:DI (reg:DI 387 [ D.25518 ])
                    (reg/f:DI 731)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:434 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 731)
        (expr_list:REG_DEAD (reg:DI 387 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 387 [ D.25518 ]))
                    (nil))))))
(insn 892 891 893 59 (set (reg:DI 389 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 388 [ D.25520 ])
                (const_int 16 [0x10])) [0 _446->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 388 [ D.25520 ])
        (nil)))
(insn 893 892 894 59 (set (reg:SI 390 [ D.25530 ])
        (subreg:SI (reg:DI 389 [ D.25521 ]) 0)) ge2fitman_fmtext_o.cpp:434 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 389 [ D.25521 ])
        (nil)))
(insn 894 893 895 59 (parallel [
            (set (reg:SI 391 [ D.25530 ])
                (ashift:SI (reg:SI 390 [ D.25530 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:434 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 390 [ D.25530 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 895 894 896 59 (parallel [
            (set (reg:SI 392 [ D.25530 ])
                (plus:SI (reg:SI 391 [ D.25530 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:434 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 391 [ D.25530 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 896 895 926 59 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (reg:SI 392 [ D.25530 ])) ge2fitman_fmtext_o.cpp:434 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 392 [ D.25530 ])
        (nil)))
;;  succ:       60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;;              61 [100.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 926 896 897 60 36 "" [1 uses])
(note 897 926 898 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 898 897 899 60 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:434 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 899 898 900 60 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1036)
            (pc))) ge2fitman_fmtext_o.cpp:434 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 1036)
;;  succ:       70
;;              61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 732 733 734 735 736 737 738
(note 900 899 901 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 61 (set (reg:SI 732)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:435 90 {*movsi_internal}
     (nil))
(insn 902 901 903 61 (set (reg:DI 393 [ D.25518 ])
        (sign_extend:DI (reg:SI 732))) ge2fitman_fmtext_o.cpp:435 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 732)
        (nil)))
(insn 903 902 904 61 (parallel [
            (set (reg:DI 394 [ D.25518 ])
                (ashift:DI (reg:DI 393 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 393 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 904 903 905 61 (set (reg/f:DI 733)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:435 89 {*movdi_internal}
     (nil))
(insn 905 904 906 61 (parallel [
            (set (reg/f:DI 395 [ D.25524 ])
                (plus:DI (reg:DI 394 [ D.25518 ])
                    (reg/f:DI 733)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 733)
        (expr_list:REG_DEAD (reg:DI 394 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 394 [ D.25518 ]))
                    (nil))))))
(insn 906 905 907 61 (set (reg/f:DI 396 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 395 [ D.25524 ]) [0 _454->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:435 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 395 [ D.25524 ])
        (nil)))
(insn 907 906 908 61 (set (reg:SI 734)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:435 90 {*movsi_internal}
     (nil))
(insn 908 907 909 61 (set (reg:DI 397 [ D.25518 ])
        (sign_extend:DI (reg:SI 734))) ge2fitman_fmtext_o.cpp:435 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 734)
        (nil)))
(insn 909 908 910 61 (parallel [
            (set (reg:DI 398 [ D.25518 ])
                (ashift:DI (reg:DI 397 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 397 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 910 909 911 61 (parallel [
            (set (reg/f:DI 399 [ D.25526 ])
                (plus:DI (reg/f:DI 396 [ D.25526 ])
                    (reg:DI 398 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 398 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 396 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 911 910 912 61 (set (reg:SI 735)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:435 90 {*movsi_internal}
     (nil))
(insn 912 911 913 61 (set (reg:DI 400 [ D.25518 ])
        (sign_extend:DI (reg:SI 735))) ge2fitman_fmtext_o.cpp:435 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 735)
        (nil)))
(insn 913 912 914 61 (parallel [
            (set (reg:DI 401 [ D.25518 ])
                (ashift:DI (reg:DI 400 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 400 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 914 913 915 61 (set (reg/f:DI 736)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:435 89 {*movdi_internal}
     (nil))
(insn 915 914 916 61 (parallel [
            (set (reg/f:DI 402 [ D.25524 ])
                (plus:DI (reg:DI 401 [ D.25518 ])
                    (reg/f:DI 736)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 736)
        (expr_list:REG_DEAD (reg:DI 401 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 401 [ D.25518 ]))
                    (nil))))))
(insn 916 915 917 61 (set (reg/f:DI 403 [ D.25538 ])
        (mem/f/j:DI (reg/f:DI 402 [ D.25524 ]) [0 _461->sh+0 S8 A64])) ge2fitman_fmtext_o.cpp:435 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 402 [ D.25524 ])
        (nil)))
(insn 917 916 918 61 (set (reg:SI 737)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:435 90 {*movsi_internal}
     (nil))
(insn 918 917 919 61 (set (reg:DI 404 [ D.25518 ])
        (sign_extend:DI (reg:SI 737))) ge2fitman_fmtext_o.cpp:435 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 737)
        (nil)))
(insn 919 918 920 61 (parallel [
            (set (reg:DI 405 [ D.25518 ])
                (ashift:DI (reg:DI 404 [ D.25518 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 404 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 920 919 921 61 (parallel [
            (set (reg/f:DI 406 [ D.25538 ])
                (plus:DI (reg/f:DI 403 [ D.25538 ])
                    (reg:DI 405 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:435 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 405 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 403 [ D.25538 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 921 920 922 61 (set (reg:HI 407 [ D.25540 ])
        (mem:HI (reg/f:DI 406 [ D.25538 ]) [0 *_465+0 S2 A16])) ge2fitman_fmtext_o.cpp:435 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 406 [ D.25538 ])
        (nil)))
(insn 922 921 923 61 (set (reg:SI 738)
        (sign_extend:SI (reg:HI 407 [ D.25540 ]))) ge2fitman_fmtext_o.cpp:435 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:HI 407 [ D.25540 ])
        (nil)))
(insn 923 922 924 61 (set (reg:SF 408 [ D.25541 ])
        (float:SF (reg:SI 738))) ge2fitman_fmtext_o.cpp:435 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 738)
        (nil)))
(insn 924 923 925 61 (set (mem:SF (reg/f:DI 399 [ D.25526 ]) [0 *_458+0 S4 A32])
        (reg:SF 408 [ D.25541 ])) ge2fitman_fmtext_o.cpp:435 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 408 [ D.25541 ])
        (expr_list:REG_DEAD (reg/f:DI 399 [ D.25526 ])
            (nil))))
(insn 925 924 1237 61 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:434 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1237 925 1238 61 (set (pc)
        (label_ref 926)) ge2fitman_fmtext_o.cpp:434 654 {jump}
     (nil)
 -> 926)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1238 1237 929)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 409 410 411 412 413 414 739 740
(code_label 929 1238 930 62 34 "" [1 uses])
(note 930 929 931 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 931 930 932 62 (set (reg:SI 739)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:437 90 {*movsi_internal}
     (nil))
(insn 932 931 933 62 (set (reg:DI 409 [ D.25518 ])
        (sign_extend:DI (reg:SI 739))) ge2fitman_fmtext_o.cpp:437 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 739)
        (nil)))
(insn 933 932 934 62 (parallel [
            (set (reg:DI 410 [ D.25518 ])
                (ashift:DI (reg:DI 409 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:437 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 409 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 934 933 935 62 (set (reg/f:DI 740)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:437 89 {*movdi_internal}
     (nil))
(insn 935 934 936 62 (parallel [
            (set (reg/f:DI 411 [ D.25520 ])
                (plus:DI (reg:DI 410 [ D.25518 ])
                    (reg/f:DI 740)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:437 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 740)
        (expr_list:REG_DEAD (reg:DI 410 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 410 [ D.25518 ]))
                    (nil))))))
(insn 936 935 937 62 (set (reg:DI 412 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 411 [ D.25520 ])
                (const_int 24 [0x18])) [0 _472->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 411 [ D.25520 ])
        (nil)))
(insn 937 936 938 62 (set (reg:DI 413 [ D.25537 ])
        (reg:DI 412 [ D.25521 ])) ge2fitman_fmtext_o.cpp:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 412 [ D.25521 ])
        (nil)))
(insn 938 937 939 62 (parallel [
            (set (reg:DI 414 [ D.25537 ])
                (plus:DI (reg:DI 413 [ D.25537 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:437 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 413 [ D.25537 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 939 938 940 62 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 414 [ D.25537 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:437 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 414 [ D.25537 ])
        (nil)))
(jump_insn 940 939 941 62 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 985)
            (pc))) ge2fitman_fmtext_o.cpp:437 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 985)
;;  succ:       63 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 941 940 942 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 942 941 982 63 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:438 90 {*movsi_internal}
     (nil))
;;  succ:       64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;;              65 [100.0%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 415 416 417 418 419 420 741 742 743
(code_label 982 942 943 64 38 "" [1 uses])
(note 943 982 944 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 944 943 945 64 (set (reg:SI 741)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:438 90 {*movsi_internal}
     (nil))
(insn 945 944 946 64 (set (reg:DI 415 [ D.25521 ])
        (sign_extend:DI (reg:SI 741))) ge2fitman_fmtext_o.cpp:438 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 741)
        (nil)))
(insn 946 945 947 64 (set (reg:SI 742)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:438 90 {*movsi_internal}
     (nil))
(insn 947 946 948 64 (set (reg:DI 416 [ D.25518 ])
        (sign_extend:DI (reg:SI 742))) ge2fitman_fmtext_o.cpp:438 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 742)
        (nil)))
(insn 948 947 949 64 (parallel [
            (set (reg:DI 417 [ D.25518 ])
                (ashift:DI (reg:DI 416 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:438 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 416 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 949 948 950 64 (set (reg/f:DI 743)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:438 89 {*movdi_internal}
     (nil))
(insn 950 949 951 64 (parallel [
            (set (reg/f:DI 418 [ D.25520 ])
                (plus:DI (reg:DI 417 [ D.25518 ])
                    (reg/f:DI 743)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:438 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 743)
        (expr_list:REG_DEAD (reg:DI 417 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 417 [ D.25518 ]))
                    (nil))))))
(insn 951 950 952 64 (set (reg:DI 419 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 418 [ D.25520 ])
                (const_int 16 [0x10])) [0 _480->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 418 [ D.25520 ])
        (nil)))
(insn 952 951 953 64 (parallel [
            (set (reg:DI 420 [ D.25521 ])
                (ashift:DI (reg:DI 419 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:438 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 419 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 953 952 954 64 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 415 [ D.25521 ])
            (reg:DI 420 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:438 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 420 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 415 [ D.25521 ])
            (nil))))
(jump_insn 954 953 955 64 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1036)
            (pc))) ge2fitman_fmtext_o.cpp:438 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1036)
;;  succ:       70
;;              65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 744 745 746 747 748 749 750 751
(note 955 954 956 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 956 955 957 65 (set (reg:SI 744)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:439 90 {*movsi_internal}
     (nil))
(insn 957 956 958 65 (set (reg:DI 421 [ D.25518 ])
        (sign_extend:DI (reg:SI 744))) ge2fitman_fmtext_o.cpp:439 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 744)
        (nil)))
(insn 958 957 959 65 (parallel [
            (set (reg:DI 422 [ D.25518 ])
                (ashift:DI (reg:DI 421 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:439 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 421 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 959 958 960 65 (set (reg/f:DI 745)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:439 89 {*movdi_internal}
     (nil))
(insn 960 959 961 65 (parallel [
            (set (reg/f:DI 423 [ D.25524 ])
                (plus:DI (reg:DI 422 [ D.25518 ])
                    (reg/f:DI 745)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:439 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 745)
        (expr_list:REG_DEAD (reg:DI 422 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 422 [ D.25518 ]))
                    (nil))))))
(insn 961 960 962 65 (set (reg/f:DI 424 [ D.25535 ])
        (mem/f/j:DI (reg/f:DI 423 [ D.25524 ]) [0 _485->lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 423 [ D.25524 ])
        (nil)))
(insn 962 961 963 65 (set (reg:SI 746)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:439 90 {*movsi_internal}
     (nil))
(insn 963 962 964 65 (set (reg:DI 425 [ D.25518 ])
        (sign_extend:DI (reg:SI 746))) ge2fitman_fmtext_o.cpp:439 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 746)
        (nil)))
(insn 964 963 965 65 (parallel [
            (set (reg:DI 426 [ D.25518 ])
                (ashift:DI (reg:DI 425 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:439 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 425 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 965 964 966 65 (parallel [
            (set (reg/f:DI 427 [ D.25535 ])
                (plus:DI (reg/f:DI 424 [ D.25535 ])
                    (reg:DI 426 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:439 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 426 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 424 [ D.25535 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 966 965 967 65 (set (reg:DI 428 [ D.25521 ])
        (mem:DI (reg/f:DI 427 [ D.25535 ]) [0 *_489+0 S8 A64])) ge2fitman_fmtext_o.cpp:439 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 427 [ D.25535 ])
        (nil)))
(insn 967 966 968 65 (set (reg:SF 747)
        (float:SF (reg:DI 428 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:439 200 {*floatdisf2_sse}
     (expr_list:REG_DEAD (reg:DI 428 [ D.25521 ])
        (nil)))
(insn 968 967 969 65 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 temp_float+0 S4 A32])
        (reg:SF 747)) ge2fitman_fmtext_o.cpp:439 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 747)
        (nil)))
(insn 969 968 970 65 (set (reg:SI 748)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:440 90 {*movsi_internal}
     (nil))
(insn 970 969 971 65 (set (reg:DI 429 [ D.25518 ])
        (sign_extend:DI (reg:SI 748))) ge2fitman_fmtext_o.cpp:440 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 748)
        (nil)))
(insn 971 970 972 65 (parallel [
            (set (reg:DI 430 [ D.25518 ])
                (ashift:DI (reg:DI 429 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:440 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 429 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 972 971 973 65 (set (reg/f:DI 749)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:440 89 {*movdi_internal}
     (nil))
(insn 973 972 974 65 (parallel [
            (set (reg/f:DI 431 [ D.25524 ])
                (plus:DI (reg:DI 430 [ D.25518 ])
                    (reg/f:DI 749)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:440 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 749)
        (expr_list:REG_DEAD (reg:DI 430 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 430 [ D.25518 ]))
                    (nil))))))
(insn 974 973 975 65 (set (reg/f:DI 432 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 431 [ D.25524 ]) [0 _494->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 431 [ D.25524 ])
        (nil)))
(insn 975 974 976 65 (set (reg:SI 750)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:440 90 {*movsi_internal}
     (nil))
(insn 976 975 977 65 (set (reg:DI 433 [ D.25518 ])
        (sign_extend:DI (reg:SI 750))) ge2fitman_fmtext_o.cpp:440 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 750)
        (nil)))
(insn 977 976 978 65 (parallel [
            (set (reg:DI 434 [ D.25518 ])
                (ashift:DI (reg:DI 433 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:440 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 433 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 978 977 979 65 (parallel [
            (set (reg/f:DI 435 [ D.25526 ])
                (plus:DI (reg/f:DI 432 [ D.25526 ])
                    (reg:DI 434 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:440 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 434 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 432 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 979 978 980 65 (set (reg:SF 751)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 temp_float+0 S4 A32])) ge2fitman_fmtext_o.cpp:440 129 {*movsf_internal}
     (nil))
(insn 980 979 981 65 (set (mem:SF (reg/f:DI 435 [ D.25526 ]) [0 *_498+0 S4 A32])
        (reg:SF 751)) ge2fitman_fmtext_o.cpp:440 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 751)
        (expr_list:REG_DEAD (reg/f:DI 435 [ D.25526 ])
            (nil))))
(insn 981 980 1239 65 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:438 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1239 981 1240 65 (set (pc)
        (label_ref 982)) ge2fitman_fmtext_o.cpp:438 654 {jump}
     (nil)
 -> 982)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1240 1239 985)
;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 436 437 438 439 440 441 752 753
(code_label 985 1240 986 66 37 "" [1 uses])
(note 986 985 987 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 987 986 988 66 (set (reg:SI 752)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:444 90 {*movsi_internal}
     (nil))
(insn 988 987 989 66 (set (reg:DI 436 [ D.25518 ])
        (sign_extend:DI (reg:SI 752))) ge2fitman_fmtext_o.cpp:444 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 752)
        (nil)))
(insn 989 988 990 66 (parallel [
            (set (reg:DI 437 [ D.25518 ])
                (ashift:DI (reg:DI 436 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:444 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 436 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 990 989 991 66 (set (reg/f:DI 753)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:444 89 {*movdi_internal}
     (nil))
(insn 991 990 992 66 (parallel [
            (set (reg/f:DI 438 [ D.25520 ])
                (plus:DI (reg:DI 437 [ D.25518 ])
                    (reg/f:DI 753)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:444 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 753)
        (expr_list:REG_DEAD (reg:DI 437 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 437 [ D.25518 ]))
                    (nil))))))
(insn 992 991 993 66 (set (reg:DI 439 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 438 [ D.25520 ])
                (const_int 24 [0x18])) [0 _503->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:444 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 438 [ D.25520 ])
        (nil)))
(insn 993 992 994 66 (set (reg:DI 440 [ D.25537 ])
        (reg:DI 439 [ D.25521 ])) ge2fitman_fmtext_o.cpp:444 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 439 [ D.25521 ])
        (nil)))
(insn 994 993 995 66 (parallel [
            (set (reg:DI 441 [ D.25537 ])
                (plus:DI (reg:DI 440 [ D.25537 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:444 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 440 [ D.25537 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 995 994 996 66 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 441 [ D.25537 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:444 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 441 [ D.25537 ])
        (nil)))
(jump_insn 996 995 997 66 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1036)
            (pc))) ge2fitman_fmtext_o.cpp:444 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 1036)
;;  succ:       67 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 997 996 998 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 998 997 1033 67 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:445 90 {*movsi_internal}
     (nil))
;;  succ:       68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;;              69 [100.0%] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 442 443 444 445 446 447 754 755 756
(code_label 1033 998 999 68 39 "" [1 uses])
(note 999 1033 1000 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1000 999 1001 68 (set (reg:SI 754)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:445 90 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 68 (set (reg:DI 442 [ D.25521 ])
        (sign_extend:DI (reg:SI 754))) ge2fitman_fmtext_o.cpp:445 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 754)
        (nil)))
(insn 1002 1001 1003 68 (set (reg:SI 755)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:445 90 {*movsi_internal}
     (nil))
(insn 1003 1002 1004 68 (set (reg:DI 443 [ D.25518 ])
        (sign_extend:DI (reg:SI 755))) ge2fitman_fmtext_o.cpp:445 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 755)
        (nil)))
(insn 1004 1003 1005 68 (parallel [
            (set (reg:DI 444 [ D.25518 ])
                (ashift:DI (reg:DI 443 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:445 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 443 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1005 1004 1006 68 (set (reg/f:DI 756)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:445 89 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 68 (parallel [
            (set (reg/f:DI 445 [ D.25520 ])
                (plus:DI (reg:DI 444 [ D.25518 ])
                    (reg/f:DI 756)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:445 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 756)
        (expr_list:REG_DEAD (reg:DI 444 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 444 [ D.25518 ]))
                    (nil))))))
(insn 1007 1006 1008 68 (set (reg:DI 446 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 445 [ D.25520 ])
                (const_int 16 [0x10])) [0 _511->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:445 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 445 [ D.25520 ])
        (nil)))
(insn 1008 1007 1009 68 (parallel [
            (set (reg:DI 447 [ D.25521 ])
                (ashift:DI (reg:DI 446 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:445 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 446 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1009 1008 1010 68 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 442 [ D.25521 ])
            (reg:DI 447 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:445 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 447 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 442 [ D.25521 ])
            (nil))))
(jump_insn 1010 1009 1011 68 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1036)
            (pc))) ge2fitman_fmtext_o.cpp:445 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1036)
;;  succ:       70
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 448 449 450 451 452 453 454 455 456 457 458 757 758 759 760 761 762 763
(note 1011 1010 1012 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1012 1011 1013 69 (set (reg:SI 757)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:447 90 {*movsi_internal}
     (nil))
(insn 1013 1012 1014 69 (set (reg:DI 448 [ D.25518 ])
        (sign_extend:DI (reg:SI 757))) ge2fitman_fmtext_o.cpp:447 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 757)
        (nil)))
(insn 1014 1013 1015 69 (parallel [
            (set (reg:DI 449 [ D.25518 ])
                (ashift:DI (reg:DI 448 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:447 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 448 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1015 1014 1016 69 (set (reg/f:DI 758)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:447 89 {*movdi_internal}
     (nil))
(insn 1016 1015 1017 69 (parallel [
            (set (reg/f:DI 450 [ D.25536 ])
                (plus:DI (reg:DI 449 [ D.25518 ])
                    (reg/f:DI 758)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:447 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 758)
        (expr_list:REG_DEAD (reg:DI 449 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])
                        (reg:DI 449 [ D.25518 ]))
                    (nil))))))
(insn 1017 1016 1018 69 (set (reg:SI 451 [ D.25517 ])
        (mem:SI (reg/f:DI 450 [ D.25536 ]) [0 *_516+0 S4 A32])) ge2fitman_fmtext_o.cpp:447 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 450 [ D.25536 ])
        (nil)))
(insn 1018 1017 1019 69 (set (reg:SF 759)
        (float:SF (reg:SI 451 [ D.25517 ]))) ge2fitman_fmtext_o.cpp:447 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 451 [ D.25517 ])
        (nil)))
(insn 1019 1018 1020 69 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 temp_float+0 S4 A32])
        (reg:SF 759)) ge2fitman_fmtext_o.cpp:447 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 759)
        (nil)))
(insn 1020 1019 1021 69 (set (reg:SI 760)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:449 90 {*movsi_internal}
     (nil))
(insn 1021 1020 1022 69 (set (reg:DI 452 [ D.25518 ])
        (sign_extend:DI (reg:SI 760))) ge2fitman_fmtext_o.cpp:449 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 760)
        (nil)))
(insn 1022 1021 1023 69 (parallel [
            (set (reg:DI 453 [ D.25518 ])
                (ashift:DI (reg:DI 452 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:449 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 452 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1023 1022 1024 69 (set (reg/f:DI 761)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:449 89 {*movdi_internal}
     (nil))
(insn 1024 1023 1025 69 (parallel [
            (set (reg/f:DI 454 [ D.25524 ])
                (plus:DI (reg:DI 453 [ D.25518 ])
                    (reg/f:DI 761)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:449 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 761)
        (expr_list:REG_DEAD (reg:DI 453 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 453 [ D.25518 ]))
                    (nil))))))
(insn 1025 1024 1026 69 (set (reg/f:DI 455 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 454 [ D.25524 ]) [0 _521->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 454 [ D.25524 ])
        (nil)))
(insn 1026 1025 1027 69 (set (reg:SI 762)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:449 90 {*movsi_internal}
     (nil))
(insn 1027 1026 1028 69 (set (reg:DI 456 [ D.25518 ])
        (sign_extend:DI (reg:SI 762))) ge2fitman_fmtext_o.cpp:449 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 762)
        (nil)))
(insn 1028 1027 1029 69 (parallel [
            (set (reg:DI 457 [ D.25518 ])
                (ashift:DI (reg:DI 456 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:449 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 456 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1029 1028 1030 69 (parallel [
            (set (reg/f:DI 458 [ D.25526 ])
                (plus:DI (reg/f:DI 455 [ D.25526 ])
                    (reg:DI 457 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:449 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 457 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 455 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1030 1029 1031 69 (set (reg:SF 763)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 temp_float+0 S4 A32])) ge2fitman_fmtext_o.cpp:449 129 {*movsf_internal}
     (nil))
(insn 1031 1030 1032 69 (set (mem:SF (reg/f:DI 458 [ D.25526 ]) [0 *_525+0 S4 A32])
        (reg:SF 763)) ge2fitman_fmtext_o.cpp:449 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 763)
        (expr_list:REG_DEAD (reg/f:DI 458 [ D.25526 ])
            (nil))))
(insn 1032 1031 1241 69 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:445 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1241 1032 1242 69 (set (pc)
        (label_ref 1033)) ge2fitman_fmtext_o.cpp:445 654 {jump}
     (nil)
 -> 1033)
;;  succ:       68 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1242 1241 1036)
;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;;              64
;;              66
;;              68
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1036 1242 1037 70 35 "" [4 uses])
(note 1037 1036 1038 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1038 1037 1039 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -77 [0xffffffffffffffb3])) [0 phaseIt+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:457 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1039 1038 1040 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1075)
            (pc))) ge2fitman_fmtext_o.cpp:457 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1075)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 459 460 461 462 463 464 465 466 467 468 469 470 471 472 764 765 766 767 768 769 770 771 772
(note 1040 1039 1041 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1041 1040 1042 71 (set (reg:SI 764)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:464 90 {*movsi_internal}
     (nil))
(insn 1042 1041 1043 71 (parallel [
            (set (reg:SI 459 [ D.25517 ])
                (plus:SI (reg:SI 764)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:464 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 764)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 1043 1042 1044 71 (set (reg:SI 765)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])) ge2fitman_fmtext_o.cpp:464 90 {*movsi_internal}
     (nil))
(insn 1044 1043 1045 71 (parallel [
            (set (reg:SI 460 [ D.25517 ])
                (plus:SI (reg:SI 765)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:464 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 765)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 1045 1044 1046 71 (set (reg:SI 1 dx)
        (reg:SI 459 [ D.25517 ])) ge2fitman_fmtext_o.cpp:464 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 459 [ D.25517 ])
        (nil)))
(insn 1046 1045 1047 71 (set (reg:SI 4 si)
        (reg:SI 460 [ D.25517 ])) ge2fitman_fmtext_o.cpp:464 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 460 [ D.25517 ])
        (nil)))
(insn 1047 1046 1048 71 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f7c3720ef30 *.LC14>)) ge2fitman_fmtext_o.cpp:464 89 {*movdi_internal}
     (nil))
(insn 1048 1047 1049 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:464 93 {*movqi_internal}
     (nil))
(call_insn 1049 1048 1050 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7c3899a5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:464 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 1050 1049 1051 71 (set (reg:SI 766)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (nil))
(insn 1051 1050 1052 71 (parallel [
            (set (reg:SI 461 [ D.25517 ])
                (plus:SI (reg:SI 766)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:477 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 766)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 1052 1051 1053 71 (set (reg:SI 767)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (nil))
(insn 1053 1052 1054 71 (set (reg:DI 462 [ D.25518 ])
        (sign_extend:DI (reg:SI 767))) ge2fitman_fmtext_o.cpp:477 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 767)
        (nil)))
(insn 1054 1053 1055 71 (parallel [
            (set (reg:DI 463 [ D.25518 ])
                (ashift:DI (reg:DI 462 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:477 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 462 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1055 1054 1056 71 (set (reg/f:DI 768)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:477 89 {*movdi_internal}
     (nil))
(insn 1056 1055 1057 71 (parallel [
            (set (reg/f:DI 464 [ D.25520 ])
                (plus:DI (reg:DI 463 [ D.25518 ])
                    (reg/f:DI 768)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 768)
        (expr_list:REG_DEAD (reg:DI 463 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 463 [ D.25518 ]))
                    (nil))))))
(insn 1057 1056 1058 71 (set (reg:DI 465 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 464 [ D.25520 ])
                (const_int 16 [0x10])) [0 _534->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:477 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 464 [ D.25520 ])
        (nil)))
(insn 1058 1057 1059 71 (set (reg:SI 466 [ D.25530 ])
        (subreg:SI (reg:DI 465 [ D.25521 ]) 0)) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 465 [ D.25521 ])
        (nil)))
(insn 1059 1058 1060 71 (parallel [
            (set (reg:SI 467 [ D.25530 ])
                (ashift:SI (reg:SI 466 [ D.25530 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:477 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 466 [ D.25530 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1060 1059 1061 71 (set (reg:SI 468 [ D.25517 ])
        (reg:SI 467 [ D.25530 ])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 467 [ D.25530 ])
        (nil)))
(insn 1061 1060 1062 71 (set (reg:SI 769)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (nil))
(insn 1062 1061 1063 71 (set (reg:DI 469 [ D.25518 ])
        (sign_extend:DI (reg:SI 769))) ge2fitman_fmtext_o.cpp:477 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 769)
        (nil)))
(insn 1063 1062 1064 71 (parallel [
            (set (reg:DI 470 [ D.25518 ])
                (ashift:DI (reg:DI 469 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:477 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 469 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1064 1063 1065 71 (set (reg/f:DI 770)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:477 89 {*movdi_internal}
     (nil))
(insn 1065 1064 1066 71 (parallel [
            (set (reg/f:DI 471 [ D.25526 ])
                (plus:DI (reg:DI 470 [ D.25518 ])
                    (reg/f:DI 770)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 770)
        (expr_list:REG_DEAD (reg:DI 470 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 phase+0 S8 A64])
                        (reg:DI 470 [ D.25518 ]))
                    (nil))))))
(insn 1066 1065 1067 71 (set (reg:SF 472 [ D.25541 ])
        (mem:SF (reg/f:DI 471 [ D.25526 ]) [0 *_541+0 S4 A32])) ge2fitman_fmtext_o.cpp:477 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 471 [ D.25526 ])
        (nil)))
(insn 1067 1066 1068 71 (set (reg:SI 771)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (nil))
(insn 1068 1067 1069 71 (set (reg:DI 772)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:477 89 {*movdi_internal}
     (nil))
(insn 1069 1068 1070 71 (set (reg:SI 2 cx)
        (reg:SI 461 [ D.25517 ])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 461 [ D.25517 ])
        (nil)))
(insn 1070 1069 1071 71 (set (reg:SI 1 dx)
        (reg:SI 771)) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 771)
        (nil)))
(insn 1071 1070 1072 71 (set (reg:DI 4 si)
        (reg:DI 772)) ge2fitman_fmtext_o.cpp:477 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 772)
        (nil)))
(insn 1072 1071 1073 71 (set (reg:SI 5 di)
        (reg:SI 468 [ D.25517 ])) ge2fitman_fmtext_o.cpp:477 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 468 [ D.25517 ])
        (nil)))
(insn 1073 1072 1074 71 (set (reg:SF 21 xmm0)
        (reg:SF 472 [ D.25541 ])) ge2fitman_fmtext_o.cpp:477 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 472 [ D.25541 ])
        (nil)))
(call_insn 1074 1073 1075 71 (call (mem:QI (symbol_ref:DI ("_Z9fix_phasefiP10Precision1ii") [flags 0x3]  <function_decl 0x7f7c37522a20 fix_phase>) [0 fix_phase S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:477 660 {*call}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70
;;              71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 473 773
(code_label 1075 1074 1076 72 40 "" [1 uses])
(note 1076 1075 1077 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1077 1076 1078 72 (set (reg:SI 773)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])) ge2fitman_fmtext_o.cpp:480 90 {*movsi_internal}
     (nil))
(insn 1078 1077 1079 72 (parallel [
            (set (reg:SI 473 [ D.25517 ])
                (plus:SI (reg:SI 773)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:480 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 773)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 1079 1078 1080 72 (set (reg:SI 4 si)
        (reg:SI 473 [ D.25517 ])) ge2fitman_fmtext_o.cpp:480 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 473 [ D.25517 ])
        (nil)))
(insn 1080 1079 1081 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f7c3723f000 *.LC15>)) ge2fitman_fmtext_o.cpp:480 89 {*movdi_internal}
     (nil))
(insn 1081 1080 1082 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:480 93 {*movqi_internal}
     (nil))
(call_insn 1082 1081 1083 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7c3899a5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:480 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 1083 1082 1169 72 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:516 90 {*movsi_internal}
     (nil))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;;              74 [100.0%] 
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 474 475 476 477 478 479 774 775 776
(code_label 1169 1083 1084 73 42 "" [1 uses])
(note 1084 1169 1085 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 73 (set (reg:SI 774)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:516 90 {*movsi_internal}
     (nil))
(insn 1086 1085 1087 73 (set (reg:DI 474 [ D.25521 ])
        (sign_extend:DI (reg:SI 774))) ge2fitman_fmtext_o.cpp:516 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 774)
        (nil)))
(insn 1087 1086 1088 73 (set (reg:SI 775)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:516 90 {*movsi_internal}
     (nil))
(insn 1088 1087 1089 73 (set (reg:DI 475 [ D.25518 ])
        (sign_extend:DI (reg:SI 775))) ge2fitman_fmtext_o.cpp:516 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 775)
        (nil)))
(insn 1089 1088 1090 73 (parallel [
            (set (reg:DI 476 [ D.25518 ])
                (ashift:DI (reg:DI 475 [ D.25518 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:516 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 475 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1090 1089 1091 73 (set (reg/f:DI 776)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:516 89 {*movdi_internal}
     (nil))
(insn 1091 1090 1092 73 (parallel [
            (set (reg/f:DI 477 [ D.25520 ])
                (plus:DI (reg:DI 476 [ D.25518 ])
                    (reg/f:DI 776)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:516 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 776)
        (expr_list:REG_DEAD (reg:DI 476 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 main_header+0 S8 A64])
                        (reg:DI 476 [ D.25518 ]))
                    (nil))))))
(insn 1092 1091 1093 73 (set (reg:DI 478 [ D.25521 ])
        (mem/j:DI (plus:DI (reg/f:DI 477 [ D.25520 ])
                (const_int 16 [0x10])) [0 _550->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 477 [ D.25520 ])
        (nil)))
(insn 1093 1092 1094 73 (parallel [
            (set (reg:DI 479 [ D.25521 ])
                (ashift:DI (reg:DI 478 [ D.25521 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:516 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 478 [ D.25521 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1094 1093 1095 73 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 474 [ D.25521 ])
            (reg:DI 479 [ D.25521 ]))) ge2fitman_fmtext_o.cpp:516 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 479 [ D.25521 ])
        (expr_list:REG_DEAD (reg:DI 474 [ D.25521 ])
            (nil))))
(jump_insn 1095 1094 1096 73 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1172)
            (pc))) ge2fitman_fmtext_o.cpp:516 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 1172)
;;  succ:       75
;;              74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794
(note 1096 1095 1097 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1097 1096 1098 74 (set (reg:SI 777)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 90 {*movsi_internal}
     (nil))
(insn 1098 1097 1099 74 (set (reg:DI 480 [ D.25518 ])
        (sign_extend:DI (reg:SI 777))) ge2fitman_fmtext_o.cpp:521 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 777)
        (nil)))
(insn 1099 1098 1100 74 (parallel [
            (set (reg:DI 481 [ D.25518 ])
                (ashift:DI (reg:DI 480 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 480 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1100 1099 1101 74 (set (reg/f:DI 778)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:521 89 {*movdi_internal}
     (nil))
(insn 1101 1100 1102 74 (parallel [
            (set (reg/f:DI 482 [ D.25525 ])
                (plus:DI (reg:DI 481 [ D.25518 ])
                    (reg/f:DI 778)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 778)
        (expr_list:REG_DEAD (reg:DI 481 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 481 [ D.25518 ]))
                    (nil))))))
(insn 1102 1101 1103 74 (set (reg/f:DI 483 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 482 [ D.25525 ]) [0 _555->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:521 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 482 [ D.25525 ])
        (nil)))
(insn 1103 1102 1104 74 (set (reg:SI 779)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 90 {*movsi_internal}
     (nil))
(insn 1104 1103 1105 74 (set (reg:DI 484 [ D.25518 ])
        (sign_extend:DI (reg:SI 779))) ge2fitman_fmtext_o.cpp:521 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 779)
        (nil)))
(insn 1105 1104 1106 74 (parallel [
            (set (reg:DI 485 [ D.25518 ])
                (ashift:DI (reg:DI 484 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 484 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1106 1105 1107 74 (parallel [
            (set (reg/f:DI 486 [ D.25526 ])
                (plus:DI (reg/f:DI 483 [ D.25526 ])
                    (reg:DI 485 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 485 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 483 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1107 1106 1108 74 (set (reg:SI 780)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 90 {*movsi_internal}
     (nil))
(insn 1108 1107 1109 74 (set (reg:DI 487 [ D.25518 ])
        (sign_extend:DI (reg:SI 780))) ge2fitman_fmtext_o.cpp:521 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 780)
        (nil)))
(insn 1109 1108 1110 74 (parallel [
            (set (reg:DI 488 [ D.25518 ])
                (ashift:DI (reg:DI 487 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 487 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1110 1109 1111 74 (set (reg/f:DI 781)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:521 89 {*movdi_internal}
     (nil))
(insn 1111 1110 1112 74 (parallel [
            (set (reg/f:DI 489 [ D.25525 ])
                (plus:DI (reg:DI 488 [ D.25518 ])
                    (reg/f:DI 781)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 781)
        (expr_list:REG_DEAD (reg:DI 488 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 488 [ D.25518 ]))
                    (nil))))))
(insn 1112 1111 1113 74 (set (reg/f:DI 490 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 489 [ D.25525 ]) [0 _562->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:521 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 489 [ D.25525 ])
        (nil)))
(insn 1113 1112 1114 74 (set (reg:SI 782)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 90 {*movsi_internal}
     (nil))
(insn 1114 1113 1115 74 (set (reg:DI 491 [ D.25518 ])
        (sign_extend:DI (reg:SI 782))) ge2fitman_fmtext_o.cpp:521 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 782)
        (nil)))
(insn 1115 1114 1116 74 (parallel [
            (set (reg:DI 492 [ D.25518 ])
                (ashift:DI (reg:DI 491 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 491 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1116 1115 1117 74 (parallel [
            (set (reg/f:DI 493 [ D.25526 ])
                (plus:DI (reg/f:DI 490 [ D.25526 ])
                    (reg:DI 492 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 492 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 490 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1117 1116 1118 74 (set (reg:SF 494 [ D.25541 ])
        (mem:SF (reg/f:DI 493 [ D.25526 ]) [0 *_566+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 493 [ D.25526 ])
        (nil)))
(insn 1118 1117 1119 74 (set (reg:SI 783)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 90 {*movsi_internal}
     (nil))
(insn 1119 1118 1120 74 (set (reg:DI 495 [ D.25518 ])
        (sign_extend:DI (reg:SI 783))) ge2fitman_fmtext_o.cpp:521 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 783)
        (nil)))
(insn 1120 1119 1121 74 (parallel [
            (set (reg:DI 496 [ D.25518 ])
                (ashift:DI (reg:DI 495 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 495 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1121 1120 1122 74 (set (reg/f:DI 784)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:521 89 {*movdi_internal}
     (nil))
(insn 1122 1121 1123 74 (parallel [
            (set (reg/f:DI 497 [ D.25524 ])
                (plus:DI (reg:DI 496 [ D.25518 ])
                    (reg/f:DI 784)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 784)
        (expr_list:REG_DEAD (reg:DI 496 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 496 [ D.25518 ]))
                    (nil))))))
(insn 1123 1122 1124 74 (set (reg/f:DI 498 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 497 [ D.25524 ]) [0 _570->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:521 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 497 [ D.25524 ])
        (nil)))
(insn 1124 1123 1125 74 (set (reg:SI 785)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 90 {*movsi_internal}
     (nil))
(insn 1125 1124 1126 74 (set (reg:DI 499 [ D.25518 ])
        (sign_extend:DI (reg:SI 785))) ge2fitman_fmtext_o.cpp:521 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 785)
        (nil)))
(insn 1126 1125 1127 74 (parallel [
            (set (reg:DI 500 [ D.25518 ])
                (ashift:DI (reg:DI 499 [ D.25518 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 499 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1127 1126 1128 74 (parallel [
            (set (reg/f:DI 501 [ D.25526 ])
                (plus:DI (reg/f:DI 498 [ D.25526 ])
                    (reg:DI 500 [ D.25518 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:521 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 500 [ D.25518 ])
        (expr_list:REG_DEAD (reg/f:DI 498 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1128 1127 1129 74 (set (reg:SF 502 [ D.25541 ])
        (mem:SF (reg/f:DI 501 [ D.25526 ]) [0 *_574+0 S4 A32])) ge2fitman_fmtext_o.cpp:521 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 501 [ D.25526 ])
        (nil)))
(insn 1129 1128 1130 74 (set (reg:SF 503 [ D.25541 ])
        (plus:SF (reg:SF 494 [ D.25541 ])
            (reg:SF 502 [ D.25541 ]))) ge2fitman_fmtext_o.cpp:521 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 502 [ D.25541 ])
        (expr_list:REG_DEAD (reg:SF 494 [ D.25541 ])
            (nil))))
(insn 1130 1129 1131 74 (set (mem:SF (reg/f:DI 486 [ D.25526 ]) [0 *_559+0 S4 A32])
        (reg:SF 503 [ D.25541 ])) ge2fitman_fmtext_o.cpp:521 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 503 [ D.25541 ])
        (expr_list:REG_DEAD (reg/f:DI 486 [ D.25526 ])
            (nil))))
(insn 1131 1130 1132 74 (set (reg:SI 786)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 90 {*movsi_internal}
     (nil))
(insn 1132 1131 1133 74 (set (reg:DI 504 [ D.25518 ])
        (sign_extend:DI (reg:SI 786))) ge2fitman_fmtext_o.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 786)
        (nil)))
(insn 1133 1132 1134 74 (parallel [
            (set (reg:DI 505 [ D.25518 ])
                (ashift:DI (reg:DI 504 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 504 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1134 1133 1135 74 (set (reg/f:DI 787)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:522 89 {*movdi_internal}
     (nil))
(insn 1135 1134 1136 74 (parallel [
            (set (reg/f:DI 506 [ D.25525 ])
                (plus:DI (reg:DI 505 [ D.25518 ])
                    (reg/f:DI 787)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 787)
        (expr_list:REG_DEAD (reg:DI 505 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 505 [ D.25518 ]))
                    (nil))))))
(insn 1136 1135 1137 74 (set (reg/f:DI 507 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 506 [ D.25525 ]) [0 _580->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:522 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 506 [ D.25525 ])
        (nil)))
(insn 1137 1136 1138 74 (set (reg:SI 788)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 90 {*movsi_internal}
     (nil))
(insn 1138 1137 1139 74 (set (reg:DI 508 [ D.25527 ])
        (sign_extend:DI (reg:SI 788))) ge2fitman_fmtext_o.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 788)
        (nil)))
(insn 1139 1138 1140 74 (parallel [
            (set (reg:DI 509 [ D.25527 ])
                (plus:DI (reg:DI 508 [ D.25527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 508 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1140 1139 1141 74 (parallel [
            (set (reg:DI 510 [ D.25527 ])
                (ashift:DI (reg:DI 509 [ D.25527 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 509 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1141 1140 1142 74 (parallel [
            (set (reg/f:DI 511 [ D.25526 ])
                (plus:DI (reg/f:DI 507 [ D.25526 ])
                    (reg:DI 510 [ D.25527 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 510 [ D.25527 ])
        (expr_list:REG_DEAD (reg/f:DI 507 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1142 1141 1143 74 (set (reg:SI 789)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 90 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 74 (set (reg:DI 512 [ D.25518 ])
        (sign_extend:DI (reg:SI 789))) ge2fitman_fmtext_o.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 789)
        (nil)))
(insn 1144 1143 1145 74 (parallel [
            (set (reg:DI 513 [ D.25518 ])
                (ashift:DI (reg:DI 512 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 512 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1145 1144 1146 74 (set (reg/f:DI 790)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:522 89 {*movdi_internal}
     (nil))
(insn 1146 1145 1147 74 (parallel [
            (set (reg/f:DI 514 [ D.25525 ])
                (plus:DI (reg:DI 513 [ D.25518 ])
                    (reg/f:DI 790)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 790)
        (expr_list:REG_DEAD (reg:DI 513 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 switch_data+0 S8 A64])
                        (reg:DI 513 [ D.25518 ]))
                    (nil))))))
(insn 1147 1146 1148 74 (set (reg/f:DI 515 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 514 [ D.25525 ]) [0 _588->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:522 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 514 [ D.25525 ])
        (nil)))
(insn 1148 1147 1149 74 (set (reg:SI 791)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 90 {*movsi_internal}
     (nil))
(insn 1149 1148 1150 74 (set (reg:DI 516 [ D.25527 ])
        (sign_extend:DI (reg:SI 791))) ge2fitman_fmtext_o.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 791)
        (nil)))
(insn 1150 1149 1151 74 (parallel [
            (set (reg:DI 517 [ D.25527 ])
                (plus:DI (reg:DI 516 [ D.25527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 516 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1151 1150 1152 74 (parallel [
            (set (reg:DI 518 [ D.25527 ])
                (ashift:DI (reg:DI 517 [ D.25527 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 517 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1152 1151 1153 74 (parallel [
            (set (reg/f:DI 519 [ D.25526 ])
                (plus:DI (reg/f:DI 515 [ D.25526 ])
                    (reg:DI 518 [ D.25527 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 518 [ D.25527 ])
        (expr_list:REG_DEAD (reg/f:DI 515 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1153 1152 1154 74 (set (reg:SF 520 [ D.25541 ])
        (mem:SF (reg/f:DI 519 [ D.25526 ]) [0 *_593+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 519 [ D.25526 ])
        (nil)))
(insn 1154 1153 1155 74 (set (reg:SI 792)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 90 {*movsi_internal}
     (nil))
(insn 1155 1154 1156 74 (set (reg:DI 521 [ D.25518 ])
        (sign_extend:DI (reg:SI 792))) ge2fitman_fmtext_o.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 792)
        (nil)))
(insn 1156 1155 1157 74 (parallel [
            (set (reg:DI 522 [ D.25518 ])
                (ashift:DI (reg:DI 521 [ D.25518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 521 [ D.25518 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1157 1156 1158 74 (set (reg/f:DI 793)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 16 [0x10])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:522 89 {*movdi_internal}
     (nil))
(insn 1158 1157 1159 74 (parallel [
            (set (reg/f:DI 523 [ D.25524 ])
                (plus:DI (reg:DI 522 [ D.25518 ])
                    (reg/f:DI 793)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 793)
        (expr_list:REG_DEAD (reg:DI 522 [ D.25518 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                                (const_int 16 [0x10])) [0 in_data+0 S8 A64])
                        (reg:DI 522 [ D.25518 ]))
                    (nil))))))
(insn 1159 1158 1160 74 (set (reg/f:DI 524 [ D.25526 ])
        (mem/f/j:DI (reg/f:DI 523 [ D.25524 ]) [0 _597->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:522 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 523 [ D.25524 ])
        (nil)))
(insn 1160 1159 1161 74 (set (reg:SI 794)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 90 {*movsi_internal}
     (nil))
(insn 1161 1160 1162 74 (set (reg:DI 525 [ D.25527 ])
        (sign_extend:DI (reg:SI 794))) ge2fitman_fmtext_o.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 794)
        (nil)))
(insn 1162 1161 1163 74 (parallel [
            (set (reg:DI 526 [ D.25527 ])
                (plus:DI (reg:DI 525 [ D.25527 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 525 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1163 1162 1164 74 (parallel [
            (set (reg:DI 527 [ D.25527 ])
                (ashift:DI (reg:DI 526 [ D.25527 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 526 [ D.25527 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1164 1163 1165 74 (parallel [
            (set (reg/f:DI 528 [ D.25526 ])
                (plus:DI (reg/f:DI 524 [ D.25526 ])
                    (reg:DI 527 [ D.25527 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:522 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 527 [ D.25527 ])
        (expr_list:REG_DEAD (reg/f:DI 524 [ D.25526 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1165 1164 1166 74 (set (reg:SF 529 [ D.25541 ])
        (mem:SF (reg/f:DI 528 [ D.25526 ]) [0 *_602+0 S4 A32])) ge2fitman_fmtext_o.cpp:522 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 528 [ D.25526 ])
        (nil)))
(insn 1166 1165 1167 74 (set (reg:SF 530 [ D.25541 ])
        (plus:SF (reg:SF 520 [ D.25541 ])
            (reg:SF 529 [ D.25541 ]))) ge2fitman_fmtext_o.cpp:522 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 529 [ D.25541 ])
        (expr_list:REG_DEAD (reg:SF 520 [ D.25541 ])
            (nil))))
(insn 1167 1166 1168 74 (set (mem:SF (reg/f:DI 511 [ D.25526 ]) [0 *_585+0 S4 A32])
        (reg:SF 530 [ D.25541 ])) ge2fitman_fmtext_o.cpp:522 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 530 [ D.25541 ])
        (expr_list:REG_DEAD (reg/f:DI 511 [ D.25526 ])
            (nil))))
(insn 1168 1167 1243 74 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 countPoint+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:516 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1243 1168 1244 74 (set (pc)
        (label_ref 1169)) ge2fitman_fmtext_o.cpp:516 654 {jump}
     (nil)
 -> 1169)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1244 1243 1172)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1172 1244 1173 75 41 "" [1 uses])
(note 1173 1172 1174 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1174 1173 1245 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 countFID+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:364 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1245 1174 1246 75 (set (pc)
        (label_ref 1175)) ge2fitman_fmtext_o.cpp:364 654 {jump}
     (nil)
 -> 1175)
;;  succ:       37 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1246 1245 1178)
;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1178 1246 1179 76 22 "" [1 uses])
(note 1179 1178 1180 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1180 1179 1247 76 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 countChannel+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:301 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1247 1180 1248 76 (set (pc)
        (label_ref 1181)) ge2fitman_fmtext_o.cpp:301 654 {jump}
     (nil)
 -> 1181)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1248 1247 1186)
;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              32
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1186 1248 1187 77 3 "" [2 uses])
(note 1187 1186 1188 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1188 1187 1249 77 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:63 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1249 1188 1250 77 (set (pc)
        (label_ref 1189)) ge2fitman_fmtext_o.cpp:63 654 {jump}
     (nil)
 -> 1189)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1250 1249 1192)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 531 532 795
(code_label 1192 1250 1193 78 2 "" [1 uses])
(note 1193 1192 1194 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1194 1193 1195 78 (set (reg:DI 795)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 temp_long+0 S8 A64])) ge2fitman_fmtext_o.cpp:578 89 {*movdi_internal}
     (nil))
(insn 1195 1194 1196 78 (set (reg:DI 5 di)
        (reg:DI 795)) ge2fitman_fmtext_o.cpp:578 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 795)
        (nil)))
(call_insn 1196 1195 1197 78 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f7c389bb1b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:578 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1197 1196 1200 78 (set (reg:SI 531 [ D.25517 ])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:580 90 {*movsi_internal}
     (nil))
(insn 1200 1197 1204 78 (set (reg:SI 532 [ <retval> ])
        (reg:SI 531 [ D.25517 ])) ge2fitman_fmtext_o.cpp:580 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 531 [ D.25517 ])
        (nil)))
(insn 1204 1200 1205 78 (set (reg/i:SI 0 ax)
        (reg:SI 532 [ <retval> ])) ge2fitman_fmtext_o.cpp:581 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 532 [ <retval> ])
        (nil)))
(insn 1205 1204 0 78 (use (reg/i:SI 0 ax)) ge2fitman_fmtext_o.cpp:581 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void fwrite_asc(char*, float*, Data_file_header*, Data_block_header*, int, Procpar_info*, Preprocess*) (_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess, funcdef_no=1022, decl_uid=24389, cgraph_uid=227, symbol_order=228)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 199.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 260.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r214: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r214,l0) best DIREG, allocno GENERAL_REGS
    r213: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r213,l0) best DIREG, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r205,l0) best CREG, allocno GENERAL_REGS
    r204: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r204,l0) best CREG, allocno GENERAL_REGS
    r203: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r203,l0) best DIREG, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r186,l0) best DIREG, allocno GENERAL_REGS
    r185: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r185,l0) best AREG, allocno GENERAL_REGS
    r184: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r184,l0) best CREG, allocno GENERAL_REGS
    r183: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r183,l0) best DIREG, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r181,l0) best CREG, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r176,l0) best AREG, allocno GENERAL_REGS
    r175: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r175,l0) best CREG, allocno GENERAL_REGS
    r174: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r174,l0) best DIREG, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r172,l0) best CREG, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r168,l0) best DIREG, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a105 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r162,l0) best DIREG, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r159,l0) best CREG, allocno GENERAL_REGS
    r158: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r158,l0) best DIREG, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r156,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r155,l0) best DIREG, allocno GENERAL_REGS
    r154: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a2 (r154,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a11 (r148,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a12 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a26 (r140,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a31 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a36 (r134,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r124,l0) best DREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a53 (r122,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a60 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a64 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a66 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a57 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a68 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r112,l0) best AD_REGS, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r107,l0) best SIREG, allocno GENERAL_REGS
    r106: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r106,l0) best AD_REGS, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r101,l0) best SIREG, allocno GENERAL_REGS
    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r100,l0) best DREG, allocno GENERAL_REGS
    r99: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a104 (r99,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a106 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a107 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a108 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a112 (r95,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r94: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a113 (r94,l0) best SSE_REGS, allocno SSE_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r154,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a3(r153,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a4(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r148,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a12(r147,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a13(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a16(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a19(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r140,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a27(r138,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a28(r136,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a29(r139,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a30(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r137,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a32(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a33(r135,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a34(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a35(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r134,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a37(r132,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a38(r130,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a39(r128,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a40(r126,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a41(r133,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a43(r131,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a44(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a45(r129,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a46(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a47(r127,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a48(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a49(r125,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a50(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a51(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a52(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r122,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a54(r120,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a55(r118,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a56(r116,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a57(r114,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a58(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a59(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r121,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a61(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a62(r119,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a63(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a64(r117,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a65(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a66(r115,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a67(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a68(r113,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a69(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a70(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r112,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a72(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a73(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a74(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:12
  a75(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:11
  a76(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a77(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a78(r181,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a79(r183,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:34 INT_SSE_REGS:30 ALL_REGS:516 MEM:9
  a80(r185,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a81(r184,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a82(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a83(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a85(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r106,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a87(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a88(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a89(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:12
  a90(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:11
  a91(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a92(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a93(r172,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a94(r174,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:34 INT_SSE_REGS:30 ALL_REGS:516 MEM:9
  a95(r176,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a96(r175,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a97(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a98(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a99(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a100(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a101(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a103(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r99,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a105(r165,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a106(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a107(r97,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a108(r96,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a109(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a110(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a111(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r95,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a113(r94,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a114(r93,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a115(r91,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a116(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:20 INT_SSE_REGS:20 ALL_REGS:204 MEM:5
  a117(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a118(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a119(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a120(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a121(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a122(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a124(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a125(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a126(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a127(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 273(l0): point = 1
   Insn 260(l0): point = 4
   Insn 259(l0): point = 6
   Insn 258(l0): point = 8
   Insn 256(l0): point = 11
   Insn 255(l0): point = 13
   Insn 220(l0): point = 16
   Insn 219(l0): point = 18
   Insn 218(l0): point = 20
   Insn 217(l0): point = 22
   Insn 216(l0): point = 24
   Insn 215(l0): point = 26
   Insn 214(l0): point = 28
   Insn 267(l0): point = 31
   Insn 249(l0): point = 33
   Insn 248(l0): point = 35
   Insn 247(l0): point = 37
   Insn 246(l0): point = 39
   Insn 245(l0): point = 41
   Insn 244(l0): point = 43
   Insn 243(l0): point = 45
   Insn 242(l0): point = 47
   Insn 241(l0): point = 49
   Insn 240(l0): point = 51
   Insn 239(l0): point = 53
   Insn 238(l0): point = 55
   Insn 237(l0): point = 57
   Insn 236(l0): point = 59
   Insn 235(l0): point = 61
   Insn 234(l0): point = 63
   Insn 233(l0): point = 65
   Insn 232(l0): point = 67
   Insn 231(l0): point = 69
   Insn 230(l0): point = 71
   Insn 229(l0): point = 73
   Insn 228(l0): point = 75
   Insn 227(l0): point = 77
   Insn 226(l0): point = 79
   Insn 225(l0): point = 81
   Insn 224(l0): point = 83
   Insn 223(l0): point = 85
   Insn 222(l0): point = 87
   Insn 212(l0): point = 90
   Insn 211(l0): point = 92
   Insn 210(l0): point = 94
   Insn 209(l0): point = 96
   Insn 208(l0): point = 98
   Insn 207(l0): point = 100
   Insn 206(l0): point = 102
   Insn 205(l0): point = 104
   Insn 204(l0): point = 106
   Insn 203(l0): point = 108
   Insn 202(l0): point = 110
   Insn 201(l0): point = 112
   Insn 200(l0): point = 114
   Insn 199(l0): point = 116
   Insn 198(l0): point = 118
   Insn 197(l0): point = 120
   Insn 196(l0): point = 122
   Insn 195(l0): point = 124
   Insn 194(l0): point = 126
   Insn 193(l0): point = 128
   Insn 192(l0): point = 130
   Insn 191(l0): point = 132
   Insn 190(l0): point = 134
   Insn 189(l0): point = 136
   Insn 188(l0): point = 138
   Insn 187(l0): point = 140
   Insn 186(l0): point = 142
   Insn 185(l0): point = 144
   Insn 184(l0): point = 146
   Insn 183(l0): point = 148
   Insn 182(l0): point = 150
   Insn 181(l0): point = 152
   Insn 180(l0): point = 154
   Insn 179(l0): point = 156
   Insn 178(l0): point = 158
   Insn 177(l0): point = 160
   Insn 176(l0): point = 162
   Insn 175(l0): point = 164
   Insn 174(l0): point = 166
   Insn 173(l0): point = 168
   Insn 172(l0): point = 170
   Insn 171(l0): point = 172
   Insn 170(l0): point = 174
   Insn 169(l0): point = 176
   Insn 168(l0): point = 178
   Insn 167(l0): point = 180
   Insn 166(l0): point = 182
   Insn 165(l0): point = 184
   Insn 164(l0): point = 186
   Insn 163(l0): point = 188
   Insn 162(l0): point = 190
   Insn 161(l0): point = 192
   Insn 160(l0): point = 194
   Insn 159(l0): point = 196
   Insn 158(l0): point = 198
   Insn 157(l0): point = 200
   Insn 156(l0): point = 202
   Insn 155(l0): point = 204
   Insn 154(l0): point = 206
   Insn 153(l0): point = 208
   Insn 152(l0): point = 210
   Insn 151(l0): point = 212
   Insn 150(l0): point = 214
   Insn 149(l0): point = 216
   Insn 148(l0): point = 218
   Insn 147(l0): point = 220
   Insn 146(l0): point = 222
   Insn 145(l0): point = 224
   Insn 144(l0): point = 226
   Insn 143(l0): point = 228
   Insn 142(l0): point = 230
   Insn 141(l0): point = 232
   Insn 140(l0): point = 234
   Insn 139(l0): point = 236
   Insn 138(l0): point = 238
   Insn 137(l0): point = 240
   Insn 136(l0): point = 242
   Insn 135(l0): point = 244
   Insn 134(l0): point = 246
   Insn 133(l0): point = 248
   Insn 132(l0): point = 250
   Insn 131(l0): point = 252
   Insn 130(l0): point = 254
   Insn 129(l0): point = 256
   Insn 128(l0): point = 258
   Insn 127(l0): point = 260
   Insn 126(l0): point = 262
   Insn 125(l0): point = 264
   Insn 124(l0): point = 266
   Insn 123(l0): point = 268
   Insn 122(l0): point = 270
   Insn 121(l0): point = 272
   Insn 120(l0): point = 274
   Insn 119(l0): point = 276
   Insn 118(l0): point = 278
   Insn 117(l0): point = 280
   Insn 116(l0): point = 282
   Insn 115(l0): point = 284
   Insn 113(l0): point = 286
   Insn 112(l0): point = 288
   Insn 111(l0): point = 290
   Insn 110(l0): point = 292
   Insn 109(l0): point = 294
   Insn 108(l0): point = 296
   Insn 114(l0): point = 298
   Insn 107(l0): point = 300
   Insn 106(l0): point = 302
   Insn 105(l0): point = 304
   Insn 104(l0): point = 306
   Insn 103(l0): point = 308
   Insn 102(l0): point = 310
   Insn 101(l0): point = 312
   Insn 100(l0): point = 314
   Insn 99(l0): point = 316
   Insn 98(l0): point = 318
   Insn 97(l0): point = 320
   Insn 96(l0): point = 322
   Insn 95(l0): point = 324
   Insn 94(l0): point = 326
   Insn 93(l0): point = 328
   Insn 92(l0): point = 330
   Insn 91(l0): point = 332
   Insn 90(l0): point = 334
   Insn 88(l0): point = 336
   Insn 87(l0): point = 338
   Insn 86(l0): point = 340
   Insn 85(l0): point = 342
   Insn 84(l0): point = 344
   Insn 83(l0): point = 346
   Insn 89(l0): point = 348
   Insn 82(l0): point = 350
   Insn 81(l0): point = 352
   Insn 80(l0): point = 354
   Insn 79(l0): point = 356
   Insn 78(l0): point = 358
   Insn 77(l0): point = 360
   Insn 76(l0): point = 362
   Insn 75(l0): point = 364
   Insn 74(l0): point = 366
   Insn 73(l0): point = 368
   Insn 72(l0): point = 370
   Insn 71(l0): point = 372
   Insn 70(l0): point = 374
   Insn 69(l0): point = 376
   Insn 68(l0): point = 378
   Insn 67(l0): point = 380
   Insn 66(l0): point = 382
   Insn 65(l0): point = 384
   Insn 64(l0): point = 386
   Insn 63(l0): point = 388
   Insn 62(l0): point = 390
   Insn 61(l0): point = 392
   Insn 60(l0): point = 394
   Insn 59(l0): point = 396
   Insn 58(l0): point = 398
   Insn 57(l0): point = 400
   Insn 56(l0): point = 402
   Insn 55(l0): point = 404
   Insn 54(l0): point = 406
   Insn 53(l0): point = 408
   Insn 52(l0): point = 410
   Insn 51(l0): point = 412
   Insn 50(l0): point = 414
   Insn 49(l0): point = 416
   Insn 48(l0): point = 418
   Insn 47(l0): point = 420
   Insn 46(l0): point = 422
   Insn 45(l0): point = 424
   Insn 44(l0): point = 426
   Insn 43(l0): point = 428
   Insn 42(l0): point = 430
   Insn 41(l0): point = 432
   Insn 40(l0): point = 434
   Insn 39(l0): point = 436
   Insn 38(l0): point = 438
   Insn 37(l0): point = 440
   Insn 36(l0): point = 442
   Insn 35(l0): point = 444
   Insn 34(l0): point = 446
   Insn 33(l0): point = 448
   Insn 32(l0): point = 450
   Insn 31(l0): point = 452
   Insn 30(l0): point = 454
   Insn 265(l0): point = 457
   Insn 25(l0): point = 459
   Insn 24(l0): point = 461
   Insn 23(l0): point = 463
   Insn 21(l0): point = 466
   Insn 20(l0): point = 468
   Insn 19(l0): point = 470
   Insn 18(l0): point = 472
   Insn 17(l0): point = 474
   Insn 16(l0): point = 476
   Insn 15(l0): point = 478
   Insn 14(l0): point = 480
   Insn 13(l0): point = 482
   Insn 12(l0): point = 484
   Insn 11(l0): point = 486
   Insn 7(l0): point = 488
   Insn 6(l0): point = 490
   Insn 5(l0): point = 492
   Insn 4(l0): point = 494
   Insn 3(l0): point = 496
   Insn 2(l0): point = 498
 a0(r214): [7..8]
 a1(r213): [40..45]
 a2(r154): [44..47]
 a3(r153): [48..49]
 a4(r152): [50..51]
 a5(r212): [52..53]
 a6(r151): [52..55]
 a7(r150): [56..57]
 a8(r149): [58..59]
 a9(r211): [60..61]
 a10(r210): [68..73]
 a11(r148): [72..75]
 a12(r147): [76..77]
 a13(r146): [78..79]
 a14(r209): [80..81]
 a15(r145): [80..83]
 a16(r144): [84..85]
 a17(r208): [86..87]
 a18(r143): [19..20]
 a19(r141): [19..26]
 a20(r142): [21..22]
 a21(r207): [23..24]
 a22(r206): [27..28]
 a23(r205): [101..102]
 a24(r204): [113..114]
 a25(r203): [121..130]
 a26(r140): [125..132]
 a27(r138): [127..138]
 a28(r136): [129..144]
 a29(r139): [133..134]
 a30(r202): [135..136]
 a31(r137): [139..140]
 a32(r201): [141..142]
 a33(r135): [145..146]
 a34(r200): [147..148]
 a35(r199): [155..168]
 a36(r134): [159..170]
 a37(r132): [161..176]
 a38(r130): [163..182]
 a39(r128): [165..188]
 a40(r126): [167..194]
 a41(r133): [171..172]
 a42(r198): [173..174]
 a43(r131): [177..178]
 a44(r197): [179..180]
 a45(r129): [183..184]
 a46(r196): [185..186]
 a47(r127): [189..190]
 a48(r195): [191..192]
 a49(r125): [195..196]
 a50(r194): [197..198]
 a51(r193): [205..220]
 a52(r124): [209..222]
 a53(r122): [211..228]
 a54(r120): [213..234]
 a55(r118): [215..240]
 a56(r116): [217..246]
 a57(r114): [219..252]
 a58(r123): [223..224]
 a59(r192): [225..226]
 a60(r121): [229..230]
 a61(r191): [231..232]
 a62(r119): [235..236]
 a63(r190): [237..238]
 a64(r117): [241..242]
 a65(r189): [243..244]
 a66(r115): [247..248]
 a67(r188): [249..250]
 a68(r113): [253..254]
 a69(r187): [255..256]
 a70(r186): [263..268]
 a71(r112): [267..270]
 a72(r111): [275..278]
 a73(r107): [277..304]
 a74(r108): [279..300]
 a75(r110): [281..284]
 a76(r109): [285..286]
 a77(r182): [287..288]
 a78(r181): [289..290]
 a79(r183): [290..294]
 a80(r185): [291..292]
 a81(r184): [291..296]
 a82(r180): [295..298]
 a83(r179): [301..302]
 a84(r178): [305..306]
 a85(r177): [313..318]
 a86(r106): [317..320]
 a87(r105): [325..328]
 a88(r101): [327..354]
 a89(r102): [329..350]
 a90(r104): [331..334]
 a91(r103): [335..336]
 a92(r173): [337..338]
 a93(r172): [339..340]
 a94(r174): [340..344]
 a95(r176): [341..342]
 a96(r175): [341..346]
 a97(r171): [345..348]
 a98(r170): [351..352]
 a99(r169): [355..356]
 a100(r168): [363..368]
 a101(r100): [367..370]
 a102(r167): [371..372]
 a103(r166): [379..384]
 a104(r99): [383..386]
 a105(r165): [387..388]
 a106(r98): [387..390]
 a107(r97): [391..392]
 a108(r96): [391..396]
 a109(r164): [393..394]
 a110(r163): [397..398]
 a111(r162): [405..410]
 a112(r95): [409..412]
 a113(r94): [413..414]
 a114(r93): [415..416]
 a115(r91): [415..422]
 a116(r92): [417..418]
 a117(r161): [419..420]
 a118(r160): [423..424]
 a119(r159): [435..436]
 a120(r158): [443..448]
 a121(r90): [447..450]
 a122(r89): [451..452]
 a123(r157): [453..454]
 a124(r156): [462..463]
 a125(r88): [469..470]
 a126(r87): [475..476]
 a127(r155): [481..484]
Compressing live ranges: from 501 to 184 - 36%
Ranges after the compression:
 a0(r214): [0..1]
 a1(r213): [10..11]
 a2(r154): [10..11]
 a3(r153): [12..13]
 a4(r152): [14..15]
 a5(r212): [16..17]
 a6(r151): [16..17]
 a7(r150): [18..19]
 a8(r149): [20..21]
 a9(r211): [22..23]
 a10(r210): [24..25]
 a11(r148): [24..25]
 a12(r147): [26..27]
 a13(r146): [28..29]
 a14(r209): [30..31]
 a15(r145): [30..31]
 a16(r144): [32..33]
 a17(r208): [34..35]
 a18(r143): [2..3]
 a19(r141): [2..7]
 a20(r142): [4..5]
 a21(r207): [6..7]
 a22(r206): [8..9]
 a23(r205): [36..37]
 a24(r204): [38..39]
 a25(r203): [40..41]
 a26(r140): [40..41]
 a27(r138): [40..45]
 a28(r136): [40..49]
 a29(r139): [42..43]
 a30(r202): [44..45]
 a31(r137): [46..47]
 a32(r201): [48..49]
 a33(r135): [50..51]
 a34(r200): [52..53]
 a35(r199): [54..55]
 a36(r134): [54..55]
 a37(r132): [54..59]
 a38(r130): [54..63]
 a39(r128): [54..67]
 a40(r126): [54..71]
 a41(r133): [56..57]
 a42(r198): [58..59]
 a43(r131): [60..61]
 a44(r197): [62..63]
 a45(r129): [64..65]
 a46(r196): [66..67]
 a47(r127): [68..69]
 a48(r195): [70..71]
 a49(r125): [72..73]
 a50(r194): [74..75]
 a51(r193): [76..77]
 a52(r124): [76..77]
 a53(r122): [76..81]
 a54(r120): [76..85]
 a55(r118): [76..89]
 a56(r116): [76..93]
 a57(r114): [76..97]
 a58(r123): [78..79]
 a59(r192): [80..81]
 a60(r121): [82..83]
 a61(r191): [84..85]
 a62(r119): [86..87]
 a63(r190): [88..89]
 a64(r117): [90..91]
 a65(r189): [92..93]
 a66(r115): [94..95]
 a67(r188): [96..97]
 a68(r113): [98..99]
 a69(r187): [100..101]
 a70(r186): [102..103]
 a71(r112): [102..103]
 a72(r111): [104..105]
 a73(r107): [104..119]
 a74(r108): [106..117]
 a75(r110): [106..107]
 a76(r109): [108..109]
 a77(r182): [110..111]
 a78(r181): [112..113]
 a79(r183): [113..115]
 a80(r185): [114..115]
 a81(r184): [114..117]
 a82(r180): [116..117]
 a83(r179): [118..119]
 a84(r178): [120..121]
 a85(r177): [122..123]
 a86(r106): [122..123]
 a87(r105): [124..125]
 a88(r101): [124..139]
 a89(r102): [126..137]
 a90(r104): [126..127]
 a91(r103): [128..129]
 a92(r173): [130..131]
 a93(r172): [132..133]
 a94(r174): [133..135]
 a95(r176): [134..135]
 a96(r175): [134..137]
 a97(r171): [136..137]
 a98(r170): [138..139]
 a99(r169): [140..141]
 a100(r168): [142..143]
 a101(r100): [142..143]
 a102(r167): [144..145]
 a103(r166): [146..147]
 a104(r99): [146..147]
 a105(r165): [148..149]
 a106(r98): [148..149]
 a107(r97): [150..151]
 a108(r96): [150..153]
 a109(r164): [152..153]
 a110(r163): [154..155]
 a111(r162): [156..157]
 a112(r95): [156..157]
 a113(r94): [158..159]
 a114(r93): [160..161]
 a115(r91): [160..165]
 a116(r92): [162..163]
 a117(r161): [164..165]
 a118(r160): [166..167]
 a119(r159): [168..169]
 a120(r158): [170..171]
 a121(r90): [170..171]
 a122(r89): [172..173]
 a123(r157): [174..175]
 a124(r156): [176..177]
 a125(r88): [178..179]
 a126(r87): [180..181]
 a127(r155): [182..183]
  pref0:a80(r185)<-hr0@1
  pref1:a81(r184)<-hr2@1
  pref2:a79(r183)<-hr5@2
  pref3:a78(r181)<-hr2@1
  pref4:a95(r176)<-hr0@1
  pref5:a96(r175)<-hr2@1
  pref6:a94(r174)<-hr5@2
  pref7:a93(r172)<-hr2@1
  regions=1, blocks=11, points=184
    allocnos=128 (big 0), copies=0, conflicts=0, ranges=128
Disposition:
  126:r87  l0     0  125:r88  l0     0  122:r89  l0     0  121:r90  l0     1
  115:r91  l0    22  116:r92  l0     0  114:r93  l0    21  113:r94  l0    21
  112:r95  l0    21  108:r96  l0    22  107:r97  l0    21  106:r98  l0    21
  104:r99  l0    21  101:r100 l0     1   88:r101 l0    37   89:r102 l0     1
   91:r103 l0     0   90:r104 l0     0   87:r105 l0     0   86:r106 l0     1
   73:r107 l0    37   74:r108 l0     1   76:r109 l0     0   75:r110 l0     0
   72:r111 l0     0   71:r112 l0     1   68:r113 l0    21   57:r114 l0    25
   66:r115 l0    21   56:r116 l0    24   64:r117 l0    21   55:r118 l0    23
   62:r119 l0    21   54:r120 l0    22   60:r121 l0    21   53:r122 l0    21
   58:r123 l0     0   52:r124 l0     1   49:r125 l0    21   40:r126 l0    25
   47:r127 l0    21   39:r128 l0    24   45:r129 l0    21   38:r130 l0    23
   43:r131 l0    21   37:r132 l0    22   41:r133 l0    21   36:r134 l0    21
   33:r135 l0    21   28:r136 l0    23   31:r137 l0    21   27:r138 l0    22
   29:r139 l0    21   26:r140 l0    21   19:r141 l0     1   20:r142 l0     0
   18:r143 l0     0   16:r144 l0     0   15:r145 l0     1   13:r146 l0     0
   12:r147 l0    21   11:r148 l0    21    8:r149 l0     0    7:r150 l0     0
    6:r151 l0     1    4:r152 l0     0    3:r153 l0    21    2:r154 l0    21
  127:r155 l0     0  124:r156 l0     0  123:r157 l0     0  120:r158 l0     0
  119:r159 l0     0  118:r160 l0     0  117:r161 l0     0  111:r162 l0     0
  110:r163 l0     0  109:r164 l0     0  105:r165 l0    22  103:r166 l0     0
  102:r167 l0     0  100:r168 l0     0   99:r169 l0     0   98:r170 l0     0
   97:r171 l0     0   93:r172 l0     0   92:r173 l0     0   94:r174 l0     4
   96:r175 l0     2   95:r176 l0     0   85:r177 l0     0   84:r178 l0     0
   83:r179 l0     0   82:r180 l0     0   78:r181 l0     0   77:r182 l0     0
   79:r183 l0     4   81:r184 l0     2   80:r185 l0     0   70:r186 l0     0
   69:r187 l0     0   67:r188 l0     0   65:r189 l0     0   63:r190 l0     0
   61:r191 l0     0   59:r192 l0     0   51:r193 l0     0   50:r194 l0     0
   48:r195 l0     0   46:r196 l0     0   44:r197 l0     0   42:r198 l0     0
   35:r199 l0     0   34:r200 l0     0   32:r201 l0     0   30:r202 l0     0
   25:r203 l0     0   24:r204 l0     0   23:r205 l0     0   22:r206 l0     0
   21:r207 l0     0   17:r208 l0     0   14:r209 l0     0   10:r210 l0     0
    9:r211 l0     0    5:r212 l0     0    1:r213 l0     0    0:r214 l0     0
+++Costs: overall -34, reg -34, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void fwrite_asc(char*, float*, Data_file_header*, Data_block_header*, int, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 37[r8] 38[r9]
;;  ref usage 	r0={31d,14u} r1={28d,9u} r2={23d,4u} r4={37d,18u} r5={39d,20u} r6={1d,10u} r7={1d,29u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,10u} r17={41d,4u} r18={19d} r19={19d} r20={1d,69u,6e} r21={27d,7u} r22={23d,3u} r23={23d,3u} r24={22d,2u} r25={22d,2u} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={20d,1u} r38={20d,1u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,3u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,3u} r109={1d,1u} r110={1d,2u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u,1e} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1e} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={2d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={2d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} 
;;    total ref usage 1962{1614d,340u,8e} in 246{227 regular + 19 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 155
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 outfile_name+0 S8 A64])
        (reg:DI 5 di [ outfile_name ])) ge2fitman_fmtext_o.cpp:589 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ outfile_name ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 data+0 S8 A64])
        (reg:DI 4 si [ data ])) ge2fitman_fmtext_o.cpp:589 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 main_header+0 S8 A64])
        (reg:DI 1 dx [ main_header ])) ge2fitman_fmtext_o.cpp:589 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ main_header ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 block_header+0 S8 A64])
        (reg:DI 2 cx [ block_header ])) ge2fitman_fmtext_o.cpp:589 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ block_header ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 index1+0 S4 A32])
        (reg:SI 37 r8 [ index1 ])) ge2fitman_fmtext_o.cpp:589 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ index1 ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])
        (reg:DI 38 r9 [ procpar_info ])) ge2fitman_fmtext_o.cpp:589 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ procpar_info ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:597 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 outfile_name+0 S8 A64])) ge2fitman_fmtext_o.cpp:599 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7c3725fd80 *.LC16>)) ge2fitman_fmtext_o.cpp:599 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 155)) ge2fitman_fmtext_o.cpp:599 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 155)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7c387cb6c0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:599 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg/f:DI 87 [ D.25558 ])
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:599 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])
        (reg/f:DI 87 [ D.25558 ])) ge2fitman_fmtext_o.cpp:599 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.25558 ])
        (nil)))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:599 4 {*cmpdi_ccno_1}
     (nil))
(insn 19 18 20 2 (set (reg:QI 88 [ D.25559 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:599 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 20 19 21 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.25559 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:599 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.25559 ])
        (nil)))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) ge2fitman_fmtext_o.cpp:599 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 156
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 outfile_name+0 S8 A64])) ge2fitman_fmtext_o.cpp:600 89 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 156)) ge2fitman_fmtext_o.cpp:600 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156)
        (nil)))
(call_insn 25 24 265 3 (call (mem:QI (symbol_ref:DI ("_Z7exit_08Pc") [flags 0x41]  <function_decl 0x7f7c37550798 exit_08>) [0 exit_08 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:600 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 265 25 266 3 (set (pc)
        (label_ref:DI 272)) ge2fitman_fmtext_o.cpp:645 654 {jump}
     (nil)
 -> 272)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 266 265 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
(code_label 28 266 29 4 48 "" [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:603 89 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:SI 89 [ D.25560 ])
        (mem/j:SI (plus:DI (reg/f:DI 157)
                (const_int 324 [0x144])) [0 procpar_info_12(D)->num_points+0 S4 A32])) ge2fitman_fmtext_o.cpp:603 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg:SI 90 [ D.25560 ])
                (ashift:SI (reg:SI 89 [ D.25560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:603 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.25560 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 4 (set (reg:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:603 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:SI 1 dx)
        (reg:SI 90 [ D.25560 ])) ge2fitman_fmtext_o.cpp:603 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.25560 ])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7c3725fe10 *.LC17>)) ge2fitman_fmtext_o.cpp:603 89 {*movdi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 5 di)
        (reg:DI 158)) ge2fitman_fmtext_o.cpp:603 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158)
        (nil)))
(insn 37 36 38 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:603 93 {*movqi_internal}
     (nil))
(call_insn 38 37 39 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:603 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 39 38 40 4 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:605 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 2 cx)
        (reg:DI 159)) ge2fitman_fmtext_o.cpp:605 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 41 40 42 4 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) ge2fitman_fmtext_o.cpp:605 89 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:605 89 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7c3725fea0 *.LC18>)) ge2fitman_fmtext_o.cpp:605 89 {*movdi_internal}
     (nil))
(call_insn 44 43 45 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f7c3899a000 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:605 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 45 44 46 4 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:607 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:SF 91 [ D.25561 ])
        (mem/j:SF (reg/f:DI 160) [0 procpar_info_12(D)->acquision_time+0 S4 A64])) ge2fitman_fmtext_o.cpp:607 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (nil)))
(insn 47 46 48 4 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:607 89 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:SI 92 [ D.25560 ])
        (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 324 [0x144])) [0 procpar_info_12(D)->num_points+0 S4 A32])) ge2fitman_fmtext_o.cpp:607 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 49 48 50 4 (set (reg:SF 93 [ D.25561 ])
        (float:SF (reg:SI 92 [ D.25560 ]))) ge2fitman_fmtext_o.cpp:607 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 92 [ D.25560 ])
        (nil)))
(insn 50 49 51 4 (set (reg:SF 94 [ D.25561 ])
        (div:SF (reg:SF 91 [ D.25561 ])
            (reg:SF 93 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:607 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 93 [ D.25561 ])
        (expr_list:REG_DEAD (reg:SF 91 [ D.25561 ])
            (nil))))
(insn 51 50 52 4 (set (reg:DF 95 [ D.25562 ])
        (float_extend:DF (reg:SF 94 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:607 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 94 [ D.25561 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:607 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DF 21 xmm0)
        (reg:DF 95 [ D.25562 ])) ge2fitman_fmtext_o.cpp:607 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 95 [ D.25562 ])
        (nil)))
(insn 54 53 55 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7c3725ff30 *.LC19>)) ge2fitman_fmtext_o.cpp:607 89 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (reg:DI 162)) ge2fitman_fmtext_o.cpp:607 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(insn 56 55 57 4 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:607 93 {*movqi_internal}
     (nil))
(call_insn 57 56 58 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:607 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 58 57 59 4 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:609 89 {*movdi_internal}
     (nil))
(insn 59 58 60 4 (set (reg:DF 96 [ D.25562 ])
        (mem/j:DF (plus:DI (reg/f:DI 163)
                (const_int 328 [0x148])) [0 procpar_info_12(D)->main_frequency+0 S8 A64])) ge2fitman_fmtext_o.cpp:609 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (nil)))
(insn 60 59 61 4 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:610 89 {*movdi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:DF 97 [ D.25562 ])
        (mem/j:DF (plus:DI (reg/f:DI 164)
                (const_int 336 [0x150])) [0 procpar_info_12(D)->offset_frequency+0 S8 A64])) ge2fitman_fmtext_o.cpp:610 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (nil)))
(insn 62 61 63 4 (set (reg:DF 98 [ D.25562 ])
        (plus:DF (reg:DF 96 [ D.25562 ])
            (reg:DF 97 [ D.25562 ]))) ge2fitman_fmtext_o.cpp:609 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.25562 ])
        (expr_list:REG_DEAD (reg:DF 96 [ D.25562 ])
            (nil))))
(insn 63 62 64 4 (set (reg:DF 165)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S8 A64])) ge2fitman_fmtext_o.cpp:609 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+7 [0x0.98968p+24])
        (nil)))
(insn 64 63 65 4 (set (reg:DF 99 [ D.25562 ])
        (div:DF (reg:DF 98 [ D.25562 ])
            (reg:DF 165))) ge2fitman_fmtext_o.cpp:609 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 165)
        (expr_list:REG_DEAD (reg:DF 98 [ D.25562 ])
            (nil))))
(insn 65 64 66 4 (set (reg:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:610 89 {*movdi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:DF 21 xmm0)
        (reg:DF 99 [ D.25562 ])) ge2fitman_fmtext_o.cpp:610 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 99 [ D.25562 ])
        (nil)))
(insn 67 66 68 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7c3726d000 *.LC21>)) ge2fitman_fmtext_o.cpp:610 89 {*movdi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 5 di)
        (reg:DI 166)) ge2fitman_fmtext_o.cpp:610 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166)
        (nil)))
(insn 69 68 70 4 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:610 93 {*movqi_internal}
     (nil))
(call_insn 70 69 71 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:610 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 71 70 72 4 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:612 89 {*movdi_internal}
     (nil))
(insn 72 71 73 4 (set (reg:SI 100 [ D.25560 ])
        (mem/j:SI (plus:DI (reg/f:DI 167)
                (const_int 320 [0x140])) [0 procpar_info_12(D)->num_transients+0 S4 A64])) ge2fitman_fmtext_o.cpp:612 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (nil)))
(insn 73 72 74 4 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:612 89 {*movdi_internal}
     (nil))
(insn 74 73 75 4 (set (reg:SI 1 dx)
        (reg:SI 100 [ D.25560 ])) ge2fitman_fmtext_o.cpp:612 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.25560 ])
        (nil)))
(insn 75 74 76 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7c3725fe10 *.LC17>)) ge2fitman_fmtext_o.cpp:612 89 {*movdi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:DI 5 di)
        (reg:DI 168)) ge2fitman_fmtext_o.cpp:612 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(insn 77 76 78 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:612 93 {*movqi_internal}
     (nil))
(call_insn 78 77 79 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:612 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 79 78 80 4 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (nil))
(insn 80 79 81 4 (parallel [
            (set (reg/f:DI 101 [ D.25563 ])
                (plus:DI (reg/f:DI 169)
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:614 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])
                    (const_int 440 [0x1b8]))
                (nil)))))
(insn 81 80 82 4 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (nil))
(insn 82 81 89 4 (parallel [
            (set (reg/f:DI 102 [ D.25564 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:614 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])
                    (const_int 404 [0x194]))
                (nil)))))
(insn 89 82 83 4 (set (reg:DI 171)
        (reg/f:DI 102 [ D.25564 ])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (nil))
(insn 83 89 84 4 (set (reg:DI 175)
        (const_int -1 [0xffffffffffffffff])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (nil))
(insn 84 83 85 4 (set (reg:DI 174)
        (reg:DI 171)) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(insn 85 84 86 4 (set (reg:QI 176)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:614 93 {*movqi_internal}
     (nil))
(insn 86 85 87 4 (parallel [
            (set (reg:DI 172)
                (unspec:DI [
                        (mem:BLK (reg:DI 174) [0  A8])
                        (reg:QI 176)
                        (const_int 1 [0x1])
                        (reg:DI 175)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 174))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:614 945 {*strlenqi_1}
     (expr_list:REG_DEAD (reg:QI 176)
        (expr_list:REG_DEAD (reg:DI 175)
            (expr_list:REG_DEAD (reg:DI 174)
                (expr_list:REG_UNUSED (reg:DI 174)
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 87 86 88 4 (set (reg:DI 173)
        (not:DI (reg:DI 172))) ge2fitman_fmtext_o.cpp:614 494 {*one_cmpldi2_1}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(insn 88 87 90 4 (parallel [
            (set (reg:DI 103 [ D.25565 ])
                (plus:DI (reg:DI 173)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:614 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 173)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 88 91 4 (parallel [
            (set (reg/f:DI 104 [ D.25564 ])
                (plus:DI (reg/f:DI 102 [ D.25564 ])
                    (reg:DI 103 [ D.25565 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:614 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ D.25565 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 4 (set (mem:HI (reg/f:DI 104 [ D.25564 ]) [0 MEM[(void *)_33]+0 S2 A8])
        (const_int 8236 [0x202c])) ge2fitman_fmtext_o.cpp:614 92 {*movhi_internal}
     (nil))
(insn 92 91 93 4 (set (mem:QI (plus:DI (reg/f:DI 104 [ D.25564 ])
                (const_int 2 [0x2])) [0 MEM[(void *)_33]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:614 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.25564 ])
        (nil)))
(insn 93 92 94 4 (set (reg/f:DI 105 [ D.25566 ])
        (reg/f:DI 102 [ D.25564 ])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.25564 ])
        (nil)))
(insn 94 93 95 4 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.25563 ])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.25563 ])
        (nil)))
(insn 95 94 96 4 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.25566 ])) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.25566 ])
        (nil)))
(call_insn 96 95 97 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7f7c3898bd80 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:614 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 97 96 98 4 (set (reg/f:DI 106 [ D.25566 ])
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:614 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 98 97 99 4 (set (reg:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:615 89 {*movdi_internal}
     (nil))
(insn 99 98 100 4 (set (reg:DI 1 dx)
        (reg/f:DI 106 [ D.25566 ])) ge2fitman_fmtext_o.cpp:615 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.25566 ])
        (nil)))
(insn 100 99 101 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7c3726d090 *.LC22>)) ge2fitman_fmtext_o.cpp:615 89 {*movdi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:DI 5 di)
        (reg:DI 177)) ge2fitman_fmtext_o.cpp:615 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
(insn 102 101 103 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:615 93 {*movqi_internal}
     (nil))
(call_insn 103 102 104 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:615 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 104 103 105 4 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (nil))
(insn 105 104 106 4 (parallel [
            (set (reg/f:DI 107 [ D.25567 ])
                (plus:DI (reg/f:DI 178)
                    (const_int 468 [0x1d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:617 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])
                    (const_int 468 [0x1d4]))
                (nil)))))
(insn 106 105 107 4 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (nil))
(insn 107 106 114 4 (parallel [
            (set (reg/f:DI 108 [ D.25568 ])
                (plus:DI (reg/f:DI 179)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:617 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 114 107 108 4 (set (reg:DI 180)
        (reg/f:DI 108 [ D.25568 ])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (nil))
(insn 108 114 109 4 (set (reg:DI 184)
        (const_int -1 [0xffffffffffffffff])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (nil))
(insn 109 108 110 4 (set (reg:DI 183)
        (reg:DI 180)) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(insn 110 109 111 4 (set (reg:QI 185)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:617 93 {*movqi_internal}
     (nil))
(insn 111 110 112 4 (parallel [
            (set (reg:DI 181)
                (unspec:DI [
                        (mem:BLK (reg:DI 183) [0  A8])
                        (reg:QI 185)
                        (const_int 1 [0x1])
                        (reg:DI 184)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 183))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:617 945 {*strlenqi_1}
     (expr_list:REG_DEAD (reg:QI 185)
        (expr_list:REG_DEAD (reg:DI 184)
            (expr_list:REG_DEAD (reg:DI 183)
                (expr_list:REG_UNUSED (reg:DI 183)
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 112 111 113 4 (set (reg:DI 182)
        (not:DI (reg:DI 181))) ge2fitman_fmtext_o.cpp:617 494 {*one_cmpldi2_1}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(insn 113 112 115 4 (parallel [
            (set (reg:DI 109 [ D.25565 ])
                (plus:DI (reg:DI 182)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:617 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 182)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 113 116 4 (parallel [
            (set (reg/f:DI 110 [ D.25568 ])
                (plus:DI (reg/f:DI 108 [ D.25568 ])
                    (reg:DI 109 [ D.25565 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:617 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ D.25565 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 4 (set (mem:HI (reg/f:DI 110 [ D.25568 ]) [0 MEM[(void *)_42]+0 S2 A8])
        (const_int 8236 [0x202c])) ge2fitman_fmtext_o.cpp:617 92 {*movhi_internal}
     (nil))
(insn 117 116 118 4 (set (mem:QI (plus:DI (reg/f:DI 110 [ D.25568 ])
                (const_int 2 [0x2])) [0 MEM[(void *)_42]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:617 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.25568 ])
        (nil)))
(insn 118 117 119 4 (set (reg/f:DI 111 [ D.25566 ])
        (reg/f:DI 108 [ D.25568 ])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.25568 ])
        (nil)))
(insn 119 118 120 4 (set (reg:DI 4 si)
        (reg/f:DI 107 [ D.25567 ])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.25567 ])
        (nil)))
(insn 120 119 121 4 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.25566 ])) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.25566 ])
        (nil)))
(call_insn 121 120 122 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcat") [flags 0x41]  <function_decl 0x7f7c3898bd80 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:617 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 122 121 123 4 (set (reg/f:DI 112 [ D.25566 ])
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:617 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 123 122 124 4 (set (reg:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:618 89 {*movdi_internal}
     (nil))
(insn 124 123 125 4 (set (reg:DI 1 dx)
        (reg/f:DI 112 [ D.25566 ])) ge2fitman_fmtext_o.cpp:618 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.25566 ])
        (nil)))
(insn 125 124 126 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7c3726d090 *.LC22>)) ge2fitman_fmtext_o.cpp:618 89 {*movdi_internal}
     (nil))
(insn 126 125 127 4 (set (reg:DI 5 di)
        (reg:DI 186)) ge2fitman_fmtext_o.cpp:618 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(insn 127 126 128 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:618 93 {*movqi_internal}
     (nil))
(call_insn 128 127 129 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:618 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 129 128 130 4 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:622 89 {*movdi_internal}
     (nil))
(insn 130 129 131 4 (set (reg:SF 113 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 187)
                (const_int 400 [0x190])) [0 procpar_info_12(D)->vtheta+0 S4 A64])) ge2fitman_fmtext_o.cpp:622 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (nil)))
(insn 131 130 132 4 (set (reg:DF 114 [ D.25562 ])
        (float_extend:DF (reg:SF 113 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:620 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 113 [ D.25561 ])
        (nil)))
(insn 132 131 133 4 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:622 89 {*movdi_internal}
     (nil))
(insn 133 132 134 4 (set (reg:SF 115 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 188)
                (const_int 384 [0x180])) [0 procpar_info_12(D)->vox3+0 S4 A64])) ge2fitman_fmtext_o.cpp:622 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (nil)))
(insn 134 133 135 4 (set (reg:DF 116 [ D.25562 ])
        (float_extend:DF (reg:SF 115 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:620 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 115 [ D.25561 ])
        (nil)))
(insn 135 134 136 4 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:622 89 {*movdi_internal}
     (nil))
(insn 136 135 137 4 (set (reg:SF 117 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 189)
                (const_int 380 [0x17c])) [0 procpar_info_12(D)->vox2+0 S4 A32])) ge2fitman_fmtext_o.cpp:622 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 189)
        (nil)))
(insn 137 136 138 4 (set (reg:DF 118 [ D.25562 ])
        (float_extend:DF (reg:SF 117 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:620 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 117 [ D.25561 ])
        (nil)))
(insn 138 137 139 4 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:621 89 {*movdi_internal}
     (nil))
(insn 139 138 140 4 (set (reg:SF 119 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 190)
                (const_int 376 [0x178])) [0 procpar_info_12(D)->vox1+0 S4 A64])) ge2fitman_fmtext_o.cpp:621 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (nil)))
(insn 140 139 141 4 (set (reg:DF 120 [ D.25562 ])
        (float_extend:DF (reg:SF 119 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:620 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 119 [ D.25561 ])
        (nil)))
(insn 141 140 142 4 (set (reg/f:DI 191)
        (mem/f/c:DI (reg/f:DI 16 argp) [0 preprocess+0 S8 A64])) ge2fitman_fmtext_o.cpp:621 89 {*movdi_internal}
     (nil))
(insn 142 141 143 4 (set (reg:SF 121 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 191)
                (const_int 4 [0x4])) [0 preprocess_56(D)->scale_factor+0 S4 A32])) ge2fitman_fmtext_o.cpp:621 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (nil)))
(insn 143 142 144 4 (set (reg:DF 122 [ D.25562 ])
        (float_extend:DF (reg:SF 121 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:620 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 121 [ D.25561 ])
        (nil)))
(insn 144 143 145 4 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 block_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:621 89 {*movdi_internal}
     (nil))
(insn 145 144 146 4 (set (reg:HI 123 [ D.25569 ])
        (mem/j:HI (reg/f:DI 192) [0 block_header_59(D)->scale.number+0 S2 A64])) ge2fitman_fmtext_o.cpp:621 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192)
        (nil)))
(insn 146 145 147 4 (set (reg:SI 124 [ D.25560 ])
        (sign_extend:SI (reg:HI 123 [ D.25569 ]))) ge2fitman_fmtext_o.cpp:620 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:HI 123 [ D.25569 ])
        (nil)))
(insn 147 146 148 4 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:622 89 {*movdi_internal}
     (nil))
(insn 148 147 149 4 (set (reg:DF 25 xmm4)
        (reg:DF 114 [ D.25562 ])) ge2fitman_fmtext_o.cpp:622 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 114 [ D.25562 ])
        (nil)))
(insn 149 148 150 4 (set (reg:DF 24 xmm3)
        (reg:DF 116 [ D.25562 ])) ge2fitman_fmtext_o.cpp:622 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 116 [ D.25562 ])
        (nil)))
(insn 150 149 151 4 (set (reg:DF 23 xmm2)
        (reg:DF 118 [ D.25562 ])) ge2fitman_fmtext_o.cpp:622 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 118 [ D.25562 ])
        (nil)))
(insn 151 150 152 4 (set (reg:DF 22 xmm1)
        (reg:DF 120 [ D.25562 ])) ge2fitman_fmtext_o.cpp:622 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 120 [ D.25562 ])
        (nil)))
(insn 152 151 153 4 (set (reg:DF 21 xmm0)
        (reg:DF 122 [ D.25562 ])) ge2fitman_fmtext_o.cpp:622 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 122 [ D.25562 ])
        (nil)))
(insn 153 152 154 4 (set (reg:SI 1 dx)
        (reg:SI 124 [ D.25560 ])) ge2fitman_fmtext_o.cpp:622 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124 [ D.25560 ])
        (nil)))
(insn 154 153 155 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f7c3726d120 *.LC23>)) ge2fitman_fmtext_o.cpp:622 89 {*movdi_internal}
     (nil))
(insn 155 154 156 4 (set (reg:DI 5 di)
        (reg:DI 193)) ge2fitman_fmtext_o.cpp:622 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 156 155 157 4 (set (reg:QI 0 ax)
        (const_int 5 [0x5])) ge2fitman_fmtext_o.cpp:622 93 {*movqi_internal}
     (nil))
(call_insn 157 156 158 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:622 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 25 xmm4)
        (expr_list:REG_DEAD (reg:DF 24 xmm3)
            (expr_list:REG_DEAD (reg:DF 23 xmm2)
                (expr_list:REG_DEAD (reg:DF 22 xmm1)
                    (expr_list:REG_DEAD (reg:DF 21 xmm0)
                        (expr_list:REG_DEAD (reg:DI 5 di)
                            (expr_list:REG_DEAD (reg:DI 4 si)
                                (expr_list:REG_DEAD (reg:SI 1 dx)
                                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                                        (nil))))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:DF (use (reg:DF 21 xmm0))
                        (expr_list:DF (use (reg:DF 22 xmm1))
                            (expr_list:DF (use (reg:DF 23 xmm2))
                                (expr_list:DF (use (reg:DF 24 xmm3))
                                    (expr_list:DF (use (reg:DF 25 xmm4))
                                        (nil)))))))))))
(insn 158 157 159 4 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:626 89 {*movdi_internal}
     (nil))
(insn 159 158 160 4 (set (reg:SF 125 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 194)
                (const_int 372 [0x174])) [0 procpar_info_12(D)->pos3+0 S4 A32])) ge2fitman_fmtext_o.cpp:626 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 194)
        (nil)))
(insn 160 159 161 4 (set (reg:DF 126 [ D.25562 ])
        (float_extend:DF (reg:SF 125 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:624 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 125 [ D.25561 ])
        (nil)))
(insn 161 160 162 4 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:625 89 {*movdi_internal}
     (nil))
(insn 162 161 163 4 (set (reg:SF 127 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 195)
                (const_int 368 [0x170])) [0 procpar_info_12(D)->pos2+0 S4 A64])) ge2fitman_fmtext_o.cpp:625 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (nil)))
(insn 163 162 164 4 (set (reg:DF 128 [ D.25562 ])
        (float_extend:DF (reg:SF 127 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:624 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 127 [ D.25561 ])
        (nil)))
(insn 164 163 165 4 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:625 89 {*movdi_internal}
     (nil))
(insn 165 164 166 4 (set (reg:SF 129 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 196)
                (const_int 364 [0x16c])) [0 procpar_info_12(D)->pos1+0 S4 A32])) ge2fitman_fmtext_o.cpp:625 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (nil)))
(insn 166 165 167 4 (set (reg:DF 130 [ D.25562 ])
        (float_extend:DF (reg:SF 129 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:624 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 129 [ D.25561 ])
        (nil)))
(insn 167 166 168 4 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:625 89 {*movdi_internal}
     (nil))
(insn 168 167 169 4 (set (reg:SF 131 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 197)
                (const_int 348 [0x15c])) [0 procpar_info_12(D)->tr+0 S4 A32])) ge2fitman_fmtext_o.cpp:625 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (nil)))
(insn 169 168 170 4 (set (reg:DF 132 [ D.25562 ])
        (float_extend:DF (reg:SF 131 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:624 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 131 [ D.25561 ])
        (nil)))
(insn 170 169 171 4 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:625 89 {*movdi_internal}
     (nil))
(insn 171 170 172 4 (set (reg:SF 133 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 198)
                (const_int 344 [0x158])) [0 procpar_info_12(D)->te+0 S4 A64])) ge2fitman_fmtext_o.cpp:625 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (nil)))
(insn 172 171 173 4 (set (reg:DF 134 [ D.25562 ])
        (float_extend:DF (reg:SF 133 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:624 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.25561 ])
        (nil)))
(insn 173 172 174 4 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:626 89 {*movdi_internal}
     (nil))
(insn 174 173 175 4 (set (reg:DF 25 xmm4)
        (reg:DF 126 [ D.25562 ])) ge2fitman_fmtext_o.cpp:626 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 126 [ D.25562 ])
        (nil)))
(insn 175 174 176 4 (set (reg:DF 24 xmm3)
        (reg:DF 128 [ D.25562 ])) ge2fitman_fmtext_o.cpp:626 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 128 [ D.25562 ])
        (nil)))
(insn 176 175 177 4 (set (reg:DF 23 xmm2)
        (reg:DF 130 [ D.25562 ])) ge2fitman_fmtext_o.cpp:626 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 130 [ D.25562 ])
        (nil)))
(insn 177 176 178 4 (set (reg:DF 22 xmm1)
        (reg:DF 132 [ D.25562 ])) ge2fitman_fmtext_o.cpp:626 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 132 [ D.25562 ])
        (nil)))
(insn 178 177 179 4 (set (reg:DF 21 xmm0)
        (reg:DF 134 [ D.25562 ])) ge2fitman_fmtext_o.cpp:626 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 134 [ D.25562 ])
        (nil)))
(insn 179 178 180 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7c3726d1b0 *.LC24>)) ge2fitman_fmtext_o.cpp:626 89 {*movdi_internal}
     (nil))
(insn 180 179 181 4 (set (reg:DI 5 di)
        (reg:DI 199)) ge2fitman_fmtext_o.cpp:626 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(insn 181 180 182 4 (set (reg:QI 0 ax)
        (const_int 5 [0x5])) ge2fitman_fmtext_o.cpp:626 93 {*movqi_internal}
     (nil))
(call_insn 182 181 183 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:626 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 25 xmm4)
        (expr_list:REG_DEAD (reg:DF 24 xmm3)
            (expr_list:REG_DEAD (reg:DF 23 xmm2)
                (expr_list:REG_DEAD (reg:DF 22 xmm1)
                    (expr_list:REG_DEAD (reg:DF 21 xmm0)
                        (expr_list:REG_DEAD (reg:DI 5 di)
                            (expr_list:REG_DEAD (reg:DI 4 si)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (expr_list:DF (use (reg:DF 22 xmm1))
                        (expr_list:DF (use (reg:DF 23 xmm2))
                            (expr_list:DF (use (reg:DF 24 xmm3))
                                (expr_list:DF (use (reg:DF 25 xmm4))
                                    (nil))))))))))
(insn 183 182 184 4 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:629 89 {*movdi_internal}
     (nil))
(insn 184 183 185 4 (set (reg:SF 135 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 200)
                (const_int 356 [0x164])) [0 procpar_info_12(D)->R2+0 S4 A32])) ge2fitman_fmtext_o.cpp:629 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (nil)))
(insn 185 184 186 4 (set (reg:DF 136 [ D.25562 ])
        (float_extend:DF (reg:SF 135 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:628 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 135 [ D.25561 ])
        (nil)))
(insn 186 185 187 4 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:629 89 {*movdi_internal}
     (nil))
(insn 187 186 188 4 (set (reg:SF 137 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 201)
                (const_int 352 [0x160])) [0 procpar_info_12(D)->R1+0 S4 A64])) ge2fitman_fmtext_o.cpp:629 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 188 187 189 4 (set (reg:DF 138 [ D.25562 ])
        (float_extend:DF (reg:SF 137 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:628 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 137 [ D.25561 ])
        (nil)))
(insn 189 188 190 4 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:629 89 {*movdi_internal}
     (nil))
(insn 190 189 191 4 (set (reg:SF 139 [ D.25561 ])
        (mem/j:SF (plus:DI (reg/f:DI 202)
                (const_int 360 [0x168])) [0 procpar_info_12(D)->gain+0 S4 A64])) ge2fitman_fmtext_o.cpp:629 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (nil)))
(insn 191 190 192 4 (set (reg:DF 140 [ D.25562 ])
        (float_extend:DF (reg:SF 139 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:628 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 139 [ D.25561 ])
        (nil)))
(insn 192 191 193 4 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:629 89 {*movdi_internal}
     (nil))
(insn 193 192 194 4 (set (reg:DF 23 xmm2)
        (reg:DF 136 [ D.25562 ])) ge2fitman_fmtext_o.cpp:629 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 136 [ D.25562 ])
        (nil)))
(insn 194 193 195 4 (set (reg:DF 22 xmm1)
        (reg:DF 138 [ D.25562 ])) ge2fitman_fmtext_o.cpp:629 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 138 [ D.25562 ])
        (nil)))
(insn 195 194 196 4 (set (reg:DF 21 xmm0)
        (reg:DF 140 [ D.25562 ])) ge2fitman_fmtext_o.cpp:629 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 140 [ D.25562 ])
        (nil)))
(insn 196 195 197 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f7c3726d240 *.LC25>)) ge2fitman_fmtext_o.cpp:629 89 {*movdi_internal}
     (nil))
(insn 197 196 198 4 (set (reg:DI 5 di)
        (reg:DI 203)) ge2fitman_fmtext_o.cpp:629 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 203)
        (nil)))
(insn 198 197 199 4 (set (reg:QI 0 ax)
        (const_int 3 [0x3])) ge2fitman_fmtext_o.cpp:629 93 {*movqi_internal}
     (nil))
(call_insn 199 198 200 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:629 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:DI 4 si)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (expr_list:DF (use (reg:DF 22 xmm1))
                        (expr_list:DF (use (reg:DF 23 xmm2))
                            (nil))))))))
(insn 200 199 201 4 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:631 89 {*movdi_internal}
     (nil))
(insn 201 200 202 4 (set (reg:DI 2 cx)
        (reg:DI 204)) ge2fitman_fmtext_o.cpp:631 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(insn 202 201 203 4 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) ge2fitman_fmtext_o.cpp:631 89 {*movdi_internal}
     (nil))
(insn 203 202 204 4 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:631 89 {*movdi_internal}
     (nil))
(insn 204 203 205 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f7c3726d2d0 *.LC26>)) ge2fitman_fmtext_o.cpp:631 89 {*movdi_internal}
     (nil))
(call_insn 205 204 206 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f7c3899a000 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:631 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 206 205 207 4 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:633 89 {*movdi_internal}
     (nil))
(insn 207 206 208 4 (set (reg:DI 2 cx)
        (reg:DI 205)) ge2fitman_fmtext_o.cpp:633 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 208 207 209 4 (set (reg:DI 1 dx)
        (const_int 6 [0x6])) ge2fitman_fmtext_o.cpp:633 89 {*movdi_internal}
     (nil))
(insn 209 208 210 4 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:633 89 {*movdi_internal}
     (nil))
(insn 210 209 211 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f7c3726d360 *.LC27>)) ge2fitman_fmtext_o.cpp:633 89 {*movdi_internal}
     (nil))
(call_insn 211 210 212 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f7c3899a000 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:633 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 212 211 250 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:637 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 142 143 206 207
(code_label 250 212 213 5 51 "" [1 uses])
(note 213 250 214 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 5 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_fmtext_o.cpp:637 90 {*movsi_internal}
     (nil))
(insn 215 214 216 5 (set (reg:DI 141 [ D.25570 ])
        (sign_extend:DI (reg:SI 206))) ge2fitman_fmtext_o.cpp:637 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
(insn 216 215 217 5 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:637 89 {*movdi_internal}
     (nil))
(insn 217 216 218 5 (set (reg:DI 142 [ D.25570 ])
        (mem/j:DI (plus:DI (reg/f:DI 207)
                (const_int 16 [0x10])) [0 main_header_85(D)->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:637 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (nil)))
(insn 218 217 219 5 (parallel [
            (set (reg:DI 143 [ D.25570 ])
                (ashift:DI (reg:DI 142 [ D.25570 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:637 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.25570 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 141 [ D.25570 ])
            (reg:DI 143 [ D.25570 ]))) ge2fitman_fmtext_o.cpp:637 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.25570 ])
        (expr_list:REG_DEAD (reg:DI 141 [ D.25570 ])
            (nil))))
(jump_insn 220 219 221 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) ge2fitman_fmtext_o.cpp:637 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 253)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 144 145 146 147 148 149 150 151 152 153 154 208 209 210 211 212 213
(note 221 220 222 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 6 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_fmtext_o.cpp:638 90 {*movsi_internal}
     (nil))
(insn 223 222 224 6 (set (reg:DI 144 [ D.25565 ])
        (sign_extend:DI (reg:SI 208))) ge2fitman_fmtext_o.cpp:638 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
(insn 224 223 225 6 (parallel [
            (set (reg:DI 145 [ D.25565 ])
                (ashift:DI (reg:DI 144 [ D.25565 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:638 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 144 [ D.25565 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 225 224 226 6 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 data+0 S8 A64])) ge2fitman_fmtext_o.cpp:638 89 {*movdi_internal}
     (nil))
(insn 226 225 227 6 (parallel [
            (set (reg/f:DI 146 [ D.25571 ])
                (plus:DI (reg:DI 145 [ D.25565 ])
                    (reg/f:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:638 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_DEAD (reg:DI 145 [ D.25565 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 data+0 S8 A64])
                        (reg:DI 145 [ D.25565 ]))
                    (nil))))))
(insn 227 226 228 6 (set (reg:SF 147 [ D.25561 ])
        (mem:SF (reg/f:DI 146 [ D.25571 ]) [0 *_91+0 S4 A32])) ge2fitman_fmtext_o.cpp:638 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 146 [ D.25571 ])
        (nil)))
(insn 228 227 229 6 (set (reg:DF 148 [ D.25562 ])
        (float_extend:DF (reg:SF 147 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:638 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 147 [ D.25561 ])
        (nil)))
(insn 229 228 230 6 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:638 89 {*movdi_internal}
     (nil))
(insn 230 229 231 6 (set (reg:DF 21 xmm0)
        (reg:DF 148 [ D.25562 ])) ge2fitman_fmtext_o.cpp:638 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 148 [ D.25562 ])
        (nil)))
(insn 231 230 232 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7c3726d3f0 *.LC28>)) ge2fitman_fmtext_o.cpp:638 89 {*movdi_internal}
     (nil))
(insn 232 231 233 6 (set (reg:DI 5 di)
        (reg:DI 210)) ge2fitman_fmtext_o.cpp:638 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(insn 233 232 234 6 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:638 93 {*movqi_internal}
     (nil))
(call_insn 234 233 235 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:638 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 235 234 236 6 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_fmtext_o.cpp:639 90 {*movsi_internal}
     (nil))
(insn 236 235 237 6 (set (reg:DI 149 [ D.25572 ])
        (sign_extend:DI (reg:SI 211))) ge2fitman_fmtext_o.cpp:639 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 211)
        (nil)))
(insn 237 236 238 6 (parallel [
            (set (reg:DI 150 [ D.25572 ])
                (plus:DI (reg:DI 149 [ D.25572 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:639 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.25572 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 238 237 239 6 (parallel [
            (set (reg:DI 151 [ D.25572 ])
                (ashift:DI (reg:DI 150 [ D.25572 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:639 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.25572 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 239 238 240 6 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 data+0 S8 A64])) ge2fitman_fmtext_o.cpp:639 89 {*movdi_internal}
     (nil))
(insn 240 239 241 6 (parallel [
            (set (reg/f:DI 152 [ D.25571 ])
                (plus:DI (reg:DI 151 [ D.25572 ])
                    (reg/f:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:639 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (expr_list:REG_DEAD (reg:DI 151 [ D.25572 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 data+0 S8 A64])
                        (reg:DI 151 [ D.25572 ]))
                    (nil))))))
(insn 241 240 242 6 (set (reg:SF 153 [ D.25561 ])
        (mem:SF (reg/f:DI 152 [ D.25571 ]) [0 *_98+0 S4 A32])) ge2fitman_fmtext_o.cpp:639 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.25571 ])
        (nil)))
(insn 242 241 243 6 (set (reg:DF 154 [ D.25562 ])
        (float_extend:DF (reg:SF 153 [ D.25561 ]))) ge2fitman_fmtext_o.cpp:639 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 153 [ D.25561 ])
        (nil)))
(insn 243 242 244 6 (set (reg:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:639 89 {*movdi_internal}
     (nil))
(insn 244 243 245 6 (set (reg:DF 21 xmm0)
        (reg:DF 154 [ D.25562 ])) ge2fitman_fmtext_o.cpp:639 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 154 [ D.25562 ])
        (nil)))
(insn 245 244 246 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7c3726d3f0 *.LC28>)) ge2fitman_fmtext_o.cpp:639 89 {*movdi_internal}
     (nil))
(insn 246 245 247 6 (set (reg:DI 5 di)
        (reg:DI 213)) ge2fitman_fmtext_o.cpp:639 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 213)
        (nil)))
(insn 247 246 248 6 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:639 93 {*movqi_internal}
     (nil))
(call_insn 248 247 249 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f7c38994870 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:639 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 249 248 267 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:637 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 267 249 268 6 (set (pc)
        (label_ref 250)) ge2fitman_fmtext_o.cpp:637 654 {jump}
     (nil)
 -> 250)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 268 267 253)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 253 268 254 7 50 "" [1 uses])
(note 254 253 255 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:641 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 256 255 257 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 272)
            (pc))) ge2fitman_fmtext_o.cpp:641 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 272)
;;  succ:       8 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 214
(note 257 256 258 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 8 (set (reg:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 of+0 S8 A64])) ge2fitman_fmtext_o.cpp:642 89 {*movdi_internal}
     (nil))
(insn 259 258 260 8 (set (reg:DI 5 di)
        (reg:DI 214)) ge2fitman_fmtext_o.cpp:642 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(call_insn 260 259 272 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7c387cb360 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:642 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 9, flags: (NEW, RTL, MODIFIED)
;;  pred:       7
;;              3 [100.0%] 
;;              8 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 272 260 271 10 52 "" [2 uses])
(note 271 272 273 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 273 271 263 10 (const_int 0 [0]) ge2fitman_fmtext_o.cpp:645 684 {nop}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 263 273 264 9 47 "" [0 uses])
(note 264 263 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void get_phase(float*, FILE**, Data_file_header*, InFile_struct*, long int, IOFiles*, int, Procpar_info*) (_Z9get_phasePfPP8_IO_FILEP16Data_file_headerP13InFile_structlP7IOFilesiP12Procpar_info, funcdef_no=1023, decl_uid=24398, cgraph_uid=228, symbol_order=229)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 40 count 30 (    1)
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 277.
verify found no changes in insn with uid = 279.
verify found no changes in insn with uid = 303.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a3 (r240,l0) best SSE_REGS, allocno SSE_REGS
    r239: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a6 (r239,l0) best SSE_REGS, allocno SSE_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a17 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a22 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r209,l0) best DIREG, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a123 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r188,l0) best AREG, allocno GENERAL_REGS
    r187: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a154 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r186,l0) best SIREG, allocno GENERAL_REGS
    r185: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a1 (r185,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a15 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a32 (r168,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r167: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a33 (r167,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a62 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r128,l0) best SIREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r123,l0) best SIREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r118,l0) best SIREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r103,l0) best CREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a153 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a1(r185,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a2(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r240,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a4(r184,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a5(r183,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r239,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a7(r182,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a8(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r178,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a16(r177,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r235,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a18(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r231,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a23(r173,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a24(r232,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a25(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a28(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a32(r168,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a33(r167,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a34(r163,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a35(r166,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a36(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a37(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r162,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a39(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a40(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a45(r226,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a46(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a47(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r224,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a51(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:20 INT_SSE_REGS:20 ALL_REGS:204 MEM:5
  a52(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a54(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a56(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a59(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a61(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a63(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:21 INT_SSE_REGS:21 ALL_REGS:308 MEM:5
  a64(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a65(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a67(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a69(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a70(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a71(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a75(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a76(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a78(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a79(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a80(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a81(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a85(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a86(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a87(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a89(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a90(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a91(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a92(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a94(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a96(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a97(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a99(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a100(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a101(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a102(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a103(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a104(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a106(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a109(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a110(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a111(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a112(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a113(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a114(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a116(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a117(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a118(r104,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a119(r206,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a120(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a121(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a122(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a123(r202,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a124(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a125(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a126(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a128(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a129(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a130(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a131(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a132(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a136(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a137(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a139(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a140(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a141(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a142(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a143(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a144(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a146(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a147(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a148(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a150(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a151(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a152(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a153(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a154(r187,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 328(l0): point = 1
   Insn 284(l0): point = 4
   Insn 283(l0): point = 6
   Insn 282(l0): point = 8
   Insn 324(l0): point = 11
   Insn 304(l0): point = 13
   Insn 303(l0): point = 15
   Insn 302(l0): point = 17
   Insn 301(l0): point = 19
   Insn 300(l0): point = 21
   Insn 299(l0): point = 23
   Insn 298(l0): point = 25
   Insn 297(l0): point = 27
   Insn 296(l0): point = 29
   Insn 295(l0): point = 31
   Insn 294(l0): point = 33
   Insn 293(l0): point = 35
   Insn 292(l0): point = 37
   Insn 291(l0): point = 39
   Insn 290(l0): point = 41
   Insn 289(l0): point = 43
   Insn 288(l0): point = 45
   Insn 287(l0): point = 47
   Insn 286(l0): point = 49
   Insn 280(l0): point = 52
   Insn 279(l0): point = 54
   Insn 278(l0): point = 56
   Insn 277(l0): point = 58
   Insn 276(l0): point = 60
   Insn 43(l0): point = 63
   Insn 42(l0): point = 65
   Insn 41(l0): point = 67
   Insn 40(l0): point = 69
   Insn 322(l0): point = 72
   Insn 270(l0): point = 74
   Insn 269(l0): point = 76
   Insn 268(l0): point = 78
   Insn 267(l0): point = 80
   Insn 266(l0): point = 82
   Insn 265(l0): point = 84
   Insn 264(l0): point = 86
   Insn 263(l0): point = 88
   Insn 262(l0): point = 90
   Insn 261(l0): point = 92
   Insn 70(l0): point = 95
   Insn 69(l0): point = 97
   Insn 68(l0): point = 99
   Insn 66(l0): point = 102
   Insn 65(l0): point = 104
   Insn 64(l0): point = 106
   Insn 63(l0): point = 108
   Insn 62(l0): point = 110
   Insn 61(l0): point = 112
   Insn 60(l0): point = 114
   Insn 59(l0): point = 116
   Insn 58(l0): point = 118
   Insn 57(l0): point = 120
   Insn 56(l0): point = 122
   Insn 55(l0): point = 124
   Insn 54(l0): point = 126
   Insn 53(l0): point = 128
   Insn 52(l0): point = 130
   Insn 51(l0): point = 132
   Insn 50(l0): point = 134
   Insn 49(l0): point = 136
   Insn 48(l0): point = 138
   Insn 47(l0): point = 140
   Insn 46(l0): point = 142
   Insn 45(l0): point = 144
   Insn 320(l0): point = 147
   Insn 255(l0): point = 149
   Insn 254(l0): point = 151
   Insn 253(l0): point = 153
   Insn 252(l0): point = 155
   Insn 251(l0): point = 157
   Insn 250(l0): point = 159
   Insn 249(l0): point = 161
   Insn 248(l0): point = 163
   Insn 247(l0): point = 165
   Insn 246(l0): point = 167
   Insn 245(l0): point = 169
   Insn 244(l0): point = 171
   Insn 243(l0): point = 173
   Insn 242(l0): point = 175
   Insn 241(l0): point = 177
   Insn 240(l0): point = 179
   Insn 239(l0): point = 181
   Insn 238(l0): point = 183
   Insn 237(l0): point = 185
   Insn 236(l0): point = 187
   Insn 235(l0): point = 189
   Insn 234(l0): point = 191
   Insn 233(l0): point = 193
   Insn 232(l0): point = 195
   Insn 231(l0): point = 197
   Insn 230(l0): point = 199
   Insn 229(l0): point = 201
   Insn 228(l0): point = 203
   Insn 173(l0): point = 206
   Insn 172(l0): point = 208
   Insn 170(l0): point = 211
   Insn 316(l0): point = 214
   Insn 189(l0): point = 216
   Insn 188(l0): point = 218
   Insn 187(l0): point = 220
   Insn 186(l0): point = 222
   Insn 185(l0): point = 224
   Insn 184(l0): point = 226
   Insn 183(l0): point = 228
   Insn 182(l0): point = 230
   Insn 181(l0): point = 232
   Insn 180(l0): point = 234
   Insn 179(l0): point = 236
   Insn 178(l0): point = 238
   Insn 177(l0): point = 240
   Insn 176(l0): point = 242
   Insn 175(l0): point = 244
   Insn 200(l0): point = 247
   Insn 199(l0): point = 249
   Insn 198(l0): point = 251
   Insn 197(l0): point = 253
   Insn 196(l0): point = 255
   Insn 195(l0): point = 257
   Insn 168(l0): point = 260
   Insn 167(l0): point = 262
   Insn 166(l0): point = 264
   Insn 165(l0): point = 266
   Insn 164(l0): point = 268
   Insn 163(l0): point = 270
   Insn 119(l0): point = 273
   Insn 118(l0): point = 275
   Insn 117(l0): point = 277
   Insn 116(l0): point = 279
   Insn 115(l0): point = 281
   Insn 114(l0): point = 283
   Insn 113(l0): point = 285
   Insn 112(l0): point = 287
   Insn 111(l0): point = 289
   Insn 110(l0): point = 291
   Insn 109(l0): point = 293
   Insn 108(l0): point = 295
   Insn 107(l0): point = 297
   Insn 106(l0): point = 299
   Insn 105(l0): point = 301
   Insn 104(l0): point = 303
   Insn 103(l0): point = 305
   Insn 102(l0): point = 307
   Insn 101(l0): point = 309
   Insn 100(l0): point = 311
   Insn 91(l0): point = 314
   Insn 90(l0): point = 316
   Insn 89(l0): point = 318
   Insn 88(l0): point = 320
   Insn 87(l0): point = 322
   Insn 86(l0): point = 324
   Insn 85(l0): point = 326
   Insn 84(l0): point = 328
   Insn 83(l0): point = 330
   Insn 82(l0): point = 332
   Insn 81(l0): point = 334
   Insn 80(l0): point = 336
   Insn 79(l0): point = 338
   Insn 78(l0): point = 340
   Insn 77(l0): point = 342
   Insn 76(l0): point = 344
   Insn 75(l0): point = 346
   Insn 74(l0): point = 348
   Insn 73(l0): point = 350
   Insn 72(l0): point = 352
   Insn 97(l0): point = 355
   Insn 96(l0): point = 357
   Insn 95(l0): point = 359
   Insn 94(l0): point = 361
   Insn 93(l0): point = 363
   Insn 124(l0): point = 366
   Insn 123(l0): point = 368
   Insn 121(l0): point = 371
   Insn 314(l0): point = 374
   Insn 157(l0): point = 376
   Insn 154(l0): point = 379
   Insn 153(l0): point = 381
   Insn 152(l0): point = 383
   Insn 151(l0): point = 385
   Insn 150(l0): point = 387
   Insn 149(l0): point = 389
   Insn 148(l0): point = 391
   Insn 147(l0): point = 393
   Insn 146(l0): point = 395
   Insn 312(l0): point = 398
   Insn 141(l0): point = 400
   Insn 140(l0): point = 402
   Insn 139(l0): point = 404
   Insn 138(l0): point = 406
   Insn 137(l0): point = 408
   Insn 136(l0): point = 410
   Insn 135(l0): point = 412
   Insn 134(l0): point = 414
   Insn 133(l0): point = 416
   Insn 131(l0): point = 419
   Insn 130(l0): point = 421
   Insn 129(l0): point = 423
   Insn 128(l0): point = 425
   Insn 127(l0): point = 427
   Insn 126(l0): point = 429
   Insn 205(l0): point = 432
   Insn 204(l0): point = 434
   Insn 202(l0): point = 437
   Insn 318(l0): point = 440
   Insn 222(l0): point = 442
   Insn 221(l0): point = 444
   Insn 220(l0): point = 446
   Insn 219(l0): point = 448
   Insn 218(l0): point = 450
   Insn 217(l0): point = 452
   Insn 216(l0): point = 454
   Insn 215(l0): point = 456
   Insn 214(l0): point = 458
   Insn 213(l0): point = 460
   Insn 212(l0): point = 462
   Insn 211(l0): point = 464
   Insn 210(l0): point = 466
   Insn 209(l0): point = 468
   Insn 208(l0): point = 470
   Insn 207(l0): point = 472
   Insn 38(l0): point = 475
   Insn 37(l0): point = 477
   Insn 36(l0): point = 479
   Insn 35(l0): point = 481
   Insn 34(l0): point = 483
   Insn 33(l0): point = 485
   Insn 32(l0): point = 487
   Insn 31(l0): point = 489
   Insn 30(l0): point = 491
   Insn 29(l0): point = 493
   Insn 28(l0): point = 495
   Insn 27(l0): point = 497
   Insn 26(l0): point = 499
   Insn 25(l0): point = 501
   Insn 24(l0): point = 503
   Insn 23(l0): point = 505
   Insn 22(l0): point = 507
   Insn 21(l0): point = 509
   Insn 20(l0): point = 511
   Insn 19(l0): point = 513
   Insn 18(l0): point = 515
   Insn 17(l0): point = 517
   Insn 16(l0): point = 519
   Insn 15(l0): point = 521
   Insn 14(l0): point = 523
   Insn 13(l0): point = 525
   Insn 12(l0): point = 527
   Insn 11(l0): point = 529
   Insn 7(l0): point = 531
   Insn 6(l0): point = 533
   Insn 5(l0): point = 535
   Insn 4(l0): point = 537
   Insn 3(l0): point = 539
   Insn 2(l0): point = 541
 a0(r186): [22..25]
 a1(r185): [24..29]
 a2(r241): [26..27]
 a3(r240): [30..31]
 a4(r184): [30..33]
 a5(r183): [34..35]
 a6(r239): [36..37]
 a7(r182): [36..39]
 a8(r181): [40..41]
 a9(r238): [42..43]
 a10(r180): [42..45]
 a11(r179): [46..47]
 a12(r237): [48..49]
 a13(r236): [7..8]
 a14(r176): [77..84]
 a15(r178): [77..78]
 a16(r177): [79..82]
 a17(r235): [79..80]
 a18(r234): [85..86]
 a19(r175): [85..88]
 a20(r174): [89..90]
 a21(r233): [91..92]
 a22(r231): [152..153]
 a23(r173): [154..157]
 a24(r232): [154..155]
 a25(r172): [158..159]
 a26(r230): [160..161]
 a27(r171): [160..163]
 a28(r170): [164..165]
 a29(r229): [166..167]
 a30(r160): [170..195]
 a31(r169): [170..171]
 a32(r168): [172..173]
 a33(r167): [178..181]
 a34(r163): [180..189]
 a35(r166): [182..183]
 a36(r165): [184..185]
 a37(r164): [186..187]
 a38(r162): [190..191]
 a39(r161): [192..193]
 a40(r228): [196..197]
 a41(r159): [196..199]
 a42(r158): [200..201]
 a43(r227): [202..203]
 a44(r157): [445..448]
 a45(r226): [445..446]
 a46(r156): [449..450]
 a47(r154): [449..456]
 a48(r155): [451..452]
 a49(r225): [453..454]
 a50(r224): [459..460]
 a51(r153): [461..462]
 a52(r152): [463..464]
 a53(r151): [465..466]
 a54(r149): [465..472]
 a55(r150): [467..468]
 a56(r223): [469..470]
 a57(r148): [250..251]
 a58(r147): [252..253]
 a59(r146): [254..255]
 a60(r222): [256..257]
 a61(r139): [219..236]
 a62(r145): [219..220]
 a63(r221): [221..222]
 a64(r144): [223..224]
 a65(r143): [225..226]
 a66(r142): [227..228]
 a67(r140): [227..234]
 a68(r141): [229..230]
 a69(r220): [231..232]
 a70(r138): [237..238]
 a71(r136): [237..244]
 a72(r137): [239..240]
 a73(r219): [241..242]
 a74(r135): [263..264]
 a75(r134): [265..266]
 a76(r133): [267..268]
 a77(r218): [269..270]
 a78(r132): [382..385]
 a79(r128): [384..395]
 a80(r131): [386..387]
 a81(r129): [386..393]
 a82(r130): [388..389]
 a83(r217): [390..391]
 a84(r127): [403..406]
 a85(r123): [405..416]
 a86(r126): [407..408]
 a87(r124): [407..414]
 a88(r125): [409..410]
 a89(r216): [411..412]
 a90(r122): [422..423]
 a91(r121): [424..425]
 a92(r120): [426..427]
 a93(r215): [428..429]
 a94(r119): [280..285]
 a95(r118): [282..289]
 a96(r214): [286..287]
 a97(r117): [290..291]
 a98(r115): [290..297]
 a99(r116): [292..293]
 a100(r213): [294..295]
 a101(r114): [298..299]
 a102(r111): [298..307]
 a103(r113): [300..301]
 a104(r112): [302..303]
 a105(r212): [304..305]
 a106(r211): [308..309]
 a107(r210): [308..311]
 a108(r209): [358..361]
 a109(r110): [360..363]
 a110(r109): [317..318]
 a111(r108): [321..322]
 a112(r107): [327..334]
 a113(r106): [329..336]
 a114(r103): [333..350]
 a115(r105): [337..338]
 a116(r208): [339..340]
 a117(r207): [341..342]
 a118(r104): [343..346]
 a119(r206): [343..344]
 a120(r205): [347..348]
 a121(r204): [351..352]
 a122(r203): [98..99]
 a123(r202): [105..106]
 a124(r201): [109..110]
 a125(r102): [111..112]
 a126(r101): [111..116]
 a127(r200): [113..114]
 a128(r199): [117..118]
 a129(r100): [123..128]
 a130(r99): [125..132]
 a131(r198): [129..130]
 a132(r98): [133..134]
 a133(r96): [133..140]
 a134(r97): [135..136]
 a135(r197): [137..138]
 a136(r196): [141..142]
 a137(r195): [141..144]
 a138(r95): [66..67]
 a139(r194): [68..69]
 a140(r94): [478..479]
 a141(r93): [480..481]
 a142(r92): [480..485]
 a143(r193): [482..483]
 a144(r91): [486..487]
 a145(r192): [488..489]
 a146(r191): [492..493]
 a147(r90): [494..495]
 a148(r89): [494..499]
 a149(r190): [496..497]
 a150(r189): [500..501]
 a151(r88): [504..505]
 a152(r188): [506..507]
 a153(r87): [512..513]
 a154(r187): [516..517]
Compressing live ranges: from 544 to 238 - 43%
Ranges after the compression:
 a0(r186): [2..3]
 a1(r185): [2..5]
 a2(r241): [4..5]
 a3(r240): [6..7]
 a4(r184): [6..7]
 a5(r183): [8..9]
 a6(r239): [10..11]
 a7(r182): [10..11]
 a8(r181): [12..13]
 a9(r238): [14..15]
 a10(r180): [14..15]
 a11(r179): [16..17]
 a12(r237): [18..19]
 a13(r236): [0..1]
 a14(r176): [24..27]
 a15(r178): [24..25]
 a16(r177): [26..27]
 a17(r235): [26..27]
 a18(r234): [28..29]
 a19(r175): [28..29]
 a20(r174): [30..31]
 a21(r233): [32..33]
 a22(r231): [58..59]
 a23(r173): [60..61]
 a24(r232): [60..61]
 a25(r172): [62..63]
 a26(r230): [64..65]
 a27(r171): [64..65]
 a28(r170): [66..67]
 a29(r229): [68..69]
 a30(r160): [70..85]
 a31(r169): [70..71]
 a32(r168): [72..73]
 a33(r167): [74..75]
 a34(r163): [74..81]
 a35(r166): [76..77]
 a36(r165): [78..79]
 a37(r164): [80..81]
 a38(r162): [82..83]
 a39(r161): [84..85]
 a40(r228): [86..87]
 a41(r159): [86..87]
 a42(r158): [88..89]
 a43(r227): [90..91]
 a44(r157): [192..193]
 a45(r226): [192..193]
 a46(r156): [194..195]
 a47(r154): [194..199]
 a48(r155): [196..197]
 a49(r225): [198..199]
 a50(r224): [200..201]
 a51(r153): [202..203]
 a52(r152): [204..205]
 a53(r151): [206..207]
 a54(r149): [206..211]
 a55(r150): [208..209]
 a56(r223): [210..211]
 a57(r148): [112..113]
 a58(r147): [114..115]
 a59(r146): [116..117]
 a60(r222): [118..119]
 a61(r139): [92..105]
 a62(r145): [92..93]
 a63(r221): [94..95]
 a64(r144): [96..97]
 a65(r143): [98..99]
 a66(r142): [100..101]
 a67(r140): [100..105]
 a68(r141): [102..103]
 a69(r220): [104..105]
 a70(r138): [106..107]
 a71(r136): [106..111]
 a72(r137): [108..109]
 a73(r219): [110..111]
 a74(r135): [120..121]
 a75(r134): [122..123]
 a76(r133): [124..125]
 a77(r218): [126..127]
 a78(r132): [168..169]
 a79(r128): [168..175]
 a80(r131): [170..171]
 a81(r129): [170..175]
 a82(r130): [172..173]
 a83(r217): [174..175]
 a84(r127): [176..177]
 a85(r123): [176..183]
 a86(r126): [178..179]
 a87(r124): [178..183]
 a88(r125): [180..181]
 a89(r216): [182..183]
 a90(r122): [184..185]
 a91(r121): [186..187]
 a92(r120): [188..189]
 a93(r215): [190..191]
 a94(r119): [128..129]
 a95(r118): [128..131]
 a96(r214): [130..131]
 a97(r117): [132..133]
 a98(r115): [132..137]
 a99(r116): [134..135]
 a100(r213): [136..137]
 a101(r114): [138..139]
 a102(r111): [138..145]
 a103(r113): [140..141]
 a104(r112): [142..143]
 a105(r212): [144..145]
 a106(r211): [146..147]
 a107(r210): [146..147]
 a108(r209): [166..167]
 a109(r110): [166..167]
 a110(r109): [148..149]
 a111(r108): [150..151]
 a112(r107): [152..153]
 a113(r106): [152..153]
 a114(r103): [152..163]
 a115(r105): [154..155]
 a116(r208): [156..157]
 a117(r207): [158..159]
 a118(r104): [160..161]
 a119(r206): [160..161]
 a120(r205): [162..163]
 a121(r204): [164..165]
 a122(r203): [34..35]
 a123(r202): [36..37]
 a124(r201): [38..39]
 a125(r102): [40..41]
 a126(r101): [40..43]
 a127(r200): [42..43]
 a128(r199): [44..45]
 a129(r100): [46..47]
 a130(r99): [46..49]
 a131(r198): [48..49]
 a132(r98): [50..51]
 a133(r96): [50..55]
 a134(r97): [52..53]
 a135(r197): [54..55]
 a136(r196): [56..57]
 a137(r195): [56..57]
 a138(r95): [20..21]
 a139(r194): [22..23]
 a140(r94): [212..213]
 a141(r93): [214..215]
 a142(r92): [214..217]
 a143(r193): [216..217]
 a144(r91): [218..219]
 a145(r192): [220..221]
 a146(r191): [222..223]
 a147(r90): [224..225]
 a148(r89): [224..227]
 a149(r190): [226..227]
 a150(r189): [228..229]
 a151(r88): [230..231]
 a152(r188): [232..233]
 a153(r87): [234..235]
 a154(r187): [236..237]
  regions=1, blocks=30, points=238
    allocnos=155 (big 0), copies=0, conflicts=0, ranges=155
Disposition:
  153:r87  l0     0  151:r88  l0     0  148:r89  l0     1  147:r90  l0     0
  144:r91  l0     0  142:r92  l0     1  141:r93  l0     0  140:r94  l0     0
  138:r95  l0     0  133:r96  l0     1  134:r97  l0     0  132:r98  l0     0
  130:r99  l0     2  129:r100 l0     0  126:r101 l0     1  125:r102 l0     0
  114:r103 l0     1  118:r104 l0     0  115:r105 l0     0  113:r106 l0     4
  112:r107 l0     0  111:r108 l0     0  110:r109 l0     0  109:r110 l0     1
  102:r111 l0     1  104:r112 l0     0  103:r113 l0     0  101:r114 l0     0
   98:r115 l0     1   99:r116 l0     0   97:r117 l0     0   95:r118 l0     2
   94:r119 l0     0   92:r120 l0     0   91:r121 l0     0   90:r122 l0     0
   85:r123 l0     2   87:r124 l0     0   88:r125 l0     1   86:r126 l0     1
   84:r127 l0     0   79:r128 l0     2   81:r129 l0     0   82:r130 l0     1
   80:r131 l0     1   78:r132 l0     0   76:r133 l0     0   75:r134 l0     0
   74:r135 l0     0   71:r136 l0     0   72:r137 l0     1   70:r138 l0     1
   61:r139 l0     0   67:r140 l0     1   68:r141 l0     2   66:r142 l0     2
   65:r143 l0     1   64:r144 l0     1   62:r145 l0    21   59:r146 l0     0
   58:r147 l0     0   57:r148 l0     0   54:r149 l0     0   55:r150 l0     1
   53:r151 l0     1   52:r152 l0     0   51:r153 l0     0   47:r154 l0     0
   48:r155 l0     1   46:r156 l0     1   44:r157 l0     0   42:r158 l0     0
   41:r159 l0     1   30:r160 l0     3   39:r161 l0     0   38:r162 l0    21
   34:r163 l0    22   37:r164 l0     0   36:r165 l0     0   35:r166 l0    21
   33:r167 l0    21   32:r168 l0    21   31:r169 l0    21   28:r170 l0     0
   27:r171 l0     1   25:r172 l0     0   23:r173 l0    21   20:r174 l0     0
   19:r175 l0     1   14:r176 l0     0   16:r177 l0    21   15:r178 l0    21
   11:r179 l0     0   10:r180 l0     1    8:r181 l0     0    7:r182 l0    22
    5:r183 l0    21    4:r184 l0    21    1:r185 l0    21    0:r186 l0     0
  154:r187 l0    21  152:r188 l0     0  150:r189 l0     0  149:r190 l0     0
  146:r191 l0     0  145:r192 l0     0  143:r193 l0     0  139:r194 l0     0
  137:r195 l0     1  136:r196 l0     0  135:r197 l0     0  131:r198 l0     0
  128:r199 l0     0  127:r200 l0     0  124:r201 l0     0  123:r202 l0    21
  122:r203 l0     0  121:r204 l0     0  120:r205 l0     0  119:r206 l0     2
  117:r207 l0     0  116:r208 l0     0  108:r209 l0     0  107:r210 l0     1
  106:r211 l0     0  105:r212 l0     0  100:r213 l0     0   96:r214 l0     0
   93:r215 l0     0   89:r216 l0     1   83:r217 l0     1   77:r218 l0     0
   73:r219 l0     1   69:r220 l0     2   63:r221 l0     1   60:r222 l0     0
   56:r223 l0     1   50:r224 l0    21   49:r225 l0     1   45:r226 l0    21
   43:r227 l0     0   40:r228 l0     0   29:r229 l0     0   26:r230 l0     0
   22:r231 l0    21   24:r232 l0    22   21:r233 l0     0   18:r234 l0     0
   17:r235 l0    22   13:r236 l0     0   12:r237 l0     0    9:r238 l0     0
    6:r239 l0    21    3:r240 l0    22    2:r241 l0     0
+++Costs: overall -16, reg -16, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void get_phase(float*, FILE**, Data_file_header*, InFile_struct*, long int, IOFiles*, int, Procpar_info*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={13d,3u} r1={15d,4u} r2={13d,2u} r4={19d,8u} r5={22d,11u} r6={1d,29u} r7={1d,40u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r16={1d,30u} r17={69d,12u} r18={11d} r19={11d} r20={1d,128u,10e} r21={14d,3u} r22={13d,1u} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={12d,1u} r38={12d,1u} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u,1e} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u,1e} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u,1e} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1e} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} 
;;    total ref usage 1492{1049d,429u,14e} in 258{247 regular + 11 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 187 188 189 190 191 192 193
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])
        (reg:DI 5 di [ phase ])) ge2fitman_fmtext_o.cpp:652 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ phase ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 in_file+0 S8 A64])
        (reg:DI 4 si [ in_file ])) ge2fitman_fmtext_o.cpp:652 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ in_file ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])
        (reg:DI 1 dx [ main_header ])) ge2fitman_fmtext_o.cpp:652 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ main_header ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 infile_struct+0 S8 A64])
        (reg:DI 2 cx [ infile_struct ])) ge2fitman_fmtext_o.cpp:652 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ infile_struct ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 header_size+0 S8 A64])
        (reg:DI 37 r8 [ header_size ])) ge2fitman_fmtext_o.cpp:652 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ header_size ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 file+0 S8 A64])
        (reg:DI 38 r9 [ file ])) ge2fitman_fmtext_o.cpp:652 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ file ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:654 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:655 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:656 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 numSets+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:657 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 dataSizeChannel+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:658 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:659 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SF 187)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:660 129 {*movsf_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 totalPhase+0 S4 A32])
        (reg:SF 187)) ge2fitman_fmtext_o.cpp:660 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 187)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 87 [ D.25585 ])
        (const_int 8 [0x8])) ge2fitman_fmtext_o.cpp:665 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 87 [ D.25585 ])) ge2fitman_fmtext_o.cpp:665 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.25585 ])
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7c389c5a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:665 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 188)
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:665 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 188)
            (nil))))
(insn 23 22 24 2 (set (reg/f:DI 88 [ D.25586 ])
        (reg/f:DI 188)) ge2fitman_fmtext_o.cpp:665 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (nil)))
(insn 24 23 25 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.fl+0 S8 A64])
        (reg/f:DI 88 [ D.25586 ])) ge2fitman_fmtext_o.cpp:665 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.25586 ])
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:671 89 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 89 [ D.25587 ])
        (mem/j:DI (plus:DI (reg/f:DI 189)
                (const_int 24 [0x18])) [0 main_header_31(D)->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:671 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 189)
        (nil)))
(insn 27 26 28 2 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:671 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 90 [ D.25587 ])
        (mem/j:DI (plus:DI (reg/f:DI 190)
                (const_int 16 [0x10])) [0 main_header_31(D)->np.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:671 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 191)
                (mult:DI (reg:DI 89 [ D.25587 ])
                    (reg:DI 90 [ D.25587 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:671 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.25587 ])
        (expr_list:REG_DEAD (reg:DI 89 [ D.25587 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 30 29 31 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64])
        (reg:DI 191)) ge2fitman_fmtext_o.cpp:671 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(insn 31 30 32 2 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:684 89 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SI 91 [ D.25588 ])
        (mem/j:SI (reg/f:DI 192) [0 infile_struct_35(D)->num_datasets+0 S4 A32])) ge2fitman_fmtext_o.cpp:684 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 92 [ D.25589 ])
        (reg:SI 91 [ D.25588 ])) ge2fitman_fmtext_o.cpp:684 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.25588 ])
        (nil)))
(insn 34 33 35 2 (set (reg:DI 193)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:684 89 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 93 [ D.25589 ])
        (subreg:SI (reg:DI 193) 0)) ge2fitman_fmtext_o.cpp:684 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 36 35 37 2 (parallel [
            (set (reg:SI 94 [ D.25589 ])
                (mult:SI (reg:SI 92 [ D.25589 ])
                    (reg:SI 93 [ D.25589 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:684 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.25589 ])
        (expr_list:REG_DEAD (reg:SI 92 [ D.25589 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 dataSizeChannel+0 S4 A32])
        (reg:SI 94 [ D.25589 ])) ge2fitman_fmtext_o.cpp:684 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ D.25589 ])
        (nil)))
(insn 38 37 271 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:693 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              24 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 194
(code_label 271 38 39 3 66 "" [1 uses])
(note 39 271 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 3 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 procpar_info+0 S8 A64])) ge2fitman_fmtext_o.cpp:693 89 {*movdi_internal}
     (nil))
(insn 41 40 42 3 (set (reg:SI 95 [ D.25588 ])
        (mem/j:SI (plus:DI (reg/f:DI 194)
                (const_int 508 [0x1fc])) [0 procpar_info_42(D)->num_channels+0 S4 A32])) ge2fitman_fmtext_o.cpp:693 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 194)
        (nil)))
(insn 42 41 43 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 95 [ D.25588 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32]))) ge2fitman_fmtext_o.cpp:693 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.25588 ])
        (nil)))
(jump_insn 43 42 44 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) ge2fitman_fmtext_o.cpp:693 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 274)
;;  succ:       25
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 98 99 100 101 102 195 196 197 198 199 200 201 202
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg:DI 195)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:700 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:DI 196)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:700 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 96 [ D.25587 ])
                (plus:DI (reg:DI 195)
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:700 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 196)
        (expr_list:REG_DEAD (reg:DI 195)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -88 [0xffffffffffffffa8])) [0 header_size+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64]))
                    (nil))))))
(insn 48 47 49 4 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 dataSizeChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:700 90 {*movsi_internal}
     (nil))
(insn 49 48 50 4 (parallel [
            (set (reg:SI 97 [ D.25588 ])
                (mult:SI (reg:SI 197)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:700 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 4 (set (reg:DI 98 [ D.25587 ])
        (sign_extend:DI (reg:SI 97 [ D.25588 ]))) ge2fitman_fmtext_o.cpp:700 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ D.25588 ])
        (nil)))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 99 [ D.25587 ])
                (plus:DI (reg:DI 96 [ D.25587 ])
                    (reg:DI 98 [ D.25587 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:700 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.25587 ])
        (expr_list:REG_DEAD (reg:DI 96 [ D.25587 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 52 51 53 4 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:700 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg/f:DI 100 [ D.25590 ])
        (mem/f:DI (reg/f:DI 198) [0 *in_file_49(D)+0 S8 A64])) ge2fitman_fmtext_o.cpp:700 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (nil)))
(insn 54 53 55 4 (set (reg:SI 1 dx)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:700 90 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 4 si)
        (reg:DI 99 [ D.25587 ])) ge2fitman_fmtext_o.cpp:700 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ D.25587 ])
        (nil)))
(insn 56 55 57 4 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.25590 ])) ge2fitman_fmtext_o.cpp:700 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.25590 ])
        (nil)))
(call_insn 57 56 58 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7c387db948 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:700 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 58 57 59 4 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:710 89 {*movdi_internal}
     (nil))
(insn 59 58 60 4 (set (reg:SI 101 [ D.25588 ])
        (mem/j:SI (reg/f:DI 199) [0 infile_struct_35(D)->num_datasets+0 S4 A32])) ge2fitman_fmtext_o.cpp:710 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (nil)))
(insn 60 59 61 4 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 infile_struct+0 S8 A64])) ge2fitman_fmtext_o.cpp:710 89 {*movdi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:SI 102 [ D.25588 ])
        (mem/j:SI (plus:DI (reg/f:DI 200)
                (const_int 4 [0x4])) [0 infile_struct_35(D)->num_unsup_sets+0 S4 A32])) ge2fitman_fmtext_o.cpp:710 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (nil)))
(insn 62 61 63 4 (parallel [
            (set (reg:SI 201)
                (minus:SI (reg:SI 101 [ D.25588 ])
                    (reg:SI 102 [ D.25588 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:710 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.25588 ])
        (expr_list:REG_DEAD (reg:SI 101 [ D.25588 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 63 62 64 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 numSets+0 S4 A32])
        (reg:SI 201)) ge2fitman_fmtext_o.cpp:710 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 64 63 65 4 (set (reg:SF 202)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:716 129 {*movsf_internal}
     (nil))
(insn 65 64 66 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 totalPhase+0 S4 A32])
        (reg:SF 202)) ge2fitman_fmtext_o.cpp:716 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 202)
        (nil)))
(insn 66 65 256 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:719 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              23 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 203
(code_label 256 66 67 5 65 "" [1 uses])
(note 67 256 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 5 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])) ge2fitman_fmtext_o.cpp:719 90 {*movsi_internal}
     (nil))
(insn 69 68 70 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 203)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 numSets+0 S4 A32]))) ge2fitman_fmtext_o.cpp:719 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))
(jump_insn 70 69 71 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) ge2fitman_fmtext_o.cpp:719 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 259)
;;  succ:       24
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 107 108 109 204 205 206 207 208
(note 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 6 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (nil))
(insn 73 72 74 6 (set (reg/f:DI 103 [ D.25590 ])
        (mem/f:DI (reg/f:DI 204) [0 *in_file_49(D)+0 S8 A64])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (nil)))
(insn 74 73 75 6 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:DI 104 [ D.25587 ])
        (mem/j:DI (plus:DI (reg/f:DI 205)
                (const_int 24 [0x18])) [0 main_header_31(D)->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 205)
        (nil)))
(insn 76 75 77 6 (parallel [
            (set (reg:DI 206)
                (lshiftrt:DI (reg:DI 104 [ D.25587 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:728 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg:DI 206)
                    (reg:DI 104 [ D.25587 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:728 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 206)
        (expr_list:REG_DEAD (reg:DI 104 [ D.25587 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 78 77 79 6 (parallel [
            (set (reg:DI 208)
                (ashiftrt:DI (reg:DI 207)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:728 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 207)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 6 (set (reg:DI 105 [ D.25587 ])
        (reg:DI 208)) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(insn 80 79 81 6 (set (reg:DI 106 [ D.25585 ])
        (reg:DI 105 [ D.25587 ])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ D.25587 ])
        (nil)))
(insn 81 80 82 6 (set (reg/f:DI 107 [ D.25591 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (nil))
(insn 82 81 83 6 (set (reg:DI 2 cx)
        (reg/f:DI 103 [ D.25590 ])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.25590 ])
        (nil)))
(insn 83 82 84 6 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:DI 4 si)
        (reg:DI 106 [ D.25585 ])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106 [ D.25585 ])
        (nil)))
(insn 85 84 86 6 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.25591 ])) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.25591 ])
        (nil)))
(call_insn 86 85 87 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f7c387db510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:728 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 87 86 88 6 (set (reg:DI 108 [ D.25585 ])
        (reg:DI 0 ax)) ge2fitman_fmtext_o.cpp:728 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 87 89 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 108 [ D.25585 ])
            (const_int 2 [0x2]))) ge2fitman_fmtext_o.cpp:728 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.25585 ])
        (nil)))
(insn 89 88 90 6 (set (reg:QI 109 [ D.25592 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:728 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 90 89 91 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.25592 ])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:728 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 109 [ D.25592 ])
        (nil)))
(jump_insn 91 90 92 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) ge2fitman_fmtext_o.cpp:728 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 98)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 209
(note 92 91 93 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 7 (set (reg/f:DI 110 [ D.25593 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 file+0 S8 A64])) ge2fitman_fmtext_o.cpp:734 89 {*movdi_internal}
     (nil))
(insn 94 93 95 7 (set (reg:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:734 89 {*movdi_internal}
     (nil))
(insn 95 94 96 7 (set (reg:DI 4 si)
        (reg/f:DI 110 [ D.25593 ])) ge2fitman_fmtext_o.cpp:734 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.25593 ])
        (nil)))
(insn 96 95 97 7 (set (reg:DI 5 di)
        (reg:DI 209)) ge2fitman_fmtext_o.cpp:734 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 209)
        (nil)))
(call_insn 97 96 98 7 (call (mem:QI (symbol_ref:DI ("_Z7exit_06PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f7c375505e8 exit_06>) [0 exit_06 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:734 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111 112 113 114 115 116 117 118 119 210 211 212 213 214
(code_label 98 97 99 8 56 "" [1 uses])
(note 99 98 100 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 8 (set (reg:DI 210)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 header_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:742 89 {*movdi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:DI 211)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64])) ge2fitman_fmtext_o.cpp:742 89 {*movdi_internal}
     (nil))
(insn 102 101 103 8 (parallel [
            (set (reg:DI 111 [ D.25587 ])
                (plus:DI (reg:DI 210)
                    (reg:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:742 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 211)
        (expr_list:REG_DEAD (reg:DI 210)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -88 [0xffffffffffffffa8])) [0 header_size+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64]))
                    (nil))))))
(insn 103 102 104 8 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])) ge2fitman_fmtext_o.cpp:743 90 {*movsi_internal}
     (nil))
(insn 104 103 105 8 (parallel [
            (set (reg:SI 112 [ D.25588 ])
                (plus:SI (reg:SI 212)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:743 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 212)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 105 104 106 8 (set (reg:DI 113 [ D.25587 ])
        (sign_extend:DI (reg:SI 112 [ D.25588 ]))) ge2fitman_fmtext_o.cpp:743 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 112 [ D.25588 ])
        (nil)))
(insn 106 105 107 8 (parallel [
            (set (reg:DI 114 [ D.25587 ])
                (mult:DI (reg:DI 113 [ D.25587 ])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 baseline_set_size+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:743 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.25587 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 107 106 108 8 (parallel [
            (set (reg:DI 115 [ D.25587 ])
                (plus:DI (reg:DI 111 [ D.25587 ])
                    (reg:DI 114 [ D.25587 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:742 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.25587 ])
        (expr_list:REG_DEAD (reg:DI 111 [ D.25587 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 108 107 109 8 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 dataSizeChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:743 90 {*movsi_internal}
     (nil))
(insn 109 108 110 8 (parallel [
            (set (reg:SI 116 [ D.25588 ])
                (mult:SI (reg:SI 213)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:743 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 8 (set (reg:DI 117 [ D.25587 ])
        (sign_extend:DI (reg:SI 116 [ D.25588 ]))) ge2fitman_fmtext_o.cpp:742 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 116 [ D.25588 ])
        (nil)))
(insn 111 110 112 8 (parallel [
            (set (reg:DI 118 [ D.25587 ])
                (plus:DI (reg:DI 115 [ D.25587 ])
                    (reg:DI 117 [ D.25587 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:742 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.25587 ])
        (expr_list:REG_DEAD (reg:DI 115 [ D.25587 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 112 111 113 8 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 in_file+0 S8 A64])) ge2fitman_fmtext_o.cpp:742 89 {*movdi_internal}
     (nil))
(insn 113 112 114 8 (set (reg/f:DI 119 [ D.25590 ])
        (mem/f:DI (reg/f:DI 214) [0 *in_file_49(D)+0 S8 A64])) ge2fitman_fmtext_o.cpp:742 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (nil)))
(insn 114 113 115 8 (set (reg:SI 1 dx)
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:743 90 {*movsi_internal}
     (nil))
(insn 115 114 116 8 (set (reg:DI 4 si)
        (reg:DI 118 [ D.25587 ])) ge2fitman_fmtext_o.cpp:743 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118 [ D.25587 ])
        (nil)))
(insn 116 115 117 8 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.25590 ])) ge2fitman_fmtext_o.cpp:743 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.25590 ])
        (nil)))
(call_insn 117 116 118 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f7c387db948 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:743 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 118 117 119 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:DI 16 argp) [0 swap_bytes+0 S4 A64])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:746 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 119 118 120 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) ge2fitman_fmtext_o.cpp:746 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 161)
;;  succ:       9 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 120 119 121 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 158 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:747 90 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              14 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 158 121 122 10 60 "" [1 uses])
(note 122 158 123 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:747 7 {*cmpsi_1}
     (nil))
(jump_insn 124 123 125 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) ge2fitman_fmtext_o.cpp:747 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 161)
;;  succ:       15
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 121 122 215
(note 125 124 126 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 11 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:752 89 {*movdi_internal}
     (nil))
(insn 127 126 128 11 (set (reg:DI 120 [ D.25587 ])
        (mem/j:DI (plus:DI (reg/f:DI 215)
                (const_int 24 [0x18])) [0 main_header_31(D)->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:752 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (nil)))
(insn 128 127 129 11 (set (reg:DI 121 [ D.25594 ])
        (reg:DI 120 [ D.25587 ])) ge2fitman_fmtext_o.cpp:752 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120 [ D.25587 ])
        (nil)))
(insn 129 128 130 11 (parallel [
            (set (reg:DI 122 [ D.25594 ])
                (plus:DI (reg:DI 121 [ D.25594 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:752 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 121 [ D.25594 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 122 [ D.25594 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:752 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ D.25594 ])
        (nil)))
(jump_insn 131 130 132 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) ge2fitman_fmtext_o.cpp:752 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 144)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 124 125 126 127 216
(note 132 131 133 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 12 (set (reg:SI 123 [ D.25588 ])
        (const_int 2 [0x2])) ge2fitman_fmtext_o.cpp:753 90 {*movsi_internal}
     (nil))
(insn 134 133 135 12 (set (reg/f:DI 124 [ D.25595 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.sh+0 S8 A64])) ge2fitman_fmtext_o.cpp:753 89 {*movdi_internal}
     (nil))
(insn 135 134 136 12 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:753 90 {*movsi_internal}
     (nil))
(insn 136 135 137 12 (set (reg:DI 125 [ D.25585 ])
        (sign_extend:DI (reg:SI 216))) ge2fitman_fmtext_o.cpp:753 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 216)
        (nil)))
(insn 137 136 138 12 (parallel [
            (set (reg:DI 126 [ D.25585 ])
                (ashift:DI (reg:DI 125 [ D.25585 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:753 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 138 137 139 12 (parallel [
            (set (reg/f:DI 127 [ D.25596 ])
                (plus:DI (reg/f:DI 124 [ D.25595 ])
                    (reg:DI 126 [ D.25585 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:753 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.25585 ])
        (expr_list:REG_DEAD (reg/f:DI 124 [ D.25595 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 139 138 140 12 (set (reg:SI 4 si)
        (reg:SI 123 [ D.25588 ])) ge2fitman_fmtext_o.cpp:753 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ D.25588 ])
        (nil)))
(insn 140 139 141 12 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.25596 ])) ge2fitman_fmtext_o.cpp:753 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.25596 ])
        (nil)))
(call_insn 141 140 312 12 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f7c3754b6c0 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:753 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 312 141 313 12 (set (pc)
        (label_ref 155)) 654 {jump}
     (nil)
 -> 155)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 313 312 144)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 128 129 130 131 132 217
(code_label 144 313 145 13 58 "" [1 uses])
(note 145 144 146 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 13 (set (reg:SI 128 [ D.25588 ])
        (const_int 8 [0x8])) ge2fitman_fmtext_o.cpp:755 90 {*movsi_internal}
     (nil))
(insn 147 146 148 13 (set (reg/f:DI 129 [ D.25597 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:755 89 {*movdi_internal}
     (nil))
(insn 148 147 149 13 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:755 90 {*movsi_internal}
     (nil))
(insn 149 148 150 13 (set (reg:DI 130 [ D.25585 ])
        (sign_extend:DI (reg:SI 217))) ge2fitman_fmtext_o.cpp:755 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 150 149 151 13 (parallel [
            (set (reg:DI 131 [ D.25585 ])
                (ashift:DI (reg:DI 130 [ D.25585 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:755 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 13 (parallel [
            (set (reg/f:DI 132 [ D.25596 ])
                (plus:DI (reg/f:DI 129 [ D.25597 ])
                    (reg:DI 131 [ D.25585 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:755 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ D.25585 ])
        (expr_list:REG_DEAD (reg/f:DI 129 [ D.25597 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 152 151 153 13 (set (reg:SI 4 si)
        (reg:SI 128 [ D.25588 ])) ge2fitman_fmtext_o.cpp:755 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128 [ D.25588 ])
        (nil)))
(insn 153 152 154 13 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.25596 ])) ge2fitman_fmtext_o.cpp:755 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.25596 ])
        (nil)))
(call_insn 154 153 155 13 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f7c3754b6c0 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:755 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 155 154 156 14 59 "" [1 uses])
(note 156 155 157 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 314 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:747 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 314 157 315 14 (set (pc)
        (label_ref 158)) ge2fitman_fmtext_o.cpp:747 654 {jump}
     (nil)
 -> 158)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 315 314 161)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              10
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133 134 135 218
(code_label 161 315 162 15 57 "" [2 uses])
(note 162 161 163 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 15 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:777 89 {*movdi_internal}
     (nil))
(insn 164 163 165 15 (set (reg:DI 133 [ D.25587 ])
        (mem/j:DI (plus:DI (reg/f:DI 218)
                (const_int 24 [0x18])) [0 main_header_31(D)->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:777 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (nil)))
(insn 165 164 166 15 (set (reg:DI 134 [ D.25594 ])
        (reg:DI 133 [ D.25587 ])) ge2fitman_fmtext_o.cpp:777 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133 [ D.25587 ])
        (nil)))
(insn 166 165 167 15 (parallel [
            (set (reg:DI 135 [ D.25594 ])
                (plus:DI (reg:DI 134 [ D.25594 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:777 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 134 [ D.25594 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 15 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 135 [ D.25594 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:777 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.25594 ])
        (nil)))
(jump_insn 168 167 169 15 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) ge2fitman_fmtext_o.cpp:777 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 193)
;;  succ:       16 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 169 168 170 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 190 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:778 90 {*movsi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              18 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 190 170 171 17 63 "" [1 uses])
(note 171 190 172 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:778 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 173 172 174 17 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) ge2fitman_fmtext_o.cpp:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 226)
;;  succ:       23
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 136 137 138 139 140 141 142 143 144 145 219 220 221
(note 174 173 175 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 18 (set (reg/f:DI 136 [ D.25591 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:779 89 {*movdi_internal}
     (nil))
(insn 176 175 177 18 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:779 90 {*movsi_internal}
     (nil))
(insn 177 176 178 18 (set (reg:DI 137 [ D.25585 ])
        (sign_extend:DI (reg:SI 219))) ge2fitman_fmtext_o.cpp:779 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
(insn 178 177 179 18 (parallel [
            (set (reg:DI 138 [ D.25585 ])
                (ashift:DI (reg:DI 137 [ D.25585 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:779 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 137 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 18 (parallel [
            (set (reg/f:DI 139 [ D.25591 ])
                (plus:DI (reg/f:DI 136 [ D.25591 ])
                    (reg:DI 138 [ D.25585 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:779 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ D.25585 ])
        (expr_list:REG_DEAD (reg/f:DI 136 [ D.25591 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 180 179 181 18 (set (reg/f:DI 140 [ D.25595 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.sh+0 S8 A64])) ge2fitman_fmtext_o.cpp:779 89 {*movdi_internal}
     (nil))
(insn 181 180 182 18 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:779 90 {*movsi_internal}
     (nil))
(insn 182 181 183 18 (set (reg:DI 141 [ D.25585 ])
        (sign_extend:DI (reg:SI 220))) ge2fitman_fmtext_o.cpp:779 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 220)
        (nil)))
(insn 183 182 184 18 (parallel [
            (set (reg:DI 142 [ D.25585 ])
                (ashift:DI (reg:DI 141 [ D.25585 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:779 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 18 (parallel [
            (set (reg/f:DI 143 [ D.25595 ])
                (plus:DI (reg/f:DI 140 [ D.25595 ])
                    (reg:DI 142 [ D.25585 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:779 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.25585 ])
        (expr_list:REG_DEAD (reg/f:DI 140 [ D.25595 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 185 184 186 18 (set (reg:HI 144 [ D.25598 ])
        (mem:HI (reg/f:DI 143 [ D.25595 ]) [0 *_108+0 S2 A16])) ge2fitman_fmtext_o.cpp:779 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.25595 ])
        (nil)))
(insn 186 185 187 18 (set (reg:SI 221)
        (sign_extend:SI (reg:HI 144 [ D.25598 ]))) ge2fitman_fmtext_o.cpp:779 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:HI 144 [ D.25598 ])
        (nil)))
(insn 187 186 188 18 (set (reg:SF 145 [ D.25599 ])
        (float:SF (reg:SI 221))) ge2fitman_fmtext_o.cpp:779 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
(insn 188 187 189 18 (set (mem:SF (reg/f:DI 139 [ D.25591 ]) [0 *_104+0 S4 A32])
        (reg:SF 145 [ D.25599 ])) ge2fitman_fmtext_o.cpp:779 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 145 [ D.25599 ])
        (expr_list:REG_DEAD (reg/f:DI 139 [ D.25591 ])
            (nil))))
(insn 189 188 316 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:778 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 316 189 317 18 (set (pc)
        (label_ref 190)) ge2fitman_fmtext_o.cpp:778 654 {jump}
     (nil)
 -> 190)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 317 316 193)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 146 147 148 222
(code_label 193 317 194 19 61 "" [1 uses])
(note 194 193 195 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 19 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 main_header+0 S8 A64])) ge2fitman_fmtext_o.cpp:782 89 {*movdi_internal}
     (nil))
(insn 196 195 197 19 (set (reg:DI 146 [ D.25587 ])
        (mem/j:DI (plus:DI (reg/f:DI 222)
                (const_int 24 [0x18])) [0 main_header_31(D)->ebytes.number+0 S8 A64])) ge2fitman_fmtext_o.cpp:782 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (nil)))
(insn 197 196 198 19 (set (reg:DI 147 [ D.25594 ])
        (reg:DI 146 [ D.25587 ])) ge2fitman_fmtext_o.cpp:782 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ D.25587 ])
        (nil)))
(insn 198 197 199 19 (parallel [
            (set (reg:DI 148 [ D.25594 ])
                (plus:DI (reg:DI 147 [ D.25594 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:782 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 147 [ D.25594 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 19 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 148 [ D.25594 ])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:782 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ D.25594 ])
        (nil)))
(jump_insn 200 199 201 19 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) ge2fitman_fmtext_o.cpp:782 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 226)
;;  succ:       20 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 201 200 202 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 223 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:783 90 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              22 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 223 202 203 21 64 "" [1 uses])
(note 203 223 204 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:783 7 {*cmpsi_1}
     (nil))
(jump_insn 205 204 206 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) ge2fitman_fmtext_o.cpp:783 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 226)
;;  succ:       23
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 150 151 152 153 154 155 156 157 223 224 225 226
(note 206 205 207 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 22 (set (reg/f:DI 149 [ D.25597 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.lo+0 S8 A64])) ge2fitman_fmtext_o.cpp:784 89 {*movdi_internal}
     (nil))
(insn 208 207 209 22 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:784 90 {*movsi_internal}
     (nil))
(insn 209 208 210 22 (set (reg:DI 150 [ D.25585 ])
        (sign_extend:DI (reg:SI 223))) ge2fitman_fmtext_o.cpp:784 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 223)
        (nil)))
(insn 210 209 211 22 (parallel [
            (set (reg:DI 151 [ D.25585 ])
                (ashift:DI (reg:DI 150 [ D.25585 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:784 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 211 210 212 22 (parallel [
            (set (reg/f:DI 152 [ D.25597 ])
                (plus:DI (reg/f:DI 149 [ D.25597 ])
                    (reg:DI 151 [ D.25585 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:784 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 151 [ D.25585 ])
        (expr_list:REG_DEAD (reg/f:DI 149 [ D.25597 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 212 211 213 22 (set (reg:DI 153 [ D.25587 ])
        (mem:DI (reg/f:DI 152 [ D.25597 ]) [0 *_120+0 S8 A64])) ge2fitman_fmtext_o.cpp:784 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.25597 ])
        (nil)))
(insn 213 212 214 22 (set (reg:SF 224)
        (float:SF (reg:DI 153 [ D.25587 ]))) ge2fitman_fmtext_o.cpp:784 200 {*floatdisf2_sse}
     (expr_list:REG_DEAD (reg:DI 153 [ D.25587 ])
        (nil)))
(insn 214 213 215 22 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 temp_float+0 S4 A32])
        (reg:SF 224)) ge2fitman_fmtext_o.cpp:784 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 224)
        (nil)))
(insn 215 214 216 22 (set (reg/f:DI 154 [ D.25591 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:785 89 {*movdi_internal}
     (nil))
(insn 216 215 217 22 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:785 90 {*movsi_internal}
     (nil))
(insn 217 216 218 22 (set (reg:DI 155 [ D.25585 ])
        (sign_extend:DI (reg:SI 225))) ge2fitman_fmtext_o.cpp:785 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 218 217 219 22 (parallel [
            (set (reg:DI 156 [ D.25585 ])
                (ashift:DI (reg:DI 155 [ D.25585 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:785 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 22 (parallel [
            (set (reg/f:DI 157 [ D.25591 ])
                (plus:DI (reg/f:DI 154 [ D.25591 ])
                    (reg:DI 156 [ D.25585 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:785 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.25585 ])
        (expr_list:REG_DEAD (reg/f:DI 154 [ D.25591 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 220 219 221 22 (set (reg:SF 226)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 temp_float+0 S4 A32])) ge2fitman_fmtext_o.cpp:785 129 {*movsf_internal}
     (nil))
(insn 221 220 222 22 (set (mem:SF (reg/f:DI 157 [ D.25591 ]) [0 *_126+0 S4 A32])
        (reg:SF 226)) ge2fitman_fmtext_o.cpp:785 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 226)
        (expr_list:REG_DEAD (reg/f:DI 157 [ D.25591 ])
            (nil))))
(insn 222 221 318 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 countPoint+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:783 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 318 222 319 22 (set (pc)
        (label_ref 223)) ge2fitman_fmtext_o.cpp:783 654 {jump}
     (nil)
 -> 223)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 319 318 226)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              19
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 227 228 229 230 231 232
(code_label 226 319 227 23 62 "" [3 uses])
(note 227 226 228 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 23 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:794 90 {*movsi_internal}
     (nil))
(insn 229 228 230 23 (set (reg:DI 158 [ D.25585 ])
        (sign_extend:DI (reg:SI 227))) ge2fitman_fmtext_o.cpp:794 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 227)
        (nil)))
(insn 230 229 231 23 (parallel [
            (set (reg:DI 159 [ D.25585 ])
                (ashift:DI (reg:DI 158 [ D.25585 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:794 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 158 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 232 23 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:794 89 {*movdi_internal}
     (nil))
(insn 232 231 233 23 (parallel [
            (set (reg/f:DI 160 [ D.25591 ])
                (plus:DI (reg:DI 159 [ D.25585 ])
                    (reg/f:DI 228)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:794 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 228)
        (expr_list:REG_DEAD (reg:DI 159 [ D.25585 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])
                        (reg:DI 159 [ D.25585 ]))
                    (nil))))))
(insn 233 232 234 23 (set (reg/f:DI 161 [ D.25591 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:794 89 {*movdi_internal}
     (nil))
(insn 234 233 235 23 (set (reg:SF 162 [ D.25599 ])
        (mem:SF (reg/f:DI 161 [ D.25591 ]) [0 *_133+0 S4 A32])) ge2fitman_fmtext_o.cpp:794 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 161 [ D.25591 ])
        (nil)))
(insn 235 234 236 23 (set (reg:DF 163 [ D.25600 ])
        (float_extend:DF (reg:SF 162 [ D.25599 ]))) ge2fitman_fmtext_o.cpp:794 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 162 [ D.25599 ])
        (nil)))
(insn 236 235 237 23 (set (reg/f:DI 164 [ D.25591 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 data_points.fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:794 89 {*movdi_internal}
     (nil))
(insn 237 236 238 23 (parallel [
            (set (reg/f:DI 165 [ D.25591 ])
                (plus:DI (reg/f:DI 164 [ D.25591 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:794 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 164 [ D.25591 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 238 237 239 23 (set (reg:SF 166 [ D.25599 ])
        (mem:SF (reg/f:DI 165 [ D.25591 ]) [0 *_137+0 S4 A32])) ge2fitman_fmtext_o.cpp:794 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 165 [ D.25591 ])
        (nil)))
(insn 239 238 240 23 (set (reg:DF 167 [ D.25600 ])
        (float_extend:DF (reg:SF 166 [ D.25599 ]))) ge2fitman_fmtext_o.cpp:794 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 166 [ D.25599 ])
        (nil)))
(insn 240 239 241 23 (set (reg:DF 22 xmm1)
        (reg:DF 163 [ D.25600 ])) ge2fitman_fmtext_o.cpp:794 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 163 [ D.25600 ])
        (nil)))
(insn 241 240 242 23 (set (reg:DF 21 xmm0)
        (reg:DF 167 [ D.25600 ])) ge2fitman_fmtext_o.cpp:794 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 167 [ D.25600 ])
        (nil)))
(call_insn 242 241 243 23 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7f7c38922870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:794 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 243 242 244 23 (set (reg:DF 168 [ D.25600 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:794 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 244 243 245 23 (set (reg:SF 169 [ D.25599 ])
        (float_truncate:SF (reg:DF 168 [ D.25600 ]))) ge2fitman_fmtext_o.cpp:794 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 168 [ D.25600 ])
        (nil)))
(insn 245 244 246 23 (set (mem:SF (reg/f:DI 160 [ D.25591 ]) [0 *_132+0 S4 A32])
        (reg:SF 169 [ D.25599 ])) ge2fitman_fmtext_o.cpp:794 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ D.25599 ])
        (expr_list:REG_DEAD (reg/f:DI 160 [ D.25591 ])
            (nil))))
(insn 246 245 247 23 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:795 90 {*movsi_internal}
     (nil))
(insn 247 246 248 23 (set (reg:DI 170 [ D.25585 ])
        (sign_extend:DI (reg:SI 229))) ge2fitman_fmtext_o.cpp:795 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 229)
        (nil)))
(insn 248 247 249 23 (parallel [
            (set (reg:DI 171 [ D.25585 ])
                (ashift:DI (reg:DI 170 [ D.25585 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:795 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 23 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:795 89 {*movdi_internal}
     (nil))
(insn 250 249 251 23 (parallel [
            (set (reg/f:DI 172 [ D.25591 ])
                (plus:DI (reg:DI 171 [ D.25585 ])
                    (reg/f:DI 230)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:795 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (expr_list:REG_DEAD (reg:DI 171 [ D.25585 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])
                        (reg:DI 171 [ D.25585 ]))
                    (nil))))))
(insn 251 250 252 23 (set (reg:SF 173 [ D.25599 ])
        (mem:SF (reg/f:DI 172 [ D.25591 ]) [0 *_146+0 S4 A32])) ge2fitman_fmtext_o.cpp:795 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 172 [ D.25591 ])
        (nil)))
(insn 252 251 253 23 (set (reg:SF 232)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 totalPhase+0 S4 A32])) ge2fitman_fmtext_o.cpp:795 129 {*movsf_internal}
     (nil))
(insn 253 252 254 23 (set (reg:SF 231)
        (plus:SF (reg:SF 232)
            (reg:SF 173 [ D.25599 ]))) ge2fitman_fmtext_o.cpp:795 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 232)
        (expr_list:REG_DEAD (reg:SF 173 [ D.25599 ])
            (nil))))
(insn 254 253 255 23 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 totalPhase+0 S4 A32])
        (reg:SF 231)) ge2fitman_fmtext_o.cpp:795 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 231)
        (nil)))
(insn 255 254 320 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:719 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 320 255 321 23 (set (pc)
        (label_ref 256)) ge2fitman_fmtext_o.cpp:719 654 {jump}
     (nil)
 -> 256)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 321 320 259)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 174 175 176 177 178 233 234 235
(code_label 259 321 260 24 55 "" [1 uses])
(note 260 259 261 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 24 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])) ge2fitman_fmtext_o.cpp:799 90 {*movsi_internal}
     (nil))
(insn 262 261 263 24 (set (reg:DI 174 [ D.25585 ])
        (sign_extend:DI (reg:SI 233))) ge2fitman_fmtext_o.cpp:799 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 233)
        (nil)))
(insn 263 262 264 24 (parallel [
            (set (reg:DI 175 [ D.25585 ])
                (ashift:DI (reg:DI 174 [ D.25585 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:799 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 174 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 264 263 265 24 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:799 89 {*movdi_internal}
     (nil))
(insn 265 264 266 24 (parallel [
            (set (reg/f:DI 176 [ D.25591 ])
                (plus:DI (reg:DI 175 [ D.25585 ])
                    (reg/f:DI 234)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:799 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 234)
        (expr_list:REG_DEAD (reg:DI 175 [ D.25585 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])
                        (reg:DI 175 [ D.25585 ]))
                    (nil))))))
(insn 266 265 267 24 (set (reg:SF 177 [ D.25599 ])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -44 [0xffffffffffffffd4])) [0 countFID+0 S4 A32]))) ge2fitman_fmtext_o.cpp:799 199 {*floatsisf2_sse}
     (nil))
(insn 267 266 268 24 (set (reg:SF 235)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 totalPhase+0 S4 A32])) ge2fitman_fmtext_o.cpp:799 129 {*movsf_internal}
     (nil))
(insn 268 267 269 24 (set (reg:SF 178 [ D.25599 ])
        (div:SF (reg:SF 235)
            (reg:SF 177 [ D.25599 ]))) ge2fitman_fmtext_o.cpp:799 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 235)
        (expr_list:REG_DEAD (reg:SF 177 [ D.25599 ])
            (nil))))
(insn 269 268 270 24 (set (mem:SF (reg/f:DI 176 [ D.25591 ]) [0 *_152+0 S4 A32])
        (reg:SF 178 [ D.25599 ])) ge2fitman_fmtext_o.cpp:799 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 178 [ D.25599 ])
        (expr_list:REG_DEAD (reg/f:DI 176 [ D.25591 ])
            (nil))))
(insn 270 269 322 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:693 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 322 270 323 24 (set (pc)
        (label_ref 271)) ge2fitman_fmtext_o.cpp:693 654 {jump}
     (nil)
 -> 271)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 323 322 274)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 274 323 275 25 54 "" [1 uses])
(note 275 274 276 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f7c37280630 *.LC29>)) ge2fitman_fmtext_o.cpp:806 89 {*movdi_internal}
     (nil))
(call_insn 277 276 278 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:806 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 278 277 279 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7c372806c0 *.LC30>)) ge2fitman_fmtext_o.cpp:808 89 {*movdi_internal}
     (nil))
(call_insn 279 278 280 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7c3899b000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:808 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 280 279 305 25 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:809 90 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              27 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 236
(code_label 305 280 281 26 68 "" [1 uses])
(note 281 305 282 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 26 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])) ge2fitman_fmtext_o.cpp:809 90 {*movsi_internal}
     (nil))
(insn 283 282 284 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 236)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 countChannel+0 S4 A32]))) ge2fitman_fmtext_o.cpp:809 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 236)
        (nil)))
(jump_insn 284 283 285 26 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 327)
            (pc))) ge2fitman_fmtext_o.cpp:809 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 327)
;;  succ:       29
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 179 180 181 182 183 184 185 186 237 238 239 240 241
(note 285 284 286 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 27 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])) ge2fitman_fmtext_o.cpp:810 90 {*movsi_internal}
     (nil))
(insn 287 286 288 27 (set (reg:DI 179 [ D.25585 ])
        (sign_extend:DI (reg:SI 237))) ge2fitman_fmtext_o.cpp:810 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 237)
        (nil)))
(insn 288 287 289 27 (parallel [
            (set (reg:DI 180 [ D.25585 ])
                (ashift:DI (reg:DI 179 [ D.25585 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:810 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.25585 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 289 288 290 27 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])) ge2fitman_fmtext_o.cpp:810 89 {*movdi_internal}
     (nil))
(insn 290 289 291 27 (parallel [
            (set (reg/f:DI 181 [ D.25591 ])
                (plus:DI (reg:DI 180 [ D.25585 ])
                    (reg/f:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:810 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 238)
        (expr_list:REG_DEAD (reg:DI 180 [ D.25585 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 phase+0 S8 A64])
                        (reg:DI 180 [ D.25585 ]))
                    (nil))))))
(insn 291 290 292 27 (set (reg:SF 182 [ D.25599 ])
        (mem:SF (reg/f:DI 181 [ D.25591 ]) [0 *_162+0 S4 A32])) ge2fitman_fmtext_o.cpp:810 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.25591 ])
        (nil)))
(insn 292 291 293 27 (set (reg:SF 239)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC31") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:810 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 293 292 294 27 (set (reg:SF 183 [ D.25599 ])
        (mult:SF (reg:SF 182 [ D.25599 ])
            (reg:SF 239))) ge2fitman_fmtext_o.cpp:810 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 239)
        (expr_list:REG_DEAD (reg:SF 182 [ D.25599 ])
            (nil))))
(insn 294 293 295 27 (set (reg:DF 184 [ D.25600 ])
        (float_extend:DF (reg:SF 183 [ D.25599 ]))) ge2fitman_fmtext_o.cpp:810 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 183 [ D.25599 ])
        (nil)))
(insn 295 294 296 27 (set (reg:DF 240)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC32") [flags 0x2]) [0  S8 A64])) ge2fitman_fmtext_o.cpp:810 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 296 295 297 27 (set (reg:DF 185 [ D.25600 ])
        (div:DF (reg:DF 184 [ D.25600 ])
            (reg:DF 240))) ge2fitman_fmtext_o.cpp:810 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 240)
        (expr_list:REG_DEAD (reg:DF 184 [ D.25600 ])
            (nil))))
(insn 297 296 298 27 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])) ge2fitman_fmtext_o.cpp:810 90 {*movsi_internal}
     (nil))
(insn 298 297 299 27 (parallel [
            (set (reg:SI 186 [ D.25588 ])
                (plus:SI (reg:SI 241)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:810 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 299 298 300 27 (set (reg:DF 21 xmm0)
        (reg:DF 185 [ D.25600 ])) ge2fitman_fmtext_o.cpp:810 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 185 [ D.25600 ])
        (nil)))
(insn 300 299 301 27 (set (reg:SI 4 si)
        (reg:SI 186 [ D.25588 ])) ge2fitman_fmtext_o.cpp:810 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186 [ D.25588 ])
        (nil)))
(insn 301 300 302 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7c37280750 *.LC33>)) ge2fitman_fmtext_o.cpp:810 89 {*movdi_internal}
     (nil))
(insn 302 301 303 27 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:810 93 {*movqi_internal}
     (nil))
(call_insn 303 302 304 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7c3899a5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:810 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 304 303 324 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:809 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 324 304 325 27 (set (pc)
        (label_ref 305)) ge2fitman_fmtext_o.cpp:809 654 {jump}
     (nil)
 -> 305)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 325 324 327)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 28, flags: (NEW, RTL, MODIFIED)
;;  pred:       26
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 327 325 326 29 69 "" [1 uses])
(note 326 327 328 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 328 326 310 29 (const_int 0 [0]) ge2fitman_fmtext_o.cpp:813 684 {nop}
     (nil))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 [100.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 310 328 311 28 53 "" [0 uses])
(note 311 310 0 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void fix_phase(float, int, Precision1*, int, int) (_Z9fix_phasefiP10Precision1ii, funcdef_no=1024, decl_uid=24404, cgraph_uid=229, symbol_order=230)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 126.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a32 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a64 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a78 (r161,l0) best SSE_REGS, allocno SSE_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a91 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a92 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a2 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a3 (r152,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r151: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a5 (r151,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a19 (r139,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r138: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a21 (r138,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r137: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a33 (r129,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r128: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a34 (r128,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a59 (r109,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r108: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a60 (r108,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r107: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a61 (r107,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r106: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a63 (r106,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a65 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a62 (r96,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r95: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a77 (r95,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r94: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a79 (r94,l0) best SSE_REGS, allocno SSE_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a1(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a2(r153,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a3(r152,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a4(r150,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a5(r151,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a6(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r141,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a18(r140,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a19(r139,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a20(r137,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a21(r138,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a22(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a23(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a29(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r172,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a32(r173,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a33(r129,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a34(r128,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a35(r118,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a36(r127,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a37(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a39(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a41(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r117,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a49(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a52(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a55(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a56(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a57(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r109,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a60(r108,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a61(r107,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a62(r96,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a63(r106,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a64(r165,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a65(r105,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a66(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a68(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a70(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a71(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a75(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r95,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a78(r161,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a79(r94,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a80(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a81(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a82(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a84(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a85(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a86(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a87(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a88(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a89(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a90(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a91(r156,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a92(r155,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 143(l0): point = 1
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 139(l0): point = 11
   Insn 131(l0): point = 13
   Insn 130(l0): point = 15
   Insn 129(l0): point = 17
   Insn 128(l0): point = 19
   Insn 127(l0): point = 21
   Insn 126(l0): point = 23
   Insn 125(l0): point = 25
   Insn 124(l0): point = 27
   Insn 123(l0): point = 29
   Insn 122(l0): point = 31
   Insn 121(l0): point = 33
   Insn 120(l0): point = 35
   Insn 119(l0): point = 37
   Insn 118(l0): point = 39
   Insn 117(l0): point = 41
   Insn 116(l0): point = 43
   Insn 115(l0): point = 45
   Insn 114(l0): point = 47
   Insn 113(l0): point = 49
   Insn 112(l0): point = 51
   Insn 111(l0): point = 53
   Insn 110(l0): point = 55
   Insn 109(l0): point = 57
   Insn 108(l0): point = 59
   Insn 107(l0): point = 61
   Insn 106(l0): point = 63
   Insn 105(l0): point = 65
   Insn 104(l0): point = 67
   Insn 103(l0): point = 69
   Insn 102(l0): point = 71
   Insn 101(l0): point = 73
   Insn 100(l0): point = 75
   Insn 99(l0): point = 77
   Insn 98(l0): point = 79
   Insn 97(l0): point = 81
   Insn 96(l0): point = 83
   Insn 95(l0): point = 85
   Insn 94(l0): point = 87
   Insn 93(l0): point = 89
   Insn 92(l0): point = 91
   Insn 91(l0): point = 93
   Insn 90(l0): point = 95
   Insn 89(l0): point = 97
   Insn 88(l0): point = 99
   Insn 87(l0): point = 101
   Insn 86(l0): point = 103
   Insn 85(l0): point = 105
   Insn 84(l0): point = 107
   Insn 83(l0): point = 109
   Insn 82(l0): point = 111
   Insn 81(l0): point = 113
   Insn 80(l0): point = 115
   Insn 79(l0): point = 117
   Insn 78(l0): point = 119
   Insn 77(l0): point = 121
   Insn 76(l0): point = 123
   Insn 75(l0): point = 125
   Insn 74(l0): point = 127
   Insn 73(l0): point = 129
   Insn 72(l0): point = 131
   Insn 71(l0): point = 133
   Insn 70(l0): point = 135
   Insn 69(l0): point = 137
   Insn 68(l0): point = 139
   Insn 67(l0): point = 141
   Insn 66(l0): point = 143
   Insn 65(l0): point = 145
   Insn 64(l0): point = 147
   Insn 63(l0): point = 149
   Insn 62(l0): point = 151
   Insn 61(l0): point = 153
   Insn 60(l0): point = 155
   Insn 59(l0): point = 157
   Insn 58(l0): point = 159
   Insn 57(l0): point = 161
   Insn 56(l0): point = 163
   Insn 55(l0): point = 165
   Insn 54(l0): point = 167
   Insn 53(l0): point = 169
   Insn 52(l0): point = 171
   Insn 51(l0): point = 173
   Insn 50(l0): point = 175
   Insn 49(l0): point = 177
   Insn 48(l0): point = 179
   Insn 47(l0): point = 181
   Insn 46(l0): point = 183
   Insn 45(l0): point = 185
   Insn 44(l0): point = 187
   Insn 43(l0): point = 189
   Insn 42(l0): point = 191
   Insn 41(l0): point = 193
   Insn 40(l0): point = 195
   Insn 39(l0): point = 197
   Insn 38(l0): point = 199
   Insn 37(l0): point = 201
   Insn 36(l0): point = 203
   Insn 35(l0): point = 205
   Insn 34(l0): point = 207
   Insn 33(l0): point = 209
   Insn 32(l0): point = 211
   Insn 31(l0): point = 213
   Insn 30(l0): point = 215
   Insn 29(l0): point = 217
   Insn 28(l0): point = 219
   Insn 27(l0): point = 221
   Insn 26(l0): point = 223
   Insn 25(l0): point = 225
   Insn 24(l0): point = 227
   Insn 23(l0): point = 229
   Insn 22(l0): point = 231
   Insn 21(l0): point = 233
   Insn 15(l0): point = 236
   Insn 14(l0): point = 238
   Insn 13(l0): point = 240
   Insn 12(l0): point = 242
   Insn 11(l0): point = 244
   Insn 10(l0): point = 246
   Insn 6(l0): point = 248
   Insn 5(l0): point = 250
   Insn 4(l0): point = 252
   Insn 3(l0): point = 254
   Insn 2(l0): point = 256
 a0(r149): [16..31]
 a1(r154): [16..17]
 a2(r153): [18..19]
 a3(r152): [20..21]
 a4(r150): [20..29]
 a5(r151): [26..27]
 a6(r148): [32..33]
 a7(r145): [32..41]
 a8(r147): [34..35]
 a9(r146): [36..37]
 a10(r179): [38..39]
 a11(r144): [42..43]
 a12(r178): [44..45]
 a13(r143): [44..47]
 a14(r142): [48..49]
 a15(r177): [50..51]
 a16(r136): [54..69]
 a17(r141): [54..55]
 a18(r140): [56..57]
 a19(r139): [58..59]
 a20(r137): [58..67]
 a21(r138): [64..65]
 a22(r135): [70..71]
 a23(r133): [70..77]
 a24(r134): [72..73]
 a25(r176): [74..75]
 a26(r132): [78..79]
 a27(r175): [80..81]
 a28(r131): [80..83]
 a29(r130): [84..85]
 a30(r174): [86..87]
 a31(r172): [90..91]
 a32(r173): [92..93]
 a33(r129): [96..97]
 a34(r128): [102..105]
 a35(r118): [104..131]
 a36(r127): [106..107]
 a37(r126): [108..109]
 a38(r125): [110..111]
 a39(r122): [110..119]
 a40(r124): [112..113]
 a41(r123): [114..115]
 a42(r171): [116..117]
 a43(r121): [120..121]
 a44(r170): [122..123]
 a45(r120): [122..125]
 a46(r119): [126..127]
 a47(r169): [128..129]
 a48(r117): [132..133]
 a49(r116): [134..135]
 a50(r115): [136..137]
 a51(r113): [136..143]
 a52(r114): [138..139]
 a53(r168): [140..141]
 a54(r112): [144..145]
 a55(r167): [146..147]
 a56(r111): [146..149]
 a57(r110): [150..151]
 a58(r166): [152..153]
 a59(r109): [156..157]
 a60(r108): [162..163]
 a61(r107): [164..165]
 a62(r96): [164..201]
 a63(r106): [170..175]
 a64(r165): [172..173]
 a65(r105): [176..177]
 a66(r104): [178..179]
 a67(r103): [180..181]
 a68(r100): [180..189]
 a69(r102): [182..183]
 a70(r101): [184..185]
 a71(r164): [186..187]
 a72(r99): [190..191]
 a73(r163): [192..193]
 a74(r98): [192..195]
 a75(r97): [196..197]
 a76(r162): [198..199]
 a77(r95): [206..211]
 a78(r161): [208..209]
 a79(r94): [212..213]
 a80(r93): [214..215]
 a81(r92): [216..217]
 a82(r90): [216..223]
 a83(r91): [218..219]
 a84(r160): [220..221]
 a85(r89): [224..225]
 a86(r159): [226..227]
 a87(r88): [226..229]
 a88(r87): [230..231]
 a89(r158): [232..233]
 a90(r157): [7..8]
 a91(r156): [239..240]
 a92(r155): [243..244]
Compressing live ranges: from 259 to 146 - 56%
Ranges after the compression:
 a0(r149): [2..9]
 a1(r154): [2..3]
 a2(r153): [4..5]
 a3(r152): [6..7]
 a4(r150): [6..9]
 a5(r151): [8..9]
 a6(r148): [10..11]
 a7(r145): [10..17]
 a8(r147): [12..13]
 a9(r146): [14..15]
 a10(r179): [16..17]
 a11(r144): [18..19]
 a12(r178): [20..21]
 a13(r143): [20..21]
 a14(r142): [22..23]
 a15(r177): [24..25]
 a16(r136): [26..33]
 a17(r141): [26..27]
 a18(r140): [28..29]
 a19(r139): [30..31]
 a20(r137): [30..33]
 a21(r138): [32..33]
 a22(r135): [34..35]
 a23(r133): [34..39]
 a24(r134): [36..37]
 a25(r176): [38..39]
 a26(r132): [40..41]
 a27(r175): [42..43]
 a28(r131): [42..43]
 a29(r130): [44..45]
 a30(r174): [46..47]
 a31(r172): [48..49]
 a32(r173): [50..51]
 a33(r129): [52..53]
 a34(r128): [54..55]
 a35(r118): [54..75]
 a36(r127): [56..57]
 a37(r126): [58..59]
 a38(r125): [60..61]
 a39(r122): [60..67]
 a40(r124): [62..63]
 a41(r123): [64..65]
 a42(r171): [66..67]
 a43(r121): [68..69]
 a44(r170): [70..71]
 a45(r120): [70..71]
 a46(r119): [72..73]
 a47(r169): [74..75]
 a48(r117): [76..77]
 a49(r116): [78..79]
 a50(r115): [80..81]
 a51(r113): [80..85]
 a52(r114): [82..83]
 a53(r168): [84..85]
 a54(r112): [86..87]
 a55(r167): [88..89]
 a56(r111): [88..89]
 a57(r110): [90..91]
 a58(r166): [92..93]
 a59(r109): [94..95]
 a60(r108): [96..97]
 a61(r107): [98..99]
 a62(r96): [98..121]
 a63(r106): [100..101]
 a64(r165): [100..101]
 a65(r105): [102..103]
 a66(r104): [104..105]
 a67(r103): [106..107]
 a68(r100): [106..113]
 a69(r102): [108..109]
 a70(r101): [110..111]
 a71(r164): [112..113]
 a72(r99): [114..115]
 a73(r163): [116..117]
 a74(r98): [116..117]
 a75(r97): [118..119]
 a76(r162): [120..121]
 a77(r95): [122..123]
 a78(r161): [122..123]
 a79(r94): [124..125]
 a80(r93): [126..127]
 a81(r92): [128..129]
 a82(r90): [128..133]
 a83(r91): [130..131]
 a84(r160): [132..133]
 a85(r89): [134..135]
 a86(r159): [136..137]
 a87(r88): [136..137]
 a88(r87): [138..139]
 a89(r158): [140..141]
 a90(r157): [0..1]
 a91(r156): [142..143]
 a92(r155): [144..145]
  regions=1, blocks=7, points=146
    allocnos=93 (big 0), copies=0, conflicts=0, ranges=93
Disposition:
   88:r87  l0     0   87:r88  l0     1   85:r89  l0     0   82:r90  l0     0
   83:r91  l0     1   81:r92  l0     1   80:r93  l0     0   79:r94  l0    21
   77:r95  l0    21   62:r96  l0   mem   75:r97  l0     0   74:r98  l0     1
   72:r99  l0     0   68:r100 l0     0   70:r101 l0     1   69:r102 l0     1
   67:r103 l0     1   66:r104 l0     0   65:r105 l0    21   63:r106 l0    21
   61:r107 l0    21   60:r108 l0    21   59:r109 l0    21   57:r110 l0     0
   56:r111 l0     1   54:r112 l0     0   51:r113 l0     0   52:r114 l0     1
   50:r115 l0     1   49:r116 l0     0   48:r117 l0    21   35:r118 l0    22
   46:r119 l0     0   45:r120 l0     1   43:r121 l0     0   39:r122 l0     0
   41:r123 l0     1   40:r124 l0     1   38:r125 l0     1   37:r126 l0     0
   36:r127 l0    21   34:r128 l0    21   33:r129 l0    21   29:r130 l0     0
   28:r131 l0     1   26:r132 l0     0   23:r133 l0     0   24:r134 l0     1
   22:r135 l0     1   16:r136 l0     3   20:r137 l0   mem   21:r138 l0    21
   19:r139 l0    21   18:r140 l0    21   17:r141 l0    21   14:r142 l0     0
   13:r143 l0     1   11:r144 l0     0    7:r145 l0     0    9:r146 l0     1
    8:r147 l0     1    6:r148 l0     1    0:r149 l0     3    4:r150 l0   mem
    5:r151 l0    21    3:r152 l0    21    2:r153 l0    21    1:r154 l0    21
   92:r155 l0    21   91:r156 l0    21   90:r157 l0     0   89:r158 l0     0
   86:r159 l0     0   84:r160 l0     1   78:r161 l0    22   76:r162 l0     0
   73:r163 l0     0   71:r164 l0     1   64:r165 l0    22   58:r166 l0     0
   55:r167 l0     0   53:r168 l0     1   47:r169 l0     0   44:r170 l0     0
   42:r171 l0     1   31:r172 l0    21   32:r173 l0    21   30:r174 l0     0
   27:r175 l0     0   25:r176 l0     1   15:r177 l0     0   12:r178 l0     0
   10:r179 l0     1
+++Costs: overall 43, reg 5, mem 38, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void fix_phase(float, int, Precision1*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1]
;;  ref usage 	r0={7d} r1={7d,1u} r2={7d,1u} r4={7d,1u} r5={7d,1u} r6={1d,6u} r7={1d,12u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,5u} r17={35d,1u} r18={6d} r19={6d} r20={1d,46u,6e} r21={13d,13u} r22={10d,3u} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u,1e} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u,1e} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u,1e} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 777{582d,183u,12e} in 127{121 regular + 6 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 155 156
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 phase_applied+0 S4 A32])
        (reg:SF 21 xmm0 [ phase_applied ])) ge2fitman_fmtext_o.cpp:823 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ phase_applied ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 num_points+0 S4 A32])
        (reg:SI 5 di [ num_points ])) ge2fitman_fmtext_o.cpp:823 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ num_points ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
        (reg:DI 4 si [ in_data ])) ge2fitman_fmtext_o.cpp:823 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ in_data ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])
        (reg:SI 1 dx [ fid ])) ge2fitman_fmtext_o.cpp:823 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ fid ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 countFID+0 S4 A32])
        (reg:SI 2 cx [ countFID ])) ge2fitman_fmtext_o.cpp:823 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ countFID ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:824 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SF 155)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:825 129 {*movsf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 data_magnitude+0 S4 A32])
        (reg:SF 155)) ge2fitman_fmtext_o.cpp:825 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 155)
        (nil)))
(insn 13 12 14 2 (set (reg:SF 156)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_fmtext_o.cpp:826 129 {*movsf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 data_phase+0 S4 A32])
        (reg:SF 156)) ge2fitman_fmtext_o.cpp:826 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 156)
        (nil)))
(insn 15 14 132 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:830 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157
(code_label 132 15 16 3 72 "" [1 uses])
(note 16 132 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:830 90 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 157)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 num_points+0 S4 A32]))) ge2fitman_fmtext_o.cpp:830 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) ge2fitman_fmtext_o.cpp:830 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 142)
;;  succ:       6
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])) ge2fitman_fmtext_o.cpp:831 90 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 87 [ D.25604 ])
        (sign_extend:DI (reg:SI 158))) ge2fitman_fmtext_o.cpp:831 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 88 [ D.25604 ])
                (ashift:DI (reg:DI 87 [ D.25604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 4 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:831 89 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg/f:DI 89 [ D.25605 ])
                (plus:DI (reg:DI 88 [ D.25604 ])
                    (reg/f:DI 159)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 159)
        (expr_list:REG_DEAD (reg:DI 88 [ D.25604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
                        (reg:DI 88 [ D.25604 ]))
                    (nil))))))
(insn 26 25 27 4 (set (reg/f:DI 90 [ D.25606 ])
        (mem/f/j:DI (reg/f:DI 89 [ D.25605 ]) [0 _13->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:831 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.25605 ])
        (nil)))
(insn 27 26 28 4 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:831 90 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 91 [ D.25604 ])
        (sign_extend:DI (reg:SI 160))) ge2fitman_fmtext_o.cpp:831 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 92 [ D.25604 ])
                (ashift:DI (reg:DI 91 [ D.25604 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 4 (parallel [
            (set (reg/f:DI 93 [ D.25606 ])
                (plus:DI (reg/f:DI 90 [ D.25606 ])
                    (reg:DI 92 [ D.25604 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.25604 ])
        (expr_list:REG_DEAD (reg/f:DI 90 [ D.25606 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 31 30 32 4 (set (reg:SF 94 [ D.25607 ])
        (mem:SF (reg/f:DI 93 [ D.25606 ]) [0 *_17+0 S4 A32])) ge2fitman_fmtext_o.cpp:831 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.25606 ])
        (nil)))
(insn 32 31 33 4 (set (reg:DF 95 [ D.25608 ])
        (float_extend:DF (reg:SF 94 [ D.25607 ]))) ge2fitman_fmtext_o.cpp:831 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 94 [ D.25607 ])
        (nil)))
(insn 33 32 34 4 (set (reg:DF 161)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC34") [flags 0x2]) [0  S8 A64])) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 34 33 35 4 (set (reg:DF 22 xmm1)
        (reg:DF 161)) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 161)
        (nil)))
(insn 35 34 36 4 (set (reg:DF 21 xmm0)
        (reg:DF 95 [ D.25608 ])) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 95 [ D.25608 ])
        (nil)))
(call_insn 36 35 37 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("pow") [flags 0x41]  <function_decl 0x7f7c38957360 pow>) [0 __builtin_pow S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:831 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 37 36 38 4 (set (reg:DF 96 [ D.25608 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 38 37 39 4 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])) ge2fitman_fmtext_o.cpp:831 90 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 97 [ D.25604 ])
        (sign_extend:DI (reg:SI 162))) ge2fitman_fmtext_o.cpp:831 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 98 [ D.25604 ])
                (ashift:DI (reg:DI 97 [ D.25604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 4 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:831 89 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (parallel [
            (set (reg/f:DI 99 [ D.25605 ])
                (plus:DI (reg:DI 98 [ D.25604 ])
                    (reg/f:DI 163)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (expr_list:REG_DEAD (reg:DI 98 [ D.25604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
                        (reg:DI 98 [ D.25604 ]))
                    (nil))))))
(insn 43 42 44 4 (set (reg/f:DI 100 [ D.25606 ])
        (mem/f/j:DI (reg/f:DI 99 [ D.25605 ]) [0 _24->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:831 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.25605 ])
        (nil)))
(insn 44 43 45 4 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:831 90 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (set (reg:DI 101 [ D.25609 ])
        (sign_extend:DI (reg:SI 164))) ge2fitman_fmtext_o.cpp:831 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 102 [ D.25609 ])
                (plus:DI (reg:DI 101 [ D.25609 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.25609 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 103 [ D.25609 ])
                (ashift:DI (reg:DI 102 [ D.25609 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 102 [ D.25609 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 4 (parallel [
            (set (reg/f:DI 104 [ D.25606 ])
                (plus:DI (reg/f:DI 100 [ D.25606 ])
                    (reg:DI 103 [ D.25609 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:831 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ D.25609 ])
        (expr_list:REG_DEAD (reg/f:DI 100 [ D.25606 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 4 (set (reg:SF 105 [ D.25607 ])
        (mem:SF (reg/f:DI 104 [ D.25606 ]) [0 *_29+0 S4 A32])) ge2fitman_fmtext_o.cpp:831 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.25606 ])
        (nil)))
(insn 50 49 51 4 (set (reg:DF 106 [ D.25608 ])
        (float_extend:DF (reg:SF 105 [ D.25607 ]))) ge2fitman_fmtext_o.cpp:831 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 105 [ D.25607 ])
        (nil)))
(insn 51 50 52 4 (set (reg:DF 165)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC34") [flags 0x2]) [0  S8 A64])) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 52 51 53 4 (set (reg:DF 22 xmm1)
        (reg:DF 165)) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 165)
        (nil)))
(insn 53 52 54 4 (set (reg:DF 21 xmm0)
        (reg:DF 106 [ D.25608 ])) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 106 [ D.25608 ])
        (nil)))
(call_insn 54 53 55 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("pow") [flags 0x41]  <function_decl 0x7f7c38957360 pow>) [0 __builtin_pow S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:831 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 55 54 56 4 (set (reg:DF 107 [ D.25608 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 56 55 57 4 (set (reg:DF 108 [ D.25608 ])
        (plus:DF (reg:DF 96 [ D.25608 ])
            (reg:DF 107 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:831 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 107 [ D.25608 ])
        (expr_list:REG_DEAD (reg:DF 96 [ D.25608 ])
            (nil))))
(insn 57 56 58 4 (set (reg:DF 21 xmm0)
        (reg:DF 108 [ D.25608 ])) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 108 [ D.25608 ])
        (nil)))
(call_insn 58 57 59 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7f7c38966d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:831 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 59 58 60 4 (set (reg:DF 109 [ D.25608 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:831 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 60 59 61 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 data_magnitude+0 S4 A32])
        (float_truncate:SF (reg:DF 109 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:831 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 109 [ D.25608 ])
        (nil)))
(insn 61 60 62 4 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])) ge2fitman_fmtext_o.cpp:832 90 {*movsi_internal}
     (nil))
(insn 62 61 63 4 (set (reg:DI 110 [ D.25604 ])
        (sign_extend:DI (reg:SI 166))) ge2fitman_fmtext_o.cpp:832 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 63 62 64 4 (parallel [
            (set (reg:DI 111 [ D.25604 ])
                (ashift:DI (reg:DI 110 [ D.25604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 64 63 65 4 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:832 89 {*movdi_internal}
     (nil))
(insn 65 64 66 4 (parallel [
            (set (reg/f:DI 112 [ D.25605 ])
                (plus:DI (reg:DI 111 [ D.25604 ])
                    (reg/f:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (expr_list:REG_DEAD (reg:DI 111 [ D.25604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
                        (reg:DI 111 [ D.25604 ]))
                    (nil))))))
(insn 66 65 67 4 (set (reg/f:DI 113 [ D.25606 ])
        (mem/f/j:DI (reg/f:DI 112 [ D.25605 ]) [0 _40->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:832 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.25605 ])
        (nil)))
(insn 67 66 68 4 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:832 90 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 114 [ D.25604 ])
        (sign_extend:DI (reg:SI 168))) ge2fitman_fmtext_o.cpp:832 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 168)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:DI 115 [ D.25604 ])
                (ashift:DI (reg:DI 114 [ D.25604 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 4 (parallel [
            (set (reg/f:DI 116 [ D.25606 ])
                (plus:DI (reg/f:DI 113 [ D.25606 ])
                    (reg:DI 115 [ D.25604 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ D.25604 ])
        (expr_list:REG_DEAD (reg/f:DI 113 [ D.25606 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 71 70 72 4 (set (reg:SF 117 [ D.25607 ])
        (mem:SF (reg/f:DI 116 [ D.25606 ]) [0 *_44+0 S4 A32])) ge2fitman_fmtext_o.cpp:832 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.25606 ])
        (nil)))
(insn 72 71 73 4 (set (reg:DF 118 [ D.25608 ])
        (float_extend:DF (reg:SF 117 [ D.25607 ]))) ge2fitman_fmtext_o.cpp:832 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 117 [ D.25607 ])
        (nil)))
(insn 73 72 74 4 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])) ge2fitman_fmtext_o.cpp:832 90 {*movsi_internal}
     (nil))
(insn 74 73 75 4 (set (reg:DI 119 [ D.25604 ])
        (sign_extend:DI (reg:SI 169))) ge2fitman_fmtext_o.cpp:832 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 75 74 76 4 (parallel [
            (set (reg:DI 120 [ D.25604 ])
                (ashift:DI (reg:DI 119 [ D.25604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 4 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:832 89 {*movdi_internal}
     (nil))
(insn 77 76 78 4 (parallel [
            (set (reg/f:DI 121 [ D.25605 ])
                (plus:DI (reg:DI 120 [ D.25604 ])
                    (reg/f:DI 170)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 170)
        (expr_list:REG_DEAD (reg:DI 120 [ D.25604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
                        (reg:DI 120 [ D.25604 ]))
                    (nil))))))
(insn 78 77 79 4 (set (reg/f:DI 122 [ D.25606 ])
        (mem/f/j:DI (reg/f:DI 121 [ D.25605 ]) [0 _49->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:832 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.25605 ])
        (nil)))
(insn 79 78 80 4 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:832 90 {*movsi_internal}
     (nil))
(insn 80 79 81 4 (set (reg:DI 123 [ D.25609 ])
        (sign_extend:DI (reg:SI 171))) ge2fitman_fmtext_o.cpp:832 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 81 80 82 4 (parallel [
            (set (reg:DI 124 [ D.25609 ])
                (plus:DI (reg:DI 123 [ D.25609 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.25609 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 4 (parallel [
            (set (reg:DI 125 [ D.25609 ])
                (ashift:DI (reg:DI 124 [ D.25609 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.25609 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 4 (parallel [
            (set (reg/f:DI 126 [ D.25606 ])
                (plus:DI (reg/f:DI 122 [ D.25606 ])
                    (reg:DI 125 [ D.25609 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:832 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.25609 ])
        (expr_list:REG_DEAD (reg/f:DI 122 [ D.25606 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 84 83 85 4 (set (reg:SF 127 [ D.25607 ])
        (mem:SF (reg/f:DI 126 [ D.25606 ]) [0 *_54+0 S4 A32])) ge2fitman_fmtext_o.cpp:832 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.25606 ])
        (nil)))
(insn 85 84 86 4 (set (reg:DF 128 [ D.25608 ])
        (float_extend:DF (reg:SF 127 [ D.25607 ]))) ge2fitman_fmtext_o.cpp:832 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 127 [ D.25607 ])
        (nil)))
(insn 86 85 87 4 (set (reg:DF 22 xmm1)
        (reg:DF 118 [ D.25608 ])) ge2fitman_fmtext_o.cpp:832 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 118 [ D.25608 ])
        (nil)))
(insn 87 86 88 4 (set (reg:DF 21 xmm0)
        (reg:DF 128 [ D.25608 ])) ge2fitman_fmtext_o.cpp:832 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 128 [ D.25608 ])
        (nil)))
(call_insn 88 87 89 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7f7c38922870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:832 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 89 88 90 4 (set (reg:DF 129 [ D.25608 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:832 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 90 89 91 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 data_phase+0 S4 A32])
        (float_truncate:SF (reg:DF 129 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:832 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 129 [ D.25608 ])
        (nil)))
(insn 91 90 92 4 (set (reg:SF 173)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 data_phase+0 S4 A32])) ge2fitman_fmtext_o.cpp:841 129 {*movsf_internal}
     (nil))
(insn 92 91 93 4 (set (reg:SF 172)
        (minus:SF (reg:SF 173)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 phase_applied+0 S4 A32]))) ge2fitman_fmtext_o.cpp:841 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 173)
        (nil)))
(insn 93 92 94 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 data_phase+0 S4 A32])
        (reg:SF 172)) ge2fitman_fmtext_o.cpp:841 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 172)
        (nil)))
(insn 94 93 95 4 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])) ge2fitman_fmtext_o.cpp:845 90 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (set (reg:DI 130 [ D.25604 ])
        (sign_extend:DI (reg:SI 174))) ge2fitman_fmtext_o.cpp:845 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 96 95 97 4 (parallel [
            (set (reg:DI 131 [ D.25604 ])
                (ashift:DI (reg:DI 130 [ D.25604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:845 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 4 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:845 89 {*movdi_internal}
     (nil))
(insn 98 97 99 4 (parallel [
            (set (reg/f:DI 132 [ D.25605 ])
                (plus:DI (reg:DI 131 [ D.25604 ])
                    (reg/f:DI 175)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:845 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (expr_list:REG_DEAD (reg:DI 131 [ D.25604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
                        (reg:DI 131 [ D.25604 ]))
                    (nil))))))
(insn 99 98 100 4 (set (reg/f:DI 133 [ D.25606 ])
        (mem/f/j:DI (reg/f:DI 132 [ D.25605 ]) [0 _64->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:845 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.25605 ])
        (nil)))
(insn 100 99 101 4 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:845 90 {*movsi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:DI 134 [ D.25604 ])
        (sign_extend:DI (reg:SI 176))) ge2fitman_fmtext_o.cpp:845 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 176)
        (nil)))
(insn 102 101 103 4 (parallel [
            (set (reg:DI 135 [ D.25604 ])
                (ashift:DI (reg:DI 134 [ D.25604 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:845 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 134 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 4 (parallel [
            (set (reg/f:DI 136 [ D.25606 ])
                (plus:DI (reg/f:DI 133 [ D.25606 ])
                    (reg:DI 135 [ D.25604 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:845 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.25604 ])
        (expr_list:REG_DEAD (reg/f:DI 133 [ D.25606 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 104 103 105 4 (set (reg:DF 137 [ D.25608 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 data_magnitude+0 S4 A32]))) ge2fitman_fmtext_o.cpp:845 152 {*extendsfdf2_sse}
     (nil))
(insn 105 104 106 4 (set (reg:DF 138 [ D.25608 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 data_phase+0 S4 A32]))) ge2fitman_fmtext_o.cpp:845 152 {*extendsfdf2_sse}
     (nil))
(insn 106 105 107 4 (set (reg:DF 21 xmm0)
        (reg:DF 138 [ D.25608 ])) ge2fitman_fmtext_o.cpp:845 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 138 [ D.25608 ])
        (nil)))
(call_insn/u 107 106 108 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7f7c389275e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:845 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 108 107 109 4 (set (reg:DF 139 [ D.25608 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:845 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 109 108 110 4 (set (reg:DF 140 [ D.25608 ])
        (mult:DF (reg:DF 137 [ D.25608 ])
            (reg:DF 139 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:845 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 139 [ D.25608 ])
        (expr_list:REG_DEAD (reg:DF 137 [ D.25608 ])
            (nil))))
(insn 110 109 111 4 (set (reg:SF 141 [ D.25607 ])
        (float_truncate:SF (reg:DF 140 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:845 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 140 [ D.25608 ])
        (nil)))
(insn 111 110 112 4 (set (mem:SF (reg/f:DI 136 [ D.25606 ]) [0 *_68+0 S4 A32])
        (reg:SF 141 [ D.25607 ])) ge2fitman_fmtext_o.cpp:845 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 141 [ D.25607 ])
        (expr_list:REG_DEAD (reg/f:DI 136 [ D.25606 ])
            (nil))))
(insn 112 111 113 4 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 fid+0 S4 A32])) ge2fitman_fmtext_o.cpp:846 90 {*movsi_internal}
     (nil))
(insn 113 112 114 4 (set (reg:DI 142 [ D.25604 ])
        (sign_extend:DI (reg:SI 177))) ge2fitman_fmtext_o.cpp:846 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 177)
        (nil)))
(insn 114 113 115 4 (parallel [
            (set (reg:DI 143 [ D.25604 ])
                (ashift:DI (reg:DI 142 [ D.25604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:846 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.25604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 4 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])) ge2fitman_fmtext_o.cpp:846 89 {*movdi_internal}
     (nil))
(insn 116 115 117 4 (parallel [
            (set (reg/f:DI 144 [ D.25605 ])
                (plus:DI (reg:DI 143 [ D.25604 ])
                    (reg/f:DI 178)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:846 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (expr_list:REG_DEAD (reg:DI 143 [ D.25604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 in_data+0 S8 A64])
                        (reg:DI 143 [ D.25604 ]))
                    (nil))))))
(insn 117 116 118 4 (set (reg/f:DI 145 [ D.25606 ])
        (mem/f/j:DI (reg/f:DI 144 [ D.25605 ]) [0 _77->fl+0 S8 A64])) ge2fitman_fmtext_o.cpp:846 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.25605 ])
        (nil)))
(insn 118 117 119 4 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])) ge2fitman_fmtext_o.cpp:846 90 {*movsi_internal}
     (nil))
(insn 119 118 120 4 (set (reg:DI 146 [ D.25609 ])
        (sign_extend:DI (reg:SI 179))) ge2fitman_fmtext_o.cpp:846 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(insn 120 119 121 4 (parallel [
            (set (reg:DI 147 [ D.25609 ])
                (plus:DI (reg:DI 146 [ D.25609 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:846 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.25609 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 120 122 4 (parallel [
            (set (reg:DI 148 [ D.25609 ])
                (ashift:DI (reg:DI 147 [ D.25609 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:846 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 147 [ D.25609 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 4 (parallel [
            (set (reg/f:DI 149 [ D.25606 ])
                (plus:DI (reg/f:DI 145 [ D.25606 ])
                    (reg:DI 148 [ D.25609 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:846 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ D.25609 ])
        (expr_list:REG_DEAD (reg/f:DI 145 [ D.25606 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 123 122 124 4 (set (reg:DF 150 [ D.25608 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 data_magnitude+0 S4 A32]))) ge2fitman_fmtext_o.cpp:846 152 {*extendsfdf2_sse}
     (nil))
(insn 124 123 125 4 (set (reg:DF 151 [ D.25608 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 data_phase+0 S4 A32]))) ge2fitman_fmtext_o.cpp:846 152 {*extendsfdf2_sse}
     (nil))
(insn 125 124 126 4 (set (reg:DF 21 xmm0)
        (reg:DF 151 [ D.25608 ])) ge2fitman_fmtext_o.cpp:846 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 151 [ D.25608 ])
        (nil)))
(call_insn/u 126 125 127 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7f7c389645e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_fmtext_o.cpp:846 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 127 126 128 4 (set (reg:DF 152 [ D.25608 ])
        (reg:DF 21 xmm0)) ge2fitman_fmtext_o.cpp:846 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 128 127 129 4 (set (reg:DF 153 [ D.25608 ])
        (mult:DF (reg:DF 150 [ D.25608 ])
            (reg:DF 152 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:846 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 152 [ D.25608 ])
        (expr_list:REG_DEAD (reg:DF 150 [ D.25608 ])
            (nil))))
(insn 129 128 130 4 (set (reg:SF 154 [ D.25607 ])
        (float_truncate:SF (reg:DF 153 [ D.25608 ]))) ge2fitman_fmtext_o.cpp:846 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 153 [ D.25608 ])
        (nil)))
(insn 130 129 131 4 (set (mem:SF (reg/f:DI 149 [ D.25606 ]) [0 *_82+0 S4 A32])
        (reg:SF 154 [ D.25607 ])) ge2fitman_fmtext_o.cpp:846 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 154 [ D.25607 ])
        (expr_list:REG_DEAD (reg/f:DI 149 [ D.25606 ])
            (nil))))
(insn 131 130 139 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 countPoint+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_fmtext_o.cpp:830 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 139 131 140 4 (set (pc)
        (label_ref 132)) ge2fitman_fmtext_o.cpp:830 654 {jump}
     (nil)
 -> 132)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 140 139 142)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 142 140 141 6 73 "" [1 uses])
(note 141 142 143 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 143 141 137 6 (const_int 0 [0]) ge2fitman_fmtext_o.cpp:849 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 137 143 138 5 70 "" [0 uses])
(note 138 137 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1025, decl_uid=24683, cgraph_uid=230, symbol_order=257)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 24(l0): point = 1
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
Compressing live ranges: from 31 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=7, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={4d,2u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 206{169d,37u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman_fmtext_o.cpp:849 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman_fmtext_o.cpp:849 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_fmtext_o.cpp:849 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_fmtext_o.cpp:849 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman_fmtext_o.cpp:849 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_fmtext_o.cpp:849 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f7c37525000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f7c37894a20 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f7c37583120 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f7c37525000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f7c37894bd0 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f7c37571510 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 76 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) ge2fitman_fmtext_o.cpp:849 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 74 "" [0 uses])
(note 22 21 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for ge2fitman_fmtext_o.cpp) (_GLOBAL__sub_I__Z9read_dataPiP10PreprocessP7IOFilesP16Data_file_headerP17Data_block_headerP10Precision2PP8_IO_FILEP12Procpar_infoP10Precision1PPfSI_iP13InFile_structb, funcdef_no=1026, decl_uid=24689, cgraph_uid=231, symbol_order=361)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for ge2fitman_fmtext_o.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 103{93d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman_fmtext_o.cpp:849 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_fmtext_o.cpp:849 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f7c37571438 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman_fmtext_o.cpp:849 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

