
;; Function int main(int, char**) (main, funcdef_no=1021, decl_uid=24573, cgraph_uid=226, symbol_order=227)

      Creating newreg=422
Removing SCRATCH in insn #5 (nop 2)
rescanning insn with uid = 5.
      Creating newreg=423
Removing SCRATCH in insn #1076 (nop 3)
rescanning insn with uid = 1076.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=3408, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=3392, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r422
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 17:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 19:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 38:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 40:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 41:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 43:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 51:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 54:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 55:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 56:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 57:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =<  (1) re*m {*pushdi2_rex64}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 59:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 61:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 63:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) rBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 78:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 0 in insn 92:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 94:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 105:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 115:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 125:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 135:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 145:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 155:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 165:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 175:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 185:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 195:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 205:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 241:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 251:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 257:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 259:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 264:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 265:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 269:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 270:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) r {*cmpdi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 274:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 275:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 281:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 283:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 291:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 295:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 299:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 308:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 312:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 316:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 321:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) qm {*zero_extendqisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 323:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 324:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 325:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 326:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 335:  (0) ?mr {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 338:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 339:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 346:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 347:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 348:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 349:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 350:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 351:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 352:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 361:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 362:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 363:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 369:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 370:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 371:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 382:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 383:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 384:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 385:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 397:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 398:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 399:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 400:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 414:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=424 from oldreg=271, assigning class GENERAL_REGS to r424
  414: {r424:SI=r424:SI 0>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1150: r424:SI=r111:SI
    Inserting insn reload after:
 1151: r271:SI=r424:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 415
	 Choosing alt 0 in insn 415:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 428:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 434:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 435:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 436:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) r {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 444:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 445:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 446:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) r {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 453:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 454:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 455:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 459:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 460:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) r {*cmpdi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 464:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 465:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 466:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 476:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 485:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 490:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) qm {*zero_extendqisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 493:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 494:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 495:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 496:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 509:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 510:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 511:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 517:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 521:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 523:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 524:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 525:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 536:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 537:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 538:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 546:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 547:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 548:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 549:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 550:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 551:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 552:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 553:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 554:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 555:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 556:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 557:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 558:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 559:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 560:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 561:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 562:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 563:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 564:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 565:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 566:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 567:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 568:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 569:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 570:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 571:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 572:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
            4 Small class reload: reject+=3
          alt=0,overall=38,losers=4,rld_nregs=4
	 Choosing alt 0 in insn 573:  (0) =D  (1) =S  (2) =c  (3) 0  (4) 1  (5) 2 {*rep_movdi_rex64}
      Creating newreg=425 from oldreg=311, assigning class DIREG to r425
      Creating newreg=426 from oldreg=312, assigning class SIREG to r426
  573: {r313:DI=0;r425:DI=r313:DI<<0x3+r425:DI;r426:DI=r313:DI<<0x3+r426:DI;[r425:DI]=[r426:DI];use r313:DI;}
      REG_UNUSED r313:DI
      REG_UNUSED r312:DI
      REG_UNUSED r311:DI
    Inserting insn reload before:
 1152: r425:DI=r311:DI
 1153: r426:DI=r312:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 574:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 575:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 576:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 577:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 578:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 579:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 581:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 582:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 583:  (0) m  (1) re {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 588:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 590:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 591:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 592:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 593:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 594:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 595:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 596:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 597:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 598:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 599:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 608:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 609:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 615:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 616:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 617:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 628:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 629:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 630:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 631:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 632:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 636:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 644:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 645:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 646:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 647:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 648:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 655:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 656:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 659:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 661:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 662:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 663:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 664:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 665:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 666:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 673:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 675:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 676:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 677:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 678:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 679:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 680:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 681:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 690:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 693
	 Choosing alt 2 in insn 693:  (0) r  (1) 0  (2) mr {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 696:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=427 from oldreg=142, assigning class GENERAL_REGS to r427
  696: {r427:SI=r427:SI-r141:SI;clobber flags:CC;}
      REG_DEAD r141:SI
      REG_DEAD r140:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1154: r427:SI=r140:SI
    Inserting insn reload after:
 1155: r142:SI=r427:SI

            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 697:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=428 from oldreg=352, assigning class DREG to r428
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 699:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 700:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 701:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 704:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 705:  (1) rBwBz {*call_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 708:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 710:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 712:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 713:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 714:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 715:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 716:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 717:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 718:  (0) =X  (1) re {*pushsi2_rex64}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 719:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 720:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 722:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 723:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 724:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 726:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-40)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 727:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 728:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-48)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 729:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 730:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-56)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 738:  (1) rBwBz {*call_value} (sp_off=-64)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 739:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-64)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 740:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 742:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 746:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 751:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 753
	 Choosing alt 0 in insn 753:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 754:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 755:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 756:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 761:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 762:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 763:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 764:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 766
	 Choosing alt 0 in insn 766:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 767:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 768:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 769:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 770:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 771:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 773:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 774:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 775:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 776:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 777:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 778:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 780:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 782
	 Choosing alt 0 in insn 782:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 783:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 784:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 785:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 786:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 787:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 789:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 790:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 791:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 792:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 798:  (0) rm  (1) 0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 804:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 805:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 808:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 809:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 812:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 813:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 814:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 815:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 816:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 823:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 824:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 825:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 827:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 828:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 831:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 833:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 834:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 835:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 836:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 838
	 Choosing alt 0 in insn 838:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 839:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 840:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 841:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 842:  (0) rm  (1) re {*cmpdi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 845:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 851:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 857:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (1) rBwBz {*call_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 859:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 860:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 863:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 864:  (1) rBwBz {*call_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 867:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 868:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 871:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 872:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 875:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 876:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 879:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 880:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 884:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 885:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 886:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 887:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 888:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 889:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 890:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 891:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 892:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 894:  (0) =r  (1) g {*movsi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 899:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 900:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 901:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 905:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 906:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 908:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 909:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 910:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 913:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 914:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 917:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 918:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 922:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 923:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 924:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 925:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 926:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 927:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 928:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 929:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 930:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 931:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 932:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 933:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 934:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 936:  (0) =r  (1) g {*movsi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 941:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 942:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 943:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 944:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 947:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 948:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 950:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 951:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 952:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 955:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 956:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 957:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 962:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 963:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 964:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 965:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 968:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 970:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 972:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 973:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 974:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 975:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 983:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 986:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 992:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 993:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 996:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 998:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1001:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1005:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1007:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1010:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1011:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1014:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1016:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1019:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1020:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1023:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1025:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1028:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1029:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1032:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1033:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1036:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1038:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1041:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1042:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1045:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1047:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1050:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1051:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1054:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1056:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1059:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1060:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1063:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1065:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1068:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1076:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r423
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1078:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140

********** Pseudo live ranges #1: **********

  BB 139
   Insn 1078: point = 0
  BB 140
   Insn 1081: point = 0
  BB 138
   Insn 1077: point = 0
   Insn 1076: point = 0
   Insn 1075: point = 1
   Insn 1071: point = 2
   Insn 1068: point = 4
  BB 137
   Insn 1065: point = 5
   Insn 1064: point = 5
   Insn 1063: point = 6
  BB 136
   Insn 1061: point = 7
   Insn 1060: point = 7
   Insn 1059: point = 8
  BB 135
   Insn 1056: point = 9
   Insn 1055: point = 9
   Insn 1054: point = 10
  BB 134
   Insn 1052: point = 11
   Insn 1051: point = 11
   Insn 1050: point = 12
  BB 133
   Insn 1047: point = 13
   Insn 1046: point = 13
   Insn 1045: point = 14
  BB 132
   Insn 1043: point = 15
   Insn 1042: point = 15
   Insn 1041: point = 16
  BB 131
   Insn 1038: point = 17
   Insn 1037: point = 17
   Insn 1036: point = 18
  BB 130
   Insn 1034: point = 19
   Insn 1033: point = 19
   Insn 1032: point = 20
  BB 129
   Insn 1030: point = 21
   Insn 1029: point = 21
   Insn 1028: point = 22
  BB 128
   Insn 1025: point = 23
   Insn 1024: point = 23
   Insn 1023: point = 24
  BB 127
   Insn 1021: point = 25
   Insn 1020: point = 25
   Insn 1019: point = 26
  BB 126
   Insn 1016: point = 27
   Insn 1015: point = 27
   Insn 1014: point = 28
  BB 125
   Insn 1012: point = 29
   Insn 1011: point = 29
   Insn 1010: point = 30
  BB 124
   Insn 1007: point = 31
   Insn 1006: point = 31
   Insn 1005: point = 32
  BB 123
   Insn 1003: point = 33
   Insn 1002: point = 33
   Insn 1001: point = 34
  BB 122
   Insn 998: point = 35
   Insn 997: point = 35
   Insn 996: point = 36
  BB 121
   Insn 994: point = 37
   Insn 993: point = 37
   Insn 992: point = 38
  BB 116
   Insn 960: point = 39
   Insn 959: point = 39
  BB 120
   Insn 1147: point = 39
   Insn 986: point = 39
  BB 119
   Insn 983: point = 39
  BB 118
   Insn 981: point = 39
   Insn 980: point = 39
   Insn 979: point = 40
   Insn 978: point = 41
   Insn 977: point = 41
   Insn 976: point = 42
   Insn 975: point = 43
   Insn 974: point = 44
   Insn 973: point = 46
   Insn 972: point = 47
   Insn 971: point = 47
   Insn 970: point = 48
   Insn 969: point = 50
   Insn 968: point = 52
  BB 117
   Insn 966: point = 53
   Insn 965: point = 53
   Insn 964: point = 54
   Insn 963: point = 56
   Insn 962: point = 58
  BB 115
   Insn 957: point = 59
   Insn 956: point = 59
   Insn 955: point = 59
  BB 114
   Insn 952: point = 59
   Insn 951: point = 59
   Insn 950: point = 59
   Insn 949: point = 59
   Insn 948: point = 60
   Insn 947: point = 62
  BB 113
   Insn 945: point = 63
   Insn 944: point = 63
   Insn 943: point = 64
   Insn 942: point = 65
   Insn 941: point = 65
   Insn 940: point = 65
   Insn 939: point = 66
   Insn 938: point = 67
   Insn 937: point = 68
   Insn 936: point = 69
   Insn 935: point = 69
   Insn 934: point = 70
   Insn 933: point = 71
   Insn 932: point = 73
   Insn 931: point = 74
   Insn 930: point = 74
   Insn 929: point = 76
   Insn 928: point = 77
   Insn 927: point = 79
   Insn 926: point = 80
   Insn 925: point = 82
   Insn 924: point = 83
   Insn 923: point = 85
   Insn 922: point = 86
  BB 112
   Insn 919: point = 87
   Insn 918: point = 87
   Insn 917: point = 88
  BB 111
   Insn 915: point = 89
   Insn 914: point = 89
   Insn 913: point = 90
  BB 110
   Insn 910: point = 91
   Insn 909: point = 91
   Insn 908: point = 91
   Insn 907: point = 91
   Insn 906: point = 92
   Insn 905: point = 94
  BB 109
   Insn 903: point = 95
   Insn 902: point = 95
   Insn 901: point = 96
   Insn 900: point = 97
   Insn 899: point = 97
   Insn 898: point = 97
   Insn 897: point = 98
   Insn 896: point = 99
   Insn 895: point = 100
   Insn 894: point = 101
   Insn 893: point = 101
   Insn 892: point = 102
   Insn 891: point = 103
   Insn 890: point = 104
   Insn 889: point = 104
   Insn 888: point = 106
   Insn 887: point = 107
   Insn 886: point = 108
   Insn 885: point = 109
   Insn 884: point = 110
  BB 108
   Insn 881: point = 111
   Insn 880: point = 111
   Insn 879: point = 112
  BB 107
   Insn 877: point = 113
   Insn 876: point = 113
   Insn 875: point = 114
  BB 106
   Insn 872: point = 115
   Insn 871: point = 115
  BB 105
   Insn 869: point = 115
   Insn 868: point = 115
   Insn 867: point = 116
  BB 104
   Insn 864: point = 117
   Insn 863: point = 117
  BB 103
   Insn 861: point = 117
   Insn 860: point = 117
   Insn 859: point = 118
   Insn 858: point = 119
   Insn 857: point = 119
  BB 98
   Insn 829: point = 119
   Insn 828: point = 119
   Insn 827: point = 120
  BB 102
   Insn 1145: point = 121
   Insn 851: point = 121
  BB 100
   Insn 843: point = 121
   Insn 842: point = 121
   Insn 841: point = 122
   Insn 840: point = 124
   Insn 839: point = 126
   Insn 838: point = 128
   Insn 837: point = 130
   Insn 836: point = 132
   Insn 835: point = 134
   Insn 834: point = 135
   Insn 833: point = 137
  BB 101
   Insn 1143: point = 138
   Insn 845: point = 138
  BB 99
   Insn 831: point = 138
  BB 97
   Insn 825: point = 138
   Insn 824: point = 138
   Insn 823: point = 138
   Insn 822: point = 138
   Insn 821: point = 138
   Insn 820: point = 139
   Insn 819: point = 140
   Insn 818: point = 141
   Insn 817: point = 142
   Insn 816: point = 143
   Insn 815: point = 144
   Insn 814: point = 145
   Insn 813: point = 146
   Insn 812: point = 147
  BB 96
   Insn 809: point = 148
   Insn 808: point = 148
  BB 95
   Insn 806: point = 148
   Insn 805: point = 148
   Insn 804: point = 149
  BB 90
   Insn 744: point = 150
   Insn 743: point = 150
   Insn 742: point = 151
  BB 94
   Insn 1141: point = 152
   Insn 798: point = 152
  BB 92
   Insn 758: point = 152
   Insn 757: point = 152
   Insn 756: point = 153
   Insn 755: point = 155
   Insn 754: point = 157
   Insn 753: point = 159
   Insn 752: point = 161
   Insn 751: point = 163
   Insn 750: point = 165
   Insn 749: point = 166
   Insn 748: point = 168
  BB 93
   Insn 1139: point = 169
   Insn 792: point = 169
   Insn 791: point = 169
   Insn 790: point = 170
   Insn 789: point = 172
   Insn 788: point = 174
   Insn 787: point = 176
   Insn 786: point = 178
   Insn 785: point = 179
   Insn 784: point = 181
   Insn 783: point = 183
   Insn 782: point = 184
   Insn 781: point = 186
   Insn 780: point = 188
   Insn 779: point = 190
   Insn 778: point = 191
   Insn 777: point = 193
   Insn 776: point = 195
   Insn 775: point = 196
   Insn 774: point = 197
   Insn 773: point = 199
   Insn 772: point = 201
   Insn 771: point = 203
   Insn 770: point = 205
   Insn 769: point = 206
   Insn 768: point = 208
   Insn 767: point = 210
   Insn 766: point = 211
   Insn 765: point = 213
   Insn 764: point = 215
   Insn 763: point = 217
   Insn 762: point = 218
   Insn 761: point = 220
   Insn 760: point = 222
  BB 91
   Insn 746: point = 223
  BB 89
   Insn 740: point = 223
   Insn 739: point = 223
   Insn 738: point = 223
   Insn 737: point = 223
   Insn 736: point = 224
   Insn 735: point = 225
   Insn 734: point = 226
   Insn 733: point = 227
   Insn 732: point = 228
   Insn 731: point = 229
   Insn 730: point = 230
   Insn 729: point = 231
   Insn 728: point = 232
   Insn 727: point = 233
   Insn 726: point = 234
   Insn 725: point = 235
   Insn 724: point = 236
   Insn 723: point = 237
   Insn 722: point = 238
   Insn 721: point = 239
   Insn 720: point = 240
   Insn 719: point = 241
   Insn 718: point = 242
   Insn 717: point = 243
   Insn 716: point = 244
   Insn 715: point = 245
   Insn 714: point = 246
   Insn 713: point = 247
   Insn 712: point = 248
   Insn 711: point = 249
   Insn 710: point = 251
   Insn 709: point = 252
   Insn 708: point = 254
  BB 88
   Insn 705: point = 255
   Insn 704: point = 255
  BB 87
   Insn 702: point = 255
   Insn 701: point = 255
   Insn 700: point = 256
   Insn 699: point = 257
   Insn 698: point = 258
   Insn 697: point = 260
   Insn 1155: point = 262
	Hard reg 1 is preferable by r427 with profit 1
   Insn 696: point = 264
   Insn 1154: point = 265
	Hard reg 1 is preferable by r427 with profit 1
	Hard reg 2 is preferable by r427 with profit 1
   Insn 695: point = 267
   Insn 694: point = 268
   Insn 693: point = 269
   Insn 692: point = 271
   Insn 691: point = 272
   Insn 690: point = 273
   Insn 689: point = 273
   Insn 688: point = 273
   Insn 687: point = 274
   Insn 686: point = 275
   Insn 685: point = 276
   Insn 684: point = 277
   Insn 683: point = 278
   Insn 682: point = 279
   Insn 681: point = 280
   Insn 680: point = 281
   Insn 679: point = 281
   Insn 678: point = 282
   Insn 677: point = 283
   Insn 676: point = 284
   Insn 675: point = 285
   Insn 674: point = 286
   Insn 673: point = 288
  BB 77
   Insn 1133: point = 289
   Insn 583: point = 289
   Insn 582: point = 290
   Insn 581: point = 291
   Insn 580: point = 292
   Insn 579: point = 293
   Insn 578: point = 294
   Insn 577: point = 295
   Insn 576: point = 296
   Insn 575: point = 297
   Insn 574: point = 298
   Insn 573: point = 299
   Insn 1153: point = 300
	Hard reg 1 is preferable by r426 with profit 1
   Insn 1152: point = 302
	Hard reg 0 is preferable by r425 with profit 1
   Insn 572: point = 304
   Insn 571: point = 305
   Insn 570: point = 306
   Insn 569: point = 307
   Insn 568: point = 308
   Insn 567: point = 309
   Insn 566: point = 310
   Insn 565: point = 311
   Insn 564: point = 312
   Insn 563: point = 313
   Insn 562: point = 314
   Insn 561: point = 315
   Insn 560: point = 316
   Insn 559: point = 317
   Insn 558: point = 318
   Insn 557: point = 319
   Insn 556: point = 320
   Insn 555: point = 321
   Insn 554: point = 322
   Insn 553: point = 323
   Insn 552: point = 324
   Insn 551: point = 325
   Insn 550: point = 326
   Insn 549: point = 327
   Insn 548: point = 328
   Insn 547: point = 329
   Insn 546: point = 330
  BB 86
   Insn 670: point = 331
   Insn 669: point = 331
   Insn 668: point = 332
   Insn 667: point = 333
   Insn 666: point = 334
   Insn 665: point = 336
   Insn 664: point = 337
   Insn 663: point = 339
   Insn 662: point = 340
   Insn 661: point = 342
   Insn 660: point = 343
   Insn 659: point = 343
  BB 85
   Insn 657: point = 343
   Insn 656: point = 343
   Insn 655: point = 344
  BB 82
   Insn 1137: point = 345
   Insn 636: point = 345
   Insn 635: point = 345
   Insn 634: point = 346
   Insn 633: point = 347
   Insn 632: point = 348
   Insn 631: point = 349
   Insn 630: point = 351
   Insn 629: point = 352
   Insn 628: point = 354
  BB 84
   Insn 652: point = 355
   Insn 651: point = 355
   Insn 650: point = 356
   Insn 649: point = 357
   Insn 648: point = 358
   Insn 647: point = 359
   Insn 646: point = 361
   Insn 645: point = 362
   Insn 644: point = 364
  BB 83
   Insn 642: point = 365
   Insn 641: point = 365
  BB 81
   Insn 626: point = 365
   Insn 625: point = 365
  BB 80
   Insn 1135: point = 365
   Insn 620: point = 365
   Insn 619: point = 365
   Insn 618: point = 366
   Insn 617: point = 367
   Insn 616: point = 368
   Insn 615: point = 370
  BB 79
   Insn 613: point = 371
   Insn 612: point = 371
  BB 78
   Insn 610: point = 371
   Insn 609: point = 371
   Insn 608: point = 371
   Insn 607: point = 372
   Insn 606: point = 373
   Insn 605: point = 373
   Insn 604: point = 374
   Insn 603: point = 375
   Insn 602: point = 376
   Insn 601: point = 377
   Insn 600: point = 378
   Insn 599: point = 379
   Insn 598: point = 381
   Insn 597: point = 382
   Insn 596: point = 384
   Insn 595: point = 385
   Insn 594: point = 386
   Insn 593: point = 388
   Insn 592: point = 389
   Insn 591: point = 391
   Insn 590: point = 392
   Insn 589: point = 393
   Insn 588: point = 393
  BB 76
   Insn 544: point = 393
   Insn 543: point = 393
   Insn 542: point = 394
   Insn 541: point = 395
   Insn 540: point = 395
   Insn 539: point = 396
   Insn 538: point = 397
   Insn 537: point = 398
   Insn 536: point = 400
  BB 75
   Insn 534: point = 401
   Insn 533: point = 401
   Insn 532: point = 402
  BB 74
   Insn 529: point = 403
   Insn 528: point = 403
   Insn 527: point = 404
   Insn 526: point = 405
   Insn 525: point = 406
   Insn 524: point = 407
   Insn 523: point = 408
   Insn 522: point = 409
   Insn 521: point = 409
  BB 73
   Insn 519: point = 409
   Insn 518: point = 409
   Insn 517: point = 410
  BB 70
   Insn 1131: point = 411
   Insn 485: point = 411
  BB 72
   Insn 514: point = 411
   Insn 513: point = 411
   Insn 512: point = 412
   Insn 511: point = 413
   Insn 510: point = 414
   Insn 509: point = 416
  BB 71
   Insn 507: point = 417
   Insn 506: point = 417
   Insn 505: point = 418
   Insn 504: point = 420
   Insn 503: point = 422
   Insn 502: point = 423
   Insn 501: point = 423
   Insn 500: point = 424
   Insn 499: point = 425
   Insn 498: point = 426
   Insn 497: point = 427
   Insn 496: point = 428
   Insn 495: point = 429
   Insn 494: point = 430
   Insn 493: point = 432
   Insn 492: point = 433
   Insn 491: point = 434
   Insn 490: point = 436
  BB 69
   Insn 483: point = 437
   Insn 482: point = 437
   Insn 481: point = 438
  BB 68
   Insn 1129: point = 439
   Insn 476: point = 439
  BB 67
   Insn 474: point = 439
   Insn 473: point = 439
   Insn 472: point = 440
  BB 66
   Insn 469: point = 441
   Insn 468: point = 441
   Insn 467: point = 442
   Insn 466: point = 443
   Insn 465: point = 444
   Insn 464: point = 446
  BB 65
   Insn 462: point = 447
   Insn 461: point = 447
   Insn 460: point = 448
   Insn 459: point = 449
   Insn 458: point = 450
   Insn 457: point = 451
   Insn 456: point = 451
   Insn 455: point = 452
   Insn 454: point = 452
   Insn 453: point = 454
  BB 64
   Insn 451: point = 455
   Insn 450: point = 455
   Insn 449: point = 456
   Insn 448: point = 457
   Insn 447: point = 457
   Insn 446: point = 458
   Insn 445: point = 458
   Insn 444: point = 460
  BB 63
   Insn 442: point = 461
   Insn 441: point = 461
   Insn 440: point = 462
   Insn 439: point = 463
   Insn 438: point = 463
   Insn 437: point = 464
   Insn 436: point = 465
   Insn 435: point = 466
   Insn 434: point = 468
  BB 58
   Insn 1127: point = 469
   Insn 404: point = 469
   Insn 403: point = 469
   Insn 402: point = 470
   Insn 401: point = 471
   Insn 400: point = 472
   Insn 399: point = 473
   Insn 398: point = 475
   Insn 397: point = 476
  BB 56
   Insn 1125: point = 477
   Insn 389: point = 477
   Insn 388: point = 477
   Insn 387: point = 478
   Insn 386: point = 479
   Insn 385: point = 480
   Insn 384: point = 481
   Insn 383: point = 483
   Insn 382: point = 484
  BB 57
   Insn 395: point = 485
   Insn 394: point = 485
  BB 55
   Insn 380: point = 485
   Insn 379: point = 485
  BB 62
   Insn 431: point = 485
   Insn 430: point = 485
   Insn 429: point = 486
   Insn 428: point = 487
   Insn 427: point = 488
  BB 61
   Insn 425: point = 489
   Insn 424: point = 489
   Insn 423: point = 490
  BB 60
   Insn 420: point = 491
   Insn 419: point = 491
   Insn 418: point = 492
   Insn 417: point = 493
   Insn 416: point = 495
   Insn 415: point = 497
   Insn 1151: point = 499
	Hard reg 1 is preferable by r424 with profit 1
   Insn 414: point = 501
   Insn 1150: point = 501
   Insn 413: point = 502
  BB 59
   Insn 411: point = 503
   Insn 410: point = 503
   Insn 409: point = 504
  BB 54
   Insn 1123: point = 505
   Insn 374: point = 505
   Insn 373: point = 505
   Insn 372: point = 506
   Insn 371: point = 507
   Insn 370: point = 508
   Insn 369: point = 510
  BB 53
   Insn 367: point = 511
   Insn 366: point = 511
  BB 52
   Insn 364: point = 511
   Insn 363: point = 511
   Insn 362: point = 511
   Insn 361: point = 511
   Insn 360: point = 512
   Insn 359: point = 513
   Insn 358: point = 513
   Insn 357: point = 514
   Insn 356: point = 515
   Insn 355: point = 516
   Insn 354: point = 517
   Insn 353: point = 518
   Insn 352: point = 519
   Insn 351: point = 520
   Insn 350: point = 522
   Insn 349: point = 523
   Insn 348: point = 524
   Insn 347: point = 525
   Insn 346: point = 526
  BB 49
   Insn 1121: point = 527
   Insn 316: point = 527
  BB 48
   Insn 313: point = 527
   Insn 312: point = 527
  BB 47
   Insn 310: point = 527
   Insn 309: point = 527
   Insn 308: point = 528
  BB 45
   Insn 1119: point = 529
   Insn 299: point = 529
  BB 44
   Insn 296: point = 529
   Insn 295: point = 529
  BB 43
   Insn 293: point = 529
   Insn 292: point = 529
   Insn 291: point = 530
  BB 51
   Insn 343: point = 531
   Insn 342: point = 531
   Insn 341: point = 532
   Insn 340: point = 533
   Insn 339: point = 534
   Insn 338: point = 536
  BB 50
   Insn 336: point = 537
   Insn 335: point = 537
   Insn 334: point = 537
   Insn 333: point = 538
   Insn 332: point = 539
   Insn 331: point = 539
   Insn 330: point = 540
   Insn 329: point = 541
   Insn 328: point = 542
   Insn 327: point = 543
   Insn 326: point = 544
   Insn 325: point = 545
   Insn 324: point = 546
   Insn 323: point = 547
   Insn 322: point = 548
   Insn 321: point = 550
  BB 46
   Insn 306: point = 551
   Insn 305: point = 551
   Insn 304: point = 552
  BB 42
   Insn 289: point = 553
   Insn 288: point = 553
   Insn 287: point = 554
   Insn 286: point = 555
   Insn 285: point = 555
   Insn 284: point = 556
   Insn 283: point = 557
   Insn 282: point = 558
   Insn 281: point = 560
  BB 41
   Insn 278: point = 561
   Insn 277: point = 561
   Insn 276: point = 562
   Insn 275: point = 563
   Insn 274: point = 564
  BB 40
   Insn 272: point = 565
   Insn 271: point = 565
   Insn 270: point = 566
   Insn 269: point = 567
   Insn 268: point = 568
   Insn 267: point = 569
   Insn 266: point = 569
   Insn 265: point = 570
   Insn 264: point = 570
   Insn 263: point = 571
   Insn 262: point = 571
   Insn 261: point = 572
   Insn 260: point = 573
   Insn 259: point = 574
   Insn 258: point = 575
   Insn 257: point = 577
   Insn 256: point = 578
  BB 37
   Insn 1117: point = 579
   Insn 243: point = 579
   Insn 242: point = 579
   Insn 241: point = 580
  BB 35
   Insn 1115: point = 581
   Insn 233: point = 581
   Insn 232: point = 581
   Insn 231: point = 582
  BB 33
   Insn 1113: point = 583
   Insn 223: point = 583
  BB 31
   Insn 1111: point = 583
   Insn 215: point = 583
  BB 29
   Insn 1109: point = 583
   Insn 207: point = 583
   Insn 206: point = 583
   Insn 205: point = 584
  BB 27
   Insn 1107: point = 585
   Insn 197: point = 585
   Insn 196: point = 585
   Insn 195: point = 586
  BB 25
   Insn 1105: point = 587
   Insn 187: point = 587
   Insn 186: point = 587
   Insn 185: point = 588
  BB 23
   Insn 1103: point = 589
   Insn 177: point = 589
   Insn 176: point = 589
   Insn 175: point = 590
  BB 21
   Insn 1101: point = 591
   Insn 167: point = 591
   Insn 166: point = 591
   Insn 165: point = 592
  BB 19
   Insn 1099: point = 593
   Insn 157: point = 593
   Insn 156: point = 593
   Insn 155: point = 594
  BB 17
   Insn 1097: point = 595
   Insn 147: point = 595
   Insn 146: point = 595
   Insn 145: point = 596
  BB 15
   Insn 1095: point = 597
   Insn 137: point = 597
   Insn 136: point = 597
   Insn 135: point = 598
  BB 13
   Insn 1093: point = 599
   Insn 127: point = 599
   Insn 126: point = 599
   Insn 125: point = 600
  BB 11
   Insn 1091: point = 601
   Insn 117: point = 601
   Insn 116: point = 601
   Insn 115: point = 602
  BB 9
   Insn 1089: point = 603
   Insn 107: point = 603
   Insn 106: point = 603
   Insn 105: point = 604
  BB 7
   Insn 1087: point = 605
   Insn 97: point = 605
   Insn 96: point = 605
   Insn 95: point = 606
   Insn 94: point = 607
   Insn 93: point = 608
   Insn 92: point = 610
   Insn 91: point = 612
   Insn 90: point = 613
   Insn 89: point = 615
   Insn 88: point = 617
  BB 5
   Insn 1085: point = 618
   Insn 80: point = 618
   Insn 79: point = 618
   Insn 78: point = 619
  BB 39
   Insn 253: point = 620
   Insn 252: point = 620
   Insn 251: point = 621
  BB 38
   Insn 249: point = 622
   Insn 248: point = 622
  BB 36
   Insn 239: point = 622
   Insn 238: point = 622
  BB 34
   Insn 229: point = 622
   Insn 228: point = 622
  BB 32
   Insn 221: point = 622
   Insn 220: point = 622
  BB 30
   Insn 213: point = 622
   Insn 212: point = 622
  BB 28
   Insn 203: point = 622
   Insn 202: point = 622
  BB 26
   Insn 193: point = 622
   Insn 192: point = 622
  BB 24
   Insn 183: point = 622
   Insn 182: point = 622
  BB 22
   Insn 173: point = 622
   Insn 172: point = 622
  BB 20
   Insn 163: point = 622
   Insn 162: point = 622
  BB 18
   Insn 153: point = 622
   Insn 152: point = 622
  BB 16
   Insn 143: point = 622
   Insn 142: point = 622
  BB 14
   Insn 133: point = 622
   Insn 132: point = 622
  BB 12
   Insn 123: point = 622
   Insn 122: point = 622
  BB 10
   Insn 113: point = 622
   Insn 112: point = 622
  BB 8
   Insn 103: point = 622
   Insn 102: point = 622
  BB 6
   Insn 86: point = 622
   Insn 85: point = 622
  BB 4
   Insn 76: point = 622
   Insn 75: point = 622
   Insn 74: point = 622
   Insn 73: point = 623
   Insn 72: point = 624
   Insn 71: point = 624
   Insn 70: point = 624
   Insn 69: point = 625
   Insn 68: point = 626
   Insn 67: point = 627
   Insn 66: point = 628
   Insn 65: point = 629
   Insn 64: point = 630
   Insn 63: point = 631
   Insn 62: point = 632
   Insn 61: point = 633
   Insn 60: point = 634
   Insn 59: point = 635
   Insn 58: point = 636
   Insn 57: point = 637
   Insn 56: point = 638
   Insn 55: point = 639
   Insn 54: point = 640
   Insn 53: point = 641
   Insn 52: point = 642
   Insn 51: point = 643
   Insn 50: point = 644
   Insn 49: point = 644
   Insn 48: point = 645
   Insn 47: point = 646
   Insn 46: point = 647
   Insn 45: point = 648
   Insn 44: point = 649
   Insn 43: point = 650
   Insn 42: point = 651
   Insn 41: point = 652
   Insn 40: point = 653
   Insn 39: point = 654
   Insn 38: point = 655
  BB 3
   Insn 35: point = 656
   Insn 34: point = 656
   Insn 33: point = 657
  BB 2
   Insn 31: point = 658
   Insn 30: point = 658
   Insn 29: point = 658
   Insn 28: point = 658
   Insn 27: point = 658
   Insn 26: point = 658
   Insn 25: point = 658
   Insn 24: point = 658
   Insn 23: point = 658
   Insn 22: point = 658
   Insn 21: point = 658
   Insn 20: point = 658
   Insn 19: point = 658
   Insn 18: point = 659
   Insn 17: point = 660
   Insn 16: point = 660
   Insn 15: point = 660
   Insn 14: point = 660
   Insn 13: point = 660
   Insn 12: point = 660
   Insn 11: point = 660
   Insn 10: point = 660
   Insn 9: point = 660
   Insn 8: point = 660
   Insn 5: point = 660
   Insn 3: point = 662
   Insn 2: point = 662
 r87: [622..623]
 r88: [616..617]
 r89: [614..615]
 r90: [611..613]
 r91: [609..610]
 r92: [606..608]
 r93: [573..578]
 r94: [576..577]
 r95: [572..575]
 r96: [567..568]
 r97: [565..566]
 r98: [559..560]
 r99: [556..558]
 r100: [553..554]
 r101: [529..530]
 r102: [551..552]
 r103: [527..528]
 r104: [549..550]
 r105: [543..548]
 r106: [539..547]
 r107: [537..538]
 r108: [515..526]
 r109: [511..512]
 r110: [503..504]
 r111: [498..502]
 r112: [491..493]
 r113: [491..492]
 r114: [489..490]
 r115: [486..488]
 r116: [461..462]
 r117: [455..456]
 r118: [449..450]
 r119: [447..448]
 r120: [439..440]
 r121: [437..438]
 r122: [435..436]
 r123: [427..434]
 r124: [423..433]
 r125: [421..422]
 r126: [417..418]
 r127: [409..410]
 r128: [401..402]
 r129: [393..394]
 r130: [291..292]
 r131: [289..290]
 r132: [375..392]
 r133: [371..372]
 r134: [343..344]
 r135: [287..288]
 r136: [277..286]
 r137: [270..272]
 r138: [270..271]
 r139: [261..269]
 r140: [266..268]
 r141: [264..267]
 r142: [261..262]
 r143: [257..258]
 r144: [255..256]
 r145: [253..254]
 r146: [242..252]
 r147: [250..251]
 r148: [239..249]
 r149: [150..151]
 r150: [152..166]
 r151: [154..155]
 r152: [152..153]
 r153: [212..218]
 r154: [214..215]
 r155: [212..213]
 r156: [196..211]
 r157: [200..206]
 r158: [202..203]
 r159: [200..201]
 r160: [198..199]
 r161: [196..197]
 r162: [185..191]
 r163: [187..188]
 r164: [185..186]
 r165: [169..184]
 r166: [173..179]
 r167: [175..176]
 r168: [173..174]
 r169: [171..172]
 r170: [169..170]
 r171: [148..149]
 r172: [119..120]
 r173: [121..135]
 r174: [123..124]
 r175: [121..122]
 r176: [117..118]
 r177: [115..116]
 r178: [113..114]
 r179: [111..112]
 r180: [98..110]
 r181: [95..96]
 r182: [89..90]
 r183: [87..88]
 r184: [66..86]
 r185: [63..64]
 r186: [53..54]
 r187: [47..48]
 r188: [39..40]
 r189: [37..38]
 r190: [35..36]
 r191: [33..34]
 r192: [31..32]
 r193: [29..30]
 r194: [27..28]
 r195: [25..26]
 r196: [23..24]
 r197: [21..22]
 r198: [19..20]
 r199: [17..18]
 r200: [15..16]
 r201: [13..14]
 r202: [11..12]
 r203: [9..10]
 r204: [7..8]
 r205: [5..6]
 r206: [3..4]
 r207: [1..2]
 r208: [658..659]
 r209: [656..657]
 r210: [649..655]
 r211: [648..654]
 r212: [647..653]
 r213: [646..652]
 r214: [645..651]
 r215: [644..650]
 r216: [629..643]
 r217: [628..642]
 r218: [627..641]
 r219: [626..640]
 r220: [625..639]
 r221: [624..638]
 r222: [636..637]
 r223: [634..635]
 r224: [632..633]
 r225: [630..631]
 r226: [618..619]
 r227: [611..612]
 r228: [605..607]
 r229: [603..604]
 r230: [601..602]
 r231: [599..600]
 r232: [597..598]
 r233: [595..596]
 r234: [593..594]
 r235: [591..592]
 r236: [589..590]
 r237: [587..588]
 r238: [585..586]
 r239: [583..584]
 r240: [581..582]
 r241: [579..580]
 r242: [620..621]
 r243: [571..574]
 r244: [569..570]
 r245: [562..564]
 r246: [561..563]
 r247: [555..557]
 r248: [542..546]
 r249: [541..545]
 r250: [540..544]
 r251: [535..536]
 r252: [532..534]
 r253: [531..533]
 r254: [518..525]
 r255: [517..524]
 r256: [516..523]
 r257: [521..522]
 r258: [514..520]
 r259: [513..519]
 r260: [509..510]
 r261: [506..508]
 r262: [505..507]
 r263: [479..484]
 r264: [482..483]
 r265: [478..481]
 r266: [477..480]
 r267: [471..476]
 r268: [474..475]
 r269: [470..473]
 r270: [469..472]
 r271: [498..499]
 r272: [496..497]
 r273: [494..495]
 r274: [485..487]
 r275: [467..468]
 r276: [464..466]
 r277: [463..465]
 r278: [459..460]
 r279: [457..458]
 r280: [453..454]
 r281: [451..452]
 r282: [445..446]
 r283: [442..444]
 r284: [441..443]
 r285: [431..432]
 r286: [426..430]
 r287: [425..429]
 r288: [424..428]
 r289: [419..420]
 r290: [415..416]
 r291: [412..414]
 r292: [411..413]
 r293: [405..408]
 r294: [404..407]
 r295: [403..406]
 r296: [399..400]
 r297: [396..398]
 r298: [395..397]
 r299: [329..330]
 r300: [327..328]
 r301: [325..326]
 r302: [323..324]
 r303: [321..322]
 r304: [319..320]
 r305: [317..318]
 r306: [315..316]
 r307: [313..314]
 r308: [311..312]
 r309: [309..310]
 r310: [307..308]
 r311: [303..306]
 r312: [301..305]
 r313: [299..304]
 r314: [297..298]
 r315: [295..296]
 r316: [293..294]
 r317: [390..391]
 r318: [378..389]
 r319: [387..388]
 r320: [377..386]
 r321: [376..385]
 r322: [383..384]
 r323: [374..382]
 r324: [380..381]
 r325: [373..379]
 r326: [369..370]
 r327: [366..368]
 r328: [365..367]
 r329: [353..354]
 r330: [347..352]
 r331: [350..351]
 r332: [346..349]
 r333: [345..348]
 r334: [363..364]
 r335: [357..362]
 r336: [360..361]
 r337: [356..359]
 r338: [355..358]
 r339: [341..342]
 r340: [333..340]
 r341: [338..339]
 r342: [332..337]
 r343: [335..336]
 r344: [331..334]
 r345: [278..285]
 r346: [276..284]
 r347: [275..283]
 r348: [274..282]
 r349: [273..281]
 r350: [279..280]
 r351: [259..260]
 r353: [228..248]
 r354: [227..247]
 r355: [226..246]
 r356: [225..245]
 r357: [224..244]
 r358: [223..243]
 r359: [240..241]
 r360: [237..238]
 r361: [235..236]
 r362: [233..234]
 r363: [231..232]
 r364: [229..230]
 r365: [167..168]
 r366: [162..163]
 r367: [164..165]
 r368: [160..161]
 r369: [158..159]
 r370: [156..157]
 r371: [219..220]
 r372: [221..222]
 r373: [216..217]
 r374: [207..208]
 r375: [209..210]
 r376: [204..205]
 r377: [192..193]
 r378: [194..195]
 r379: [189..190]
 r380: [180..181]
 r381: [182..183]
 r382: [177..178]
 r383: [142..147]
 r384: [141..146]
 r385: [140..145]
 r386: [139..144]
 r387: [138..143]
 r388: [136..137]
 r389: [131..132]
 r390: [133..134]
 r391: [129..130]
 r392: [127..128]
 r393: [125..126]
 r394: [101..109]
 r395: [100..108]
 r396: [99..107]
 r397: [105..106]
 r398: [97..104]
 r399: [102..103]
 r400: [93..94]
 r401: [91..92]
 r402: [84..85]
 r403: [69..83]
 r404: [81..82]
 r405: [68..80]
 r406: [78..79]
 r407: [67..77]
 r408: [75..76]
 r409: [65..74]
 r410: [72..73]
 r411: [70..71]
 r412: [61..62]
 r413: [59..60]
 r414: [55..56]
 r415: [57..58]
 r416: [49..50]
 r417: [51..52]
 r418: [45..46]
 r419: [42..44]
 r420: [41..43]
 r422: [660..661]
 r423: [0..0]
 r424: [500..501]
 r425: [299..302]
 r426: [299..300]
 r427: [263..265]
 r428: [260..261]
Compressing live ranges: from 662 to 481 - 72%
Ranges after the compression:
 r87: [463..464]
 r88: [457..458]
 r89: [455..456]
 r90: [453..454]
 r91: [451..452]
 r92: [449..450]
 r93: [419..422]
 r94: [421..422]
 r95: [419..420]
 r96: [415..416]
 r97: [413..414]
 r98: [409..410]
 r99: [407..408]
 r100: [405..406]
 r101: [391..392]
 r102: [403..404]
 r103: [389..390]
 r104: [401..402]
 r105: [399..400]
 r106: [399..400]
 r107: [397..398]
 r108: [385..388]
 r109: [383..384]
 r110: [377..378]
 r111: [373..376]
 r112: [367..368]
 r113: [367..368]
 r114: [365..366]
 r115: [363..364]
 r116: [349..350]
 r117: [343..344]
 r118: [337..338]
 r119: [335..336]
 r120: [329..330]
 r121: [327..328]
 r122: [325..326]
 r123: [321..324]
 r124: [321..324]
 r125: [319..320]
 r126: [315..316]
 r127: [309..310]
 r128: [305..306]
 r129: [299..300]
 r130: [223..224]
 r131: [221..222]
 r132: [289..298]
 r133: [287..288]
 r134: [269..270]
 r135: [219..220]
 r136: [217..218]
 r137: [215..216]
 r138: [215..216]
 r139: [209..214]
 r140: [213..214]
 r141: [211..214]
 r142: [209..210]
 r143: [205..206]
 r144: [203..204]
 r145: [201..202]
 r146: [197..200]
 r147: [199..200]
 r148: [195..198]
 r149: [119..120]
 r150: [121..134]
 r151: [123..124]
 r152: [121..122]
 r153: [175..180]
 r154: [177..178]
 r155: [175..176]
 r156: [161..174]
 r157: [165..170]
 r158: [167..168]
 r159: [165..166]
 r160: [163..164]
 r161: [161..162]
 r162: [151..156]
 r163: [153..154]
 r164: [151..152]
 r165: [137..150]
 r166: [141..146]
 r167: [143..144]
 r168: [141..142]
 r169: [139..140]
 r170: [137..138]
 r171: [117..118]
 r172: [97..98]
 r173: [99..112]
 r174: [101..102]
 r175: [99..100]
 r176: [95..96]
 r177: [93..94]
 r178: [91..92]
 r179: [89..90]
 r180: [85..88]
 r181: [83..84]
 r182: [77..78]
 r183: [75..76]
 r184: [63..74]
 r185: [61..62]
 r186: [51..52]
 r187: [45..46]
 r188: [39..40]
 r189: [37..38]
 r190: [35..36]
 r191: [33..34]
 r192: [31..32]
 r193: [29..30]
 r194: [27..28]
 r195: [25..26]
 r196: [23..24]
 r197: [21..22]
 r198: [19..20]
 r199: [17..18]
 r200: [15..16]
 r201: [13..14]
 r202: [11..12]
 r203: [9..10]
 r204: [7..8]
 r205: [5..6]
 r206: [3..4]
 r207: [1..2]
 r208: [477..478]
 r209: [475..476]
 r210: [473..474]
 r211: [473..474]
 r212: [473..474]
 r213: [473..474]
 r214: [473..474]
 r215: [473..474]
 r216: [465..472]
 r217: [465..472]
 r218: [465..472]
 r219: [465..472]
 r220: [465..472]
 r221: [465..472]
 r222: [471..472]
 r223: [469..470]
 r224: [467..468]
 r225: [465..466]
 r226: [459..460]
 r227: [453..454]
 r228: [449..450]
 r229: [447..448]
 r230: [445..446]
 r231: [443..444]
 r232: [441..442]
 r233: [439..440]
 r234: [437..438]
 r235: [435..436]
 r236: [433..434]
 r237: [431..432]
 r238: [429..430]
 r239: [427..428]
 r240: [425..426]
 r241: [423..424]
 r242: [461..462]
 r243: [419..420]
 r244: [417..418]
 r245: [411..412]
 r246: [411..412]
 r247: [407..408]
 r248: [399..400]
 r249: [399..400]
 r250: [399..400]
 r251: [395..396]
 r252: [393..394]
 r253: [393..394]
 r254: [385..388]
 r255: [385..388]
 r256: [385..388]
 r257: [387..388]
 r258: [385..386]
 r259: [385..386]
 r260: [381..382]
 r261: [379..380]
 r262: [379..380]
 r263: [359..362]
 r264: [361..362]
 r265: [359..360]
 r266: [359..360]
 r267: [355..358]
 r268: [357..358]
 r269: [355..356]
 r270: [355..356]
 r271: [373..374]
 r272: [371..372]
 r273: [369..370]
 r274: [363..364]
 r275: [353..354]
 r276: [351..352]
 r277: [351..352]
 r278: [347..348]
 r279: [345..346]
 r280: [341..342]
 r281: [339..340]
 r282: [333..334]
 r283: [331..332]
 r284: [331..332]
 r285: [323..324]
 r286: [321..322]
 r287: [321..322]
 r288: [321..322]
 r289: [317..318]
 r290: [313..314]
 r291: [311..312]
 r292: [311..312]
 r293: [307..308]
 r294: [307..308]
 r295: [307..308]
 r296: [303..304]
 r297: [301..302]
 r298: [301..302]
 r299: [259..260]
 r300: [257..258]
 r301: [255..256]
 r302: [253..254]
 r303: [251..252]
 r304: [249..250]
 r305: [247..248]
 r306: [245..246]
 r307: [243..244]
 r308: [241..242]
 r309: [239..240]
 r310: [237..238]
 r311: [235..236]
 r312: [233..236]
 r313: [231..236]
 r314: [229..230]
 r315: [227..228]
 r316: [225..226]
 r317: [297..298]
 r318: [289..296]
 r319: [295..296]
 r320: [289..294]
 r321: [289..294]
 r322: [293..294]
 r323: [289..292]
 r324: [291..292]
 r325: [289..290]
 r326: [285..286]
 r327: [283..284]
 r328: [283..284]
 r329: [275..276]
 r330: [271..274]
 r331: [273..274]
 r332: [271..272]
 r333: [271..272]
 r334: [281..282]
 r335: [277..280]
 r336: [279..280]
 r337: [277..278]
 r338: [277..278]
 r339: [267..268]
 r340: [261..266]
 r341: [265..266]
 r342: [261..264]
 r343: [263..264]
 r344: [261..262]
 r345: [217..218]
 r346: [217..218]
 r347: [217..218]
 r348: [217..218]
 r349: [217..218]
 r350: [217..218]
 r351: [207..208]
 r353: [185..198]
 r354: [185..198]
 r355: [185..198]
 r356: [185..198]
 r357: [185..198]
 r358: [185..198]
 r359: [195..196]
 r360: [193..194]
 r361: [191..192]
 r362: [189..190]
 r363: [187..188]
 r364: [185..186]
 r365: [135..136]
 r366: [131..132]
 r367: [133..134]
 r368: [129..130]
 r369: [127..128]
 r370: [125..126]
 r371: [181..182]
 r372: [183..184]
 r373: [179..180]
 r374: [171..172]
 r375: [173..174]
 r376: [169..170]
 r377: [157..158]
 r378: [159..160]
 r379: [155..156]
 r380: [147..148]
 r381: [149..150]
 r382: [145..146]
 r383: [115..116]
 r384: [115..116]
 r385: [115..116]
 r386: [115..116]
 r387: [115..116]
 r388: [113..114]
 r389: [109..110]
 r390: [111..112]
 r391: [107..108]
 r392: [105..106]
 r393: [103..104]
 r394: [85..88]
 r395: [85..88]
 r396: [85..88]
 r397: [87..88]
 r398: [85..86]
 r399: [85..86]
 r400: [81..82]
 r401: [79..80]
 r402: [73..74]
 r403: [63..72]
 r404: [71..72]
 r405: [63..70]
 r406: [69..70]
 r407: [63..68]
 r408: [67..68]
 r409: [63..66]
 r410: [65..66]
 r411: [63..64]
 r412: [59..60]
 r413: [57..58]
 r414: [53..54]
 r415: [55..56]
 r416: [47..48]
 r417: [49..50]
 r418: [43..44]
 r419: [41..42]
 r420: [41..42]
 r422: [479..480]
 r423: [0..0]
 r424: [375..376]
 r425: [231..234]
 r426: [231..232]
 r427: [211..212]
 r428: [208..209]

********** Assignment #1: **********

	 Assigning to 425 (cl=DIREG, orig=311, freq=2, tfirst=425, tfreq=2)...
	   Assign 5 to reload r425 (freq=2)
	 Assigning to 426 (cl=SIREG, orig=312, freq=2, tfirst=426, tfreq=2)...
	   Assign 4 to reload r426 (freq=2)
	 Assigning to 428 (cl=DREG, orig=352, freq=1, tfirst=428, tfreq=1)...
	 Trying 1: spill 142(freq=2)	 Now best 1(cost=1, bad_spills=0, insn_pseudos=1)

      Spill r142(hr=1, freq=2) for r428
	   Assign 1 to reload r428 (freq=1)
	 Assigning to 424 (cl=GENERAL_REGS, orig=271, freq=3, tfirst=424, tfreq=3)...
	   Assign 1 to reload r424 (freq=3)
	 Assigning to 427 (cl=GENERAL_REGS, orig=142, freq=3, tfirst=427, tfreq=3)...
	   Assign 2 to reload r427 (freq=3)
	 Assigning to 422 (cl=INDEX_REGS, orig=422, freq=1, tfirst=422, tfreq=1)...
	   Assign 0 to reload r422 (freq=1)
	 Assigning to 423 (cl=INDEX_REGS, orig=423, freq=1, tfirst=423, tfreq=1)...
	   Assign 4 to reload r423 (freq=1)
  Reassigning non-reload pseudos
	   Assign 4 to r142 (freq=2)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
New elimination table:
Can't eliminate 16 to 7 (offset=3408, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=3392, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 73
changing reg in insn 74
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 95
changing reg in insn 256
changing reg in insn 260
changing reg in insn 257
changing reg in insn 258
changing reg in insn 258
changing reg in insn 261
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 281
changing reg in insn 282
changing reg in insn 282
changing reg in insn 284
changing reg in insn 287
changing reg in insn 288
changing reg in insn 291
changing reg in insn 292
changing reg in insn 304
changing reg in insn 305
changing reg in insn 308
changing reg in insn 309
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 327
changing reg in insn 323
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 346
changing reg in insn 356
changing reg in insn 360
changing reg in insn 361
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 417
changing reg in insn 419
changing reg in insn 418
changing reg in insn 419
changing reg in insn 423
changing reg in insn 424
changing reg in insn 427
changing reg in insn 429
changing reg in insn 440
changing reg in insn 441
changing reg in insn 449
changing reg in insn 450
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 461
changing reg in insn 472
changing reg in insn 473
changing reg in insn 481
changing reg in insn 482
changing reg in insn 490
changing reg in insn 491
changing reg in insn 491
changing reg in insn 497
changing reg in insn 492
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 505
changing reg in insn 506
changing reg in insn 517
changing reg in insn 518
changing reg in insn 532
changing reg in insn 533
changing reg in insn 542
changing reg in insn 543
changing reg in insn 580
changing reg in insn 581
changing reg in insn 582
changing reg in insn 583
changing reg in insn 590
changing reg in insn 603
changing reg in insn 607
changing reg in insn 608
changing reg in insn 655
changing reg in insn 656
changing reg in insn 673
changing reg in insn 674
changing reg in insn 674
changing reg in insn 684
changing reg in insn 691
changing reg in insn 692
changing reg in insn 693
changing reg in insn 697
changing reg in insn 697
changing reg in insn 694
changing reg in insn 695
changing reg in insn 696
changing reg in insn 697
changing reg in insn 697
changing reg in insn 698
changing reg in insn 699
changing reg in insn 700
changing reg in insn 701
changing reg in insn 708
changing reg in insn 709
changing reg in insn 709
changing reg in insn 718
changing reg in insn 710
changing reg in insn 711
changing reg in insn 711
changing reg in insn 721
changing reg in insn 742
changing reg in insn 743
changing reg in insn 749
changing reg in insn 757
changing reg in insn 755
changing reg in insn 756
changing reg in insn 756
changing reg in insn 757
changing reg in insn 762
changing reg in insn 764
changing reg in insn 765
changing reg in insn 765
changing reg in insn 766
changing reg in insn 775
changing reg in insn 769
changing reg in insn 773
changing reg in insn 771
changing reg in insn 772
changing reg in insn 772
changing reg in insn 773
changing reg in insn 773
changing reg in insn 774
changing reg in insn 774
changing reg in insn 775
changing reg in insn 778
changing reg in insn 780
changing reg in insn 781
changing reg in insn 781
changing reg in insn 782
changing reg in insn 791
changing reg in insn 785
changing reg in insn 789
changing reg in insn 787
changing reg in insn 788
changing reg in insn 788
changing reg in insn 789
changing reg in insn 789
changing reg in insn 790
changing reg in insn 790
changing reg in insn 791
changing reg in insn 804
changing reg in insn 805
changing reg in insn 827
changing reg in insn 828
changing reg in insn 834
changing reg in insn 842
changing reg in insn 840
changing reg in insn 841
changing reg in insn 841
changing reg in insn 842
changing reg in insn 859
changing reg in insn 860
changing reg in insn 867
changing reg in insn 868
changing reg in insn 875
changing reg in insn 876
changing reg in insn 879
changing reg in insn 880
changing reg in insn 884
changing reg in insn 897
changing reg in insn 901
changing reg in insn 902
changing reg in insn 913
changing reg in insn 914
changing reg in insn 917
changing reg in insn 918
changing reg in insn 922
changing reg in insn 939
changing reg in insn 943
changing reg in insn 944
changing reg in insn 964
changing reg in insn 965
changing reg in insn 970
changing reg in insn 971
changing reg in insn 979
changing reg in insn 980
changing reg in insn 992
changing reg in insn 993
changing reg in insn 996
changing reg in insn 997
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1014
changing reg in insn 1015
changing reg in insn 1019
changing reg in insn 1020
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1054
changing reg in insn 1055
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1068
changing reg in insn 1071
changing reg in insn 1071
changing reg in insn 1075
changing reg in insn 18
changing reg in insn 19
changing reg in insn 33
changing reg in insn 34
changing reg in insn 38
changing reg in insn 44
changing reg in insn 39
changing reg in insn 45
changing reg in insn 40
changing reg in insn 46
changing reg in insn 41
changing reg in insn 47
changing reg in insn 42
changing reg in insn 48
changing reg in insn 43
changing reg in insn 49
changing reg in insn 51
changing reg in insn 65
changing reg in insn 52
changing reg in insn 66
changing reg in insn 53
changing reg in insn 67
changing reg in insn 54
changing reg in insn 68
changing reg in insn 55
changing reg in insn 69
changing reg in insn 56
changing reg in insn 70
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 78
changing reg in insn 79
changing reg in insn 91
changing reg in insn 94
changing reg in insn 96
changing reg in insn 105
changing reg in insn 106
changing reg in insn 115
changing reg in insn 116
changing reg in insn 125
changing reg in insn 126
changing reg in insn 135
changing reg in insn 136
changing reg in insn 145
changing reg in insn 146
changing reg in insn 155
changing reg in insn 156
changing reg in insn 165
changing reg in insn 166
changing reg in insn 175
changing reg in insn 176
changing reg in insn 185
changing reg in insn 186
changing reg in insn 195
changing reg in insn 196
changing reg in insn 205
changing reg in insn 206
changing reg in insn 231
changing reg in insn 232
changing reg in insn 241
changing reg in insn 242
changing reg in insn 251
changing reg in insn 252
changing reg in insn 259
changing reg in insn 262
changing reg in insn 264
changing reg in insn 266
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 277
changing reg in insn 283
changing reg in insn 285
changing reg in insn 324
changing reg in insn 328
changing reg in insn 325
changing reg in insn 329
changing reg in insn 326
changing reg in insn 330
changing reg in insn 338
changing reg in insn 339
changing reg in insn 339
changing reg in insn 341
changing reg in insn 340
changing reg in insn 342
changing reg in insn 347
changing reg in insn 353
changing reg in insn 348
changing reg in insn 354
changing reg in insn 349
changing reg in insn 355
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 357
changing reg in insn 352
changing reg in insn 358
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 372
changing reg in insn 371
changing reg in insn 373
changing reg in insn 382
changing reg in insn 386
changing reg in insn 383
changing reg in insn 384
changing reg in insn 384
changing reg in insn 387
changing reg in insn 385
changing reg in insn 388
changing reg in insn 397
changing reg in insn 401
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 402
changing reg in insn 400
changing reg in insn 403
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 417
changing reg in insn 428
changing reg in insn 430
changing reg in insn 434
changing reg in insn 435
changing reg in insn 435
changing reg in insn 437
changing reg in insn 436
changing reg in insn 438
changing reg in insn 444
changing reg in insn 445
changing reg in insn 445
changing reg in insn 447
changing reg in insn 453
changing reg in insn 454
changing reg in insn 454
changing reg in insn 456
changing reg in insn 464
changing reg in insn 465
changing reg in insn 465
changing reg in insn 467
changing reg in insn 466
changing reg in insn 468
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 498
changing reg in insn 495
changing reg in insn 499
changing reg in insn 496
changing reg in insn 500
changing reg in insn 504
changing reg in insn 509
changing reg in insn 510
changing reg in insn 510
changing reg in insn 512
changing reg in insn 511
changing reg in insn 513
changing reg in insn 523
changing reg in insn 526
changing reg in insn 524
changing reg in insn 527
changing reg in insn 525
changing reg in insn 528
changing reg in insn 536
changing reg in insn 537
changing reg in insn 537
changing reg in insn 539
changing reg in insn 538
changing reg in insn 540
changing reg in insn 546
changing reg in insn 547
changing reg in insn 548
changing reg in insn 549
changing reg in insn 550
changing reg in insn 551
changing reg in insn 552
changing reg in insn 553
changing reg in insn 554
changing reg in insn 555
changing reg in insn 556
changing reg in insn 557
changing reg in insn 558
changing reg in insn 559
changing reg in insn 560
changing reg in insn 561
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 565
changing reg in insn 566
changing reg in insn 567
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 571
changing reg in insn 573
changing reg in insn 572
changing reg in insn 573
changing reg in insn 573
changing reg in insn 573
changing reg in insn 574
changing reg in insn 575
changing reg in insn 576
changing reg in insn 577
changing reg in insn 578
changing reg in insn 579
changing reg in insn 591
changing reg in insn 592
changing reg in insn 592
changing reg in insn 600
changing reg in insn 593
changing reg in insn 594
changing reg in insn 594
changing reg in insn 601
changing reg in insn 595
changing reg in insn 602
changing reg in insn 596
changing reg in insn 597
changing reg in insn 597
changing reg in insn 604
changing reg in insn 598
changing reg in insn 599
changing reg in insn 599
changing reg in insn 605
changing reg in insn 615
changing reg in insn 616
changing reg in insn 616
changing reg in insn 618
changing reg in insn 617
changing reg in insn 619
changing reg in insn 628
changing reg in insn 629
changing reg in insn 629
changing reg in insn 633
changing reg in insn 630
changing reg in insn 631
changing reg in insn 631
changing reg in insn 634
changing reg in insn 632
changing reg in insn 635
changing reg in insn 644
changing reg in insn 645
changing reg in insn 645
changing reg in insn 649
changing reg in insn 646
changing reg in insn 647
changing reg in insn 647
changing reg in insn 650
changing reg in insn 648
changing reg in insn 651
changing reg in insn 661
changing reg in insn 662
changing reg in insn 662
changing reg in insn 667
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 668
changing reg in insn 665
changing reg in insn 666
changing reg in insn 666
changing reg in insn 669
changing reg in insn 675
changing reg in insn 683
changing reg in insn 676
changing reg in insn 685
changing reg in insn 677
changing reg in insn 686
changing reg in insn 678
changing reg in insn 687
changing reg in insn 679
changing reg in insn 688
changing reg in insn 681
changing reg in insn 682
changing reg in insn 697
changing reg in insn 698
changing reg in insn 712
changing reg in insn 732
changing reg in insn 713
changing reg in insn 733
changing reg in insn 714
changing reg in insn 734
changing reg in insn 715
changing reg in insn 735
changing reg in insn 716
changing reg in insn 736
changing reg in insn 717
changing reg in insn 737
changing reg in insn 719
changing reg in insn 720
changing reg in insn 722
changing reg in insn 723
changing reg in insn 724
changing reg in insn 725
changing reg in insn 726
changing reg in insn 727
changing reg in insn 728
changing reg in insn 729
changing reg in insn 730
changing reg in insn 731
changing reg in insn 748
changing reg in insn 749
changing reg in insn 751
changing reg in insn 752
changing reg in insn 750
changing reg in insn 751
changing reg in insn 752
changing reg in insn 753
changing reg in insn 754
changing reg in insn 754
changing reg in insn 755
changing reg in insn 761
changing reg in insn 762
changing reg in insn 760
changing reg in insn 761
changing reg in insn 763
changing reg in insn 764
changing reg in insn 768
changing reg in insn 769
changing reg in insn 767
changing reg in insn 768
changing reg in insn 770
changing reg in insn 771
changing reg in insn 777
changing reg in insn 778
changing reg in insn 776
changing reg in insn 777
changing reg in insn 779
changing reg in insn 780
changing reg in insn 784
changing reg in insn 785
changing reg in insn 783
changing reg in insn 784
changing reg in insn 786
changing reg in insn 787
changing reg in insn 812
changing reg in insn 817
changing reg in insn 813
changing reg in insn 818
changing reg in insn 814
changing reg in insn 819
changing reg in insn 815
changing reg in insn 820
changing reg in insn 816
changing reg in insn 821
changing reg in insn 833
changing reg in insn 834
changing reg in insn 836
changing reg in insn 837
changing reg in insn 835
changing reg in insn 836
changing reg in insn 837
changing reg in insn 838
changing reg in insn 839
changing reg in insn 839
changing reg in insn 840
changing reg in insn 885
changing reg in insn 893
changing reg in insn 886
changing reg in insn 895
changing reg in insn 887
changing reg in insn 896
changing reg in insn 888
changing reg in insn 889
changing reg in insn 889
changing reg in insn 898
changing reg in insn 891
changing reg in insn 892
changing reg in insn 905
changing reg in insn 906
changing reg in insn 906
changing reg in insn 907
changing reg in insn 923
changing reg in insn 924
changing reg in insn 924
changing reg in insn 935
changing reg in insn 925
changing reg in insn 926
changing reg in insn 926
changing reg in insn 937
changing reg in insn 927
changing reg in insn 928
changing reg in insn 928
changing reg in insn 938
changing reg in insn 929
changing reg in insn 930
changing reg in insn 930
changing reg in insn 940
changing reg in insn 932
changing reg in insn 933
changing reg in insn 933
changing reg in insn 934
changing reg in insn 947
changing reg in insn 948
changing reg in insn 948
changing reg in insn 949
changing reg in insn 963
changing reg in insn 964
changing reg in insn 962
changing reg in insn 963
changing reg in insn 969
changing reg in insn 970
changing reg in insn 968
changing reg in insn 969
changing reg in insn 973
changing reg in insn 974
changing reg in insn 974
changing reg in insn 976
changing reg in insn 975
changing reg in insn 977
changing reg in insn 5
changing reg in insn 1076
deleting insn with uid = 46.
deleting insn with uid = 47.
deleting insn with uid = 48.
deleting insn with uid = 65.
deleting insn with uid = 66.
deleting insn with uid = 67.
deleting insn with uid = 68.
deleting insn with uid = 69.
deleting insn with uid = 260.
deleting insn with uid = 328.
deleting insn with uid = 329.
deleting insn with uid = 330.
deleting insn with uid = 355.
deleting insn with uid = 356.
deleting insn with uid = 357.
deleting insn with uid = 386.
deleting insn with uid = 401.
deleting insn with uid = 1151.
deleting insn with uid = 498.
deleting insn with uid = 499.
deleting insn with uid = 500.
deleting insn with uid = 526.
deleting insn with uid = 600.
deleting insn with uid = 601.
deleting insn with uid = 604.
deleting insn with uid = 605.
deleting insn with uid = 633.
deleting insn with uid = 649.
deleting insn with uid = 667.
deleting insn with uid = 683.
deleting insn with uid = 684.
deleting insn with uid = 685.
deleting insn with uid = 686.
deleting insn with uid = 687.
deleting insn with uid = 1154.
deleting insn with uid = 732.
deleting insn with uid = 734.
deleting insn with uid = 735.
deleting insn with uid = 736.
deleting insn with uid = 818.
deleting insn with uid = 819.
deleting insn with uid = 820.
deleting insn with uid = 895.
deleting insn with uid = 896.
deleting insn with uid = 898.
deleting insn with uid = 937.
deleting insn with uid = 938.
deleting insn with uid = 940.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 263.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 278.
verify found no changes in insn with uid = 286.
verify found no changes in insn with uid = 296.
verify found no changes in insn with uid = 313.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 359.
verify found no changes in insn with uid = 374.
verify found no changes in insn with uid = 389.
verify found no changes in insn with uid = 404.
verify found no changes in insn with uid = 431.
verify found no changes in insn with uid = 439.
verify found no changes in insn with uid = 448.
verify found no changes in insn with uid = 457.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 522.
verify found no changes in insn with uid = 529.
verify found no changes in insn with uid = 541.
verify found no changes in insn with uid = 589.
verify found no changes in insn with uid = 606.
verify found no changes in insn with uid = 620.
verify found no changes in insn with uid = 636.
verify found no changes in insn with uid = 652.
verify found no changes in insn with uid = 660.
verify found no changes in insn with uid = 670.
verify found no changes in insn with uid = 689.
verify found no changes in insn with uid = 705.
verify found no changes in insn with uid = 738.
verify found no changes in insn with uid = 809.
verify found no changes in insn with uid = 822.
verify found no changes in insn with uid = 824.
verify found no changes in insn with uid = 858.
verify found no changes in insn with uid = 864.
verify found no changes in insn with uid = 872.
verify found no changes in insn with uid = 899.
verify found no changes in insn with uid = 910.
verify found no changes in insn with uid = 941.
verify found no changes in insn with uid = 952.
verify found no changes in insn with uid = 956.
verify found no changes in insn with uid = 972.
verify found no changes in insn with uid = 978.
verify found no changes in insn with uid = 998.
verify found no changes in insn with uid = 1007.
verify found no changes in insn with uid = 1016.
verify found no changes in insn with uid = 1025.
verify found no changes in insn with uid = 1038.
verify found no changes in insn with uid = 1047.
verify found no changes in insn with uid = 1056.
verify found no changes in insn with uid = 1065.
verify found no changes in insn with uid = 1078.


int main(int, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={269d,208u} r1={141d,66u,1e} r2={104d,31u} r4={118d,45u} r5={164d,91u} r6={1d,475u} r7={24d,246u} r8={73d} r9={73d} r10={73d} r11={73d} r12={73d} r13={73d} r14={73d} r15={73d} r17={344d,73u} r18={73d} r19={73d} r20={1d,1u,1e} r21={77d,3u} r22={74d} r23={74d} r24={74d} r25={74d} r26={74d} r27={74d} r28={74d} r29={73d} r30={73d} r31={73d} r32={73d} r33={73d} r34={73d} r35={73d} r36={73d} r37={91d,17u} r38={82d,8u} r39={74d,1u} r40={73d} r45={73d} r46={73d} r47={73d} r48={73d} r49={73d} r50={73d} r51={73d} r52={73d} r53={73d} r54={73d} r55={73d} r56={73d} r57={73d} r58={73d} r59={73d} r60={73d} r61={73d} r62={73d} r63={73d} r64={73d} r65={73d} r66={73d} r67={73d} r68={73d} r69={73d} r70={73d} r71={73d} r72={73d} r73={73d} r74={73d} r75={73d} r76={73d} r77={73d} r78={73d} r79={73d} r80={73d} 
;;    total ref usage 7290{6023d,1265u,2e} in 793{720 regular + 73 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 208
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) ge2fitman.cpp:31 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3392 [0xfffffffffffff2c0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) ge2fitman.cpp:31 89 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.24977+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [422])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:31 986 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3336 [0xfffffffffffff2f8])) [0 maxval+0 S8 A64])
        (const_int 16384 [0x4000])) ge2fitman.cpp:55 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 fid+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:57 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:58 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3368 [0xfffffffffffff2d8])) [0 arg_read+0 S4 A64])
        (const_int 0 [0])) ge2fitman.cpp:59 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3328 [0xfffffffffffff300])) [0 forced_swap+0 S4 A64])
        (const_int 0 [0])) ge2fitman.cpp:60 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3324 [0xfffffffffffff304])) [0 forced_swap+4 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:60 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:65 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3375 [0xfffffffffffff2d1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman.cpp:70 93 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])
        (const_int 1 [0x1])) ge2fitman.cpp:71 93 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3373 [0xfffffffffffff2d3])) [0 overwrite+0 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:72 93 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SF 21 xmm0 [208])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman.cpp:74 129 {*movsf_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -3348 [0xfffffffffffff2ec])) [0 temp_float+0 S4 A32])
        (reg:SF 21 xmm0 [208])) ge2fitman.cpp:74 129 {*movsf_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:77 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:78 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3312 [0xfffffffffffff310])) [0 in_data[0].lo+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:81 89 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3304 [0xfffffffffffff318])) [0 in_data[1].lo+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:82 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3280 [0xfffffffffffff330])) [0 out_data+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:83 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3272 [0xfffffffffffff338])) [0 out_data+8 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:84 89 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3296 [0xfffffffffffff320])) [0 switch_data[0].lo+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:85 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3288 [0xfffffffffffff328])) [0 switch_data[1].lo+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:86 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 scratch_data+0 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:87 89 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 scratch_data+8 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:88 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3380 [0xfffffffffffff2cc])) [0 argc+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman.cpp:92 7 {*cmpsi_1}
     (nil))
(jump_insn 31 30 32 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) ge2fitman.cpp:92 612 {*jcc_1}
     (nil)
 -> 36)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 209
(note 32 31 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 3 (parallel [
            (set (reg:DI 0 ax [209])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:93 218 {*adddi_1}
     (nil))
(insn 34 33 35 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [209])) ge2fitman.cpp:93 89 {*movdi_internal}
     (nil))
(call_insn 35 34 36 3 (call (mem:QI (symbol_ref:DI ("_Z7exit_01PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880a000 exit_01>) [0 exit_01 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:93 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225
(code_label 36 35 37 4 2 "" [1 uses])
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (parallel [
            (set (reg:DI 37 r8 [210])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:97 218 {*adddi_1}
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 5 di [211])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:97 218 {*adddi_1}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 2 cx [212])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:97 218 {*adddi_1}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 1 dx [213])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:97 218 {*adddi_1}
     (nil))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 4 si [214])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:97 218 {*adddi_1}
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 0 ax [215])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:97 218 {*adddi_1}
     (nil))
(insn 44 43 45 4 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [210])) ge2fitman.cpp:97 89 {*movdi_internal}
     (nil))
(insn 45 44 49 4 (set (reg:DI 37 r8)
        (reg:DI 5 di [211])) ge2fitman.cpp:97 89 {*movdi_internal}
     (nil))
(insn 49 45 50 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [215])) ge2fitman.cpp:97 89 {*movdi_internal}
     (nil))
(call_insn 50 49 51 4 (call (mem:QI (symbol_ref:DI ("_Z4initP16Data_file_headerP17Data_block_headerP12Procpar_infoP10PreprocessP7IOFilesP13InFile_struct") [flags 0x41]  <function_decl 0x7f6e78804948 init>) [0 init S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:97 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 38 r9 [216])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3372 [0xfffffffffffff2d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 52 51 53 4 (set (reg:DI 37 r8 [217])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3392 [0xfffffffffffff2c0])) [0 argv+0 S8 A64])) ge2fitman.cpp:103 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:SI 2 cx [218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 argc+0 S4 A32])) ge2fitman.cpp:103 90 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg:DI 1 dx [219])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg:DI 4 si [220])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 0 ax [221])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 57 56 58 4 (parallel [
            (set (reg:DI 5 di [222])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3374 [0xfffffffffffff2d2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 58 57 59 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [222])) ge2fitman.cpp:103 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 59 58 60 4 (parallel [
            (set (reg:DI 5 di [223])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3373 [0xfffffffffffff2d3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 60 59 61 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [223])) ge2fitman.cpp:103 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 61 60 62 4 (parallel [
            (set (reg:DI 5 di [224])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3328 [0xfffffffffffff300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 62 61 63 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [224])) ge2fitman.cpp:103 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 63 62 64 4 (parallel [
            (set (reg:DI 5 di [225])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (nil))
(insn 64 63 70 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [225])) ge2fitman.cpp:103 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 70 64 71 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [221])) ge2fitman.cpp:103 89 {*movdi_internal}
     (nil))
(call_insn 71 70 72 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_") [flags 0x41]  <function_decl 0x7f6e787dc288 command_line>) [0 command_line S1 A8])
            (const_int 32 [0x20]))) ge2fitman.cpp:103 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 72 71 73 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:103 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 73 72 74 4 (set (reg:SI 0 ax [orig:87 D.24967 ] [87])
        (reg:SI 0 ax)) ge2fitman.cpp:103 90 {*movsi_internal}
     (nil))
(insn 74 73 75 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:87 D.24967 ] [87])) ge2fitman.cpp:103 90 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ge2fitman.cpp:104 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 77 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) ge2fitman.cpp:104 612 {*jcc_1}
     (nil)
 -> 83)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 226
(note 77 76 78 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 5 (parallel [
            (set (reg:DI 0 ax [226])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:106 218 {*adddi_1}
     (nil))
(insn 79 78 80 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [226])) ge2fitman.cpp:106 89 {*movdi_internal}
     (nil))
(call_insn 80 79 1085 5 (call (mem:QI (symbol_ref:DI ("_Z7exit_05PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880a360 exit_05>) [0 exit_05 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:106 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1085 80 1086 5 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1086 1085 83)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 83 1086 84 6 3 "" [1 uses])
(note 84 83 85 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) ge2fitman.cpp:107 7 {*cmpsi_1}
     (nil))
(jump_insn 86 85 87 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) ge2fitman.cpp:107 612 {*jcc_1}
     (nil)
 -> 100)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 227 228
(note 87 86 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 7 (set (reg:SI 0 ax [orig:88 D.24967 ] [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3368 [0xfffffffffffff2d8])) [0 arg_read+0 S4 A64])) ge2fitman.cpp:109 90 {*movsi_internal}
     (nil))
(insn 89 88 90 7 (set (reg:DI 0 ax [orig:89 D.24968 ] [89])
        (sign_extend:DI (reg:SI 0 ax [orig:88 D.24967 ] [88]))) ge2fitman.cpp:109 142 {*extendsidi2_rex64}
     (nil))
(insn 90 89 91 7 (parallel [
            (set (reg:DI 1 dx [orig:90 D.24968 ] [90])
                (ashift:DI (reg:DI 0 ax [orig:89 D.24968 ] [89])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:109 512 {*ashldi3_1}
     (nil))
(insn 91 90 92 7 (set (reg/f:DI 0 ax [227])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3392 [0xfffffffffffff2c0])) [0 argv+0 S8 A64])) ge2fitman.cpp:109 89 {*movdi_internal}
     (nil))
(insn 92 91 93 7 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.24969 ] [91])
                (plus:DI (reg/f:DI 0 ax [227])
                    (reg:DI 1 dx [orig:90 D.24968 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:109 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3392 [0xfffffffffffff2c0])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:90 D.24968 ] [90]))
        (nil)))
(insn 93 92 94 7 (set (reg/f:DI 1 dx [orig:92 D.24970 ] [92])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.24969 ] [91]) [0 *_70+0 S8 A64])) ge2fitman.cpp:109 89 {*movdi_internal}
     (nil))
(insn 94 93 95 7 (parallel [
            (set (reg:DI 0 ax [228])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:109 218 {*adddi_1}
     (nil))
(insn 95 94 96 7 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:92 D.24970 ] [92])) ge2fitman.cpp:109 89 {*movdi_internal}
     (nil))
(insn 96 95 97 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [228])) ge2fitman.cpp:109 89 {*movdi_internal}
     (nil))
(call_insn 97 96 1087 7 (call (mem:QI (symbol_ref:DI ("_Z7exit_04PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a288 exit_04>) [0 exit_04 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:109 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1087 97 1088 7 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1088 1087 100)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 100 1088 101 8 5 "" [1 uses])
(note 101 100 102 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) ge2fitman.cpp:110 7 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) ge2fitman.cpp:110 612 {*jcc_1}
     (nil)
 -> 110)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 229
(note 104 103 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 9 (parallel [
            (set (reg:DI 0 ax [229])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:112 218 {*adddi_1}
     (nil))
(insn 106 105 107 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [229])) ge2fitman.cpp:112 89 {*movdi_internal}
     (nil))
(call_insn 107 106 1089 9 (call (mem:QI (symbol_ref:DI ("_Z7exit_11PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880a870 exit_11>) [0 exit_11 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:112 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1089 107 1090 9 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1090 1089 110)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 110 1090 111 10 6 "" [1 uses])
(note 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))) ge2fitman.cpp:113 7 {*cmpsi_1}
     (nil))
(jump_insn 113 112 114 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) ge2fitman.cpp:113 612 {*jcc_1}
     (nil)
 -> 120)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 230
(note 114 113 115 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 11 (parallel [
            (set (reg:DI 0 ax [230])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:115 218 {*adddi_1}
     (nil))
(insn 116 115 117 11 (set (reg:DI 5 di)
        (reg:DI 0 ax [230])) ge2fitman.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn 117 116 1091 11 (call (mem:QI (symbol_ref:DI ("_Z7exit_12PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880a948 exit_12>) [0 exit_12 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:115 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1091 117 1092 11 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1092 1091 120)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 120 1092 121 12 7 "" [1 uses])
(note 121 120 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -5 [0xfffffffffffffffb]))) ge2fitman.cpp:116 7 {*cmpsi_1}
     (nil))
(jump_insn 123 122 124 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) ge2fitman.cpp:116 612 {*jcc_1}
     (nil)
 -> 130)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 231
(note 124 123 125 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 13 (parallel [
            (set (reg:DI 0 ax [231])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:118 218 {*adddi_1}
     (nil))
(insn 126 125 127 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [231])) ge2fitman.cpp:118 89 {*movdi_internal}
     (nil))
(call_insn 127 126 1093 13 (call (mem:QI (symbol_ref:DI ("_Z7exit_13PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880aa20 exit_13>) [0 exit_13 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:118 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1093 127 1094 13 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1094 1093 130)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 130 1094 131 14 8 "" [1 uses])
(note 131 130 132 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -6 [0xfffffffffffffffa]))) ge2fitman.cpp:119 7 {*cmpsi_1}
     (nil))
(jump_insn 133 132 134 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) ge2fitman.cpp:119 612 {*jcc_1}
     (nil)
 -> 140)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 232
(note 134 133 135 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 15 (parallel [
            (set (reg:DI 0 ax [232])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:121 218 {*adddi_1}
     (nil))
(insn 136 135 137 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [232])) ge2fitman.cpp:121 89 {*movdi_internal}
     (nil))
(call_insn 137 136 1095 15 (call (mem:QI (symbol_ref:DI ("_Z7exit_14PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880aaf8 exit_14>) [0 exit_14 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:121 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1095 137 1096 15 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1096 1095 140)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 140 1096 141 16 9 "" [1 uses])
(note 141 140 142 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -7 [0xfffffffffffffff9]))) ge2fitman.cpp:122 7 {*cmpsi_1}
     (nil))
(jump_insn 143 142 144 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) ge2fitman.cpp:122 612 {*jcc_1}
     (nil)
 -> 150)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 233
(note 144 143 145 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 17 (parallel [
            (set (reg:DI 0 ax [233])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:124 218 {*adddi_1}
     (nil))
(insn 146 145 147 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [233])) ge2fitman.cpp:124 89 {*movdi_internal}
     (nil))
(call_insn 147 146 1097 17 (call (mem:QI (symbol_ref:DI ("_Z7exit_15PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880abd0 exit_15>) [0 exit_15 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:124 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1097 147 1098 17 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1098 1097 150)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 150 1098 151 18 10 "" [1 uses])
(note 151 150 152 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -8 [0xfffffffffffffff8]))) ge2fitman.cpp:125 7 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) ge2fitman.cpp:125 612 {*jcc_1}
     (nil)
 -> 160)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 234
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 19 (parallel [
            (set (reg:DI 0 ax [234])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:127 218 {*adddi_1}
     (nil))
(insn 156 155 157 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [234])) ge2fitman.cpp:127 89 {*movdi_internal}
     (nil))
(call_insn 157 156 1099 19 (call (mem:QI (symbol_ref:DI ("_Z7exit_19PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880d000 exit_19>) [0 exit_19 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:127 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1099 157 1100 19 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1100 1099 160)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 160 1100 161 20 11 "" [1 uses])
(note 161 160 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -9 [0xfffffffffffffff7]))) ge2fitman.cpp:128 7 {*cmpsi_1}
     (nil))
(jump_insn 163 162 164 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) ge2fitman.cpp:128 612 {*jcc_1}
     (nil)
 -> 170)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 235
(note 164 163 165 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 21 (parallel [
            (set (reg:DI 0 ax [235])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:130 218 {*adddi_1}
     (nil))
(insn 166 165 167 21 (set (reg:DI 5 di)
        (reg:DI 0 ax [235])) ge2fitman.cpp:130 89 {*movdi_internal}
     (nil))
(call_insn 167 166 1101 21 (call (mem:QI (symbol_ref:DI ("_Z7exit_16PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880aca8 exit_16>) [0 exit_16 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:130 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1101 167 1102 21 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1102 1101 170)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 170 1102 171 22 12 "" [1 uses])
(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -10 [0xfffffffffffffff6]))) ge2fitman.cpp:131 7 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) ge2fitman.cpp:131 612 {*jcc_1}
     (nil)
 -> 180)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 236
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 23 (parallel [
            (set (reg:DI 0 ax [236])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:133 218 {*adddi_1}
     (nil))
(insn 176 175 177 23 (set (reg:DI 5 di)
        (reg:DI 0 ax [236])) ge2fitman.cpp:133 89 {*movdi_internal}
     (nil))
(call_insn 177 176 1103 23 (call (mem:QI (symbol_ref:DI ("_Z7exit_17PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880ad80 exit_17>) [0 exit_17 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:133 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1103 177 1104 23 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1104 1103 180)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 180 1104 181 24 13 "" [1 uses])
(note 181 180 182 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -11 [0xfffffffffffffff5]))) ge2fitman.cpp:134 7 {*cmpsi_1}
     (nil))
(jump_insn 183 182 184 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) ge2fitman.cpp:134 612 {*jcc_1}
     (nil)
 -> 190)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 237
(note 184 183 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 25 (parallel [
            (set (reg:DI 0 ax [237])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:136 218 {*adddi_1}
     (nil))
(insn 186 185 187 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [237])) ge2fitman.cpp:136 89 {*movdi_internal}
     (nil))
(call_insn 187 186 1105 25 (call (mem:QI (symbol_ref:DI ("_Z7exit_18PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880ae58 exit_18>) [0 exit_18 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:136 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1105 187 1106 25 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1106 1105 190)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 190 1106 191 26 14 "" [1 uses])
(note 191 190 192 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -12 [0xfffffffffffffff4]))) ge2fitman.cpp:137 7 {*cmpsi_1}
     (nil))
(jump_insn 193 192 194 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) ge2fitman.cpp:137 612 {*jcc_1}
     (nil)
 -> 200)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 238
(note 194 193 195 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 27 (parallel [
            (set (reg:DI 0 ax [238])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:139 218 {*adddi_1}
     (nil))
(insn 196 195 197 27 (set (reg:DI 5 di)
        (reg:DI 0 ax [238])) ge2fitman.cpp:139 89 {*movdi_internal}
     (nil))
(call_insn 197 196 1107 27 (call (mem:QI (symbol_ref:DI ("_Z7exit_20PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880d0d8 exit_20>) [0 exit_20 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:139 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1107 197 1108 27 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1108 1107 200)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 200 1108 201 28 15 "" [1 uses])
(note 201 200 202 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -13 [0xfffffffffffffff3]))) ge2fitman.cpp:140 7 {*cmpsi_1}
     (nil))
(jump_insn 203 202 204 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) ge2fitman.cpp:140 612 {*jcc_1}
     (nil)
 -> 210)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 239
(note 204 203 205 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 29 (parallel [
            (set (reg:DI 0 ax [239])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:142 218 {*adddi_1}
     (nil))
(insn 206 205 207 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [239])) ge2fitman.cpp:142 89 {*movdi_internal}
     (nil))
(call_insn 207 206 1109 29 (call (mem:QI (symbol_ref:DI ("_Z7exit_22PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880d288 exit_22>) [0 exit_22 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:142 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1109 207 1110 29 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1110 1109 210)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 210 1110 211 30 16 "" [1 uses])
(note 211 210 212 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman.cpp:143 7 {*cmpsi_1}
     (nil))
(jump_insn 213 212 214 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) ge2fitman.cpp:143 612 {*jcc_1}
     (nil)
 -> 218)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 214 213 215 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 1111 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman.cpp:145 90 {*movsi_internal}
     (nil))
(jump_insn 1111 215 1112 31 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1112 1111 218)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 218 1112 219 32 17 "" [1 uses])
(note 219 218 220 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman.cpp:146 7 {*cmpsi_1}
     (nil))
(jump_insn 221 220 222 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) ge2fitman.cpp:146 612 {*jcc_1}
     (nil)
 -> 226)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 222 221 223 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 1113 33 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])
        (const_int 2 [0x2])) ge2fitman.cpp:148 90 {*movsi_internal}
     (nil))
(jump_insn 1113 223 1114 33 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1114 1113 226)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 226 1114 227 34 18 "" [1 uses])
(note 227 226 228 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -14 [0xfffffffffffffff2]))) ge2fitman.cpp:149 7 {*cmpsi_1}
     (nil))
(jump_insn 229 228 230 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) ge2fitman.cpp:149 612 {*jcc_1}
     (nil)
 -> 236)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 240
(note 230 229 231 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 35 (parallel [
            (set (reg:DI 0 ax [240])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:151 218 {*adddi_1}
     (nil))
(insn 232 231 233 35 (set (reg:DI 5 di)
        (reg:DI 0 ax [240])) ge2fitman.cpp:151 89 {*movdi_internal}
     (nil))
(call_insn 233 232 1115 35 (call (mem:QI (symbol_ref:DI ("_Z7exit_25PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880d510 exit_25>) [0 exit_25 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:151 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1115 233 1116 35 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1116 1115 236)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 236 1116 237 36 19 "" [1 uses])
(note 237 236 238 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -15 [0xfffffffffffffff1]))) ge2fitman.cpp:152 7 {*cmpsi_1}
     (nil))
(jump_insn 239 238 240 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) ge2fitman.cpp:152 612 {*jcc_1}
     (nil)
 -> 246)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 241
(note 240 239 241 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 37 (parallel [
            (set (reg:DI 0 ax [241])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:154 218 {*adddi_1}
     (nil))
(insn 242 241 243 37 (set (reg:DI 5 di)
        (reg:DI 0 ax [241])) ge2fitman.cpp:154 89 {*movdi_internal}
     (nil))
(call_insn 243 242 1117 37 (call (mem:QI (symbol_ref:DI ("_Z7exit_26PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880d5e8 exit_26>) [0 exit_26 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:154 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1117 243 1118 37 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1118 1117 246)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 246 1118 247 38 20 "" [1 uses])
(note 247 246 248 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -16 [0xfffffffffffffff0]))) ge2fitman.cpp:155 7 {*cmpsi_1}
     (nil))
(jump_insn 249 248 250 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) ge2fitman.cpp:155 612 {*jcc_1}
     (nil)
 -> 254)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 242
(note 250 249 251 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 39 (parallel [
            (set (reg:DI 0 ax [242])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:157 218 {*adddi_1}
     (nil))
(insn 252 251 253 39 (set (reg:DI 5 di)
        (reg:DI 0 ax [242])) ge2fitman.cpp:157 89 {*movdi_internal}
     (nil))
(call_insn 253 252 254 39 (call (mem:QI (symbol_ref:DI ("_Z7exit_27PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f6e7880d6c0 exit_27>) [0 exit_27 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:157 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;;              11 [100.0%] 
;;              13 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              21 [100.0%] 
;;              23 [100.0%] 
;;              25 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              33 [100.0%] 
;;              35 [100.0%] 
;;              38
;;              37 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 243 244
(code_label 254 253 255 40 4 "" [18 uses])
(note 255 254 256 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 40 (set (reg:SI 1 dx [orig:93 D.24967 ] [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])) ge2fitman.cpp:161 90 {*movsi_internal}
     (nil))
(insn 257 256 258 40 (set (reg:QI 0 ax [orig:94 D.24971 ] [94])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3373 [0xfffffffffffff2d3])) [0 overwrite+0 S1 A8])) ge2fitman.cpp:161 93 {*movqi_internal}
     (nil))
(insn 258 257 259 40 (set (reg:SI 2 cx [orig:95 D.24967 ] [95])
        (zero_extend:SI (reg:QI 0 ax [orig:94 D.24971 ] [94]))) ge2fitman.cpp:161 138 {*zero_extendqisi2}
     (nil))
(insn 259 258 261 40 (parallel [
            (set (reg:DI 0 ax [243])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:161 218 {*adddi_1}
     (nil))
(insn 261 259 262 40 (set (reg:SI 4 si)
        (reg:SI 2 cx [orig:95 D.24967 ] [95])) ge2fitman.cpp:161 90 {*movsi_internal}
     (nil))
(insn 262 261 263 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [243])) ge2fitman.cpp:161 89 {*movdi_internal}
     (nil))
(call_insn 263 262 264 40 (call (mem:QI (symbol_ref:DI ("_Z13check_outfileP7IOFilesbi") [flags 0x41]  <function_decl 0x7f6e78804a20 check_outfile>) [0 check_outfile S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:161 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 264 263 265 40 (parallel [
            (set (reg:DI 0 ax [244])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:164 218 {*adddi_1}
     (nil))
(insn 265 264 266 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6e7885ed80 *.LC1>)) ge2fitman.cpp:164 89 {*movdi_internal}
     (nil))
(insn 266 265 267 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [244])) ge2fitman.cpp:164 89 {*movdi_internal}
     (nil))
(call_insn 267 266 268 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f6e79a83510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:164 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 268 267 269 40 (set (reg/f:DI 0 ax [orig:96 D.24972 ] [96])
        (reg:DI 0 ax)) ge2fitman.cpp:164 89 {*movdi_internal}
     (nil))
(insn 269 268 270 40 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 in_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:96 D.24972 ] [96])) ge2fitman.cpp:164 89 {*movdi_internal}
     (nil))
(insn 270 269 271 40 (set (reg/f:DI 0 ax [orig:97 D.24972 ] [97])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 in_file+0 S8 A64])) ge2fitman.cpp:165 89 {*movdi_internal}
     (nil))
(insn 271 270 272 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:97 D.24972 ] [97])
            (const_int 0 [0]))) ge2fitman.cpp:165 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 272 271 273 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) ge2fitman.cpp:165 612 {*jcc_1}
     (nil)
 -> 279)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 245 246
(note 273 272 274 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 41 (parallel [
            (set (reg:DI 1 dx [245])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:166 218 {*adddi_1}
     (nil))
(insn 275 274 276 41 (parallel [
            (set (reg:DI 0 ax [246])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:166 218 {*adddi_1}
     (nil))
(insn 276 275 277 41 (set (reg:DI 4 si)
        (reg:DI 1 dx [245])) ge2fitman.cpp:166 89 {*movdi_internal}
     (nil))
(insn 277 276 278 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [246])) ge2fitman.cpp:166 89 {*movdi_internal}
     (nil))
(call_insn 278 277 279 41 (call (mem:QI (symbol_ref:DI ("_Z7exit_02PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a0d8 exit_02>) [0 exit_02 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:166 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;;              41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 247
(code_label 279 278 280 42 21 "" [1 uses])
(note 280 279 281 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 42 (set (reg:QI 0 ax [orig:98 D.24971 ] [98])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:170 93 {*movqi_internal}
     (nil))
(insn 282 281 283 42 (set (reg:SI 1 dx [orig:99 D.24967 ] [99])
        (zero_extend:SI (reg:QI 0 ax [orig:98 D.24971 ] [98]))) ge2fitman.cpp:170 138 {*zero_extendqisi2}
     (nil))
(insn 283 282 284 42 (parallel [
            (set (reg:DI 0 ax [247])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3344 [0xfffffffffffff2f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:170 218 {*adddi_1}
     (nil))
(insn 284 283 285 42 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:99 D.24967 ] [99])) ge2fitman.cpp:170 90 {*movsi_internal}
     (nil))
(insn 285 284 286 42 (set (reg:DI 5 di)
        (reg:DI 0 ax [247])) ge2fitman.cpp:170 89 {*movdi_internal}
     (nil))
(call_insn 286 285 287 42 (call (mem:QI (symbol_ref:DI ("_Z18endianCheck_systemP12Endian_Checkb") [flags 0x41]  <function_decl 0x7f6e78804360 endianCheck_system>) [0 endianCheck_system S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:170 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 287 286 288 42 (set (reg:SI 0 ax [orig:100 D.24967 ] [100])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3328 [0xfffffffffffff300])) [0 forced_swap+0 S4 A64])) ge2fitman.cpp:172 90 {*movsi_internal}
     (nil))
(insn 288 287 289 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 D.24967 ] [100])
            (const_int 1 [0x1]))) ge2fitman.cpp:172 7 {*cmpsi_1}
     (nil))
(jump_insn 289 288 290 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) ge2fitman.cpp:172 612 {*jcc_1}
     (nil)
 -> 302)
;;  succ:       43 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101
(note 290 289 291 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 43 (set (reg:QI 0 ax [orig:101 D.24971 ] [101])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:174 93 {*movqi_internal}
     (nil))
(insn 292 291 293 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:101 D.24971 ] [101])
            (const_int 0 [0]))) ge2fitman.cpp:174 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 293 292 294 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) ge2fitman.cpp:174 612 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 294 293 295 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6e7885ee10 *.LC2>)) ge2fitman.cpp:175 89 {*movdi_internal}
     (nil))
(call_insn 296 295 297 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:175 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 297 296 298 45 23 "" [1 uses])
(note 298 297 299 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 1119 45 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3375 [0xfffffffffffff2d1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman.cpp:177 93 {*movqi_internal}
     (nil))
(jump_insn 1119 299 1120 45 (set (pc)
        (label_ref 344)) 654 {jump}
     (nil)
 -> 344)
;;  succ:       52 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1120 1119 302)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102
(code_label 302 1120 303 46 22 "" [1 uses])
(note 303 302 304 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 46 (set (reg:SI 0 ax [orig:102 D.24967 ] [102])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3328 [0xfffffffffffff300])) [0 forced_swap+0 S4 A64])) ge2fitman.cpp:178 90 {*movsi_internal}
     (nil))
(insn 305 304 306 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:102 D.24967 ] [102])
            (const_int 2 [0x2]))) ge2fitman.cpp:178 7 {*cmpsi_1}
     (nil))
(jump_insn 306 305 307 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) ge2fitman.cpp:178 612 {*jcc_1}
     (nil)
 -> 319)
;;  succ:       47 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103
(note 307 306 308 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 47 (set (reg:QI 0 ax [orig:103 D.24971 ] [103])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:180 93 {*movqi_internal}
     (nil))
(insn 309 308 310 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:103 D.24971 ] [103])
            (const_int 0 [0]))) ge2fitman.cpp:180 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 310 309 311 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 314)
            (pc))) ge2fitman.cpp:180 612 {*jcc_1}
     (nil)
 -> 314)
;;  succ:       48 (FALLTHRU)
;;              49
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 311 310 312 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6e7885eea0 *.LC3>)) ge2fitman.cpp:181 89 {*movdi_internal}
     (nil))
(call_insn 313 312 314 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:181 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;;              48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 314 313 315 49 26 "" [1 uses])
(note 315 314 316 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 1121 49 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3375 [0xfffffffffffff2d1])) [0 swap_bytes+0 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:183 93 {*movqi_internal}
     (nil))
(jump_insn 1121 316 1122 49 (set (pc)
        (label_ref 344)) 654 {jump}
     (nil)
 -> 344)
;;  succ:       52 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1122 1121 319)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 105 106 107 248 249 250
(code_label 319 1122 320 50 25 "" [1 uses])
(note 320 319 321 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 50 (set (reg:QI 0 ax [orig:104 D.24971 ] [104])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:186 93 {*movqi_internal}
     (nil))
(insn 322 321 323 50 (set (reg:SI 5 di [orig:105 D.24967 ] [105])
        (zero_extend:SI (reg:QI 0 ax [orig:104 D.24971 ] [104]))) ge2fitman.cpp:186 138 {*zero_extendqisi2}
     (nil))
(insn 323 322 324 50 (set (reg/f:DI 0 ax [orig:106 D.24972 ] [106])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 in_file+0 S8 A64])) ge2fitman.cpp:186 89 {*movdi_internal}
     (nil))
(insn 324 323 325 50 (parallel [
            (set (reg:DI 2 cx [248])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:187 218 {*adddi_1}
     (nil))
(insn 325 324 326 50 (parallel [
            (set (reg:DI 1 dx [249])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3375 [0xfffffffffffff2d1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:187 218 {*adddi_1}
     (nil))
(insn 326 325 327 50 (parallel [
            (set (reg:DI 4 si [250])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3344 [0xfffffffffffff2f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:187 218 {*adddi_1}
     (nil))
(insn 327 326 331 50 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:105 D.24967 ] [105])) ge2fitman.cpp:187 90 {*movsi_internal}
     (nil))
(insn 331 327 332 50 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:106 D.24972 ] [106])) ge2fitman.cpp:187 89 {*movdi_internal}
     (nil))
(call_insn 332 331 333 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb") [flags 0x41]  <function_decl 0x7f6e78804438 endianCheck_file>) [0 endianCheck_file S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:187 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 333 332 334 50 (set (reg:SI 0 ax [orig:107 D.24967 ] [107])
        (reg:SI 0 ax)) ge2fitman.cpp:187 90 {*movsi_internal}
     (nil))
(insn 334 333 335 50 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:107 D.24967 ] [107])) ge2fitman.cpp:187 90 {*movsi_internal}
     (nil))
(insn 335 334 336 50 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) ge2fitman.cpp:188 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 336 335 337 50 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 344)
            (pc))) ge2fitman.cpp:188 612 {*jcc_1}
     (nil)
 -> 344)
;;  succ:       51 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 251 252 253
(note 337 336 338 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 51 (parallel [
            (set (reg:DI 0 ax [251])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:189 218 {*adddi_1}
     (nil))
(insn 339 338 340 51 (parallel [
            (set (reg:DI 1 dx [252])
                (plus:DI (reg:DI 0 ax [251])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:189 218 {*adddi_1}
     (nil))
(insn 340 339 341 51 (parallel [
            (set (reg:DI 0 ax [253])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:189 218 {*adddi_1}
     (nil))
(insn 341 340 342 51 (set (reg:DI 4 si)
        (reg:DI 1 dx [252])) ge2fitman.cpp:189 89 {*movdi_internal}
     (nil))
(insn 342 341 343 51 (set (reg:DI 5 di)
        (reg:DI 0 ax [253])) ge2fitman.cpp:189 89 {*movdi_internal}
     (nil))
(call_insn 343 342 344 51 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a510 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:189 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;;              45 [100.0%] 
;;              50
;;              49 [100.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 109 254 255 256 257 258 259
(code_label 344 343 345 52 24 "" [3 uses])
(note 345 344 346 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 52 (set (reg/f:DI 1 dx [orig:108 D.24972 ] [108])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 in_file+0 S8 A64])) ge2fitman.cpp:198 89 {*movdi_internal}
     (nil))
(insn 347 346 348 52 (parallel [
            (set (reg:DI 37 r8 [254])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 348 347 349 52 (parallel [
            (set (reg:DI 5 di [255])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 349 348 350 52 (parallel [
            (set (reg:DI 2 cx [256])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3375 [0xfffffffffffff2d1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 350 349 351 52 (parallel [
            (set (reg:DI 0 ax [257])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 351 350 352 52 (parallel [
            (set (reg:DI 4 si [258])
                (plus:DI (reg:DI 0 ax [257])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 352 351 353 52 (parallel [
            (set (reg:DI 0 ax [259])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 353 352 354 52 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [254])) ge2fitman.cpp:199 89 {*movdi_internal}
     (nil))
(insn 354 353 358 52 (set (reg:DI 37 r8)
        (reg:DI 5 di [255])) ge2fitman.cpp:199 89 {*movdi_internal}
     (nil))
(insn 358 354 359 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [259])) ge2fitman.cpp:199 89 {*movdi_internal}
     (nil))
(call_insn 359 358 360 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f6e787dc438 read_procpar>) [0 read_procpar S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:199 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 360 359 361 52 (set (reg:SI 0 ax [orig:109 D.24967 ] [109])
        (reg:SI 0 ax)) ge2fitman.cpp:199 90 {*movsi_internal}
     (nil))
(insn 361 360 362 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:109 D.24967 ] [109])) ge2fitman.cpp:199 90 {*movsi_internal}
     (nil))
(insn 362 361 363 52 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3228 [0xfffffffffffff364])) [0 infile_struct[0].num_unsup_sets+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:203 90 {*movsi_internal}
     (nil))
(insn 363 362 364 52 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) ge2fitman.cpp:205 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 364 363 365 52 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) ge2fitman.cpp:205 612 {*jcc_1}
     (nil)
 -> 407)
;;  succ:       53 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 365 364 366 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ge2fitman.cpp:206 7 {*cmpsi_1}
     (nil))
(jump_insn 367 366 368 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) ge2fitman.cpp:206 612 {*jcc_1}
     (nil)
 -> 377)
;;  succ:       54 (FALLTHRU)
;;              55
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 260 261 262
(note 368 367 369 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 54 (parallel [
            (set (reg:DI 0 ax [260])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:208 218 {*adddi_1}
     (nil))
(insn 370 369 371 54 (parallel [
            (set (reg:DI 1 dx [261])
                (plus:DI (reg:DI 0 ax [260])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:208 218 {*adddi_1}
     (nil))
(insn 371 370 372 54 (parallel [
            (set (reg:DI 0 ax [262])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:208 218 {*adddi_1}
     (nil))
(insn 372 371 373 54 (set (reg:DI 4 si)
        (reg:DI 1 dx [261])) ge2fitman.cpp:208 89 {*movdi_internal}
     (nil))
(insn 373 372 374 54 (set (reg:DI 5 di)
        (reg:DI 0 ax [262])) ge2fitman.cpp:208 89 {*movdi_internal}
     (nil))
(call_insn 374 373 1123 54 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a510 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:208 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1123 374 1124 54 (set (pc)
        (label_ref 432)) 654 {jump}
     (nil)
 -> 432)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1124 1123 377)
;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 377 1124 378 55 28 "" [1 uses])
(note 378 377 379 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) ge2fitman.cpp:209 7 {*cmpsi_1}
     (nil))
(jump_insn 380 379 381 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 392)
            (pc))) ge2fitman.cpp:209 612 {*jcc_1}
     (nil)
 -> 392)
;;  succ:       56 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 263 264 265 266
(note 381 380 382 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 56 (parallel [
            (set (reg:DI 1 dx [263])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:211 218 {*adddi_1}
     (nil))
(insn 383 382 384 56 (parallel [
            (set (reg:DI 0 ax [264])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:211 218 {*adddi_1}
     (nil))
(insn 384 383 385 56 (parallel [
            (set (reg:DI 2 cx [265])
                (plus:DI (reg:DI 0 ax [264])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:211 218 {*adddi_1}
     (nil))
(insn 385 384 387 56 (parallel [
            (set (reg:DI 0 ax [266])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:211 218 {*adddi_1}
     (nil))
(insn 387 385 388 56 (set (reg:DI 4 si)
        (reg:DI 2 cx [265])) ge2fitman.cpp:211 89 {*movdi_internal}
     (nil))
(insn 388 387 389 56 (set (reg:DI 5 di)
        (reg:DI 0 ax [266])) ge2fitman.cpp:211 89 {*movdi_internal}
     (nil))
(call_insn 389 388 1125 56 (call (mem:QI (symbol_ref:DI ("_Z7exit_09PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f6e7880a6c0 exit_09>) [0 exit_09 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:211 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1125 389 1126 56 (set (pc)
        (label_ref 432)) 654 {jump}
     (nil)
 -> 432)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1126 1125 392)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 392 1126 393 57 30 "" [1 uses])
(note 393 392 394 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) ge2fitman.cpp:212 7 {*cmpsi_1}
     (nil))
(jump_insn 395 394 396 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) ge2fitman.cpp:212 612 {*jcc_1}
     (nil)
 -> 432)
;;  succ:       58 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 267 268 269 270
(note 396 395 397 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 58 (parallel [
            (set (reg:DI 1 dx [267])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:214 218 {*adddi_1}
     (nil))
(insn 398 397 399 58 (parallel [
            (set (reg:DI 0 ax [268])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:214 218 {*adddi_1}
     (nil))
(insn 399 398 400 58 (parallel [
            (set (reg:DI 2 cx [269])
                (plus:DI (reg:DI 0 ax [268])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:214 218 {*adddi_1}
     (nil))
(insn 400 399 402 58 (parallel [
            (set (reg:DI 0 ax [270])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:214 218 {*adddi_1}
     (nil))
(insn 402 400 403 58 (set (reg:DI 4 si)
        (reg:DI 2 cx [269])) ge2fitman.cpp:214 89 {*movdi_internal}
     (nil))
(insn 403 402 404 58 (set (reg:DI 5 di)
        (reg:DI 0 ax [270])) ge2fitman.cpp:214 89 {*movdi_internal}
     (nil))
(call_insn 404 403 1127 58 (call (mem:QI (symbol_ref:DI ("_Z7exit_10PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f6e7880a798 exit_10>) [0 exit_10 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:214 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1127 404 1128 58 (set (pc)
        (label_ref 432)) 654 {jump}
     (nil)
 -> 432)
;;  succ:       63 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1128 1127 407)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110
(code_label 407 1128 408 59 27 "" [1 uses])
(note 408 407 409 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 59 (set (reg:SI 0 ax [orig:110 D.24967 ] [110])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2948 [0xfffffffffffff47c])) [0 preprocess[0].pre_quecc_points+0 S4 A32])) ge2fitman.cpp:216 90 {*movsi_internal}
     (nil))
(insn 410 409 411 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:110 D.24967 ] [110])
            (const_int 0 [0]))) ge2fitman.cpp:216 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 411 410 412 59 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) ge2fitman.cpp:216 612 {*jcc_1}
     (nil)
 -> 421)
;;  succ:       61
;;              60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111 112 113 271 272 273
(note 412 411 413 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 1150 60 (set (reg:SI 0 ax [orig:111 D.24967 ] [111])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2948 [0xfffffffffffff47c])) [0 preprocess[0].pre_quecc_points+0 S4 A32])) ge2fitman.cpp:217 90 {*movsi_internal}
     (nil))
(insn 1150 413 414 60 (set (reg:SI 1 dx [271])
        (reg:SI 0 ax [orig:111 D.24967 ] [111])) ge2fitman.cpp:217 90 {*movsi_internal}
     (nil))
(insn 414 1150 415 60 (parallel [
            (set (reg:SI 1 dx [271])
                (lshiftrt:SI (reg:SI 1 dx [271])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:217 544 {*lshrsi3_1}
     (nil))
(insn 415 414 416 60 (parallel [
            (set (reg:SI 0 ax [272])
                (plus:SI (reg:SI 0 ax [orig:111 D.24967 ] [111])
                    (reg:SI 1 dx [271])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:217 217 {*addsi_1}
     (nil))
(insn 416 415 417 60 (parallel [
            (set (reg:SI 0 ax [273])
                (ashiftrt:SI (reg:SI 0 ax [272])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:217 545 {*ashrsi3_1}
     (nil))
(insn 417 416 418 60 (set (reg:SI 1 dx [orig:112 D.24967 ] [112])
        (reg:SI 0 ax [273])) ge2fitman.cpp:217 90 {*movsi_internal}
     (nil))
(insn 418 417 419 60 (set (reg:SI 0 ax [orig:113 D.24967 ] [113])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2508 [0xfffffffffffff634])) [0 procpar_info[0].num_points+0 S4 A32])) ge2fitman.cpp:217 90 {*movsi_internal}
     (nil))
(insn 419 418 420 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:112 D.24967 ] [112])
            (reg:SI 0 ax [orig:113 D.24967 ] [113]))) ge2fitman.cpp:216 7 {*cmpsi_1}
     (nil))
(jump_insn 420 419 421 60 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) ge2fitman.cpp:216 612 {*jcc_1}
     (nil)
 -> 432)
;;  succ:       61 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59
;;              60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114
(code_label 421 420 422 61 31 "" [1 uses])
(note 422 421 423 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 61 (set (reg:SI 0 ax [orig:114 D.24967 ] [114])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2952 [0xfffffffffffff478])) [0 preprocess[0].pre_quecc+0 S4 A64])) ge2fitman.cpp:218 90 {*movsi_internal}
     (nil))
(insn 424 423 425 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:114 D.24967 ] [114])
            (const_int 1 [0x1]))) ge2fitman.cpp:217 7 {*cmpsi_1}
     (nil))
(jump_insn 425 424 426 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) ge2fitman.cpp:217 612 {*jcc_1}
     (nil)
 -> 432)
;;  succ:       62 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 274
(note 426 425 427 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 62 (set (reg:SI 1 dx [orig:115 D.24967 ] [115])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2508 [0xfffffffffffff634])) [0 procpar_info[0].num_points+0 S4 A32])) ge2fitman.cpp:220 90 {*movsi_internal}
     (nil))
(insn 428 427 429 62 (parallel [
            (set (reg:DI 0 ax [274])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:220 218 {*adddi_1}
     (nil))
(insn 429 428 430 62 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:115 D.24967 ] [115])) ge2fitman.cpp:220 90 {*movsi_internal}
     (nil))
(insn 430 429 431 62 (set (reg:DI 5 di)
        (reg:DI 0 ax [274])) ge2fitman.cpp:220 89 {*movdi_internal}
     (nil))
(call_insn 431 430 432 62 (call (mem:QI (symbol_ref:DI ("_Z7exit_24PP8_IO_FILEi") [flags 0x41]  <function_decl 0x7f6e7880d438 exit_24>) [0 exit_24 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:220 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 [100.0%] 
;;              60
;;              61
;;              62 (FALLTHRU)
;;              57
;;              56 [100.0%] 
;;              58 [100.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 275 276 277
(code_label 432 431 433 63 29 "" [6 uses])
(note 433 432 434 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 63 (parallel [
            (set (reg:DI 0 ax [275])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:224 218 {*adddi_1}
     (nil))
(insn 435 434 436 63 (parallel [
            (set (reg:DI 1 dx [276])
                (plus:DI (reg:DI 0 ax [275])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:224 218 {*adddi_1}
     (nil))
(insn 436 435 437 63 (parallel [
            (set (reg:DI 0 ax [277])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:224 218 {*adddi_1}
     (nil))
(insn 437 436 438 63 (set (reg:DI 4 si)
        (reg:DI 1 dx [276])) ge2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(insn 438 437 439 63 (set (reg:DI 5 di)
        (reg:DI 0 ax [277])) ge2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(call_insn/i 439 438 440 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6e79c48360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:224 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 440 439 441 63 (set (reg:SI 0 ax [orig:116 D.24967 ] [116])
        (reg:SI 0 ax)) ge2fitman.cpp:224 90 {*movsi_internal}
     (nil))
(insn 441 440 442 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:116 D.24967 ] [116])
            (const_int 0 [0]))) ge2fitman.cpp:224 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 442 441 443 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) ge2fitman.cpp:224 612 {*jcc_1}
     (nil)
 -> 515)
;;  succ:       64 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 278 279
(note 443 442 444 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 64 (parallel [
            (set (reg:DI 0 ax [278])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:225 218 {*adddi_1}
     (nil))
(insn 445 444 446 64 (parallel [
            (set (reg:DI 0 ax [279])
                (plus:DI (reg:DI 0 ax [278])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:225 218 {*adddi_1}
     (nil))
(insn 446 445 447 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f6e7885ef30 *.LC4>)) ge2fitman.cpp:225 89 {*movdi_internal}
     (nil))
(insn 447 446 448 64 (set (reg:DI 5 di)
        (reg:DI 0 ax [279])) ge2fitman.cpp:225 89 {*movdi_internal}
     (nil))
(call_insn/i 448 447 449 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6e79c48360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:225 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 449 448 450 64 (set (reg:SI 0 ax [orig:117 D.24967 ] [117])
        (reg:SI 0 ax)) ge2fitman.cpp:225 90 {*movsi_internal}
     (nil))
(insn 450 449 451 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:117 D.24967 ] [117])
            (const_int 0 [0]))) ge2fitman.cpp:224 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 451 450 452 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) ge2fitman.cpp:224 612 {*jcc_1}
     (nil)
 -> 515)
;;  succ:       65 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 280 281
(note 452 451 453 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 65 (parallel [
            (set (reg:DI 0 ax [280])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:227 218 {*adddi_1}
     (nil))
(insn 454 453 455 65 (parallel [
            (set (reg:DI 0 ax [281])
                (plus:DI (reg:DI 0 ax [280])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:227 218 {*adddi_1}
     (nil))
(insn 455 454 456 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6e7885ed80 *.LC1>)) ge2fitman.cpp:227 89 {*movdi_internal}
     (nil))
(insn 456 455 457 65 (set (reg:DI 5 di)
        (reg:DI 0 ax [281])) ge2fitman.cpp:227 89 {*movdi_internal}
     (nil))
(call_insn 457 456 458 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f6e79a83510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:227 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 458 457 459 65 (set (reg/f:DI 0 ax [orig:118 D.24972 ] [118])
        (reg:DI 0 ax)) ge2fitman.cpp:227 89 {*movdi_internal}
     (nil))
(insn 459 458 460 65 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])
        (reg/f:DI 0 ax [orig:118 D.24972 ] [118])) ge2fitman.cpp:227 89 {*movdi_internal}
     (nil))
(insn 460 459 461 65 (set (reg/f:DI 0 ax [orig:119 D.24972 ] [119])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])) ge2fitman.cpp:228 89 {*movdi_internal}
     (nil))
(insn 461 460 462 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:119 D.24972 ] [119])
            (const_int 0 [0]))) ge2fitman.cpp:228 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 462 461 463 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) ge2fitman.cpp:228 612 {*jcc_1}
     (nil)
 -> 470)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 282 283 284
(note 463 462 464 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 66 (parallel [
            (set (reg:DI 0 ax [282])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:229 218 {*adddi_1}
     (nil))
(insn 465 464 466 66 (parallel [
            (set (reg:DI 1 dx [283])
                (plus:DI (reg:DI 0 ax [282])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:229 218 {*adddi_1}
     (nil))
(insn 466 465 467 66 (parallel [
            (set (reg:DI 0 ax [284])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:229 218 {*adddi_1}
     (nil))
(insn 467 466 468 66 (set (reg:DI 4 si)
        (reg:DI 1 dx [283])) ge2fitman.cpp:229 89 {*movdi_internal}
     (nil))
(insn 468 467 469 66 (set (reg:DI 5 di)
        (reg:DI 0 ax [284])) ge2fitman.cpp:229 89 {*movdi_internal}
     (nil))
(call_insn 469 468 470 66 (call (mem:QI (symbol_ref:DI ("_Z7exit_02PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a0d8 exit_02>) [0 exit_02 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:229 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;;              66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120
(code_label 470 469 471 67 33 "" [1 uses])
(note 471 470 472 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 67 (set (reg:SI 0 ax [orig:120 D.24967 ] [120])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3324 [0xfffffffffffff304])) [0 forced_swap+4 S4 A32])) ge2fitman.cpp:231 90 {*movsi_internal}
     (nil))
(insn 473 472 474 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:120 D.24967 ] [120])
            (const_int 1 [0x1]))) ge2fitman.cpp:231 7 {*cmpsi_1}
     (nil))
(jump_insn 474 473 475 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 479)
            (pc))) ge2fitman.cpp:231 612 {*jcc_1}
     (nil)
 -> 479)
;;  succ:       68 (FALLTHRU)
;;              69
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 475 474 476 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 1129 68 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3375 [0xfffffffffffff2d1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman.cpp:233 93 {*movqi_internal}
     (nil))
(jump_insn 1129 476 1130 68 (set (pc)
        (label_ref 515)) 654 {jump}
     (nil)
 -> 515)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1130 1129 479)
;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121
(code_label 479 1130 480 69 34 "" [1 uses])
(note 480 479 481 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 69 (set (reg:SI 0 ax [orig:121 D.24967 ] [121])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3324 [0xfffffffffffff304])) [0 forced_swap+4 S4 A32])) ge2fitman.cpp:234 90 {*movsi_internal}
     (nil))
(insn 482 481 483 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:121 D.24967 ] [121])
            (const_int 2 [0x2]))) ge2fitman.cpp:234 7 {*cmpsi_1}
     (nil))
(jump_insn 483 482 484 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) ge2fitman.cpp:234 612 {*jcc_1}
     (nil)
 -> 488)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 484 483 485 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 1131 70 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3375 [0xfffffffffffff2d1])) [0 swap_bytes+0 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:236 93 {*movqi_internal}
     (nil))
(jump_insn 1131 485 1132 70 (set (pc)
        (label_ref 515)) 654 {jump}
     (nil)
 -> 515)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1132 1131 488)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 123 124 125 126 285 286 287 288 289
(code_label 488 1132 489 71 35 "" [1 uses])
(note 489 488 490 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 71 (set (reg:QI 0 ax [orig:122 D.24971 ] [122])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:239 93 {*movqi_internal}
     (nil))
(insn 491 490 492 71 (set (reg:SI 5 di [orig:123 D.24967 ] [123])
        (zero_extend:SI (reg:QI 0 ax [orig:122 D.24971 ] [122]))) ge2fitman.cpp:239 138 {*zero_extendqisi2}
     (nil))
(insn 492 491 493 71 (set (reg/f:DI 0 ax [orig:124 D.24972 ] [124])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])) ge2fitman.cpp:239 89 {*movdi_internal}
     (nil))
(insn 493 492 494 71 (parallel [
            (set (reg:DI 1 dx [285])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:239 218 {*adddi_1}
     (nil))
(insn 494 493 495 71 (parallel [
            (set (reg:DI 2 cx [286])
                (plus:DI (reg:DI 1 dx [285])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:239 218 {*adddi_1}
     (nil))
(insn 495 494 496 71 (parallel [
            (set (reg:DI 1 dx [287])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3375 [0xfffffffffffff2d1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:239 218 {*adddi_1}
     (nil))
(insn 496 495 497 71 (parallel [
            (set (reg:DI 4 si [288])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3344 [0xfffffffffffff2f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:239 218 {*adddi_1}
     (nil))
(insn 497 496 501 71 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:123 D.24967 ] [123])) ge2fitman.cpp:239 90 {*movsi_internal}
     (nil))
(insn 501 497 502 71 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:124 D.24972 ] [124])) ge2fitman.cpp:239 89 {*movdi_internal}
     (nil))
(call_insn 502 501 503 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb") [flags 0x41]  <function_decl 0x7f6e78804438 endianCheck_file>) [0 endianCheck_file S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:239 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 503 502 504 71 (set (reg:SI 0 ax [orig:125 D.24967 ] [125])
        (reg:SI 0 ax)) ge2fitman.cpp:239 90 {*movsi_internal}
     (nil))
(insn 504 503 505 71 (parallel [
            (set (reg:SI 0 ax [289])
                (lshiftrt:SI (reg:SI 0 ax [orig:125 D.24967 ] [125])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:239 544 {*lshrsi3_1}
     (nil))
(insn 505 504 506 71 (set (reg:QI 0 ax [orig:126 D.24971 ] [126])
        (reg:QI 0 ax [289])) ge2fitman.cpp:239 93 {*movqi_internal}
     (nil))
(insn 506 505 507 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:126 D.24971 ] [126])
            (const_int 0 [0]))) ge2fitman.cpp:239 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 507 506 508 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) ge2fitman.cpp:239 612 {*jcc_1}
     (nil)
 -> 515)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 290 291 292
(note 508 507 509 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 72 (parallel [
            (set (reg:DI 0 ax [290])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:241 218 {*adddi_1}
     (nil))
(insn 510 509 511 72 (parallel [
            (set (reg:DI 1 dx [291])
                (plus:DI (reg:DI 0 ax [290])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:241 218 {*adddi_1}
     (nil))
(insn 511 510 512 72 (parallel [
            (set (reg:DI 0 ax [292])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:241 218 {*adddi_1}
     (nil))
(insn 512 511 513 72 (set (reg:DI 4 si)
        (reg:DI 1 dx [291])) ge2fitman.cpp:241 89 {*movdi_internal}
     (nil))
(insn 513 512 514 72 (set (reg:DI 5 di)
        (reg:DI 0 ax [292])) ge2fitman.cpp:241 89 {*movdi_internal}
     (nil))
(call_insn 514 513 515 72 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a510 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:241 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63
;;              64
;;              68 [100.0%] 
;;              71
;;              72 (FALLTHRU)
;;              70 [100.0%] 
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 127
(code_label 515 514 516 73 32 "" [5 uses])
(note 516 515 517 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 73 (set (reg:QI 0 ax [orig:127 D.24971 ] [127])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:247 93 {*movqi_internal}
     (nil))
(insn 518 517 519 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:127 D.24971 ] [127])
            (const_int 0 [0]))) ge2fitman.cpp:247 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 519 518 520 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 530)
            (pc))) ge2fitman.cpp:247 612 {*jcc_1}
     (nil)
 -> 530)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 293 294 295
(note 520 519 521 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f6e7885e090 *.LC5>)) ge2fitman.cpp:251 89 {*movdi_internal}
     (nil))
(call_insn 522 521 523 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:251 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 523 522 524 74 (parallel [
            (set (reg:DI 1 dx [293])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:252 218 {*adddi_1}
     (nil))
(insn 524 523 525 74 (parallel [
            (set (reg:DI 2 cx [294])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:252 218 {*adddi_1}
     (nil))
(insn 525 524 527 74 (parallel [
            (set (reg:DI 0 ax [295])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:252 218 {*adddi_1}
     (nil))
(insn 527 525 528 74 (set (reg:DI 4 si)
        (reg:DI 2 cx [294])) ge2fitman.cpp:252 89 {*movdi_internal}
     (nil))
(insn 528 527 529 74 (set (reg:DI 5 di)
        (reg:DI 0 ax [295])) ge2fitman.cpp:252 89 {*movdi_internal}
     (nil))
(call_insn 529 528 530 74 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f6e78804af8 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:252 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 128
(code_label 530 529 531 75 36 "" [1 uses])
(note 531 530 532 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 75 (set (reg:SI 0 ax [orig:128 D.24967 ] [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 fid+0 S4 A32])) ge2fitman.cpp:259 90 {*movsi_internal}
     (nil))
(insn 533 532 534 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:128 D.24967 ] [128])
            (const_int 1 [0x1]))) ge2fitman.cpp:259 7 {*cmpsi_1}
     (nil))
(jump_insn 534 533 535 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 586)
            (pc))) ge2fitman.cpp:259 612 {*jcc_1}
     (nil)
 -> 586)
;;  succ:       76 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 296 297 298
(note 535 534 536 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 76 (parallel [
            (set (reg:DI 0 ax [296])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:260 218 {*adddi_1}
     (nil))
(insn 537 536 538 76 (parallel [
            (set (reg:DI 1 dx [297])
                (plus:DI (reg:DI 0 ax [296])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:260 218 {*adddi_1}
     (nil))
(insn 538 537 539 76 (parallel [
            (set (reg:DI 0 ax [298])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:260 218 {*adddi_1}
     (nil))
(insn 539 538 540 76 (set (reg:DI 4 si)
        (reg:DI 1 dx [297])) ge2fitman.cpp:260 89 {*movdi_internal}
     (nil))
(insn 540 539 541 76 (set (reg:DI 5 di)
        (reg:DI 0 ax [298])) ge2fitman.cpp:260 89 {*movdi_internal}
     (nil))
(call_insn/i 541 540 542 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6e79c48360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:260 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 542 541 543 76 (set (reg:SI 0 ax [orig:129 D.24967 ] [129])
        (reg:SI 0 ax)) ge2fitman.cpp:260 90 {*movsi_internal}
     (nil))
(insn 543 542 544 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:129 D.24967 ] [129])
            (const_int 0 [0]))) ge2fitman.cpp:260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 544 543 545 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 671)
            (pc))) ge2fitman.cpp:260 612 {*jcc_1}
     (nil)
 -> 671)
;;  succ:       77 (FALLTHRU)
;;              87
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130 131 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316
(note 545 544 546 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 77 (set (reg:DI 0 ax [299])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3120 [0xfffffffffffff3d0])) [0 main_header+0 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 547 546 548 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3056 [0xfffffffffffff410])) [0 main_header+64 S8 A64])
        (reg:DI 0 ax [299])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 548 547 549 77 (set (reg:DI 0 ax [300])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3112 [0xfffffffffffff3d8])) [0 main_header+8 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 549 548 550 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3048 [0xfffffffffffff418])) [0 main_header+72 S8 A64])
        (reg:DI 0 ax [300])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 550 549 551 77 (set (reg:DI 0 ax [301])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3104 [0xfffffffffffff3e0])) [0 main_header+16 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 551 550 552 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3040 [0xfffffffffffff420])) [0 main_header+80 S8 A64])
        (reg:DI 0 ax [301])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 552 551 553 77 (set (reg:DI 0 ax [302])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3096 [0xfffffffffffff3e8])) [0 main_header+24 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 553 552 554 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3032 [0xfffffffffffff428])) [0 main_header+88 S8 A64])
        (reg:DI 0 ax [302])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 554 553 555 77 (set (reg:DI 0 ax [303])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3088 [0xfffffffffffff3f0])) [0 main_header+32 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 555 554 556 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3024 [0xfffffffffffff430])) [0 main_header+96 S8 A64])
        (reg:DI 0 ax [303])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 556 555 557 77 (set (reg:DI 0 ax [304])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3080 [0xfffffffffffff3f8])) [0 main_header+40 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 557 556 558 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3016 [0xfffffffffffff438])) [0 main_header+104 S8 A64])
        (reg:DI 0 ax [304])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 558 557 559 77 (set (reg:DI 0 ax [305])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3072 [0xfffffffffffff400])) [0 main_header+48 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 559 558 560 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3008 [0xfffffffffffff440])) [0 main_header+112 S8 A64])
        (reg:DI 0 ax [305])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 560 559 561 77 (set (reg:DI 0 ax [306])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3064 [0xfffffffffffff408])) [0 main_header+56 S8 A64])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 561 560 562 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3000 [0xfffffffffffff448])) [0 main_header+120 S8 A64])
        (reg:DI 0 ax [306])) ge2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 562 561 563 77 (set (reg:DI 0 ax [307])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3184 [0xfffffffffffff390])) [0 block_header+0 S8 A64])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 563 562 564 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3152 [0xfffffffffffff3b0])) [0 block_header+32 S8 A64])
        (reg:DI 0 ax [307])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 564 563 565 77 (set (reg:DI 0 ax [308])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3176 [0xfffffffffffff398])) [0 block_header+8 S8 A64])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 565 564 566 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3144 [0xfffffffffffff3b8])) [0 block_header+40 S8 A64])
        (reg:DI 0 ax [308])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 566 565 567 77 (set (reg:DI 0 ax [309])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3168 [0xfffffffffffff3a0])) [0 block_header+16 S8 A64])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 567 566 568 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3136 [0xfffffffffffff3c0])) [0 block_header+48 S8 A64])
        (reg:DI 0 ax [309])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 568 567 569 77 (set (reg:DI 0 ax [310])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3160 [0xfffffffffffff3a8])) [0 block_header+24 S8 A64])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 569 568 570 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3128 [0xfffffffffffff3c8])) [0 block_header+56 S8 A64])
        (reg:DI 0 ax [310])) ge2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 570 569 571 77 (parallel [
            (set (reg/f:DI 0 ax [311])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2320 [0xfffffffffffff6f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:264 218 {*adddi_1}
     (nil))
(insn 571 570 572 77 (parallel [
            (set (reg/f:DI 1 dx [312])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:264 218 {*adddi_1}
     (nil))
(insn 572 571 1152 77 (set (reg:DI 2 cx [313])
        (const_int 64 [0x40])) ge2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 1152 572 1153 77 (set (reg/f:DI 5 di [311])
        (reg/f:DI 0 ax [311])) ge2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 1153 1152 573 77 (set (reg/f:DI 4 si [312])
        (reg/f:DI 1 dx [312])) ge2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 573 1153 574 77 (parallel [
            (set (reg:DI 2 cx [313])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [311])
                (plus:DI (ashift:DI (reg:DI 2 cx [313])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [311])))
            (set (reg/f:DI 4 si [312])
                (plus:DI (ashift:DI (reg:DI 2 cx [313])
                        (const_int 3 [0x3]))
                    (reg/f:DI 4 si [312])))
            (set (mem/j/c:BLK (reg/f:DI 5 di [311]) [0 procpar_info+512 S512 A64])
                (mem/j/c:BLK (reg/f:DI 4 si [312]) [0 procpar_info+0 S512 A64]))
            (use (reg:DI 2 cx [313]))
        ]) ge2fitman.cpp:264 921 {*rep_movdi_rex64}
     (nil))
(insn 574 573 575 77 (set (reg:DI 0 ax [314])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3232 [0xfffffffffffff360])) [0 infile_struct+0 S8 A64])) ge2fitman.cpp:295 89 {*movdi_internal}
     (nil))
(insn 575 574 576 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3212 [0xfffffffffffff374])) [0 infile_struct+20 S8 A32])
        (reg:DI 0 ax [314])) ge2fitman.cpp:295 89 {*movdi_internal}
     (nil))
(insn 576 575 577 77 (set (reg:DI 0 ax [315])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3224 [0xfffffffffffff368])) [0 infile_struct+8 S8 A64])) ge2fitman.cpp:295 89 {*movdi_internal}
     (nil))
(insn 577 576 578 77 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3204 [0xfffffffffffff37c])) [0 infile_struct+28 S8 A32])
        (reg:DI 0 ax [315])) ge2fitman.cpp:295 89 {*movdi_internal}
     (nil))
(insn 578 577 579 77 (set (reg:SI 0 ax [316])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3216 [0xfffffffffffff370])) [0 infile_struct+16 S4 A64])) ge2fitman.cpp:295 90 {*movsi_internal}
     (nil))
(insn 579 578 580 77 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3196 [0xfffffffffffff384])) [0 infile_struct+36 S4 A32])
        (reg:SI 0 ax [316])) ge2fitman.cpp:295 90 {*movsi_internal}
     (nil))
(insn 580 579 581 77 (set (reg:SI 0 ax [orig:130 D.24967 ] [130])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3328 [0xfffffffffffff300])) [0 forced_swap+0 S4 A64])) ge2fitman.cpp:296 90 {*movsi_internal}
     (nil))
(insn 581 580 582 77 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3324 [0xfffffffffffff304])) [0 forced_swap+4 S4 A32])
        (reg:SI 0 ax [orig:130 D.24967 ] [130])) ge2fitman.cpp:296 90 {*movsi_internal}
     (nil))
(insn 582 581 583 77 (set (reg/f:DI 0 ax [orig:131 D.24972 ] [131])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 in_file+0 S8 A64])) ge2fitman.cpp:297 89 {*movdi_internal}
     (nil))
(insn 583 582 1133 77 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])
        (reg/f:DI 0 ax [orig:131 D.24972 ] [131])) ge2fitman.cpp:297 89 {*movdi_internal}
     (nil))
(jump_insn 1133 583 1134 77 (set (pc)
        (label_ref 671)) 654 {jump}
     (nil)
 -> 671)
;;  succ:       87 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1134 1133 586)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 132 133 317 318 319 320 321 322 323 324 325
(code_label 586 1134 587 78 37 "" [1 uses])
(note 587 586 588 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f6e7885e120 *.LC6>)) ge2fitman.cpp:303 89 {*movdi_internal}
     (nil))
(call_insn 589 588 590 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:303 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 590 589 591 78 (set (reg/f:DI 0 ax [orig:132 D.24972 ] [132])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])) ge2fitman.cpp:306 89 {*movdi_internal}
     (nil))
(insn 591 590 592 78 (parallel [
            (set (reg:DI 1 dx [317])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 592 591 593 78 (parallel [
            (set (reg:DI 38 r9 [318])
                (plus:DI (reg:DI 1 dx [317])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 593 592 594 78 (parallel [
            (set (reg:DI 1 dx [319])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 594 593 595 78 (parallel [
            (set (reg:DI 37 r8 [320])
                (plus:DI (reg:DI 1 dx [319])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 595 594 596 78 (parallel [
            (set (reg:DI 1 dx [321])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3375 [0xfffffffffffff2d1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 596 595 597 78 (parallel [
            (set (reg:DI 2 cx [322])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 597 596 598 78 (parallel [
            (set (reg:DI 4 si [323])
                (plus:DI (reg:DI 2 cx [322])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 598 597 599 78 (parallel [
            (set (reg:DI 2 cx [324])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 599 598 602 78 (parallel [
            (set (reg:DI 5 di [325])
                (plus:DI (reg:DI 2 cx [324])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:307 218 {*adddi_1}
     (nil))
(insn 602 599 603 78 (set (reg:DI 2 cx)
        (reg:DI 1 dx [321])) ge2fitman.cpp:307 89 {*movdi_internal}
     (nil))
(insn 603 602 606 78 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:132 D.24972 ] [132])) ge2fitman.cpp:307 89 {*movdi_internal}
     (nil))
(call_insn 606 603 607 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f6e787dc438 read_procpar>) [0 read_procpar S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:307 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 607 606 608 78 (set (reg:SI 0 ax [orig:133 D.24967 ] [133])
        (reg:SI 0 ax)) ge2fitman.cpp:307 90 {*movsi_internal}
     (nil))
(insn 608 607 609 78 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:133 D.24967 ] [133])) ge2fitman.cpp:307 90 {*movsi_internal}
     (nil))
(insn 609 608 610 78 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) ge2fitman.cpp:308 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 610 609 611 78 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 653)
            (pc))) ge2fitman.cpp:308 612 {*jcc_1}
     (nil)
 -> 653)
;;  succ:       79 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 611 610 612 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ge2fitman.cpp:309 7 {*cmpsi_1}
     (nil))
(jump_insn 613 612 614 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) ge2fitman.cpp:309 612 {*jcc_1}
     (nil)
 -> 623)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 326 327 328
(note 614 613 615 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 80 (parallel [
            (set (reg:DI 0 ax [326])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:311 218 {*adddi_1}
     (nil))
(insn 616 615 617 80 (parallel [
            (set (reg:DI 1 dx [327])
                (plus:DI (reg:DI 0 ax [326])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:311 218 {*adddi_1}
     (nil))
(insn 617 616 618 80 (parallel [
            (set (reg:DI 0 ax [328])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:311 218 {*adddi_1}
     (nil))
(insn 618 617 619 80 (set (reg:DI 4 si)
        (reg:DI 1 dx [327])) ge2fitman.cpp:311 89 {*movdi_internal}
     (nil))
(insn 619 618 620 80 (set (reg:DI 5 di)
        (reg:DI 0 ax [328])) ge2fitman.cpp:311 89 {*movdi_internal}
     (nil))
(call_insn 620 619 1135 80 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f6e7880a510 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:311 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1135 620 1136 80 (set (pc)
        (label_ref 653)) 654 {jump}
     (nil)
 -> 653)
;;  succ:       85 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1136 1135 623)
;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 623 1136 624 81 40 "" [1 uses])
(note 624 623 625 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) ge2fitman.cpp:312 7 {*cmpsi_1}
     (nil))
(jump_insn 626 625 627 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 639)
            (pc))) ge2fitman.cpp:312 612 {*jcc_1}
     (nil)
 -> 639)
;;  succ:       82 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 329 330 331 332 333
(note 627 626 628 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 82 (parallel [
            (set (reg:DI 0 ax [329])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:314 218 {*adddi_1}
     (nil))
(insn 629 628 630 82 (parallel [
            (set (reg:DI 1 dx [330])
                (plus:DI (reg:DI 0 ax [329])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:314 218 {*adddi_1}
     (nil))
(insn 630 629 631 82 (parallel [
            (set (reg:DI 0 ax [331])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:314 218 {*adddi_1}
     (nil))
(insn 631 630 632 82 (parallel [
            (set (reg:DI 2 cx [332])
                (plus:DI (reg:DI 0 ax [331])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:314 218 {*adddi_1}
     (nil))
(insn 632 631 634 82 (parallel [
            (set (reg:DI 0 ax [333])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:314 218 {*adddi_1}
     (nil))
(insn 634 632 635 82 (set (reg:DI 4 si)
        (reg:DI 2 cx [332])) ge2fitman.cpp:314 89 {*movdi_internal}
     (nil))
(insn 635 634 636 82 (set (reg:DI 5 di)
        (reg:DI 0 ax [333])) ge2fitman.cpp:314 89 {*movdi_internal}
     (nil))
(call_insn 636 635 1137 82 (call (mem:QI (symbol_ref:DI ("_Z7exit_09PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f6e7880a6c0 exit_09>) [0 exit_09 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:314 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1137 636 1138 82 (set (pc)
        (label_ref 653)) 654 {jump}
     (nil)
 -> 653)
;;  succ:       85 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1138 1137 639)
;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 639 1138 640 83 41 "" [1 uses])
(note 640 639 641 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3352 [0xfffffffffffff2e8])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) ge2fitman.cpp:315 7 {*cmpsi_1}
     (nil))
(jump_insn 642 641 643 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 653)
            (pc))) ge2fitman.cpp:315 612 {*jcc_1}
     (nil)
 -> 653)
;;  succ:       84 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 334 335 336 337 338
(note 643 642 644 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 644 643 645 84 (parallel [
            (set (reg:DI 0 ax [334])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:317 218 {*adddi_1}
     (nil))
(insn 645 644 646 84 (parallel [
            (set (reg:DI 1 dx [335])
                (plus:DI (reg:DI 0 ax [334])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:317 218 {*adddi_1}
     (nil))
(insn 646 645 647 84 (parallel [
            (set (reg:DI 0 ax [336])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:317 218 {*adddi_1}
     (nil))
(insn 647 646 648 84 (parallel [
            (set (reg:DI 2 cx [337])
                (plus:DI (reg:DI 0 ax [336])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:317 218 {*adddi_1}
     (nil))
(insn 648 647 650 84 (parallel [
            (set (reg:DI 0 ax [338])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:317 218 {*adddi_1}
     (nil))
(insn 650 648 651 84 (set (reg:DI 4 si)
        (reg:DI 2 cx [337])) ge2fitman.cpp:317 89 {*movdi_internal}
     (nil))
(insn 651 650 652 84 (set (reg:DI 5 di)
        (reg:DI 0 ax [338])) ge2fitman.cpp:317 89 {*movdi_internal}
     (nil))
(call_insn 652 651 653 84 (call (mem:QI (symbol_ref:DI ("_Z7exit_10PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f6e7880a798 exit_10>) [0 exit_10 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:317 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;;              80 [100.0%] 
;;              83
;;              84 (FALLTHRU)
;;              82 [100.0%] 
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134
(code_label 653 652 654 85 39 "" [4 uses])
(note 654 653 655 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 655 654 656 85 (set (reg:QI 0 ax [orig:134 D.24971 ] [134])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:323 93 {*movqi_internal}
     (nil))
(insn 656 655 657 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:134 D.24971 ] [134])
            (const_int 0 [0]))) ge2fitman.cpp:323 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 657 656 658 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 671)
            (pc))) ge2fitman.cpp:323 612 {*jcc_1}
     (nil)
 -> 671)
;;  succ:       86 (FALLTHRU)
;;              87
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 339 340 341 342 343 344
(note 658 657 659 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 659 658 660 86 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f6e7885e1b0 *.LC7>)) ge2fitman.cpp:324 89 {*movdi_internal}
     (nil))
(call_insn 660 659 661 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:324 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 661 660 662 86 (parallel [
            (set (reg:DI 0 ax [339])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:325 218 {*adddi_1}
     (nil))
(insn 662 661 663 86 (parallel [
            (set (reg:DI 1 dx [340])
                (plus:DI (reg:DI 0 ax [339])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:325 218 {*adddi_1}
     (nil))
(insn 663 662 664 86 (parallel [
            (set (reg:DI 0 ax [341])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:325 218 {*adddi_1}
     (nil))
(insn 664 663 665 86 (parallel [
            (set (reg:DI 2 cx [342])
                (plus:DI (reg:DI 0 ax [341])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:325 218 {*adddi_1}
     (nil))
(insn 665 664 666 86 (parallel [
            (set (reg:DI 0 ax [343])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:325 218 {*adddi_1}
     (nil))
(insn 666 665 668 86 (parallel [
            (set (reg:DI 0 ax [344])
                (plus:DI (reg:DI 0 ax [343])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:325 218 {*adddi_1}
     (nil))
(insn 668 666 669 86 (set (reg:DI 4 si)
        (reg:DI 2 cx [342])) ge2fitman.cpp:325 89 {*movdi_internal}
     (nil))
(insn 669 668 670 86 (set (reg:DI 5 di)
        (reg:DI 0 ax [344])) ge2fitman.cpp:325 89 {*movdi_internal}
     (nil))
(call_insn 670 669 671 86 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f6e78804af8 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:325 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       87 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76
;;              85
;;              86 (FALLTHRU)
;;              77 [100.0%] 
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 135 136 137 138 139 140 141 142 143 144 345 346 347 348 349 350 351 352
(code_label 671 670 672 87 38 "" [3 uses])
(note 672 671 673 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 87 (set (reg:QI 0 ax [orig:135 D.24971 ] [135])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:334 93 {*movqi_internal}
     (nil))
(insn 674 673 675 87 (set (reg:SI 37 r8 [orig:136 D.24967 ] [136])
        (zero_extend:SI (reg:QI 0 ax [orig:135 D.24971 ] [135]))) ge2fitman.cpp:334 138 {*zero_extendqisi2}
     (nil))
(insn 675 674 676 87 (parallel [
            (set (reg:DI 38 r9 [345])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (nil))
(insn 676 675 677 87 (parallel [
            (set (reg:DI 2 cx [346])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3372 [0xfffffffffffff2d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (nil))
(insn 677 676 678 87 (parallel [
            (set (reg:DI 1 dx [347])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (nil))
(insn 678 677 679 87 (parallel [
            (set (reg:DI 4 si [348])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (nil))
(insn 679 678 680 87 (parallel [
            (set (reg:DI 0 ax [349])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (nil))
(insn 680 679 681 87 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 681 680 682 87 (parallel [
            (set (reg:DI 5 di [350])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (nil))
(insn 682 681 688 87 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [350])) ge2fitman.cpp:335 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 688 682 689 87 (set (reg:DI 5 di)
        (reg:DI 0 ax [349])) ge2fitman.cpp:335 89 {*movdi_internal}
     (nil))
(call_insn 689 688 690 87 (call (mem:QI (symbol_ref:DI ("_Z15filter_zero_setPP8_IO_FILEP13InFile_structP10PreprocessPibP12Procpar_infoS6_") [flags 0x41]  <function_decl 0x7f6e78804e58 filter_zero_set>) [0 filter_zero_set S1 A8])
        (const_int 16 [0x10])) ge2fitman.cpp:335 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 690 689 691 87 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:335 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 691 690 692 87 (set (reg:SI 1 dx [orig:137 D.24967 ] [137])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2000 [0xfffffffffffff830])) [0 procpar_info[1].num_transients+0 S4 A64])) ge2fitman.cpp:338 90 {*movsi_internal}
     (nil))
(insn 692 691 693 87 (set (reg:SI 0 ax [orig:138 D.24967 ] [138])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3208 [0xfffffffffffff378])) [0 infile_struct[1].num_unsup_sets+0 S4 A64])) ge2fitman.cpp:338 90 {*movsi_internal}
     (nil))
(insn 693 692 694 87 (parallel [
            (set (reg:SI 0 ax [orig:139 D.24967 ] [139])
                (mult:SI (reg:SI 0 ax [orig:138 D.24967 ] [138])
                    (reg:SI 1 dx [orig:137 D.24967 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:338 305 {*mulsi3_1}
     (nil))
(insn 694 693 695 87 (set (reg:SI 2 cx [orig:140 D.24967 ] [140])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3212 [0xfffffffffffff374])) [0 infile_struct[1].num_datasets+0 S4 A32])) ge2fitman.cpp:339 90 {*movsi_internal}
     (nil))
(insn 695 694 696 87 (set (reg:SI 1 dx [orig:141 D.24967 ] [141])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3208 [0xfffffffffffff378])) [0 infile_struct[1].num_unsup_sets+0 S4 A64])) ge2fitman.cpp:339 90 {*movsi_internal}
     (nil))
(insn 696 695 1155 87 (parallel [
            (set (reg:SI 2 cx [orig:142 D.24967 ] [142])
                (minus:SI (reg:SI 2 cx [orig:142 D.24967 ] [142])
                    (reg:SI 1 dx [orig:141 D.24967 ] [141])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:339 260 {*subsi_1}
     (nil))
(insn 1155 696 697 87 (set (reg:SI 4 si [orig:142 D.24967 ] [142])
        (reg:SI 2 cx [orig:142 D.24967 ] [142])) ge2fitman.cpp:339 90 {*movsi_internal}
     (nil))
(insn 697 1155 698 87 (parallel [
            (set (reg:SI 0 ax [351])
                (div:SI (reg:SI 0 ax [orig:139 D.24967 ] [139])
                    (reg:SI 4 si [orig:142 D.24967 ] [142])))
            (set (reg:SI 1 dx [352])
                (mod:SI (reg:SI 0 ax [orig:139 D.24967 ] [139])
                    (reg:SI 4 si [orig:142 D.24967 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:338 341 {*divmodsi4}
     (nil))
(insn 698 697 699 87 (set (reg:SI 0 ax [orig:143 D.24967 ] [143])
        (reg:SI 0 ax [351])) ge2fitman.cpp:338 90 {*movsi_internal}
     (nil))
(insn 699 698 700 87 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2000 [0xfffffffffffff830])) [0 procpar_info[1].num_transients+0 S4 A64])
        (reg:SI 0 ax [orig:143 D.24967 ] [143])) ge2fitman.cpp:339 90 {*movsi_internal}
     (nil))
(insn 700 699 701 87 (set (reg:QI 0 ax [orig:144 D.24971 ] [144])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:342 93 {*movqi_internal}
     (nil))
(insn 701 700 702 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:144 D.24971 ] [144])
            (const_int 0 [0]))) ge2fitman.cpp:342 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 702 701 703 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 706)
            (pc))) ge2fitman.cpp:342 612 {*jcc_1}
     (nil)
 -> 706)
;;  succ:       88 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 703 702 704 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 705 88 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f6e7885e5a0 *.LC8>)) ge2fitman.cpp:343 89 {*movdi_internal}
     (nil))
(call_insn 705 704 706 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:343 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       89 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87
;;              88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 145 146 147 148 353 354 355 356 357 358 359 360 361 362 363 364
(code_label 706 705 707 89 42 "" [1 uses])
(note 707 706 708 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 708 707 709 89 (set (reg:QI 0 ax [orig:145 D.24971 ] [145])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:345 93 {*movqi_internal}
     (nil))
(insn 709 708 710 89 (set (reg:SI 37 r8 [orig:146 D.24967 ] [146])
        (zero_extend:SI (reg:QI 0 ax [orig:145 D.24971 ] [145]))) ge2fitman.cpp:345 138 {*zero_extendqisi2}
     (nil))
(insn 710 709 711 89 (set (reg:QI 0 ax [orig:147 D.24971 ] [147])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3375 [0xfffffffffffff2d1])) [0 swap_bytes+0 S1 A8])) ge2fitman.cpp:345 93 {*movqi_internal}
     (nil))
(insn 711 710 712 89 (set (reg:SI 5 di [orig:148 D.24967 ] [148])
        (zero_extend:SI (reg:QI 0 ax [orig:147 D.24971 ] [147]))) ge2fitman.cpp:345 138 {*zero_extendqisi2}
     (nil))
(insn 712 711 713 89 (parallel [
            (set (reg:DI 38 r9 [353])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3296 [0xfffffffffffff320])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 713 712 714 89 (parallel [
            (set (reg:DI 39 r10 [354])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 714 713 715 89 (parallel [
            (set (reg:DI 2 cx [355])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 715 714 716 89 (parallel [
            (set (reg:DI 1 dx [356])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 716 715 717 89 (parallel [
            (set (reg:DI 4 si [357])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 717 716 718 89 (parallel [
            (set (reg:DI 0 ax [358])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3372 [0xfffffffffffff2d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 718 717 719 89 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 37 r8 [orig:146 D.24967 ] [146])) ge2fitman.cpp:346 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 719 718 720 89 (parallel [
            (set (reg:DI 37 r8 [359])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3232 [0xfffffffffffff360])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 720 719 721 89 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 37 r8 [359])) ge2fitman.cpp:346 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 721 720 722 89 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 5 di [orig:148 D.24967 ] [148])) ge2fitman.cpp:346 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 722 721 723 89 (parallel [
            (set (reg:DI 5 di [360])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 723 722 724 89 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [360])) ge2fitman.cpp:346 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 724 723 725 89 (parallel [
            (set (reg:DI 5 di [361])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3280 [0xfffffffffffff330])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 725 724 726 89 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [361])) ge2fitman.cpp:346 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 726 725 727 89 (parallel [
            (set (reg:DI 5 di [362])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3312 [0xfffffffffffff310])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 727 726 728 89 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [362])) ge2fitman.cpp:346 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 728 727 729 89 (parallel [
            (set (reg:DI 5 di [363])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 729 728 730 89 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [363])) ge2fitman.cpp:346 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 730 729 731 89 (parallel [
            (set (reg:DI 5 di [364])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (nil))
(insn 731 730 733 89 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [364])) ge2fitman.cpp:346 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 733 731 737 89 (set (reg:DI 37 r8)
        (reg:DI 39 r10 [354])) ge2fitman.cpp:346 89 {*movdi_internal}
     (nil))
(insn 737 733 738 89 (set (reg:DI 5 di)
        (reg:DI 0 ax [358])) ge2fitman.cpp:346 89 {*movdi_internal}
     (nil))
(call_insn 738 737 739 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9read_dataPiP10PreprocessP7IOFilesP16Data_file_headerP17Data_block_headerP10Precision2PP8_IO_FILEP12Procpar_infoP10Precision1PPfSI_iP13InFile_structb") [flags 0x41]  <function_decl 0x7f6e787dc5e8 read_data>) [0 read_data S1 A8])
            (const_int 64 [0x40]))) ge2fitman.cpp:346 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 739 738 740 89 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:346 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 740 739 799 89 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:352 90 {*movsi_internal}
     (nil))
;;  succ:       90 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;;              94 [100.0%] 
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149
(code_label 799 740 741 90 46 "" [1 uses])
(note 741 799 742 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 742 741 743 90 (set (reg:SI 0 ax [orig:149 D.24967 ] [149])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 fid+0 S4 A32])) ge2fitman.cpp:352 90 {*movsi_internal}
     (nil))
(insn 743 742 744 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
            (reg:SI 0 ax [orig:149 D.24967 ] [149]))) ge2fitman.cpp:352 7 {*cmpsi_1}
     (nil))
(jump_insn 744 743 745 90 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 802)
            (pc))) ge2fitman.cpp:352 612 {*jcc_1}
     (nil)
 -> 802)
;;  succ:       95
;;              91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 745 744 746 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 793 91 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:353 90 {*movsi_internal}
     (nil))
;;  succ:       92 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;;              93 [100.0%] 
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 150 151 152 365 366 367 368 369 370
(code_label 793 746 747 92 45 "" [1 uses])
(note 747 793 748 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 748 747 749 92 (set (reg:SI 0 ax [365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])) ge2fitman.cpp:353 90 {*movsi_internal}
     (nil))
(insn 749 748 750 92 (set (reg:DI 0 ax [orig:150 D.24973 ] [150])
        (sign_extend:DI (reg:SI 0 ax [365]))) ge2fitman.cpp:353 142 {*extendsidi2_rex64}
     (nil))
(insn 750 749 751 92 (set (reg:SI 1 dx [367])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:353 90 {*movsi_internal}
     (nil))
(insn 751 750 752 92 (set (reg:DI 1 dx [366])
        (sign_extend:DI (reg:SI 1 dx [367]))) ge2fitman.cpp:353 142 {*extendsidi2_rex64}
     (nil))
(insn 752 751 753 92 (parallel [
            (set (reg:DI 1 dx [368])
                (ashift:DI (reg:DI 1 dx [366])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:353 512 {*ashldi3_1}
     (nil))
(insn 753 752 754 92 (parallel [
            (set (reg:DI 1 dx [369])
                (plus:DI (reg:DI 1 dx [368])
                    (reg/f:DI 6 bp)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:353 218 {*adddi_1}
     (nil))
(insn 754 753 755 92 (parallel [
            (set (reg/f:DI 1 dx [370])
                (plus:DI (reg:DI 1 dx [369])
                    (const_int -3104 [0xfffffffffffff3e0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:353 218 {*adddi_1}
     (nil))
(insn 755 754 756 92 (set (reg:DI 1 dx [orig:151 D.24973 ] [151])
        (mem/j:DI (reg/f:DI 1 dx [370]) [0 main_header[i_1].np.number+0 S8 A64])) ge2fitman.cpp:353 89 {*movdi_internal}
     (nil))
(insn 756 755 757 92 (parallel [
            (set (reg:DI 1 dx [orig:152 D.24973 ] [152])
                (ashift:DI (reg:DI 1 dx [orig:151 D.24973 ] [151])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:353 512 {*ashldi3_1}
     (nil))
(insn 757 756 758 92 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:150 D.24973 ] [150])
            (reg:DI 1 dx [orig:152 D.24973 ] [152]))) ge2fitman.cpp:353 8 {*cmpdi_1}
     (nil))
(jump_insn 758 757 759 92 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 796)
            (pc))) ge2fitman.cpp:353 612 {*jcc_1}
     (nil)
 -> 796)
;;  succ:       94
;;              93 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 371 372 373 374 375 376 377 378 379 380 381 382
(note 759 758 760 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 760 759 761 93 (set (reg:SI 0 ax [372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:355 90 {*movsi_internal}
     (nil))
(insn 761 760 762 93 (set (reg:DI 0 ax [371])
        (sign_extend:DI (reg:SI 0 ax [372]))) ge2fitman.cpp:355 142 {*extendsidi2_rex64}
     (nil))
(insn 762 761 763 93 (set (reg/f:DI 0 ax [orig:153 D.24974 ] [153])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [371])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3280 [0xfffffffffffff330])) [0 out_data S8 A64])) ge2fitman.cpp:355 89 {*movdi_internal}
     (nil))
(insn 763 762 764 93 (set (reg:SI 1 dx [373])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])) ge2fitman.cpp:355 90 {*movsi_internal}
     (nil))
(insn 764 763 765 93 (set (reg:DI 1 dx [orig:154 D.24968 ] [154])
        (sign_extend:DI (reg:SI 1 dx [373]))) ge2fitman.cpp:355 142 {*extendsidi2_rex64}
     (nil))
(insn 765 764 766 93 (parallel [
            (set (reg:DI 1 dx [orig:155 D.24968 ] [155])
                (ashift:DI (reg:DI 1 dx [orig:154 D.24968 ] [154])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:355 512 {*ashldi3_1}
     (nil))
(insn 766 765 767 93 (parallel [
            (set (reg/f:DI 1 dx [orig:156 D.24974 ] [156])
                (plus:DI (reg:DI 1 dx [orig:155 D.24968 ] [155])
                    (reg/f:DI 0 ax [orig:153 D.24974 ] [153])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:355 218 {*adddi_1}
     (nil))
(insn 767 766 768 93 (set (reg:SI 0 ax [375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:355 90 {*movsi_internal}
     (nil))
(insn 768 767 769 93 (set (reg:DI 0 ax [374])
        (sign_extend:DI (reg:SI 0 ax [375]))) ge2fitman.cpp:355 142 {*extendsidi2_rex64}
     (nil))
(insn 769 768 770 93 (set (reg/f:DI 0 ax [orig:157 D.24974 ] [157])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [374])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3296 [0xfffffffffffff320])) [0 switch_data[i_1].fl+0 S8 A64])) ge2fitman.cpp:355 89 {*movdi_internal}
     (nil))
(insn 770 769 771 93 (set (reg:SI 2 cx [376])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])) ge2fitman.cpp:355 90 {*movsi_internal}
     (nil))
(insn 771 770 772 93 (set (reg:DI 2 cx [orig:158 D.24968 ] [158])
        (sign_extend:DI (reg:SI 2 cx [376]))) ge2fitman.cpp:355 142 {*extendsidi2_rex64}
     (nil))
(insn 772 771 773 93 (parallel [
            (set (reg:DI 2 cx [orig:159 D.24968 ] [159])
                (ashift:DI (reg:DI 2 cx [orig:158 D.24968 ] [158])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:355 512 {*ashldi3_1}
     (nil))
(insn 773 772 774 93 (parallel [
            (set (reg/f:DI 0 ax [orig:160 D.24974 ] [160])
                (plus:DI (reg/f:DI 0 ax [orig:157 D.24974 ] [157])
                    (reg:DI 2 cx [orig:159 D.24968 ] [159])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:355 218 {*adddi_1}
     (nil))
(insn 774 773 775 93 (set (reg:SF 21 xmm0 [orig:161 D.24975 ] [161])
        (mem:SF (reg/f:DI 0 ax [orig:160 D.24974 ] [160]) [0 *_207+0 S4 A32])) ge2fitman.cpp:355 129 {*movsf_internal}
     (nil))
(insn 775 774 776 93 (set (mem:SF (reg/f:DI 1 dx [orig:156 D.24974 ] [156]) [0 *_203+0 S4 A32])
        (reg:SF 21 xmm0 [orig:161 D.24975 ] [161])) ge2fitman.cpp:355 129 {*movsf_internal}
     (nil))
(insn 776 775 777 93 (set (reg:SI 0 ax [378])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:356 90 {*movsi_internal}
     (nil))
(insn 777 776 778 93 (set (reg:DI 0 ax [377])
        (sign_extend:DI (reg:SI 0 ax [378]))) ge2fitman.cpp:356 142 {*extendsidi2_rex64}
     (nil))
(insn 778 777 779 93 (set (reg/f:DI 0 ax [orig:162 D.24974 ] [162])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [377])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3264 [0xfffffffffffff340])) [0 scratch_data S8 A64])) ge2fitman.cpp:356 89 {*movdi_internal}
     (nil))
(insn 779 778 780 93 (set (reg:SI 1 dx [379])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])) ge2fitman.cpp:356 90 {*movsi_internal}
     (nil))
(insn 780 779 781 93 (set (reg:DI 1 dx [orig:163 D.24968 ] [163])
        (sign_extend:DI (reg:SI 1 dx [379]))) ge2fitman.cpp:356 142 {*extendsidi2_rex64}
     (nil))
(insn 781 780 782 93 (parallel [
            (set (reg:DI 1 dx [orig:164 D.24968 ] [164])
                (ashift:DI (reg:DI 1 dx [orig:163 D.24968 ] [163])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:356 512 {*ashldi3_1}
     (nil))
(insn 782 781 783 93 (parallel [
            (set (reg/f:DI 1 dx [orig:165 D.24974 ] [165])
                (plus:DI (reg:DI 1 dx [orig:164 D.24968 ] [164])
                    (reg/f:DI 0 ax [orig:162 D.24974 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:356 218 {*adddi_1}
     (nil))
(insn 783 782 784 93 (set (reg:SI 0 ax [381])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:356 90 {*movsi_internal}
     (nil))
(insn 784 783 785 93 (set (reg:DI 0 ax [380])
        (sign_extend:DI (reg:SI 0 ax [381]))) ge2fitman.cpp:356 142 {*extendsidi2_rex64}
     (nil))
(insn 785 784 786 93 (set (reg/f:DI 0 ax [orig:166 D.24974 ] [166])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [380])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3296 [0xfffffffffffff320])) [0 switch_data[i_1].fl+0 S8 A64])) ge2fitman.cpp:356 89 {*movdi_internal}
     (nil))
(insn 786 785 787 93 (set (reg:SI 2 cx [382])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])) ge2fitman.cpp:356 90 {*movsi_internal}
     (nil))
(insn 787 786 788 93 (set (reg:DI 2 cx [orig:167 D.24968 ] [167])
        (sign_extend:DI (reg:SI 2 cx [382]))) ge2fitman.cpp:356 142 {*extendsidi2_rex64}
     (nil))
(insn 788 787 789 93 (parallel [
            (set (reg:DI 2 cx [orig:168 D.24968 ] [168])
                (ashift:DI (reg:DI 2 cx [orig:167 D.24968 ] [167])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:356 512 {*ashldi3_1}
     (nil))
(insn 789 788 790 93 (parallel [
            (set (reg/f:DI 0 ax [orig:169 D.24974 ] [169])
                (plus:DI (reg/f:DI 0 ax [orig:166 D.24974 ] [166])
                    (reg:DI 2 cx [orig:168 D.24968 ] [168])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:356 218 {*adddi_1}
     (nil))
(insn 790 789 791 93 (set (reg:SF 21 xmm0 [orig:170 D.24975 ] [170])
        (mem:SF (reg/f:DI 0 ax [orig:169 D.24974 ] [169]) [0 *_217+0 S4 A32])) ge2fitman.cpp:356 129 {*movsf_internal}
     (nil))
(insn 791 790 792 93 (set (mem:SF (reg/f:DI 1 dx [orig:165 D.24974 ] [165]) [0 *_213+0 S4 A32])
        (reg:SF 21 xmm0 [orig:170 D.24975 ] [170])) ge2fitman.cpp:356 129 {*movsf_internal}
     (nil))
(insn 792 791 1139 93 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:353 217 {*addsi_1}
     (nil))
(jump_insn 1139 792 1140 93 (set (pc)
        (label_ref 793)) ge2fitman.cpp:353 654 {jump}
     (nil)
 -> 793)
;;  succ:       92 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1140 1139 796)
;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 796 1140 797 94 44 "" [1 uses])
(note 797 796 798 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 1141 94 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:352 217 {*addsi_1}
     (nil))
(jump_insn 1141 798 1142 94 (set (pc)
        (label_ref 799)) ge2fitman.cpp:352 654 {jump}
     (nil)
 -> 799)
;;  succ:       90 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1142 1141 802)
;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 171
(code_label 802 1142 803 95 43 "" [1 uses])
(note 803 802 804 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 804 803 805 95 (set (reg:QI 0 ax [orig:171 D.24971 ] [171])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:367 93 {*movqi_internal}
     (nil))
(insn 805 804 806 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:171 D.24971 ] [171])
            (const_int 0 [0]))) ge2fitman.cpp:367 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 806 805 807 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 810)
            (pc))) ge2fitman.cpp:367 612 {*jcc_1}
     (nil)
 -> 810)
;;  succ:       96 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 807 806 808 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 808 807 809 96 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6e7885e630 *.LC9>)) ge2fitman.cpp:368 89 {*movdi_internal}
     (nil))
(call_insn 809 808 810 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:368 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       97 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       95
;;              96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 383 384 385 386 387
(code_label 810 809 811 97 47 "" [1 uses])
(note 811 810 812 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 812 811 813 97 (parallel [
            (set (reg:DI 5 di [383])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:370 218 {*adddi_1}
     (nil))
(insn 813 812 814 97 (parallel [
            (set (reg:DI 2 cx [384])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3280 [0xfffffffffffff330])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:370 218 {*adddi_1}
     (nil))
(insn 814 813 815 97 (parallel [
            (set (reg:DI 1 dx [385])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:370 218 {*adddi_1}
     (nil))
(insn 815 814 816 97 (parallel [
            (set (reg:DI 4 si [386])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:370 218 {*adddi_1}
     (nil))
(insn 816 815 817 97 (parallel [
            (set (reg:DI 0 ax [387])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3372 [0xfffffffffffff2d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:370 218 {*adddi_1}
     (nil))
(insn 817 816 821 97 (set (reg:DI 37 r8)
        (reg:DI 5 di [383])) ge2fitman.cpp:370 89 {*movdi_internal}
     (nil))
(insn 821 817 822 97 (set (reg:DI 5 di)
        (reg:DI 0 ax [387])) ge2fitman.cpp:370 89 {*movdi_internal}
     (nil))
(call_insn 822 821 823 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11pre_processPiP10PreprocessP12Procpar_infoPPfS5_") [flags 0x41]  <function_decl 0x7f6e787dc948 pre_process>) [0 pre_process S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:370 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 823 822 824 97 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6e784b0000 *.LC10>)) ge2fitman.cpp:373 89 {*movdi_internal}
     (nil))
(call_insn 824 823 825 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:373 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 825 824 852 97 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:376 90 {*movsi_internal}
     (nil))
;;  succ:       98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;;              102 [100.0%] 
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 172
(code_label 852 825 826 98 51 "" [1 uses])
(note 826 852 827 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 827 826 828 98 (set (reg:SI 0 ax [orig:172 D.24967 ] [172])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 fid+0 S4 A32])) ge2fitman.cpp:376 90 {*movsi_internal}
     (nil))
(insn 828 827 829 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
            (reg:SI 0 ax [orig:172 D.24967 ] [172]))) ge2fitman.cpp:376 7 {*cmpsi_1}
     (nil))
(jump_insn 829 828 830 98 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 855)
            (pc))) ge2fitman.cpp:376 612 {*jcc_1}
     (nil)
 -> 855)
;;  succ:       103
;;              99 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 830 829 831 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 846 99 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:378 90 {*movsi_internal}
     (nil))
;;  succ:       100 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;;              101 [100.0%] 
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173 174 175 388 389 390 391 392 393
(code_label 846 831 832 100 50 "" [1 uses])
(note 832 846 833 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 100 (set (reg:SI 0 ax [388])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])) ge2fitman.cpp:378 90 {*movsi_internal}
     (nil))
(insn 834 833 835 100 (set (reg:DI 0 ax [orig:173 D.24973 ] [173])
        (sign_extend:DI (reg:SI 0 ax [388]))) ge2fitman.cpp:378 142 {*extendsidi2_rex64}
     (nil))
(insn 835 834 836 100 (set (reg:SI 1 dx [390])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:378 90 {*movsi_internal}
     (nil))
(insn 836 835 837 100 (set (reg:DI 1 dx [389])
        (sign_extend:DI (reg:SI 1 dx [390]))) ge2fitman.cpp:378 142 {*extendsidi2_rex64}
     (nil))
(insn 837 836 838 100 (parallel [
            (set (reg:DI 1 dx [391])
                (ashift:DI (reg:DI 1 dx [389])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:378 512 {*ashldi3_1}
     (nil))
(insn 838 837 839 100 (parallel [
            (set (reg:DI 1 dx [392])
                (plus:DI (reg:DI 1 dx [391])
                    (reg/f:DI 6 bp)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:378 218 {*adddi_1}
     (nil))
(insn 839 838 840 100 (parallel [
            (set (reg/f:DI 1 dx [393])
                (plus:DI (reg:DI 1 dx [392])
                    (const_int -3104 [0xfffffffffffff3e0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:378 218 {*adddi_1}
     (nil))
(insn 840 839 841 100 (set (reg:DI 1 dx [orig:174 D.24973 ] [174])
        (mem/j:DI (reg/f:DI 1 dx [393]) [0 main_header[i_2].np.number+0 S8 A64])) ge2fitman.cpp:378 89 {*movdi_internal}
     (nil))
(insn 841 840 842 100 (parallel [
            (set (reg:DI 1 dx [orig:175 D.24973 ] [175])
                (ashift:DI (reg:DI 1 dx [orig:174 D.24973 ] [174])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:378 512 {*ashldi3_1}
     (nil))
(insn 842 841 843 100 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:173 D.24973 ] [173])
            (reg:DI 1 dx [orig:175 D.24973 ] [175]))) ge2fitman.cpp:378 8 {*cmpdi_1}
     (nil))
(jump_insn 843 842 844 100 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 849)
            (pc))) ge2fitman.cpp:378 612 {*jcc_1}
     (nil)
 -> 849)
;;  succ:       102
;;              101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 844 843 845 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 1143 101 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3356 [0xfffffffffffff2e4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:378 217 {*addsi_1}
     (nil))
(jump_insn 1143 845 1144 101 (set (pc)
        (label_ref 846)) ge2fitman.cpp:378 654 {jump}
     (nil)
 -> 846)
;;  succ:       100 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1144 1143 849)
;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 849 1144 850 102 49 "" [1 uses])
(note 850 849 851 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 851 850 1145 102 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:376 217 {*addsi_1}
     (nil))
(jump_insn 1145 851 1146 102 (set (pc)
        (label_ref 852)) ge2fitman.cpp:376 654 {jump}
     (nil)
 -> 852)
;;  succ:       98 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1146 1145 855)
;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 176
(code_label 855 1146 856 103 48 "" [1 uses])
(note 856 855 857 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 857 856 858 103 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f6e784b0090 *.LC11>)) ge2fitman.cpp:399 89 {*movdi_internal}
     (nil))
(call_insn 858 857 859 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:399 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 859 858 860 103 (set (reg:QI 0 ax [orig:176 D.24971 ] [176])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:402 93 {*movqi_internal}
     (nil))
(insn 860 859 861 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:176 D.24971 ] [176])
            (const_int 0 [0]))) ge2fitman.cpp:402 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 861 860 862 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 865)
            (pc))) ge2fitman.cpp:402 612 {*jcc_1}
     (nil)
 -> 865)
;;  succ:       104 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 862 861 863 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 863 862 864 104 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f6e784b0120 *.LC12>)) ge2fitman.cpp:403 89 {*movdi_internal}
     (nil))
(call_insn 864 863 865 104 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:403 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103
;;              104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 177
(code_label 865 864 866 105 52 "" [1 uses])
(note 866 865 867 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 867 866 868 105 (set (reg:QI 0 ax [orig:177 D.24971 ] [177])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:407 93 {*movqi_internal}
     (nil))
(insn 868 867 869 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:177 D.24971 ] [177])
            (const_int 0 [0]))) ge2fitman.cpp:407 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 869 868 870 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 873)
            (pc))) ge2fitman.cpp:407 612 {*jcc_1}
     (nil)
 -> 873)
;;  succ:       106 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 870 869 871 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 871 870 872 106 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f6e784b01b0 *.LC13>)) ge2fitman.cpp:408 89 {*movdi_internal}
     (nil))
(call_insn 872 871 873 106 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:408 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105
;;              106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 178
(code_label 873 872 874 107 53 "" [1 uses])
(note 874 873 875 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 875 874 876 107 (set (reg:SI 0 ax [orig:178 D.24967 ] [178])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])) ge2fitman.cpp:414 90 {*movsi_internal}
     (nil))
(insn 876 875 877 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:178 D.24967 ] [178])
            (const_int 0 [0]))) ge2fitman.cpp:414 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 877 876 878 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 882)
            (pc))) ge2fitman.cpp:414 612 {*jcc_1}
     (nil)
 -> 882)
;;  succ:       109
;;              108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 179
(note 878 877 879 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 108 (set (reg:SI 0 ax [orig:179 D.24967 ] [179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])) ge2fitman.cpp:414 90 {*movsi_internal}
     (nil))
(insn 880 879 881 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:179 D.24967 ] [179])
            (const_int 1 [0x1]))) ge2fitman.cpp:414 7 {*cmpsi_1}
     (nil))
(jump_insn 881 880 882 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 911)
            (pc))) ge2fitman.cpp:414 612 {*jcc_1}
     (nil)
 -> 911)
;;  succ:       109 (FALLTHRU)
;;              111
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107
;;              108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 180 181 394 395 396 397 398 399
(code_label 882 881 883 109 54 "" [1 uses])
(note 883 882 884 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 109 (set (reg/f:DI 0 ax [orig:180 D.24974 ] [180])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3280 [0xfffffffffffff330])) [0 out_data+0 S8 A64])) ge2fitman.cpp:416 89 {*movdi_internal}
     (nil))
(insn 885 884 886 109 (parallel [
            (set (reg:DI 37 r8 [394])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (nil))
(insn 886 885 887 109 (parallel [
            (set (reg:DI 2 cx [395])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (nil))
(insn 887 886 888 109 (parallel [
            (set (reg:DI 1 dx [396])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (nil))
(insn 888 887 889 109 (parallel [
            (set (reg:DI 4 si [397])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (nil))
(insn 889 888 890 109 (parallel [
            (set (reg:DI 5 di [398])
                (plus:DI (reg:DI 4 si [397])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (nil))
(insn 890 889 891 109 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 891 890 892 109 (parallel [
            (set (reg:DI 4 si [399])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (nil))
(insn 892 891 893 109 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 4 si [399])) ge2fitman.cpp:417 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 893 892 894 109 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [394])) ge2fitman.cpp:417 89 {*movdi_internal}
     (nil))
(insn 894 893 897 109 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) ge2fitman.cpp:417 90 {*movsi_internal}
     (nil))
(insn 897 894 899 109 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:180 D.24974 ] [180])) ge2fitman.cpp:417 89 {*movdi_internal}
     (nil))
(call_insn 899 897 900 109 (call (mem:QI (symbol_ref:DI ("_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess") [flags 0x41]  <function_decl 0x7f6e787dc6c0 fwrite_asc>) [0 fwrite_asc S1 A8])
        (const_int 16 [0x10])) ge2fitman.cpp:417 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 900 899 901 109 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:417 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 901 900 902 109 (set (reg:QI 0 ax [orig:181 D.24971 ] [181])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:418 93 {*movqi_internal}
     (nil))
(insn 902 901 903 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:181 D.24971 ] [181])
            (const_int 0 [0]))) ge2fitman.cpp:418 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 903 902 904 109 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 911)
            (pc))) ge2fitman.cpp:418 612 {*jcc_1}
     (nil)
 -> 911)
;;  succ:       110 (FALLTHRU)
;;              111
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 400 401
(note 904 903 905 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 906 110 (parallel [
            (set (reg:DI 0 ax [400])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 906 905 907 110 (parallel [
            (set (reg:DI 0 ax [401])
                (plus:DI (reg:DI 0 ax [400])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 907 906 908 110 (set (reg:DI 4 si)
        (reg:DI 0 ax [401])) ge2fitman.cpp:419 89 {*movdi_internal}
     (nil))
(insn 908 907 909 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f6e784b0240 *.LC14>)) ge2fitman.cpp:419 89 {*movdi_internal}
     (nil))
(insn 909 908 910 110 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman.cpp:419 93 {*movqi_internal}
     (nil))
(call_insn 910 909 911 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6e79c535e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:419 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       111 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108
;;              109
;;              110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 182
(code_label 911 910 912 111 55 "" [2 uses])
(note 912 911 913 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 913 912 914 111 (set (reg:SI 0 ax [orig:182 D.24967 ] [182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])) ge2fitman.cpp:422 90 {*movsi_internal}
     (nil))
(insn 914 913 915 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:182 D.24967 ] [182])
            (const_int 0 [0]))) ge2fitman.cpp:422 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 915 914 916 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 920)
            (pc))) ge2fitman.cpp:422 612 {*jcc_1}
     (nil)
 -> 920)
;;  succ:       113
;;              112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 183
(note 916 915 917 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 917 916 918 112 (set (reg:SI 0 ax [orig:183 D.24967 ] [183])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 s_u_out+0 S4 A32])) ge2fitman.cpp:422 90 {*movsi_internal}
     (nil))
(insn 918 917 919 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:183 D.24967 ] [183])
            (const_int 2 [0x2]))) ge2fitman.cpp:422 7 {*cmpsi_1}
     (nil))
(jump_insn 919 918 920 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 953)
            (pc))) ge2fitman.cpp:422 612 {*jcc_1}
     (nil)
 -> 953)
;;  succ:       113 (FALLTHRU)
;;              115
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111
;;              112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 184 185 402 403 404 405 406 407 408 409 410 411
(code_label 920 919 921 113 56 "" [1 uses])
(note 921 920 922 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 922 921 923 113 (set (reg/f:DI 0 ax [orig:184 D.24974 ] [184])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3272 [0xfffffffffffff338])) [0 out_data+8 S8 A64])) ge2fitman.cpp:424 89 {*movdi_internal}
     (nil))
(insn 923 922 924 113 (parallel [
            (set (reg:DI 1 dx [402])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 924 923 925 113 (parallel [
            (set (reg:DI 37 r8 [403])
                (plus:DI (reg:DI 1 dx [402])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 925 924 926 113 (parallel [
            (set (reg:DI 1 dx [404])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 926 925 927 113 (parallel [
            (set (reg:DI 2 cx [405])
                (plus:DI (reg:DI 1 dx [404])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 927 926 928 113 (parallel [
            (set (reg:DI 1 dx [406])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 928 927 929 113 (parallel [
            (set (reg:DI 1 dx [407])
                (plus:DI (reg:DI 1 dx [406])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 929 928 930 113 (parallel [
            (set (reg:DI 4 si [408])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 930 929 931 113 (parallel [
            (set (reg:DI 5 di [409])
                (plus:DI (reg:DI 4 si [408])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 931 930 932 113 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 932 931 933 113 (parallel [
            (set (reg:DI 4 si [410])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 933 932 934 113 (parallel [
            (set (reg:DI 4 si [411])
                (plus:DI (reg:DI 4 si [410])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (nil))
(insn 934 933 935 113 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 4 si [411])) ge2fitman.cpp:425 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 935 934 936 113 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [403])) ge2fitman.cpp:425 89 {*movdi_internal}
     (nil))
(insn 936 935 939 113 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) ge2fitman.cpp:425 90 {*movsi_internal}
     (nil))
(insn 939 936 941 113 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:184 D.24974 ] [184])) ge2fitman.cpp:425 89 {*movdi_internal}
     (nil))
(call_insn 941 939 942 113 (call (mem:QI (symbol_ref:DI ("_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess") [flags 0x41]  <function_decl 0x7f6e787dc6c0 fwrite_asc>) [0 fwrite_asc S1 A8])
        (const_int 16 [0x10])) ge2fitman.cpp:425 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 942 941 943 113 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:425 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 943 942 944 113 (set (reg:QI 0 ax [orig:185 D.24971 ] [185])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3374 [0xfffffffffffff2d2])) [0 verbose+0 S1 A16])) ge2fitman.cpp:426 93 {*movqi_internal}
     (nil))
(insn 944 943 945 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:185 D.24971 ] [185])
            (const_int 0 [0]))) ge2fitman.cpp:426 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 945 944 946 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 953)
            (pc))) ge2fitman.cpp:426 612 {*jcc_1}
     (nil)
 -> 953)
;;  succ:       114 (FALLTHRU)
;;              115
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 412 413
(note 946 945 947 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 114 (parallel [
            (set (reg:DI 0 ax [412])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:427 218 {*adddi_1}
     (nil))
(insn 948 947 949 114 (parallel [
            (set (reg:DI 0 ax [413])
                (plus:DI (reg:DI 0 ax [412])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:427 218 {*adddi_1}
     (nil))
(insn 949 948 950 114 (set (reg:DI 4 si)
        (reg:DI 0 ax [413])) ge2fitman.cpp:427 89 {*movdi_internal}
     (nil))
(insn 950 949 951 114 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f6e784b02d0 *.LC15>)) ge2fitman.cpp:427 89 {*movdi_internal}
     (nil))
(insn 951 950 952 114 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman.cpp:427 93 {*movqi_internal}
     (nil))
(call_insn 952 951 953 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6e79c535e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:427 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       115 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112
;;              113
;;              114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 953 952 954 115 57 "" [2 uses])
(note 954 953 955 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 115 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f6e784b0360 *.LC16>)) ge2fitman.cpp:431 89 {*movdi_internal}
     (nil))
(call_insn 956 955 957 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6e79c54000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:431 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 957 956 987 115 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman.cpp:434 90 {*movsi_internal}
     (nil))
;;  succ:       116 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;;              120 [100.0%] 
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 987 957 958 116 60 "" [1 uses])
(note 958 987 959 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 959 958 960 116 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman.cpp:434 7 {*cmpsi_1}
     (nil))
(jump_insn 960 959 961 116 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 990)
            (pc))) ge2fitman.cpp:434 612 {*jcc_1}
     (nil)
 -> 990)
;;  succ:       121
;;              117 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 186 414 415
(note 961 960 962 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 962 961 963 117 (set (reg:SI 0 ax [415])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:435 90 {*movsi_internal}
     (nil))
(insn 963 962 964 117 (set (reg:DI 0 ax [414])
        (sign_extend:DI (reg:SI 0 ax [415]))) ge2fitman.cpp:435 142 {*extendsidi2_rex64}
     (nil))
(insn 964 963 965 117 (set (reg/f:DI 0 ax [orig:186 D.24972 ] [186])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [414])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3248 [0xfffffffffffff350])) [0 in_file S8 A64])) ge2fitman.cpp:435 89 {*movdi_internal}
     (nil))
(insn 965 964 966 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:186 D.24972 ] [186])
            (const_int 0 [0]))) ge2fitman.cpp:435 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 966 965 967 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 984)
            (pc))) ge2fitman.cpp:435 612 {*jcc_1}
     (nil)
 -> 984)
;;  succ:       118 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 187 188 416 417 418 419 420
(note 967 966 968 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 968 967 969 118 (set (reg:SI 0 ax [417])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])) ge2fitman.cpp:436 90 {*movsi_internal}
     (nil))
(insn 969 968 970 118 (set (reg:DI 0 ax [416])
        (sign_extend:DI (reg:SI 0 ax [417]))) ge2fitman.cpp:436 142 {*extendsidi2_rex64}
     (nil))
(insn 970 969 971 118 (set (reg/f:DI 0 ax [orig:187 D.24972 ] [187])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [416])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3248 [0xfffffffffffff350])) [0 in_file S8 A64])) ge2fitman.cpp:436 89 {*movdi_internal}
     (nil))
(insn 971 970 972 118 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:187 D.24972 ] [187])) ge2fitman.cpp:436 89 {*movdi_internal}
     (nil))
(call_insn 972 971 973 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f6e79a831b0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:436 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 973 972 974 118 (parallel [
            (set (reg:DI 0 ax [418])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:438 218 {*adddi_1}
     (nil))
(insn 974 973 975 118 (parallel [
            (set (reg:DI 1 dx [419])
                (plus:DI (reg:DI 0 ax [418])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:438 218 {*adddi_1}
     (nil))
(insn 975 974 976 118 (parallel [
            (set (reg:DI 0 ax [420])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:438 218 {*adddi_1}
     (nil))
(insn 976 975 977 118 (set (reg:DI 4 si)
        (reg:DI 1 dx [419])) ge2fitman.cpp:438 89 {*movdi_internal}
     (nil))
(insn 977 976 978 118 (set (reg:DI 5 di)
        (reg:DI 0 ax [420])) ge2fitman.cpp:438 89 {*movdi_internal}
     (nil))
(call_insn/i 978 977 979 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6e79c48360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman.cpp:438 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 979 978 980 118 (set (reg:SI 0 ax [orig:188 D.24967 ] [188])
        (reg:SI 0 ax)) ge2fitman.cpp:438 90 {*movsi_internal}
     (nil))
(insn 980 979 981 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:188 D.24967 ] [188])
            (const_int 0 [0]))) ge2fitman.cpp:438 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 981 980 982 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 984)
            (pc))) ge2fitman.cpp:438 612 {*jcc_1}
     (nil)
 -> 984)
;;  succ:       119 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 982 981 983 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 983 982 984 119 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 in_file+8 S8 A64])
        (const_int 0 [0])) ge2fitman.cpp:439 89 {*movdi_internal}
     (nil))
;;  succ:       120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117
;;              119 (FALLTHRU)
;;              118
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 984 983 985 120 59 "" [2 uses])
(note 985 984 986 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 1147 120 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3360 [0xfffffffffffff2e0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman.cpp:434 217 {*addsi_1}
     (nil))
(jump_insn 1147 986 1148 120 (set (pc)
        (label_ref 987)) ge2fitman.cpp:434 654 {jump}
     (nil)
 -> 987)
;;  succ:       116 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1148 1147 990)
;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 189
(code_label 990 1148 991 121 58 "" [1 uses])
(note 991 990 992 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 993 121 (set (reg/f:DI 0 ax [orig:189 D.24976 ] [189])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3312 [0xfffffffffffff310])) [0 in_data[0].lo+0 S8 A64])) ge2fitman.cpp:444 89 {*movdi_internal}
     (nil))
(insn 993 992 994 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:189 D.24976 ] [189])
            (const_int 0 [0]))) ge2fitman.cpp:444 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 994 993 995 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 999)
            (pc))) ge2fitman.cpp:444 612 {*jcc_1}
     (nil)
 -> 999)
;;  succ:       122 (FALLTHRU)
;;              123
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 190
(note 995 994 996 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 122 (set (reg/f:DI 0 ax [orig:190 D.24976 ] [190])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3312 [0xfffffffffffff310])) [0 in_data[0].lo+0 S8 A64])) ge2fitman.cpp:445 89 {*movdi_internal}
     (nil))
(insn 997 996 998 122 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:190 D.24976 ] [190])) ge2fitman.cpp:445 89 {*movdi_internal}
     (nil))
(call_insn 998 997 999 122 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:445 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       123 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121
;;              122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 191
(code_label 999 998 1000 123 61 "" [1 uses])
(note 1000 999 1001 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1001 1000 1002 123 (set (reg/f:DI 0 ax [orig:191 D.24976 ] [191])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3296 [0xfffffffffffff320])) [0 switch_data[0].lo+0 S8 A64])) ge2fitman.cpp:446 89 {*movdi_internal}
     (nil))
(insn 1002 1001 1003 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:191 D.24976 ] [191])
            (const_int 0 [0]))) ge2fitman.cpp:446 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1003 1002 1004 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1008)
            (pc))) ge2fitman.cpp:446 612 {*jcc_1}
     (nil)
 -> 1008)
;;  succ:       124 (FALLTHRU)
;;              125
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 192
(note 1004 1003 1005 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1005 1004 1006 124 (set (reg/f:DI 0 ax [orig:192 D.24976 ] [192])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3296 [0xfffffffffffff320])) [0 switch_data[0].lo+0 S8 A64])) ge2fitman.cpp:447 89 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 124 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:192 D.24976 ] [192])) ge2fitman.cpp:447 89 {*movdi_internal}
     (nil))
(call_insn 1007 1006 1008 124 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:447 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       125 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123
;;              124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 193
(code_label 1008 1007 1009 125 62 "" [1 uses])
(note 1009 1008 1010 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1010 1009 1011 125 (set (reg/f:DI 0 ax [orig:193 D.24974 ] [193])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3280 [0xfffffffffffff330])) [0 out_data+0 S8 A64])) ge2fitman.cpp:448 89 {*movdi_internal}
     (nil))
(insn 1011 1010 1012 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:193 D.24974 ] [193])
            (const_int 0 [0]))) ge2fitman.cpp:448 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1012 1011 1013 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1017)
            (pc))) ge2fitman.cpp:448 612 {*jcc_1}
     (nil)
 -> 1017)
;;  succ:       126 (FALLTHRU)
;;              127
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 194
(note 1013 1012 1014 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1015 126 (set (reg/f:DI 0 ax [orig:194 D.24974 ] [194])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3280 [0xfffffffffffff330])) [0 out_data+0 S8 A64])) ge2fitman.cpp:449 89 {*movdi_internal}
     (nil))
(insn 1015 1014 1016 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:194 D.24974 ] [194])) ge2fitman.cpp:449 89 {*movdi_internal}
     (nil))
(call_insn 1016 1015 1017 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:449 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       127 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125
;;              126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 195
(code_label 1017 1016 1018 127 63 "" [1 uses])
(note 1018 1017 1019 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1019 1018 1020 127 (set (reg/f:DI 0 ax [orig:195 D.24974 ] [195])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 scratch_data+0 S8 A64])) ge2fitman.cpp:450 89 {*movdi_internal}
     (nil))
(insn 1020 1019 1021 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:195 D.24974 ] [195])
            (const_int 0 [0]))) ge2fitman.cpp:450 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1021 1020 1022 127 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1026)
            (pc))) ge2fitman.cpp:450 612 {*jcc_1}
     (nil)
 -> 1026)
;;  succ:       128 (FALLTHRU)
;;              129
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 196
(note 1022 1021 1023 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1023 1022 1024 128 (set (reg/f:DI 0 ax [orig:196 D.24974 ] [196])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 scratch_data+0 S8 A64])) ge2fitman.cpp:451 89 {*movdi_internal}
     (nil))
(insn 1024 1023 1025 128 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:196 D.24974 ] [196])) ge2fitman.cpp:451 89 {*movdi_internal}
     (nil))
(call_insn 1025 1024 1026 128 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:451 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       129 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127
;;              128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 197
(code_label 1026 1025 1027 129 64 "" [1 uses])
(note 1027 1026 1028 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1028 1027 1029 129 (set (reg:SI 0 ax [orig:197 D.24967 ] [197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 fid+0 S4 A32])) ge2fitman.cpp:453 90 {*movsi_internal}
     (nil))
(insn 1029 1028 1030 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:197 D.24967 ] [197])
            (const_int 1 [0x1]))) ge2fitman.cpp:453 7 {*cmpsi_1}
     (nil))
(jump_insn 1030 1029 1031 129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1066)
            (pc))) ge2fitman.cpp:453 612 {*jcc_1}
     (nil)
 -> 1066)
;;  succ:       130 (FALLTHRU)
;;              138
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 198
(note 1031 1030 1032 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1032 1031 1033 130 (set (reg/f:DI 0 ax [orig:198 D.24976 ] [198])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3304 [0xfffffffffffff318])) [0 in_data[1].lo+0 S8 A64])) ge2fitman.cpp:454 89 {*movdi_internal}
     (nil))
(insn 1033 1032 1034 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:198 D.24976 ] [198])
            (const_int 0 [0]))) ge2fitman.cpp:454 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1034 1033 1035 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1039)
            (pc))) ge2fitman.cpp:454 612 {*jcc_1}
     (nil)
 -> 1039)
;;  succ:       131 (FALLTHRU)
;;              132
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 199
(note 1035 1034 1036 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1036 1035 1037 131 (set (reg/f:DI 0 ax [orig:199 D.24976 ] [199])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3304 [0xfffffffffffff318])) [0 in_data[1].lo+0 S8 A64])) ge2fitman.cpp:455 89 {*movdi_internal}
     (nil))
(insn 1037 1036 1038 131 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:199 D.24976 ] [199])) ge2fitman.cpp:455 89 {*movdi_internal}
     (nil))
(call_insn 1038 1037 1039 131 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:455 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       132 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       130
;;              131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 200
(code_label 1039 1038 1040 132 66 "" [1 uses])
(note 1040 1039 1041 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1041 1040 1042 132 (set (reg/f:DI 0 ax [orig:200 D.24976 ] [200])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3288 [0xfffffffffffff328])) [0 switch_data[1].lo+0 S8 A64])) ge2fitman.cpp:456 89 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:200 D.24976 ] [200])
            (const_int 0 [0]))) ge2fitman.cpp:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1043 1042 1044 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1048)
            (pc))) ge2fitman.cpp:456 612 {*jcc_1}
     (nil)
 -> 1048)
;;  succ:       133 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 201
(note 1044 1043 1045 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1045 1044 1046 133 (set (reg/f:DI 0 ax [orig:201 D.24976 ] [201])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3288 [0xfffffffffffff328])) [0 switch_data[1].lo+0 S8 A64])) ge2fitman.cpp:457 89 {*movdi_internal}
     (nil))
(insn 1046 1045 1047 133 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:201 D.24976 ] [201])) ge2fitman.cpp:457 89 {*movdi_internal}
     (nil))
(call_insn 1047 1046 1048 133 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:457 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132
;;              133 (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 202
(code_label 1048 1047 1049 134 67 "" [1 uses])
(note 1049 1048 1050 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1050 1049 1051 134 (set (reg/f:DI 0 ax [orig:202 D.24974 ] [202])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3272 [0xfffffffffffff338])) [0 out_data+8 S8 A64])) ge2fitman.cpp:458 89 {*movdi_internal}
     (nil))
(insn 1051 1050 1052 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:202 D.24974 ] [202])
            (const_int 0 [0]))) ge2fitman.cpp:458 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1052 1051 1053 134 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1057)
            (pc))) ge2fitman.cpp:458 612 {*jcc_1}
     (nil)
 -> 1057)
;;  succ:       135 (FALLTHRU)
;;              136
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 203
(note 1053 1052 1054 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1055 135 (set (reg/f:DI 0 ax [orig:203 D.24974 ] [203])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3272 [0xfffffffffffff338])) [0 out_data+8 S8 A64])) ge2fitman.cpp:459 89 {*movdi_internal}
     (nil))
(insn 1055 1054 1056 135 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:203 D.24974 ] [203])) ge2fitman.cpp:459 89 {*movdi_internal}
     (nil))
(call_insn 1056 1055 1057 135 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:459 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       136 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134
;;              135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 204
(code_label 1057 1056 1058 136 68 "" [1 uses])
(note 1058 1057 1059 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1059 1058 1060 136 (set (reg/f:DI 0 ax [orig:204 D.24974 ] [204])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 scratch_data+8 S8 A64])) ge2fitman.cpp:460 89 {*movdi_internal}
     (nil))
(insn 1060 1059 1061 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:204 D.24974 ] [204])
            (const_int 0 [0]))) ge2fitman.cpp:460 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1061 1060 1062 136 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1066)
            (pc))) ge2fitman.cpp:460 612 {*jcc_1}
     (nil)
 -> 1066)
;;  succ:       137 (FALLTHRU)
;;              138
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 205
(note 1062 1061 1063 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1063 1062 1064 137 (set (reg/f:DI 0 ax [orig:205 D.24974 ] [205])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 scratch_data+8 S8 A64])) ge2fitman.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1064 1063 1065 137 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:205 D.24974 ] [205])) ge2fitman.cpp:461 89 {*movdi_internal}
     (nil))
(call_insn 1065 1064 1066 137 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6e79c741b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:461 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       138 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129
;;              137 (FALLTHRU)
;;              136
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 206 207
(code_label 1066 1065 1067 138 65 "" [2 uses])
(note 1067 1066 1068 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1068 1067 1071 138 (set (reg:SI 0 ax [orig:206 D.24967 ] [206])
        (const_int 0 [0])) ge2fitman.cpp:464 90 {*movsi_internal}
     (nil))
(insn 1071 1068 1075 138 (set (reg:SI 0 ax [orig:207 <retval> ] [207])
        (reg:SI 0 ax [orig:206 D.24967 ] [206])) 90 {*movsi_internal}
     (nil))
(insn 1075 1071 1076 138 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:207 <retval> ] [207])) ge2fitman.cpp:466 90 {*movsi_internal}
     (nil))
(insn 1076 1075 1077 138 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.24977+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 4 si [423]))
        ]) ge2fitman.cpp:466 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1077 1076 1083 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1080)
            (pc))) ge2fitman.cpp:466 612 {*jcc_1}
     (nil)
 -> 1080)
;;  succ:       140
;;              139 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1083 1077 1078 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(call_insn 1078 1083 1079 139 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f6e7886eca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:466 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1079 1078 1080)
;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1080 1079 1084 140 70 "" [1 uses])
(note 1084 1080 1081 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1084 1149 140 (use (reg/i:SI 0 ax)) ge2fitman.cpp:466 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1149 1081 0 NOTE_INSN_DELETED)

;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1022, decl_uid=24622, cgraph_uid=227, symbol_order=254)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}

********** Pseudo live ranges #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,10u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 195{168d,27u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman.cpp:466 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman.cpp:466 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman.cpp:466 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman.cpp:466 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman.cpp:466 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman.cpp:466 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f6e787db000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f6e78b4b870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f6e78824240 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f6e787db000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f6e78b4ba20 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f6e7881e288 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 73 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) ge2fitman.cpp:466 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 71 "" [0 uses])
(note 22 21 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 26 22 0 NOTE_INSN_DELETED)

;; Function (static initializers for ge2fitman.cpp) (_GLOBAL__sub_I_main, funcdef_no=1023, decl_uid=24628, cgraph_uid=228, symbol_order=358)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rBwBz {*call}

********** Pseudo live ranges #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for ge2fitman.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 100{92d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman.cpp:466 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman.cpp:466 90 {*movsi_internal}
     (nil))
(call_insn 7 6 10 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f6e7881e1b0 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman.cpp:466 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 10 7 0 NOTE_INSN_DELETED)
