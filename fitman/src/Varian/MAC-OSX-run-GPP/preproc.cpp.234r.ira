
;; Function int pre_process(int*, Preprocess*, Procpar_info*, float**, float**) (_Z11pre_processPiP10PreprocessP12Procpar_infoPPfS5_, funcdef_no=2, decl_uid=5453, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 47 n_edges 69 count 47 (    1)
Building IRA IR
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 295.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 357.
verify found no changes in insn with uid = 380.
verify found no changes in insn with uid = 403.
verify found no changes in insn with uid = 440.
verify found no changes in insn with uid = 491.
verify found no changes in insn with uid = 526.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r387: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r387,l0) best DREG, allocno GENERAL_REGS
    r386: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r386,l0) best CREG, allocno GENERAL_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r378: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r378,l0) best DREG, allocno GENERAL_REGS
    r377: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r377,l0) best CREG, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r372: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a31 (r372,l0) best SSE_REGS, allocno SSE_REGS
    r371: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r371,l0) best SSE_REGS, allocno SSE_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r369,l0) best SSE_REGS, allocno SSE_REGS
    r368: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r368,l0) best SSE_REGS, allocno SSE_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r367,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r364,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r357,l0) best CREG, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r351,l0) best CREG, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r345,l0) best DREG, allocno GENERAL_REGS
    r344: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r344,l0) best CREG, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r322,l0) best SIREG, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r315,l0) best SSE_REGS, allocno SSE_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a170 (r306,l0) best SSE_REGS, allocno SSE_REGS
    r305: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a171 (r305,l0) best SSE_REGS, allocno SSE_REGS
    r304: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a169 (r304,l0) best SSE_REGS, allocno SSE_REGS
    r303: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r303,l0) best SSE_REGS, allocno SSE_REGS
    r302: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r302,l0) best SSE_REGS, allocno SSE_REGS
    r301: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a176 (r301,l0) best SSE_REGS, allocno SSE_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a192 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a193 (r291,l0) best SSE_REGS, allocno SSE_REGS
    r290: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a191 (r290,l0) best SSE_REGS, allocno SSE_REGS
    r289: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a194 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a195 (r288,l0) best SSE_REGS, allocno SSE_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a204 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a205 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a206 (r281,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a260 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a261 (r267,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a291 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r257,l0) best AREG, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r255,l0) best DIREG, allocno GENERAL_REGS
    r254: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r254,l0) best SIREG, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r247,l0) best DIREG, allocno GENERAL_REGS
    r246: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r246,l0) best SIREG, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a32 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r239,l0) best SSE_REGS, allocno SSE_REGS
    r238: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r238,l0) best DIREG, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r234,l0) best SIREG, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r226,l0) best DIREG, allocno GENERAL_REGS
    r225: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r225,l0) best SIREG, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r223,l0) best DREG, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r220,l0) best DIREG, allocno GENERAL_REGS
    r219: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r219,l0) best SIREG, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r217,l0) best DREG, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r214,l0) best DIREG, allocno GENERAL_REGS
    r213: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r213,l0) best SIREG, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r206,l0) best SIREG, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r202,l0) best DREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r191,l0) best SIREG, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r184,l0) best DIREG, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r180,l0) best DREG, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a175 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a177 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a153 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a155 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a207 (r157,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a208 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a210 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a212 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a211 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a224 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a209 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a236 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a238 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a237 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a249 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a262 (r116,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a263 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a265 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a267 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a266 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a275 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a264 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a283 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a285 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a284 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a292 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a293 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a13(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a14(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a15(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a16(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a19(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r372,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a32(r241,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a33(r371,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a34(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r369,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a37(r239,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a38(r368,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a39(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a40(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a55(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a56(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a57(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a58(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a61(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a72(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a73(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a76(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a78(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a79(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a84(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a85(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a87(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a90(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a91(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a92(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a93(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a94(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a97(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a99(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a100(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a109(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a110(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a111(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a112(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a113(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a115(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a116(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a117(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a118(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a119(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a120(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a121(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a124(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a125(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a126(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a128(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a129(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a130(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a131(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a134(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a135(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a136(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a137(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a139(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a140(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a141(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a147(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a148(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a149(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a150(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a151(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a153(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a154(r315,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a155(r168,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a156(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a157(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a158(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a159(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a160(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a161(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a162(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a163(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a164(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a165(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a166(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a167(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a168(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a169(r304,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a170(r306,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a171(r305,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a172(r303,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a173(r302,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a174(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a175(r177,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a176(r301,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a177(r176,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a178(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a179(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a180(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a181(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a182(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a183(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a184(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a185(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a186(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a187(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a188(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a189(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a190(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a191(r290,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a192(r292,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a193(r291,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a194(r289,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a195(r288,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a196(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a197(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a198(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a199(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a200(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a201(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a202(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a203(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a204(r283,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a205(r282,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a206(r281,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a207(r157,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a208(r156,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a209(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a210(r155,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a211(r145,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a212(r154,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a213(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a214(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a215(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a216(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a217(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a218(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a219(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a220(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a221(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a222(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a223(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a224(r144,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a225(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a226(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a227(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a228(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a229(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a230(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a231(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a232(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a233(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a234(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a235(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a236(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a237(r125,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a238(r133,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a239(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a240(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a241(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a242(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a243(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a244(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a245(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a246(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a247(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a248(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a249(r124,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a250(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a251(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a252(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a253(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a254(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a255(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a256(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a257(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a258(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a259(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a260(r268,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a261(r267,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a262(r116,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a263(r115,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a264(r100,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a265(r114,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a266(r107,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a267(r113,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a268(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a269(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a270(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a271(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a272(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a273(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a274(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a275(r106,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a276(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a277(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a278(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a279(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a280(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a281(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a282(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a283(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a284(r93,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a285(r98,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a286(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a287(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a288(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a289(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a290(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a291(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a292(r92,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a293(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a294(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a295(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a296(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a297(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a298(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a299(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a300(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 543(l0): point = 0
   Insn 542(l0): point = 2
   Insn 538(l0): point = 4
   Insn 535(l0): point = 6
   Insn 499(l0): point = 9
   Insn 498(l0): point = 11
   Insn 497(l0): point = 13
   Insn 496(l0): point = 15
   Insn 571(l0): point = 18
   Insn 529(l0): point = 20
   Insn 513(l0): point = 23
   Insn 512(l0): point = 25
   Insn 511(l0): point = 27
   Insn 510(l0): point = 29
   Insn 509(l0): point = 31
   Insn 508(l0): point = 33
   Insn 507(l0): point = 35
   Insn 506(l0): point = 37
   Insn 505(l0): point = 39
   Insn 504(l0): point = 41
   Insn 503(l0): point = 43
   Insn 502(l0): point = 45
   Insn 501(l0): point = 47
   Insn 526(l0): point = 50
   Insn 525(l0): point = 52
   Insn 524(l0): point = 54
   Insn 523(l0): point = 56
   Insn 522(l0): point = 58
   Insn 521(l0): point = 60
   Insn 520(l0): point = 62
   Insn 519(l0): point = 64
   Insn 518(l0): point = 66
   Insn 517(l0): point = 68
   Insn 516(l0): point = 70
   Insn 515(l0): point = 72
   Insn 494(l0): point = 75
   Insn 491(l0): point = 78
   Insn 490(l0): point = 80
   Insn 489(l0): point = 82
   Insn 488(l0): point = 84
   Insn 487(l0): point = 86
   Insn 486(l0): point = 88
   Insn 485(l0): point = 90
   Insn 484(l0): point = 92
   Insn 483(l0): point = 94
   Insn 482(l0): point = 96
   Insn 481(l0): point = 98
   Insn 480(l0): point = 100
   Insn 477(l0): point = 103
   Insn 476(l0): point = 105
   Insn 475(l0): point = 107
   Insn 474(l0): point = 109
   Insn 473(l0): point = 111
   Insn 471(l0): point = 114
   Insn 470(l0): point = 116
   Insn 469(l0): point = 118
   Insn 468(l0): point = 120
   Insn 466(l0): point = 123
   Insn 465(l0): point = 125
   Insn 464(l0): point = 127
   Insn 463(l0): point = 130
   Insn 462(l0): point = 132
   Insn 461(l0): point = 134
   Insn 460(l0): point = 136
   Insn 459(l0): point = 138
   Insn 458(l0): point = 140
   Insn 456(l0): point = 143
   Insn 455(l0): point = 145
   Insn 454(l0): point = 147
   Insn 453(l0): point = 150
   Insn 452(l0): point = 152
   Insn 451(l0): point = 154
   Insn 450(l0): point = 156
   Insn 449(l0): point = 158
   Insn 411(l0): point = 161
   Insn 410(l0): point = 163
   Insn 409(l0): point = 165
   Insn 408(l0): point = 167
   Insn 569(l0): point = 170
   Insn 443(l0): point = 172
   Insn 425(l0): point = 175
   Insn 424(l0): point = 177
   Insn 423(l0): point = 179
   Insn 422(l0): point = 181
   Insn 421(l0): point = 183
   Insn 420(l0): point = 185
   Insn 419(l0): point = 187
   Insn 418(l0): point = 189
   Insn 417(l0): point = 191
   Insn 416(l0): point = 193
   Insn 415(l0): point = 195
   Insn 414(l0): point = 197
   Insn 413(l0): point = 199
   Insn 440(l0): point = 202
   Insn 439(l0): point = 204
   Insn 438(l0): point = 206
   Insn 437(l0): point = 208
   Insn 436(l0): point = 210
   Insn 435(l0): point = 212
   Insn 434(l0): point = 214
   Insn 433(l0): point = 216
   Insn 432(l0): point = 218
   Insn 431(l0): point = 220
   Insn 430(l0): point = 222
   Insn 429(l0): point = 224
   Insn 428(l0): point = 226
   Insn 427(l0): point = 228
   Insn 406(l0): point = 231
   Insn 403(l0): point = 234
   Insn 402(l0): point = 236
   Insn 401(l0): point = 238
   Insn 400(l0): point = 240
   Insn 399(l0): point = 242
   Insn 398(l0): point = 244
   Insn 397(l0): point = 246
   Insn 396(l0): point = 248
   Insn 395(l0): point = 250
   Insn 394(l0): point = 252
   Insn 393(l0): point = 254
   Insn 392(l0): point = 256
   Insn 391(l0): point = 258
   Insn 390(l0): point = 260
   Insn 389(l0): point = 262
   Insn 388(l0): point = 264
   Insn 386(l0): point = 267
   Insn 385(l0): point = 269
   Insn 384(l0): point = 271
   Insn 383(l0): point = 273
   Insn 380(l0): point = 276
   Insn 379(l0): point = 278
   Insn 378(l0): point = 280
   Insn 377(l0): point = 282
   Insn 376(l0): point = 284
   Insn 375(l0): point = 286
   Insn 374(l0): point = 288
   Insn 373(l0): point = 290
   Insn 372(l0): point = 292
   Insn 371(l0): point = 294
   Insn 370(l0): point = 296
   Insn 369(l0): point = 298
   Insn 368(l0): point = 300
   Insn 367(l0): point = 302
   Insn 366(l0): point = 304
   Insn 365(l0): point = 306
   Insn 363(l0): point = 309
   Insn 362(l0): point = 311
   Insn 361(l0): point = 313
   Insn 360(l0): point = 315
   Insn 357(l0): point = 318
   Insn 356(l0): point = 320
   Insn 355(l0): point = 322
   Insn 354(l0): point = 324
   Insn 353(l0): point = 326
   Insn 352(l0): point = 328
   Insn 351(l0): point = 330
   Insn 350(l0): point = 332
   Insn 349(l0): point = 334
   Insn 348(l0): point = 336
   Insn 347(l0): point = 338
   Insn 346(l0): point = 340
   Insn 344(l0): point = 343
   Insn 343(l0): point = 345
   Insn 342(l0): point = 347
   Insn 341(l0): point = 349
   Insn 15(l0): point = 352
   Insn 14(l0): point = 354
   Insn 13(l0): point = 356
   Insn 12(l0): point = 358
   Insn 567(l0): point = 361
   Insn 335(l0): point = 363
   Insn 310(l0): point = 366
   Insn 309(l0): point = 368
   Insn 308(l0): point = 370
   Insn 307(l0): point = 372
   Insn 306(l0): point = 374
   Insn 305(l0): point = 376
   Insn 304(l0): point = 378
   Insn 303(l0): point = 380
   Insn 302(l0): point = 382
   Insn 301(l0): point = 384
   Insn 300(l0): point = 386
   Insn 299(l0): point = 388
   Insn 298(l0): point = 390
   Insn 280(l0): point = 393
   Insn 279(l0): point = 395
   Insn 278(l0): point = 397
   Insn 277(l0): point = 399
   Insn 276(l0): point = 401
   Insn 275(l0): point = 403
   Insn 274(l0): point = 405
   Insn 273(l0): point = 407
   Insn 272(l0): point = 409
   Insn 271(l0): point = 411
   Insn 270(l0): point = 413
   Insn 269(l0): point = 415
   Insn 268(l0): point = 417
   Insn 267(l0): point = 419
   Insn 266(l0): point = 421
   Insn 265(l0): point = 423
   Insn 264(l0): point = 425
   Insn 263(l0): point = 427
   Insn 262(l0): point = 429
   Insn 261(l0): point = 431
   Insn 260(l0): point = 433
   Insn 259(l0): point = 435
   Insn 258(l0): point = 437
   Insn 257(l0): point = 439
   Insn 256(l0): point = 441
   Insn 255(l0): point = 443
   Insn 254(l0): point = 445
   Insn 253(l0): point = 447
   Insn 252(l0): point = 449
   Insn 251(l0): point = 451
   Insn 250(l0): point = 453
   Insn 249(l0): point = 455
   Insn 248(l0): point = 457
   Insn 247(l0): point = 459
   Insn 151(l0): point = 462
   Insn 150(l0): point = 464
   Insn 149(l0): point = 466
   Insn 148(l0): point = 468
   Insn 147(l0): point = 470
   Insn 146(l0): point = 472
   Insn 145(l0): point = 474
   Insn 144(l0): point = 476
   Insn 143(l0): point = 478
   Insn 142(l0): point = 480
   Insn 141(l0): point = 482
   Insn 140(l0): point = 484
   Insn 139(l0): point = 486
   Insn 63(l0): point = 489
   Insn 62(l0): point = 491
   Insn 60(l0): point = 494
   Insn 59(l0): point = 496
   Insn 58(l0): point = 498
   Insn 57(l0): point = 500
   Insn 56(l0): point = 502
   Insn 55(l0): point = 504
   Insn 54(l0): point = 506
   Insn 53(l0): point = 508
   Insn 52(l0): point = 510
   Insn 51(l0): point = 512
   Insn 50(l0): point = 514
   Insn 49(l0): point = 516
   Insn 48(l0): point = 518
   Insn 47(l0): point = 520
   Insn 46(l0): point = 522
   Insn 45(l0): point = 524
   Insn 44(l0): point = 526
   Insn 43(l0): point = 528
   Insn 42(l0): point = 530
   Insn 41(l0): point = 532
   Insn 40(l0): point = 534
   Insn 39(l0): point = 536
   Insn 38(l0): point = 538
   Insn 37(l0): point = 540
   Insn 36(l0): point = 542
   Insn 35(l0): point = 544
   Insn 34(l0): point = 546
   Insn 33(l0): point = 548
   Insn 32(l0): point = 550
   Insn 31(l0): point = 552
   Insn 30(l0): point = 554
   Insn 29(l0): point = 556
   Insn 28(l0): point = 558
   Insn 27(l0): point = 560
   Insn 26(l0): point = 562
   Insn 25(l0): point = 564
   Insn 24(l0): point = 566
   Insn 23(l0): point = 568
   Insn 22(l0): point = 570
   Insn 21(l0): point = 572
   Insn 20(l0): point = 574
   Insn 19(l0): point = 576
   Insn 18(l0): point = 578
   Insn 17(l0): point = 580
   Insn 560(l0): point = 583
   Insn 133(l0): point = 585
   Insn 130(l0): point = 588
   Insn 129(l0): point = 590
   Insn 124(l0): point = 593
   Insn 123(l0): point = 595
   Insn 122(l0): point = 597
   Insn 121(l0): point = 599
   Insn 120(l0): point = 601
   Insn 119(l0): point = 603
   Insn 118(l0): point = 605
   Insn 117(l0): point = 607
   Insn 116(l0): point = 609
   Insn 115(l0): point = 611
   Insn 114(l0): point = 613
   Insn 113(l0): point = 615
   Insn 112(l0): point = 617
   Insn 111(l0): point = 619
   Insn 110(l0): point = 621
   Insn 109(l0): point = 623
   Insn 108(l0): point = 625
   Insn 107(l0): point = 627
   Insn 106(l0): point = 629
   Insn 105(l0): point = 631
   Insn 104(l0): point = 633
   Insn 103(l0): point = 635
   Insn 102(l0): point = 637
   Insn 101(l0): point = 639
   Insn 100(l0): point = 641
   Insn 99(l0): point = 643
   Insn 98(l0): point = 645
   Insn 97(l0): point = 647
   Insn 96(l0): point = 649
   Insn 95(l0): point = 651
   Insn 94(l0): point = 653
   Insn 93(l0): point = 655
   Insn 92(l0): point = 657
   Insn 91(l0): point = 659
   Insn 90(l0): point = 661
   Insn 89(l0): point = 663
   Insn 88(l0): point = 665
   Insn 87(l0): point = 667
   Insn 86(l0): point = 669
   Insn 85(l0): point = 671
   Insn 84(l0): point = 673
   Insn 83(l0): point = 675
   Insn 82(l0): point = 677
   Insn 81(l0): point = 679
   Insn 80(l0): point = 681
   Insn 79(l0): point = 683
   Insn 78(l0): point = 685
   Insn 77(l0): point = 687
   Insn 76(l0): point = 689
   Insn 75(l0): point = 691
   Insn 74(l0): point = 693
   Insn 73(l0): point = 695
   Insn 72(l0): point = 697
   Insn 71(l0): point = 699
   Insn 70(l0): point = 701
   Insn 69(l0): point = 703
   Insn 68(l0): point = 705
   Insn 67(l0): point = 707
   Insn 66(l0): point = 709
   Insn 65(l0): point = 711
   Insn 162(l0): point = 714
   Insn 161(l0): point = 716
   Insn 160(l0): point = 718
   Insn 563(l0): point = 722
   Insn 194(l0): point = 724
   Insn 193(l0): point = 726
   Insn 192(l0): point = 728
   Insn 191(l0): point = 730
   Insn 190(l0): point = 732
   Insn 189(l0): point = 734
   Insn 188(l0): point = 736
   Insn 187(l0): point = 738
   Insn 186(l0): point = 740
   Insn 185(l0): point = 742
   Insn 184(l0): point = 744
   Insn 183(l0): point = 746
   Insn 182(l0): point = 748
   Insn 181(l0): point = 750
   Insn 180(l0): point = 752
   Insn 179(l0): point = 754
   Insn 178(l0): point = 756
   Insn 177(l0): point = 758
   Insn 176(l0): point = 760
   Insn 175(l0): point = 762
   Insn 174(l0): point = 764
   Insn 173(l0): point = 766
   Insn 172(l0): point = 768
   Insn 171(l0): point = 770
   Insn 170(l0): point = 772
   Insn 169(l0): point = 774
   Insn 168(l0): point = 776
   Insn 167(l0): point = 778
   Insn 202(l0): point = 781
   Insn 201(l0): point = 783
   Insn 200(l0): point = 785
   Insn 155(l0): point = 788
   Insn 154(l0): point = 790
   Insn 153(l0): point = 792
   Insn 209(l0): point = 795
   Insn 208(l0): point = 797
   Insn 207(l0): point = 799
   Insn 565(l0): point = 803
   Insn 241(l0): point = 805
   Insn 240(l0): point = 807
   Insn 239(l0): point = 809
   Insn 238(l0): point = 811
   Insn 237(l0): point = 813
   Insn 236(l0): point = 815
   Insn 235(l0): point = 817
   Insn 234(l0): point = 819
   Insn 233(l0): point = 821
   Insn 232(l0): point = 823
   Insn 231(l0): point = 825
   Insn 230(l0): point = 827
   Insn 229(l0): point = 829
   Insn 228(l0): point = 831
   Insn 227(l0): point = 833
   Insn 226(l0): point = 835
   Insn 225(l0): point = 837
   Insn 224(l0): point = 839
   Insn 223(l0): point = 841
   Insn 222(l0): point = 843
   Insn 221(l0): point = 845
   Insn 220(l0): point = 847
   Insn 219(l0): point = 849
   Insn 218(l0): point = 851
   Insn 217(l0): point = 853
   Insn 216(l0): point = 855
   Insn 215(l0): point = 857
   Insn 214(l0): point = 859
   Insn 295(l0): point = 862
   Insn 294(l0): point = 864
   Insn 293(l0): point = 866
   Insn 292(l0): point = 868
   Insn 291(l0): point = 870
   Insn 290(l0): point = 872
   Insn 289(l0): point = 874
   Insn 288(l0): point = 876
   Insn 287(l0): point = 878
   Insn 286(l0): point = 880
   Insn 285(l0): point = 882
   Insn 284(l0): point = 884
   Insn 283(l0): point = 886
   Insn 282(l0): point = 888
   Insn 332(l0): point = 891
   Insn 331(l0): point = 893
   Insn 330(l0): point = 895
   Insn 329(l0): point = 897
   Insn 328(l0): point = 899
   Insn 327(l0): point = 901
   Insn 326(l0): point = 903
   Insn 325(l0): point = 905
   Insn 324(l0): point = 907
   Insn 323(l0): point = 909
   Insn 322(l0): point = 911
   Insn 321(l0): point = 913
   Insn 320(l0): point = 915
   Insn 319(l0): point = 917
   Insn 318(l0): point = 919
   Insn 317(l0): point = 921
   Insn 316(l0): point = 923
   Insn 315(l0): point = 925
   Insn 314(l0): point = 927
   Insn 313(l0): point = 929
   Insn 312(l0): point = 931
   Insn 10(l0): point = 934
   Insn 6(l0): point = 936
   Insn 5(l0): point = 938
   Insn 4(l0): point = 940
   Insn 3(l0): point = 942
   Insn 2(l0): point = 944
 a0(r257): [3..4]
 a1(r256): [5..6]
 a2(r255): [53..64]
 a3(r254): [55..68]
 a4(r387): [57..60]
 a5(r386): [59..62]
 a6(r385): [65..66]
 a7(r253): [69..70]
 a8(r384): [71..72]
 a9(r252): [26..27]
 a10(r251): [28..29]
 a11(r383): [30..31]
 a12(r250): [30..33]
 a13(r381): [38..43] [34..35]
 a14(r382): [36..37]
 a15(r249): [40..45]
 a16(r380): [46..47]
 a17(r248): [12..13]
 a18(r379): [14..15]
 a19(r247): [81..92]
 a20(r246): [83..96]
 a21(r378): [85..88]
 a22(r377): [87..90]
 a23(r376): [93..94]
 a24(r245): [97..98]
 a25(r375): [99..100]
 a26(r244): [106..107]
 a27(r243): [108..109]
 a28(r374): [110..111]
 a29(r242): [117..118]
 a30(r373): [119..120]
 a31(r372): [126..127]
 a32(r241): [126..136]
 a33(r371): [133..134]
 a34(r240): [137..138]
 a35(r370): [139..140]
 a36(r369): [146..147]
 a37(r239): [146..156]
 a38(r368): [153..154]
 a39(r367): [157..158]
 a40(r238): [205..208]
 a41(r234): [207..220]
 a42(r237): [209..210]
 a43(r366): [211..212]
 a44(r236): [211..214]
 a45(r235): [215..216]
 a46(r365): [217..218]
 a47(r364): [221..222]
 a48(r233): [221..224]
 a49(r232): [225..226]
 a50(r363): [227..228]
 a51(r231): [178..179]
 a52(r230): [180..181]
 a53(r362): [182..183]
 a54(r229): [182..185]
 a55(r360): [190..195] [186..187]
 a56(r361): [188..189]
 a57(r228): [192..197]
 a58(r359): [198..199]
 a59(r227): [164..165]
 a60(r358): [166..167]
 a61(r226): [237..250]
 a62(r225): [239..254]
 a63(r223): [241..260]
 a64(r357): [243..246]
 a65(r356): [245..248]
 a66(r355): [251..252]
 a67(r224): [255..256]
 a68(r354): [257..258]
 a69(r222): [261..262]
 a70(r353): [263..264]
 a71(r221): [270..271]
 a72(r352): [272..273]
 a73(r220): [279..292]
 a74(r219): [281..296]
 a75(r217): [283..302]
 a76(r351): [285..288]
 a77(r350): [287..290]
 a78(r349): [293..294]
 a79(r218): [297..298]
 a80(r348): [299..300]
 a81(r216): [303..304]
 a82(r347): [305..306]
 a83(r215): [312..313]
 a84(r346): [314..315]
 a85(r214): [321..332]
 a86(r213): [323..336]
 a87(r345): [325..328]
 a88(r344): [327..330]
 a89(r343): [333..334]
 a90(r212): [337..338]
 a91(r342): [339..340]
 a92(r211): [346..347]
 a93(r341): [348..349]
 a94(r210): [894..899]
 a95(r206): [896..911]
 a96(r202): [898..923]
 a97(r209): [900..901]
 a98(r340): [902..903]
 a99(r208): [902..905]
 a100(r207): [906..907]
 a101(r339): [908..909]
 a102(r205): [912..913]
 a103(r338): [914..915]
 a104(r204): [914..917]
 a105(r203): [918..919]
 a106(r337): [920..921]
 a107(r336): [924..925]
 a108(r201): [924..927]
 a109(r200): [928..929]
 a110(r335): [930..931]
 a111(r199): [369..370]
 a112(r198): [371..372]
 a113(r334): [373..374]
 a114(r197): [373..376]
 a115(r332): [381..386] [377..378]
 a116(r333): [379..380]
 a117(r196): [383..388]
 a118(r331): [389..390]
 a119(r195): [865..868]
 a120(r191): [867..880]
 a121(r194): [869..870]
 a122(r330): [871..872]
 a123(r193): [871..874]
 a124(r192): [875..876]
 a125(r329): [877..878]
 a126(r328): [881..882]
 a127(r190): [881..884]
 a128(r189): [885..886]
 a129(r327): [887..888]
 a130(r188): [396..397]
 a131(r187): [398..399]
 a132(r326): [400..401]
 a133(r186): [400..403]
 a134(r324): [408..413] [404..405]
 a135(r325): [406..407]
 a136(r185): [410..415]
 a137(r323): [416..417]
 a138(r184): [422..429]
 a139(r322): [424..427]
 a140(r180): [426..441]
 a141(r183): [430..431]
 a142(r321): [432..433]
 a143(r182): [432..435]
 a144(r181): [436..437]
 a145(r320): [438..439]
 a146(r319): [442..443]
 a147(r179): [442..445]
 a148(r317): [450..455] [446..447]
 a149(r318): [448..449]
 a150(r178): [452..457]
 a151(r316): [458..459]
 a152(r164): [806..833]
 a153(r169): [806..807]
 a154(r315): [808..809]
 a155(r168): [808..811]
 a156(r167): [812..813]
 a157(r314): [814..815]
 a158(r166): [814..817]
 a159(r312): [822..827] [818..819]
 a160(r313): [820..821]
 a161(r165): [824..829]
 a162(r311): [830..831]
 a163(r310): [834..835]
 a164(r163): [834..837]
 a165(r308): [842..847] [838..839]
 a166(r309): [840..841]
 a167(r162): [844..849]
 a168(r307): [850..851]
 a169(r304): [854..855]
 a170(r306): [856..857]
 a171(r305): [856..859]
 a172(r303): [798..799]
 a173(r302): [784..785]
 a174(r172): [725..752]
 a175(r177): [725..726]
 a176(r301): [727..728]
 a177(r176): [727..730]
 a178(r175): [731..732]
 a179(r300): [733..734]
 a180(r174): [733..736]
 a181(r298): [741..746] [737..738]
 a182(r299): [739..740]
 a183(r173): [743..748]
 a184(r297): [749..750]
 a185(r296): [753..754]
 a186(r171): [753..756]
 a187(r294): [761..766] [757..758]
 a188(r295): [759..760]
 a189(r170): [763..768]
 a190(r293): [769..770]
 a191(r290): [773..774]
 a192(r292): [775..776]
 a193(r291): [775..778]
 a194(r289): [717..718]
 a195(r288): [791..792]
 a196(r161): [465..466]
 a197(r160): [467..468]
 a198(r287): [469..470]
 a199(r159): [469..472]
 a200(r285): [477..482] [473..474]
 a201(r286): [475..476]
 a202(r158): [479..484]
 a203(r284): [485..486]
 a204(r283): [589..590]
 a205(r282): [596..597]
 a206(r281): [600..601]
 a207(r157): [606..607]
 a208(r156): [608..609]
 a209(r135): [608..663]
 a210(r155): [610..611]
 a211(r145): [610..637]
 a212(r154): [612..613]
 a213(r153): [614..615]
 a214(r152): [616..617]
 a215(r149): [616..625]
 a216(r151): [618..619]
 a217(r150): [620..621]
 a218(r280): [622..623]
 a219(r148): [626..627]
 a220(r279): [628..629]
 a221(r147): [628..631]
 a222(r146): [632..633]
 a223(r278): [634..635]
 a224(r144): [638..639]
 a225(r143): [640..641]
 a226(r142): [642..643]
 a227(r139): [642..651]
 a228(r141): [644..645]
 a229(r140): [646..647]
 a230(r277): [648..649]
 a231(r138): [652..653]
 a232(r276): [654..655]
 a233(r137): [654..657]
 a234(r136): [658..659]
 a235(r275): [660..661]
 a236(r134): [664..665]
 a237(r125): [664..689]
 a238(r133): [666..667]
 a239(r132): [668..669]
 a240(r131): [670..671]
 a241(r129): [670..677]
 a242(r130): [672..673]
 a243(r274): [674..675]
 a244(r128): [678..679]
 a245(r273): [680..681]
 a246(r127): [680..683]
 a247(r126): [684..685]
 a248(r272): [686..687]
 a249(r124): [690..691]
 a250(r123): [692..693]
 a251(r122): [694..695]
 a252(r120): [694..701]
 a253(r121): [696..697]
 a254(r271): [698..699]
 a255(r119): [702..703]
 a256(r270): [704..705]
 a257(r118): [704..707]
 a258(r117): [708..709]
 a259(r269): [710..711]
 a260(r268): [497..498]
 a261(r267): [501..502]
 a262(r116): [507..508]
 a263(r115): [509..510]
 a264(r100): [509..548]
 a265(r114): [511..512]
 a266(r107): [511..530]
 a267(r113): [513..514]
 a268(r112): [515..516]
 a269(r111): [517..518]
 a270(r110): [519..520]
 a271(r266): [521..522]
 a272(r109): [521..524]
 a273(r108): [525..526]
 a274(r265): [527..528]
 a275(r106): [531..532]
 a276(r105): [533..534]
 a277(r104): [535..536]
 a278(r103): [537..538]
 a279(r264): [539..540]
 a280(r102): [539..542]
 a281(r101): [543..544]
 a282(r263): [545..546]
 a283(r99): [549..550]
 a284(r93): [549..566]
 a285(r98): [551..552]
 a286(r97): [553..554]
 a287(r96): [555..556]
 a288(r262): [557..558]
 a289(r95): [557..560]
 a290(r94): [561..562]
 a291(r261): [563..564]
 a292(r92): [567..568]
 a293(r91): [569..570]
 a294(r90): [571..572]
 a295(r260): [573..574]
 a296(r89): [573..576]
 a297(r88): [577..578]
 a298(r259): [579..580]
 a299(r87): [355..356]
 a300(r258): [357..358]
Compressing live ranges: from 947 to 468 - 49%
Ranges after the compression:
 a0(r257): [0..1]
 a1(r256): [2..3]
 a2(r255): [22..23]
 a3(r254): [22..25]
 a4(r387): [22..23]
 a5(r386): [22..23]
 a6(r385): [24..25]
 a7(r253): [26..27]
 a8(r384): [28..29]
 a9(r252): [8..9]
 a10(r251): [10..11]
 a11(r383): [12..13]
 a12(r250): [12..13]
 a13(r381): [18..19] [14..15]
 a14(r382): [16..17]
 a15(r249): [18..19]
 a16(r380): [20..21]
 a17(r248): [4..5]
 a18(r379): [6..7]
 a19(r247): [30..31]
 a20(r246): [30..33]
 a21(r378): [30..31]
 a22(r377): [30..31]
 a23(r376): [32..33]
 a24(r245): [34..35]
 a25(r375): [36..37]
 a26(r244): [38..39]
 a27(r243): [40..41]
 a28(r374): [42..43]
 a29(r242): [44..45]
 a30(r373): [46..47]
 a31(r372): [48..49]
 a32(r241): [48..51]
 a33(r371): [50..51]
 a34(r240): [52..53]
 a35(r370): [54..55]
 a36(r369): [56..57]
 a37(r239): [56..59]
 a38(r368): [58..59]
 a39(r367): [60..61]
 a40(r238): [80..81]
 a41(r234): [80..89]
 a42(r237): [82..83]
 a43(r366): [84..85]
 a44(r236): [84..85]
 a45(r235): [86..87]
 a46(r365): [88..89]
 a47(r364): [90..91]
 a48(r233): [90..91]
 a49(r232): [92..93]
 a50(r363): [94..95]
 a51(r231): [66..67]
 a52(r230): [68..69]
 a53(r362): [70..71]
 a54(r229): [70..71]
 a55(r360): [76..77] [72..73]
 a56(r361): [74..75]
 a57(r228): [76..77]
 a58(r359): [78..79]
 a59(r227): [62..63]
 a60(r358): [64..65]
 a61(r226): [96..97]
 a62(r225): [96..99]
 a63(r223): [96..103]
 a64(r357): [96..97]
 a65(r356): [96..97]
 a66(r355): [98..99]
 a67(r224): [100..101]
 a68(r354): [102..103]
 a69(r222): [104..105]
 a70(r353): [106..107]
 a71(r221): [108..109]
 a72(r352): [110..111]
 a73(r220): [112..113]
 a74(r219): [112..115]
 a75(r217): [112..119]
 a76(r351): [112..113]
 a77(r350): [112..113]
 a78(r349): [114..115]
 a79(r218): [116..117]
 a80(r348): [118..119]
 a81(r216): [120..121]
 a82(r347): [122..123]
 a83(r215): [124..125]
 a84(r346): [126..127]
 a85(r214): [128..129]
 a86(r213): [128..131]
 a87(r345): [128..129]
 a88(r344): [128..129]
 a89(r343): [130..131]
 a90(r212): [132..133]
 a91(r342): [134..135]
 a92(r211): [136..137]
 a93(r341): [138..139]
 a94(r210): [444..445]
 a95(r206): [444..453]
 a96(r202): [444..461]
 a97(r209): [446..447]
 a98(r340): [448..449]
 a99(r208): [448..449]
 a100(r207): [450..451]
 a101(r339): [452..453]
 a102(r205): [454..455]
 a103(r338): [456..457]
 a104(r204): [456..457]
 a105(r203): [458..459]
 a106(r337): [460..461]
 a107(r336): [462..463]
 a108(r201): [462..463]
 a109(r200): [464..465]
 a110(r335): [466..467]
 a111(r199): [144..145]
 a112(r198): [146..147]
 a113(r334): [148..149]
 a114(r197): [148..149]
 a115(r332): [154..155] [150..151]
 a116(r333): [152..153]
 a117(r196): [154..155]
 a118(r331): [156..157]
 a119(r195): [428..429]
 a120(r191): [428..437]
 a121(r194): [430..431]
 a122(r330): [432..433]
 a123(r193): [432..433]
 a124(r192): [434..435]
 a125(r329): [436..437]
 a126(r328): [438..439]
 a127(r190): [438..439]
 a128(r189): [440..441]
 a129(r327): [442..443]
 a130(r188): [158..159]
 a131(r187): [160..161]
 a132(r326): [162..163]
 a133(r186): [162..163]
 a134(r324): [168..169] [164..165]
 a135(r325): [166..167]
 a136(r185): [168..169]
 a137(r323): [170..171]
 a138(r184): [172..173]
 a139(r322): [172..173]
 a140(r180): [172..181]
 a141(r183): [174..175]
 a142(r321): [176..177]
 a143(r182): [176..177]
 a144(r181): [178..179]
 a145(r320): [180..181]
 a146(r319): [182..183]
 a147(r179): [182..183]
 a148(r317): [188..189] [184..185]
 a149(r318): [186..187]
 a150(r178): [188..189]
 a151(r316): [190..191]
 a152(r164): [398..413]
 a153(r169): [398..399]
 a154(r315): [400..401]
 a155(r168): [400..401]
 a156(r167): [402..403]
 a157(r314): [404..405]
 a158(r166): [404..405]
 a159(r312): [410..411] [406..407]
 a160(r313): [408..409]
 a161(r165): [410..411]
 a162(r311): [412..413]
 a163(r310): [414..415]
 a164(r163): [414..415]
 a165(r308): [420..421] [416..417]
 a166(r309): [418..419]
 a167(r162): [420..421]
 a168(r307): [422..423]
 a169(r304): [424..425]
 a170(r306): [426..427]
 a171(r305): [426..427]
 a172(r303): [396..397]
 a173(r302): [392..393]
 a174(r172): [362..377]
 a175(r177): [362..363]
 a176(r301): [364..365]
 a177(r176): [364..365]
 a178(r175): [366..367]
 a179(r300): [368..369]
 a180(r174): [368..369]
 a181(r298): [374..375] [370..371]
 a182(r299): [372..373]
 a183(r173): [374..375]
 a184(r297): [376..377]
 a185(r296): [378..379]
 a186(r171): [378..379]
 a187(r294): [384..385] [380..381]
 a188(r295): [382..383]
 a189(r170): [384..385]
 a190(r293): [386..387]
 a191(r290): [388..389]
 a192(r292): [390..391]
 a193(r291): [390..391]
 a194(r289): [360..361]
 a195(r288): [394..395]
 a196(r161): [192..193]
 a197(r160): [194..195]
 a198(r287): [196..197]
 a199(r159): [196..197]
 a200(r285): [202..203] [198..199]
 a201(r286): [200..201]
 a202(r158): [202..203]
 a203(r284): [204..205]
 a204(r283): [270..271]
 a205(r282): [272..273]
 a206(r281): [274..275]
 a207(r157): [276..277]
 a208(r156): [278..279]
 a209(r135): [278..321]
 a210(r155): [280..281]
 a211(r145): [280..301]
 a212(r154): [282..283]
 a213(r153): [284..285]
 a214(r152): [286..287]
 a215(r149): [286..293]
 a216(r151): [288..289]
 a217(r150): [290..291]
 a218(r280): [292..293]
 a219(r148): [294..295]
 a220(r279): [296..297]
 a221(r147): [296..297]
 a222(r146): [298..299]
 a223(r278): [300..301]
 a224(r144): [302..303]
 a225(r143): [304..305]
 a226(r142): [306..307]
 a227(r139): [306..313]
 a228(r141): [308..309]
 a229(r140): [310..311]
 a230(r277): [312..313]
 a231(r138): [314..315]
 a232(r276): [316..317]
 a233(r137): [316..317]
 a234(r136): [318..319]
 a235(r275): [320..321]
 a236(r134): [322..323]
 a237(r125): [322..341]
 a238(r133): [324..325]
 a239(r132): [326..327]
 a240(r131): [328..329]
 a241(r129): [328..333]
 a242(r130): [330..331]
 a243(r274): [332..333]
 a244(r128): [334..335]
 a245(r273): [336..337]
 a246(r127): [336..337]
 a247(r126): [338..339]
 a248(r272): [340..341]
 a249(r124): [342..343]
 a250(r123): [344..345]
 a251(r122): [346..347]
 a252(r120): [346..351]
 a253(r121): [348..349]
 a254(r271): [350..351]
 a255(r119): [352..353]
 a256(r270): [354..355]
 a257(r118): [354..355]
 a258(r117): [356..357]
 a259(r269): [358..359]
 a260(r268): [206..207]
 a261(r267): [208..209]
 a262(r116): [210..211]
 a263(r115): [212..213]
 a264(r100): [212..243]
 a265(r114): [214..215]
 a266(r107): [214..229]
 a267(r113): [216..217]
 a268(r112): [218..219]
 a269(r111): [220..221]
 a270(r110): [222..223]
 a271(r266): [224..225]
 a272(r109): [224..225]
 a273(r108): [226..227]
 a274(r265): [228..229]
 a275(r106): [230..231]
 a276(r105): [232..233]
 a277(r104): [234..235]
 a278(r103): [236..237]
 a279(r264): [238..239]
 a280(r102): [238..239]
 a281(r101): [240..241]
 a282(r263): [242..243]
 a283(r99): [244..245]
 a284(r93): [244..257]
 a285(r98): [246..247]
 a286(r97): [248..249]
 a287(r96): [250..251]
 a288(r262): [252..253]
 a289(r95): [252..253]
 a290(r94): [254..255]
 a291(r261): [256..257]
 a292(r92): [258..259]
 a293(r91): [260..261]
 a294(r90): [262..263]
 a295(r260): [264..265]
 a296(r89): [264..265]
 a297(r88): [266..267]
 a298(r259): [268..269]
 a299(r87): [140..141]
 a300(r258): [142..143]
  pref0:a206(r281)<-hr21@1
  pref1:a261(r267)<-hr21@1
  regions=1, blocks=47, points=468
    allocnos=301 (big 0), copies=0, conflicts=0, ranges=311
Disposition:
  299:r87  l0     0  297:r88  l0     0  296:r89  l0     1  294:r90  l0     0
  293:r91  l0     0  292:r92  l0    21  284:r93  l0    22  290:r94  l0     0
  289:r95  l0     1  287:r96  l0     0  286:r97  l0     0  285:r98  l0    21
  283:r99  l0    21  264:r100 l0    22  281:r101 l0     0  280:r102 l0     1
  278:r103 l0     0  277:r104 l0     0  276:r105 l0     0  275:r106 l0    21
  266:r107 l0    23  273:r108 l0     0  272:r109 l0     1  270:r110 l0     0
  269:r111 l0     0  268:r112 l0     0  267:r113 l0    21  265:r114 l0    21
  263:r115 l0    21  262:r116 l0    21  258:r117 l0     0  257:r118 l0     1
  255:r119 l0     0  252:r120 l0     0  253:r121 l0     1  251:r122 l0     1
  250:r123 l0     0  249:r124 l0    21  237:r125 l0    22  247:r126 l0     0
  246:r127 l0     1  244:r128 l0     0  241:r129 l0     0  242:r130 l0     1
  240:r131 l0     1  239:r132 l0     0  238:r133 l0    21  236:r134 l0    21
  209:r135 l0    22  234:r136 l0     0  233:r137 l0     1  231:r138 l0     0
  227:r139 l0     0  229:r140 l0     1  228:r141 l0     1  226:r142 l0     1
  225:r143 l0     0  224:r144 l0    21  211:r145 l0    23  222:r146 l0     0
  221:r147 l0     1  219:r148 l0     0  215:r149 l0     0  217:r150 l0     1
  216:r151 l0     1  214:r152 l0     1  213:r153 l0     0  212:r154 l0    21
  210:r155 l0    21  208:r156 l0    21  207:r157 l0    21  202:r158 l0     1
  199:r159 l0     1  197:r160 l0     0  196:r161 l0     0  167:r162 l0     1
  164:r163 l0     1  152:r164 l0     2  161:r165 l0     1  158:r166 l0     1
  156:r167 l0     0  155:r168 l0    21  153:r169 l0    21  189:r170 l0     1
  186:r171 l0     1  174:r172 l0     2  183:r173 l0     1  180:r174 l0     1
  178:r175 l0     0  177:r176 l0    22  175:r177 l0    21  150:r178 l0     1
  147:r179 l0     1  140:r180 l0     1  144:r181 l0     0  143:r182 l0     2
  141:r183 l0     0  138:r184 l0     0  136:r185 l0     1  133:r186 l0     1
  131:r187 l0     0  130:r188 l0     0  128:r189 l0     0  127:r190 l0     1
  120:r191 l0     1  124:r192 l0     0  123:r193 l0     2  121:r194 l0     0
  119:r195 l0     0  117:r196 l0     1  114:r197 l0     1  112:r198 l0     0
  111:r199 l0     0  109:r200 l0     0  108:r201 l0     1   96:r202 l0     1
  105:r203 l0     0  104:r204 l0     2  102:r205 l0     0   95:r206 l0     2
  100:r207 l0     0   99:r208 l0     4   97:r209 l0     0   94:r210 l0     0
   92:r211 l0     0   90:r212 l0     0   86:r213 l0     4   85:r214 l0     0
   83:r215 l0     0   81:r216 l0     0   75:r217 l0     1   79:r218 l0     0
   74:r219 l0     4   73:r220 l0     0   71:r221 l0     0   69:r222 l0     0
   63:r223 l0     1   67:r224 l0     0   62:r225 l0     4   61:r226 l0     0
   59:r227 l0     0   57:r228 l0     1   54:r229 l0     1   52:r230 l0     0
   51:r231 l0     0   49:r232 l0     0   48:r233 l0     1   41:r234 l0     1
   45:r235 l0     0   44:r236 l0     2   42:r237 l0     0   40:r238 l0     0
   37:r239 l0    21   34:r240 l0     0   32:r241 l0    21   29:r242 l0     0
   27:r243 l0     0   26:r244 l0     0   24:r245 l0     0   20:r246 l0     4
   19:r247 l0     0   17:r248 l0     0   15:r249 l0     1   12:r250 l0     1
   10:r251 l0     0    9:r252 l0     0    7:r253 l0     0    3:r254 l0     4
    2:r255 l0     0    1:r256 l0     0    0:r257 l0     0  300:r258 l0     0
  298:r259 l0     0  295:r260 l0     0  291:r261 l0     0  288:r262 l0     0
  282:r263 l0     0  279:r264 l0     0  274:r265 l0     0  271:r266 l0     0
  261:r267 l0     0  260:r268 l0    21  259:r269 l0     0  256:r270 l0     0
  254:r271 l0     1  248:r272 l0     0  245:r273 l0     0  243:r274 l0     1
  235:r275 l0     0  232:r276 l0     0  230:r277 l0     1  223:r278 l0     0
  220:r279 l0     0  218:r280 l0     1  206:r281 l0     0  205:r282 l0    21
  204:r283 l0    21  203:r284 l0     0  200:r285 l0     0  201:r286 l0     0
  198:r287 l0     0  195:r288 l0    21  194:r289 l0    21  191:r290 l0    21
  193:r291 l0    22  192:r292 l0    21  190:r293 l0     0  187:r294 l0     0
  188:r295 l0     0  185:r296 l0     0  184:r297 l0     0  181:r298 l0     0
  182:r299 l0     0  179:r300 l0     0  176:r301 l0    21  173:r302 l0    21
  172:r303 l0    21  169:r304 l0    21  171:r305 l0    21  170:r306 l0    22
  168:r307 l0     0  165:r308 l0     0  166:r309 l0     0  163:r310 l0     0
  162:r311 l0     0  159:r312 l0     0  160:r313 l0     0  157:r314 l0     0
  154:r315 l0    22  151:r316 l0     0  148:r317 l0     0  149:r318 l0     0
  146:r319 l0     0  145:r320 l0     0  142:r321 l0     0  139:r322 l0     2
  137:r323 l0     0  134:r324 l0     0  135:r325 l0     0  132:r326 l0     0
  129:r327 l0     0  126:r328 l0     0  125:r329 l0     0  122:r330 l0     0
  118:r331 l0     0  115:r332 l0     0  116:r333 l0     0  113:r334 l0     0
  110:r335 l0     0  107:r336 l0     0  106:r337 l0     0  103:r338 l0     0
  101:r339 l0     0   98:r340 l0     0   93:r341 l0     0   91:r342 l0     0
   89:r343 l0     0   88:r344 l0     2   87:r345 l0     1   84:r346 l0     0
   82:r347 l0     0   80:r348 l0     0   78:r349 l0     0   77:r350 l0     5
   76:r351 l0     2   72:r352 l0     0   70:r353 l0     0   68:r354 l0     0
   66:r355 l0     0   65:r356 l0     5   64:r357 l0     2   60:r358 l0     0
   58:r359 l0     0   55:r360 l0     0   56:r361 l0     0   53:r362 l0     0
   50:r363 l0     0   47:r364 l0     0   46:r365 l0     0   43:r366 l0     0
   39:r367 l0     0   38:r368 l0    22   36:r369 l0    22   35:r370 l0     0
   33:r371 l0    22   31:r372 l0    22   30:r373 l0     0   28:r374 l0     0
   25:r375 l0     0   23:r376 l0     0   22:r377 l0     2   21:r378 l0     1
   18:r379 l0     0   16:r380 l0     0   13:r381 l0     0   14:r382 l0     0
   11:r383 l0     0    8:r384 l0     0    6:r385 l0     0    5:r386 l0     2
    4:r387 l0     1
+++Costs: overall -35, reg -35, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int pre_process(int*, Preprocess*, Procpar_info*, float**, float**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8]
;;  ref usage 	r0={13d,2u} r1={19d,8u} r2={17d,6u} r4={21d,10u} r5={21d,10u} r6={1d,46u} r7={1d,57u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r16={1d,45u} r17={131d,23u} r18={11d} r19={11d} r20={1d,172u,35e} r21={14d,4u} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={14d,3u} r38={12d} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u,1e} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u,1e} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u,1e} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,2u,1e} r159={1d,1u,1e} r160={1d,1u} r161={1d,1u} r162={1d,2u,1e} r163={1d,1u,1e} r164={1d,1u} r165={1d,2u,1e} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,2u,1e} r171={1d,1u,1e} r172={1d,1u} r173={1d,2u,1e} r174={1d,1u,1e} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,2u,1e} r179={1d,1u,1e} r180={1d,1u} r181={1d,1u} r182={1d,1u,1e} r183={1d,1u} r184={1d,1u} r185={1d,2u,1e} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u,1e} r191={1d,1u} r192={1d,1u} r193={1d,1u,1e} r194={1d,1u} r195={1d,1u} r196={1d,2u,1e} r197={1d,1u,1e} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u,1e} r202={1d,1u} r203={1d,1u} r204={1d,1u,1e} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u,1e} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,2u,1e} r229={1d,1u,1e} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u,1e} r234={1d,1u} r235={1d,1u} r236={1d,1u,1e} r237={1d,1u} r238={1d,1u} r239={1d,2u} r240={1d,1u} r241={1d,2u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,2u,1e} r250={1d,1u,1e} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={4d,4u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={4d,4u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={4d,4u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={4d,4u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={4d,4u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={4d,4u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={4d,4u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={4d,4u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={4d,4u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={4d,4u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} 
;;    total ref usage 2097{1297d,729u,71e} in 451{440 regular + 11 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])
        (reg:DI 5 di [ fid ])) preproc.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fid ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
        (reg:DI 4 si [ preprocess ])) preproc.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ preprocess ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) preproc.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
        (reg:DI 2 cx [ out_data ])) preproc.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ out_data ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
        (reg:DI 37 r8 [ scratch_data ])) preproc.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ scratch_data ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 336 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:33 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              22 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 258
(code_label 336 10 11 3 17 "" [1 uses])
(note 11 336 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])) preproc.cpp:33 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 87 [ D.6870 ])
        (mem:SI (reg/f:DI 258) [0 *fid_26(D)+0 S4 A32])) preproc.cpp:33 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (nil)))
(insn 14 13 15 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.6870 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) preproc.cpp:33 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6870 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) preproc.cpp:33 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 339)
;;  succ:       23
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 259 260 261 262 263 264 265 266 267 268
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:37 90 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 88 [ D.6871 ])
        (sign_extend:DI (reg:SI 259))) preproc.cpp:37 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 259)
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 89 [ D.6871 ])
                (ashift:DI (reg:DI 88 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:37 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 4 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:37 89 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 90 [ D.6872 ])
                (plus:DI (reg:DI 89 [ D.6871 ])
                    (reg/f:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:37 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 260)
        (expr_list:REG_DEAD (reg:DI 89 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 89 [ D.6871 ]))
                    (nil))))))
(insn 22 21 23 4 (set (reg/f:DI 91 [ D.6873 ])
        (mem/f:DI (reg/f:DI 90 [ D.6872 ]) [0 *_31+0 S8 A64])) preproc.cpp:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6872 ])
        (nil)))
(insn 23 22 24 4 (set (reg:SF 92 [ D.6874 ])
        (mem:SF (reg/f:DI 91 [ D.6873 ]) [0 *_32+0 S4 A32])) preproc.cpp:37 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.6873 ])
        (nil)))
(insn 24 23 25 4 (set (reg:DF 93 [ D.6875 ])
        (float_extend:DF (reg:SF 92 [ D.6874 ]))) preproc.cpp:37 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 92 [ D.6874 ])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:37 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 94 [ D.6871 ])
        (sign_extend:DI (reg:SI 261))) preproc.cpp:37 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 261)
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 95 [ D.6871 ])
                (ashift:DI (reg:DI 94 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:37 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:37 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 96 [ D.6872 ])
                (plus:DI (reg:DI 95 [ D.6871 ])
                    (reg/f:DI 262)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:37 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 262)
        (expr_list:REG_DEAD (reg:DI 95 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 95 [ D.6871 ]))
                    (nil))))))
(insn 30 29 31 4 (set (reg/f:DI 97 [ D.6873 ])
        (mem/f:DI (reg/f:DI 96 [ D.6872 ]) [0 *_37+0 S8 A64])) preproc.cpp:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.6872 ])
        (nil)))
(insn 31 30 32 4 (set (reg:SF 98 [ D.6874 ])
        (mem:SF (reg/f:DI 97 [ D.6873 ]) [0 *_38+0 S4 A32])) preproc.cpp:37 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.6873 ])
        (nil)))
(insn 32 31 33 4 (set (reg:DF 99 [ D.6875 ])
        (float_extend:DF (reg:SF 98 [ D.6874 ]))) preproc.cpp:37 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 98 [ D.6874 ])
        (nil)))
(insn 33 32 34 4 (set (reg:DF 100 [ D.6875 ])
        (mult:DF (reg:DF 93 [ D.6875 ])
            (reg:DF 99 [ D.6875 ]))) preproc.cpp:37 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 99 [ D.6875 ])
        (expr_list:REG_DEAD (reg:DF 93 [ D.6875 ])
            (nil))))
(insn 34 33 35 4 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:38 90 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:DI 101 [ D.6871 ])
        (sign_extend:DI (reg:SI 263))) preproc.cpp:38 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 263)
        (nil)))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 102 [ D.6871 ])
                (ashift:DI (reg:DI 101 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:38 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:38 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg/f:DI 103 [ D.6872 ])
                (plus:DI (reg:DI 102 [ D.6871 ])
                    (reg/f:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:38 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 264)
        (expr_list:REG_DEAD (reg:DI 102 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 102 [ D.6871 ]))
                    (nil))))))
(insn 39 38 40 4 (set (reg/f:DI 104 [ D.6873 ])
        (mem/f:DI (reg/f:DI 103 [ D.6872 ]) [0 *_44+0 S8 A64])) preproc.cpp:38 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.6872 ])
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 105 [ D.6873 ])
                (plus:DI (reg/f:DI 104 [ D.6873 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:38 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.6873 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 4 (set (reg:SF 106 [ D.6874 ])
        (mem:SF (reg/f:DI 105 [ D.6873 ]) [0 *_46+0 S4 A32])) preproc.cpp:38 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.6873 ])
        (nil)))
(insn 42 41 43 4 (set (reg:DF 107 [ D.6875 ])
        (float_extend:DF (reg:SF 106 [ D.6874 ]))) preproc.cpp:38 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 106 [ D.6874 ])
        (nil)))
(insn 43 42 44 4 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:38 90 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 108 [ D.6871 ])
        (sign_extend:DI (reg:SI 265))) preproc.cpp:38 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 265)
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 109 [ D.6871 ])
                (ashift:DI (reg:DI 108 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:38 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 4 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:38 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 110 [ D.6872 ])
                (plus:DI (reg:DI 109 [ D.6871 ])
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:38 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 266)
        (expr_list:REG_DEAD (reg:DI 109 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 109 [ D.6871 ]))
                    (nil))))))
(insn 48 47 49 4 (set (reg/f:DI 111 [ D.6873 ])
        (mem/f:DI (reg/f:DI 110 [ D.6872 ]) [0 *_51+0 S8 A64])) preproc.cpp:38 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.6872 ])
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg/f:DI 112 [ D.6873 ])
                (plus:DI (reg/f:DI 111 [ D.6873 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:38 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.6873 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 4 (set (reg:SF 113 [ D.6874 ])
        (mem:SF (reg/f:DI 112 [ D.6873 ]) [0 *_53+0 S4 A32])) preproc.cpp:38 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.6873 ])
        (nil)))
(insn 51 50 52 4 (set (reg:DF 114 [ D.6875 ])
        (float_extend:DF (reg:SF 113 [ D.6874 ]))) preproc.cpp:38 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 113 [ D.6874 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DF 115 [ D.6875 ])
        (mult:DF (reg:DF 107 [ D.6875 ])
            (reg:DF 114 [ D.6875 ]))) preproc.cpp:38 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 114 [ D.6875 ])
        (expr_list:REG_DEAD (reg:DF 107 [ D.6875 ])
            (nil))))
(insn 53 52 54 4 (set (reg:DF 116 [ D.6875 ])
        (plus:DF (reg:DF 100 [ D.6875 ])
            (reg:DF 115 [ D.6875 ]))) preproc.cpp:37 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 115 [ D.6875 ])
        (expr_list:REG_DEAD (reg:DF 100 [ D.6875 ])
            (nil))))
(insn 54 53 55 4 (set (reg:DF 21 xmm0)
        (reg:DF 116 [ D.6875 ])) preproc.cpp:38 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 116 [ D.6875 ])
        (nil)))
(call_insn 55 54 56 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:38 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 56 55 57 4 (set (reg:DF 267)
        (reg:DF 21 xmm0)) preproc.cpp:38 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 57 56 58 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])
        (reg:DF 267)) preproc.cpp:38 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 267)
        (nil)))
(insn 58 57 59 4 (set (reg:DF 268)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])) preproc.cpp:39 128 {*movdf_internal}
     (nil))
(insn 59 58 60 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 268)) preproc.cpp:39 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 268)
        (nil)))
(insn 60 59 134 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
        (const_int 2 [0x2])) preproc.cpp:40 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              8 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 134 60 61 5 6 "" [1 uses])
(note 61 134 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
            (const_int 48 [0x30]))) preproc.cpp:40 7 {*cmpsi_1}
     (nil))
(jump_insn 63 62 64 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) preproc.cpp:40 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 137)
;;  succ:       9
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 269 270 271 272 273 274 275 276 277 278 279 280 281 282
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 6 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:45 90 {*movsi_internal}
     (nil))
(insn 66 65 67 6 (set (reg:DI 117 [ D.6871 ])
        (sign_extend:DI (reg:SI 269))) preproc.cpp:45 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 269)
        (nil)))
(insn 67 66 68 6 (parallel [
            (set (reg:DI 118 [ D.6871 ])
                (ashift:DI (reg:DI 117 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 6 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:45 89 {*movdi_internal}
     (nil))
(insn 69 68 70 6 (parallel [
            (set (reg/f:DI 119 [ D.6872 ])
                (plus:DI (reg:DI 118 [ D.6871 ])
                    (reg/f:DI 270)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 270)
        (expr_list:REG_DEAD (reg:DI 118 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 118 [ D.6871 ]))
                    (nil))))))
(insn 70 69 71 6 (set (reg/f:DI 120 [ D.6873 ])
        (mem/f:DI (reg/f:DI 119 [ D.6872 ]) [0 *_64+0 S8 A64])) preproc.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.6872 ])
        (nil)))
(insn 71 70 72 6 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) preproc.cpp:45 90 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg:DI 121 [ D.6871 ])
        (sign_extend:DI (reg:SI 271))) preproc.cpp:45 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 271)
        (nil)))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 122 [ D.6871 ])
                (ashift:DI (reg:DI 121 [ D.6871 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 6 (parallel [
            (set (reg/f:DI 123 [ D.6873 ])
                (plus:DI (reg/f:DI 120 [ D.6873 ])
                    (reg:DI 122 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ D.6871 ])
        (expr_list:REG_DEAD (reg/f:DI 120 [ D.6873 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 75 74 76 6 (set (reg:SF 124 [ D.6874 ])
        (mem:SF (reg/f:DI 123 [ D.6873 ]) [0 *_68+0 S4 A32])) preproc.cpp:45 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.6873 ])
        (nil)))
(insn 76 75 77 6 (set (reg:DF 125 [ D.6875 ])
        (float_extend:DF (reg:SF 124 [ D.6874 ]))) preproc.cpp:45 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 124 [ D.6874 ])
        (nil)))
(insn 77 76 78 6 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:45 90 {*movsi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:DI 126 [ D.6871 ])
        (sign_extend:DI (reg:SI 272))) preproc.cpp:45 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 272)
        (nil)))
(insn 79 78 80 6 (parallel [
            (set (reg:DI 127 [ D.6871 ])
                (ashift:DI (reg:DI 126 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 80 79 81 6 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:45 89 {*movdi_internal}
     (nil))
(insn 81 80 82 6 (parallel [
            (set (reg/f:DI 128 [ D.6872 ])
                (plus:DI (reg:DI 127 [ D.6871 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (expr_list:REG_DEAD (reg:DI 127 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 127 [ D.6871 ]))
                    (nil))))))
(insn 82 81 83 6 (set (reg/f:DI 129 [ D.6873 ])
        (mem/f:DI (reg/f:DI 128 [ D.6872 ]) [0 *_73+0 S8 A64])) preproc.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.6872 ])
        (nil)))
(insn 83 82 84 6 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) preproc.cpp:45 90 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:DI 130 [ D.6871 ])
        (sign_extend:DI (reg:SI 274))) preproc.cpp:45 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 131 [ D.6871 ])
                (ashift:DI (reg:DI 130 [ D.6871 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 6 (parallel [
            (set (reg/f:DI 132 [ D.6873 ])
                (plus:DI (reg/f:DI 129 [ D.6873 ])
                    (reg:DI 131 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ D.6871 ])
        (expr_list:REG_DEAD (reg/f:DI 129 [ D.6873 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 87 86 88 6 (set (reg:SF 133 [ D.6874 ])
        (mem:SF (reg/f:DI 132 [ D.6873 ]) [0 *_77+0 S4 A32])) preproc.cpp:45 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.6873 ])
        (nil)))
(insn 88 87 89 6 (set (reg:DF 134 [ D.6875 ])
        (float_extend:DF (reg:SF 133 [ D.6874 ]))) preproc.cpp:45 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.6874 ])
        (nil)))
(insn 89 88 90 6 (set (reg:DF 135 [ D.6875 ])
        (mult:DF (reg:DF 125 [ D.6875 ])
            (reg:DF 134 [ D.6875 ]))) preproc.cpp:45 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.6875 ])
        (expr_list:REG_DEAD (reg:DF 125 [ D.6875 ])
            (nil))))
(insn 90 89 91 6 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:46 90 {*movsi_internal}
     (nil))
(insn 91 90 92 6 (set (reg:DI 136 [ D.6871 ])
        (sign_extend:DI (reg:SI 275))) preproc.cpp:46 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 275)
        (nil)))
(insn 92 91 93 6 (parallel [
            (set (reg:DI 137 [ D.6871 ])
                (ashift:DI (reg:DI 136 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 93 92 94 6 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:46 89 {*movdi_internal}
     (nil))
(insn 94 93 95 6 (parallel [
            (set (reg/f:DI 138 [ D.6872 ])
                (plus:DI (reg:DI 137 [ D.6871 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:DI 137 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 137 [ D.6871 ]))
                    (nil))))))
(insn 95 94 96 6 (set (reg/f:DI 139 [ D.6873 ])
        (mem/f:DI (reg/f:DI 138 [ D.6872 ]) [0 *_83+0 S8 A64])) preproc.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.6872 ])
        (nil)))
(insn 96 95 97 6 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) preproc.cpp:46 90 {*movsi_internal}
     (nil))
(insn 97 96 98 6 (set (reg:DI 140 [ D.6876 ])
        (sign_extend:DI (reg:SI 277))) preproc.cpp:46 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 277)
        (nil)))
(insn 98 97 99 6 (parallel [
            (set (reg:DI 141 [ D.6876 ])
                (plus:DI (reg:DI 140 [ D.6876 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.6876 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 6 (parallel [
            (set (reg:DI 142 [ D.6876 ])
                (ashift:DI (reg:DI 141 [ D.6876 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6876 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 6 (parallel [
            (set (reg/f:DI 143 [ D.6873 ])
                (plus:DI (reg/f:DI 139 [ D.6873 ])
                    (reg:DI 142 [ D.6876 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.6876 ])
        (expr_list:REG_DEAD (reg/f:DI 139 [ D.6873 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 101 100 102 6 (set (reg:SF 144 [ D.6874 ])
        (mem:SF (reg/f:DI 143 [ D.6873 ]) [0 *_88+0 S4 A32])) preproc.cpp:46 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.6873 ])
        (nil)))
(insn 102 101 103 6 (set (reg:DF 145 [ D.6875 ])
        (float_extend:DF (reg:SF 144 [ D.6874 ]))) preproc.cpp:46 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 144 [ D.6874 ])
        (nil)))
(insn 103 102 104 6 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:46 90 {*movsi_internal}
     (nil))
(insn 104 103 105 6 (set (reg:DI 146 [ D.6871 ])
        (sign_extend:DI (reg:SI 278))) preproc.cpp:46 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(insn 105 104 106 6 (parallel [
            (set (reg:DI 147 [ D.6871 ])
                (ashift:DI (reg:DI 146 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 6 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:46 89 {*movdi_internal}
     (nil))
(insn 107 106 108 6 (parallel [
            (set (reg/f:DI 148 [ D.6872 ])
                (plus:DI (reg:DI 147 [ D.6871 ])
                    (reg/f:DI 279)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 279)
        (expr_list:REG_DEAD (reg:DI 147 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 147 [ D.6871 ]))
                    (nil))))))
(insn 108 107 109 6 (set (reg/f:DI 149 [ D.6873 ])
        (mem/f:DI (reg/f:DI 148 [ D.6872 ]) [0 *_93+0 S8 A64])) preproc.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ D.6872 ])
        (nil)))
(insn 109 108 110 6 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) preproc.cpp:46 90 {*movsi_internal}
     (nil))
(insn 110 109 111 6 (set (reg:DI 150 [ D.6876 ])
        (sign_extend:DI (reg:SI 280))) preproc.cpp:46 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 280)
        (nil)))
(insn 111 110 112 6 (parallel [
            (set (reg:DI 151 [ D.6876 ])
                (plus:DI (reg:DI 150 [ D.6876 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.6876 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 6 (parallel [
            (set (reg:DI 152 [ D.6876 ])
                (ashift:DI (reg:DI 151 [ D.6876 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 151 [ D.6876 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 6 (parallel [
            (set (reg/f:DI 153 [ D.6873 ])
                (plus:DI (reg/f:DI 149 [ D.6873 ])
                    (reg:DI 152 [ D.6876 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:46 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ D.6876 ])
        (expr_list:REG_DEAD (reg/f:DI 149 [ D.6873 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 114 113 115 6 (set (reg:SF 154 [ D.6874 ])
        (mem:SF (reg/f:DI 153 [ D.6873 ]) [0 *_98+0 S4 A32])) preproc.cpp:46 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 153 [ D.6873 ])
        (nil)))
(insn 115 114 116 6 (set (reg:DF 155 [ D.6875 ])
        (float_extend:DF (reg:SF 154 [ D.6874 ]))) preproc.cpp:46 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 154 [ D.6874 ])
        (nil)))
(insn 116 115 117 6 (set (reg:DF 156 [ D.6875 ])
        (mult:DF (reg:DF 145 [ D.6875 ])
            (reg:DF 155 [ D.6875 ]))) preproc.cpp:46 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 155 [ D.6875 ])
        (expr_list:REG_DEAD (reg:DF 145 [ D.6875 ])
            (nil))))
(insn 117 116 118 6 (set (reg:DF 157 [ D.6875 ])
        (plus:DF (reg:DF 135 [ D.6875 ])
            (reg:DF 156 [ D.6875 ]))) preproc.cpp:45 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 156 [ D.6875 ])
        (expr_list:REG_DEAD (reg:DF 135 [ D.6875 ])
            (nil))))
(insn 118 117 119 6 (set (reg:DF 21 xmm0)
        (reg:DF 157 [ D.6875 ])) preproc.cpp:46 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 157 [ D.6875 ])
        (nil)))
(call_insn 119 118 120 6 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:46 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 120 119 121 6 (set (reg:DF 281)
        (reg:DF 21 xmm0)) preproc.cpp:46 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 121 120 122 6 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])
        (reg:DF 281)) preproc.cpp:46 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 281)
        (nil)))
(insn 122 121 123 6 (set (reg:DF 282)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])) preproc.cpp:47 128 {*movdf_internal}
     (nil))
(insn 123 122 124 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 282)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) preproc.cpp:47 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 282)
        (nil)))
(jump_insn 124 123 128 6 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) preproc.cpp:47 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 131)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 283
(note 128 124 129 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 7 (set (reg:DF 283)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])) preproc.cpp:48 128 {*movdf_internal}
     (nil))
(insn 130 129 131 7 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 283)) preproc.cpp:48 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 283)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 131 130 132 8 4 "" [1 uses])
(note 132 131 133 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 560 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:40 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 560 133 561 8 (set (pc)
        (label_ref 134)) preproc.cpp:40 654 {jump}
     (nil)
 -> 134)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 561 560 137)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 158 159 160 161 284 285 286 287
(code_label 137 561 138 9 3 "" [1 uses])
(note 138 137 139 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 9 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:52 90 {*movsi_internal}
     (nil))
(insn 140 139 141 9 (set (reg:DI 158 [ D.6871 ])
        (sign_extend:DI (reg:SI 284))) preproc.cpp:52 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 284)
        (nil)))
(insn 141 140 142 9 (set (reg:DI 285)
        (reg:DI 158 [ D.6871 ])) preproc.cpp:52 89 {*movdi_internal}
     (nil))
(insn 142 141 143 9 (parallel [
            (set (reg:DI 285)
                (ashift:DI (reg:DI 285)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:52 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 142 144 9 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg:DI 285)
                    (reg:DI 158 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 158 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 158 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 144 143 145 9 (parallel [
            (set (reg:DI 286)
                (ashift:DI (reg:DI 285)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:52 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 285)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 9 (set (reg:DI 285)
        (reg:DI 286)) preproc.cpp:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(insn 146 145 147 9 (set (reg:DI 159 [ D.6871 ])
        (reg:DI 285)) preproc.cpp:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (nil)))
(insn 147 146 148 9 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:52 89 {*movdi_internal}
     (nil))
(insn 148 147 149 9 (parallel [
            (set (reg/f:DI 160 [ D.6877 ])
                (plus:DI (reg:DI 159 [ D.6871 ])
                    (reg/f:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 287)
        (expr_list:REG_DEAD (reg:DI 159 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 159 [ D.6871 ]))
                    (nil))))))
(insn 149 148 150 9 (set (reg:SI 161 [ D.6870 ])
        (mem/j:SI (reg/f:DI 160 [ D.6877 ]) [0 _110->fid_scale+0 S4 A32])) preproc.cpp:52 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.6877 ])
        (nil)))
(insn 150 149 151 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:52 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 161 [ D.6870 ])
        (nil)))
(jump_insn 151 150 152 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) preproc.cpp:52 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 245)
;;  succ:       10 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 288
(note 152 151 153 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 10 (set (reg:DF 288)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) preproc.cpp:57 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 154 153 155 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 288)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) preproc.cpp:57 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 288)
        (nil)))
(jump_insn 155 154 548 10 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 562)
            (pc))) preproc.cpp:57 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 562)
;;  succ:       11 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 548 155 195 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 289
(code_label 195 548 159 12 11 "" [1 uses])
(note 159 195 160 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 12 (set (reg:DF 289)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) preproc.cpp:58 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 161 160 162 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 289)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) preproc.cpp:58 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 289)
        (nil)))
(jump_insn 162 161 166 12 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 245)
            (pc))) preproc.cpp:58 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 245)
;;  succ:       13 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 170 171 172 173 174 175 176 177 290 291 292 293 294 295 296 297 298 299 300 301
(note 166 162 167 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 13 (set (reg:DF 291)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) preproc.cpp:59 128 {*movdf_internal}
     (nil))
(insn 168 167 169 13 (set (reg:DF 292)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) preproc.cpp:59 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 169 168 170 13 (set (reg:DF 290)
        (mult:DF (reg:DF 291)
            (reg:DF 292))) preproc.cpp:59 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 292)
        (expr_list:REG_DEAD (reg:DF 291)
            (nil))))
(insn 170 169 171 13 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 290)) preproc.cpp:59 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 290)
        (nil)))
(insn 171 170 172 13 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:60 90 {*movsi_internal}
     (nil))
(insn 172 171 173 13 (set (reg:DI 170 [ D.6871 ])
        (sign_extend:DI (reg:SI 293))) preproc.cpp:60 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 293)
        (nil)))
(insn 173 172 174 13 (set (reg:DI 294)
        (reg:DI 170 [ D.6871 ])) preproc.cpp:60 89 {*movdi_internal}
     (nil))
(insn 174 173 175 13 (parallel [
            (set (reg:DI 294)
                (ashift:DI (reg:DI 294)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 175 174 176 13 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg:DI 294)
                    (reg:DI 170 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 170 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 176 175 177 13 (parallel [
            (set (reg:DI 295)
                (ashift:DI (reg:DI 294)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 294)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 13 (set (reg:DI 294)
        (reg:DI 295)) preproc.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 295)
        (nil)))
(insn 178 177 179 13 (set (reg:DI 171 [ D.6871 ])
        (reg:DI 294)) preproc.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(insn 179 178 180 13 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:60 89 {*movdi_internal}
     (nil))
(insn 180 179 181 13 (parallel [
            (set (reg/f:DI 172 [ D.6877 ])
                (plus:DI (reg:DI 171 [ D.6871 ])
                    (reg/f:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (expr_list:REG_DEAD (reg:DI 171 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 171 [ D.6871 ]))
                    (nil))))))
(insn 181 180 182 13 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:60 90 {*movsi_internal}
     (nil))
(insn 182 181 183 13 (set (reg:DI 173 [ D.6871 ])
        (sign_extend:DI (reg:SI 297))) preproc.cpp:60 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 297)
        (nil)))
(insn 183 182 184 13 (set (reg:DI 298)
        (reg:DI 173 [ D.6871 ])) preproc.cpp:60 89 {*movdi_internal}
     (nil))
(insn 184 183 185 13 (parallel [
            (set (reg:DI 298)
                (ashift:DI (reg:DI 298)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 185 184 186 13 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg:DI 298)
                    (reg:DI 173 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 186 185 187 13 (parallel [
            (set (reg:DI 299)
                (ashift:DI (reg:DI 298)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 298)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 13 (set (reg:DI 298)
        (reg:DI 299)) preproc.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 299)
        (nil)))
(insn 188 187 189 13 (set (reg:DI 174 [ D.6871 ])
        (reg:DI 298)) preproc.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (nil)))
(insn 189 188 190 13 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:60 89 {*movdi_internal}
     (nil))
(insn 190 189 191 13 (parallel [
            (set (reg/f:DI 175 [ D.6877 ])
                (plus:DI (reg:DI 174 [ D.6871 ])
                    (reg/f:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:60 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (expr_list:REG_DEAD (reg:DI 174 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 174 [ D.6871 ]))
                    (nil))))))
(insn 191 190 192 13 (set (reg:SF 176 [ D.6874 ])
        (mem/j:SF (plus:DI (reg/f:DI 175 [ D.6877 ])
                (const_int 4 [0x4])) [0 _128->scale_factor+0 S4 A32])) preproc.cpp:60 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.6877 ])
        (nil)))
(insn 192 191 193 13 (set (reg:SF 301)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) preproc.cpp:60 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 193 192 194 13 (set (reg:SF 177 [ D.6874 ])
        (mult:SF (reg:SF 176 [ D.6874 ])
            (reg:SF 301))) preproc.cpp:60 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 301)
        (expr_list:REG_DEAD (reg:SF 176 [ D.6874 ])
            (nil))))
(insn 194 193 563 13 (set (mem/j:SF (plus:DI (reg/f:DI 172 [ D.6877 ])
                (const_int 4 [0x4])) [0 _125->scale_factor+0 S4 A32])
        (reg:SF 177 [ D.6874 ])) preproc.cpp:60 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 177 [ D.6874 ])
        (expr_list:REG_DEAD (reg/f:DI 172 [ D.6877 ])
            (nil))))
(jump_insn 563 194 564 13 (set (pc)
        (label_ref 195)) preproc.cpp:58 654 {jump}
     (nil)
 -> 195)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 564 563 562)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 302
(code_label 562 564 199 14 33 "" [1 uses])
(note 199 562 200 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 14 (set (reg:DF 302)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) preproc.cpp:62 128 {*movdf_internal}
     (nil))
(insn 201 200 202 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 302)
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64]))) preproc.cpp:62 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 302)
        (nil)))
(jump_insn 202 201 552 14 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 245)
            (pc))) preproc.cpp:62 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 245)
;;  succ:       15 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 552 202 242 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              17 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 303
(code_label 242 552 206 16 14 "" [1 uses])
(note 206 242 207 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 16 (set (reg:DF 303)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) preproc.cpp:63 128 {*movdf_internal}
     (nil))
(insn 208 207 209 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 303)
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64]))) preproc.cpp:63 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 303)
        (nil)))
(jump_insn 209 208 213 16 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 245)
            (pc))) preproc.cpp:63 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 245)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162 163 164 165 166 167 168 169 304 305 306 307 308 309 310 311 312 313 314 315
(note 213 209 214 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 17 (set (reg:DF 305)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) preproc.cpp:64 128 {*movdf_internal}
     (nil))
(insn 215 214 216 17 (set (reg:DF 306)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) preproc.cpp:64 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 216 215 217 17 (set (reg:DF 304)
        (div:DF (reg:DF 305)
            (reg:DF 306))) preproc.cpp:64 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 306)
        (expr_list:REG_DEAD (reg:DF 305)
            (nil))))
(insn 217 216 218 17 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 304)) preproc.cpp:64 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 304)
        (nil)))
(insn 218 217 219 17 (set (reg:SI 307)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:65 90 {*movsi_internal}
     (nil))
(insn 219 218 220 17 (set (reg:DI 162 [ D.6871 ])
        (sign_extend:DI (reg:SI 307))) preproc.cpp:65 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 307)
        (nil)))
(insn 220 219 221 17 (set (reg:DI 308)
        (reg:DI 162 [ D.6871 ])) preproc.cpp:65 89 {*movdi_internal}
     (nil))
(insn 221 220 222 17 (parallel [
            (set (reg:DI 308)
                (ashift:DI (reg:DI 308)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 222 221 223 17 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg:DI 308)
                    (reg:DI 162 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 223 222 224 17 (parallel [
            (set (reg:DI 309)
                (ashift:DI (reg:DI 308)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 308)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 17 (set (reg:DI 308)
        (reg:DI 309)) preproc.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 309)
        (nil)))
(insn 225 224 226 17 (set (reg:DI 163 [ D.6871 ])
        (reg:DI 308)) preproc.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 308)
        (nil)))
(insn 226 225 227 17 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:65 89 {*movdi_internal}
     (nil))
(insn 227 226 228 17 (parallel [
            (set (reg/f:DI 164 [ D.6877 ])
                (plus:DI (reg:DI 163 [ D.6871 ])
                    (reg/f:DI 310)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 310)
        (expr_list:REG_DEAD (reg:DI 163 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 163 [ D.6871 ]))
                    (nil))))))
(insn 228 227 229 17 (set (reg:SI 311)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:65 90 {*movsi_internal}
     (nil))
(insn 229 228 230 17 (set (reg:DI 165 [ D.6871 ])
        (sign_extend:DI (reg:SI 311))) preproc.cpp:65 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 311)
        (nil)))
(insn 230 229 231 17 (set (reg:DI 312)
        (reg:DI 165 [ D.6871 ])) preproc.cpp:65 89 {*movdi_internal}
     (nil))
(insn 231 230 232 17 (parallel [
            (set (reg:DI 312)
                (ashift:DI (reg:DI 312)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 232 231 233 17 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg:DI 312)
                    (reg:DI 165 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 165 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 233 232 234 17 (parallel [
            (set (reg:DI 313)
                (ashift:DI (reg:DI 312)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 312)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 234 233 235 17 (set (reg:DI 312)
        (reg:DI 313)) preproc.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 313)
        (nil)))
(insn 235 234 236 17 (set (reg:DI 166 [ D.6871 ])
        (reg:DI 312)) preproc.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(insn 236 235 237 17 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:65 89 {*movdi_internal}
     (nil))
(insn 237 236 238 17 (parallel [
            (set (reg/f:DI 167 [ D.6877 ])
                (plus:DI (reg:DI 166 [ D.6871 ])
                    (reg/f:DI 314)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:65 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 314)
        (expr_list:REG_DEAD (reg:DI 166 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 166 [ D.6871 ]))
                    (nil))))))
(insn 238 237 239 17 (set (reg:SF 168 [ D.6874 ])
        (mem/j:SF (plus:DI (reg/f:DI 167 [ D.6877 ])
                (const_int 4 [0x4])) [0 _118->scale_factor+0 S4 A32])) preproc.cpp:65 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.6877 ])
        (nil)))
(insn 239 238 240 17 (set (reg:SF 315)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) preproc.cpp:65 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 240 239 241 17 (set (reg:SF 169 [ D.6874 ])
        (div:SF (reg:SF 168 [ D.6874 ])
            (reg:SF 315))) preproc.cpp:65 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 315)
        (expr_list:REG_DEAD (reg:SF 168 [ D.6874 ])
            (nil))))
(insn 241 240 565 17 (set (mem/j:SF (plus:DI (reg/f:DI 164 [ D.6877 ])
                (const_int 4 [0x4])) [0 _115->scale_factor+0 S4 A32])
        (reg:SF 169 [ D.6874 ])) preproc.cpp:65 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ D.6874 ])
        (expr_list:REG_DEAD (reg/f:DI 164 [ D.6877 ])
            (nil))))
(jump_insn 565 241 566 17 (set (pc)
        (label_ref 242)) preproc.cpp:63 654 {jump}
     (nil)
 -> 242)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 566 565 245)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              12
;;              14
;;              16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 178 179 180 181 182 183 184 185 186 187 188 316 317 318 319 320 321 322 323 324 325 326
(code_label 245 566 246 18 7 "" [4 uses])
(note 246 245 247 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 18 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:72 90 {*movsi_internal}
     (nil))
(insn 248 247 249 18 (set (reg:DI 178 [ D.6871 ])
        (sign_extend:DI (reg:SI 316))) preproc.cpp:72 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 316)
        (nil)))
(insn 249 248 250 18 (set (reg:DI 317)
        (reg:DI 178 [ D.6871 ])) preproc.cpp:72 89 {*movdi_internal}
     (nil))
(insn 250 249 251 18 (parallel [
            (set (reg:DI 317)
                (ashift:DI (reg:DI 317)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:72 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 251 250 252 18 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg:DI 317)
                    (reg:DI 178 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:72 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 252 251 253 18 (parallel [
            (set (reg:DI 318)
                (ashift:DI (reg:DI 317)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:72 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 317)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 253 252 254 18 (set (reg:DI 317)
        (reg:DI 318)) preproc.cpp:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 318)
        (nil)))
(insn 254 253 255 18 (set (reg:DI 179 [ D.6871 ])
        (reg:DI 317)) preproc.cpp:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(insn 255 254 256 18 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:72 89 {*movdi_internal}
     (nil))
(insn 256 255 257 18 (parallel [
            (set (reg/f:DI 180 [ D.6877 ])
                (plus:DI (reg:DI 179 [ D.6871 ])
                    (reg/f:DI 319)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:72 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 319)
        (expr_list:REG_DEAD (reg:DI 179 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 179 [ D.6871 ]))
                    (nil))))))
(insn 257 256 258 18 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:72 90 {*movsi_internal}
     (nil))
(insn 258 257 259 18 (set (reg:DI 181 [ D.6871 ])
        (sign_extend:DI (reg:SI 320))) preproc.cpp:72 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 320)
        (nil)))
(insn 259 258 260 18 (parallel [
            (set (reg:DI 182 [ D.6871 ])
                (ashift:DI (reg:DI 181 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:72 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 181 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 260 259 261 18 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:72 89 {*movdi_internal}
     (nil))
(insn 261 260 262 18 (parallel [
            (set (reg/f:DI 183 [ D.6872 ])
                (plus:DI (reg:DI 182 [ D.6871 ])
                    (reg/f:DI 321)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:72 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 321)
        (expr_list:REG_DEAD (reg:DI 182 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 182 [ D.6871 ]))
                    (nil))))))
(insn 262 261 263 18 (set (reg/f:DI 184 [ D.6873 ])
        (mem/f:DI (reg/f:DI 183 [ D.6872 ]) [0 *_137+0 S8 A64])) preproc.cpp:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183 [ D.6872 ])
        (nil)))
(insn 263 262 264 18 (set (reg:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:72 89 {*movdi_internal}
     (nil))
(insn 264 263 265 18 (set (reg:DI 1 dx)
        (reg/f:DI 180 [ D.6877 ])) preproc.cpp:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ D.6877 ])
        (nil)))
(insn 265 264 266 18 (set (reg:DI 4 si)
        (reg:DI 322)) preproc.cpp:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(insn 266 265 267 18 (set (reg:DI 5 di)
        (reg/f:DI 184 [ D.6873 ])) preproc.cpp:72 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184 [ D.6873 ])
        (nil)))
(call_insn 267 266 268 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5scalePfP12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe499a9d6c0 scale>) [0 scale S1 A8])
            (const_int 0 [0]))) preproc.cpp:72 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 268 267 269 18 (set (reg:SI 323)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:76 90 {*movsi_internal}
     (nil))
(insn 269 268 270 18 (set (reg:DI 185 [ D.6871 ])
        (sign_extend:DI (reg:SI 323))) preproc.cpp:76 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 323)
        (nil)))
(insn 270 269 271 18 (set (reg:DI 324)
        (reg:DI 185 [ D.6871 ])) preproc.cpp:76 89 {*movdi_internal}
     (nil))
(insn 271 270 272 18 (parallel [
            (set (reg:DI 324)
                (ashift:DI (reg:DI 324)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:76 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 272 271 273 18 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg:DI 324)
                    (reg:DI 185 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:76 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 273 272 274 18 (parallel [
            (set (reg:DI 325)
                (ashift:DI (reg:DI 324)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:76 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 324)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 274 273 275 18 (set (reg:DI 324)
        (reg:DI 325)) preproc.cpp:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 325)
        (nil)))
(insn 275 274 276 18 (set (reg:DI 186 [ D.6871 ])
        (reg:DI 324)) preproc.cpp:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(insn 276 275 277 18 (set (reg/f:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:76 89 {*movdi_internal}
     (nil))
(insn 277 276 278 18 (parallel [
            (set (reg/f:DI 187 [ D.6877 ])
                (plus:DI (reg:DI 186 [ D.6871 ])
                    (reg/f:DI 326)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:76 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 326)
        (expr_list:REG_DEAD (reg:DI 186 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 186 [ D.6871 ]))
                    (nil))))))
(insn 278 277 279 18 (set (reg:SI 188 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 187 [ D.6877 ])
                (const_int 16 [0x10])) [0 _143->bc+0 S4 A32])) preproc.cpp:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.6877 ])
        (nil)))
(insn 279 278 280 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 188 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:76 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 188 [ D.6870 ])
        (nil)))
(jump_insn 280 279 281 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) preproc.cpp:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 296)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 189 190 191 192 193 194 195 327 328 329 330
(note 281 280 282 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 19 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:77 90 {*movsi_internal}
     (nil))
(insn 283 282 284 19 (set (reg:DI 189 [ D.6871 ])
        (sign_extend:DI (reg:SI 327))) preproc.cpp:77 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 327)
        (nil)))
(insn 284 283 285 19 (parallel [
            (set (reg:DI 190 [ D.6871 ])
                (mult:DI (reg:DI 189 [ D.6871 ])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:77 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 189 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 285 284 286 19 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:77 89 {*movdi_internal}
     (nil))
(insn 286 285 287 19 (parallel [
            (set (reg/f:DI 191 [ D.6878 ])
                (plus:DI (reg:DI 190 [ D.6871 ])
                    (reg/f:DI 328)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 328)
        (expr_list:REG_DEAD (reg:DI 190 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 190 [ D.6871 ]))
                    (nil))))))
(insn 287 286 288 19 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:77 90 {*movsi_internal}
     (nil))
(insn 288 287 289 19 (set (reg:DI 192 [ D.6871 ])
        (sign_extend:DI (reg:SI 329))) preproc.cpp:77 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 329)
        (nil)))
(insn 289 288 290 19 (parallel [
            (set (reg:DI 193 [ D.6871 ])
                (ashift:DI (reg:DI 192 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:77 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 192 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 290 289 291 19 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:77 89 {*movdi_internal}
     (nil))
(insn 291 290 292 19 (parallel [
            (set (reg/f:DI 194 [ D.6872 ])
                (plus:DI (reg:DI 193 [ D.6871 ])
                    (reg/f:DI 330)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:77 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 330)
        (expr_list:REG_DEAD (reg:DI 193 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 193 [ D.6871 ]))
                    (nil))))))
(insn 292 291 293 19 (set (reg/f:DI 195 [ D.6873 ])
        (mem/f:DI (reg/f:DI 194 [ D.6872 ]) [0 *_150+0 S8 A64])) preproc.cpp:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 194 [ D.6872 ])
        (nil)))
(insn 293 292 294 19 (set (reg:DI 4 si)
        (reg/f:DI 191 [ D.6878 ])) preproc.cpp:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191 [ D.6878 ])
        (nil)))
(insn 294 293 295 19 (set (reg:DI 5 di)
        (reg/f:DI 195 [ D.6873 ])) preproc.cpp:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.6873 ])
        (nil)))
(call_insn 295 294 296 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16baseline_correctPfP12Procpar_info") [flags 0x3]  <function_decl 0x7fe499a9dca8 baseline_correct>) [0 baseline_correct S1 A8])
            (const_int 0 [0]))) preproc.cpp:77 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 196 197 198 199 331 332 333 334
(code_label 296 295 297 20 15 "" [1 uses])
(note 297 296 298 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 20 (set (reg:SI 331)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:82 90 {*movsi_internal}
     (nil))
(insn 299 298 300 20 (set (reg:DI 196 [ D.6871 ])
        (sign_extend:DI (reg:SI 331))) preproc.cpp:82 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 331)
        (nil)))
(insn 300 299 301 20 (set (reg:DI 332)
        (reg:DI 196 [ D.6871 ])) preproc.cpp:82 89 {*movdi_internal}
     (nil))
(insn 301 300 302 20 (parallel [
            (set (reg:DI 332)
                (ashift:DI (reg:DI 332)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:82 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 302 301 303 20 (parallel [
            (set (reg:DI 332)
                (plus:DI (reg:DI 332)
                    (reg:DI 196 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:82 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 196 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 303 302 304 20 (parallel [
            (set (reg:DI 333)
                (ashift:DI (reg:DI 332)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:82 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 332)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 304 303 305 20 (set (reg:DI 332)
        (reg:DI 333)) preproc.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 333)
        (nil)))
(insn 305 304 306 20 (set (reg:DI 197 [ D.6871 ])
        (reg:DI 332)) preproc.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (nil)))
(insn 306 305 307 20 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:82 89 {*movdi_internal}
     (nil))
(insn 307 306 308 20 (parallel [
            (set (reg/f:DI 198 [ D.6877 ])
                (plus:DI (reg:DI 197 [ D.6871 ])
                    (reg/f:DI 334)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:82 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 334)
        (expr_list:REG_DEAD (reg:DI 197 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 197 [ D.6871 ]))
                    (nil))))))
(insn 308 307 309 20 (set (reg:SI 199 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 198 [ D.6877 ])
                (const_int 32 [0x20])) [0 _155->max_normalize+0 S4 A32])) preproc.cpp:82 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198 [ D.6877 ])
        (nil)))
(insn 309 308 310 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:82 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 199 [ D.6870 ])
        (nil)))
(jump_insn 310 309 311 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) preproc.cpp:82 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 333)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 200 201 202 203 204 205 206 207 208 209 210 335 336 337 338 339 340
(note 311 310 312 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 21 (set (reg:SI 335)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:83 90 {*movsi_internal}
     (nil))
(insn 313 312 314 21 (set (reg:DI 200 [ D.6871 ])
        (sign_extend:DI (reg:SI 335))) preproc.cpp:83 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 335)
        (nil)))
(insn 314 313 315 21 (parallel [
            (set (reg:DI 201 [ D.6871 ])
                (mult:DI (reg:DI 200 [ D.6871 ])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:83 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 200 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 315 314 316 21 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:83 89 {*movdi_internal}
     (nil))
(insn 316 315 317 21 (parallel [
            (set (reg/f:DI 202 [ D.6878 ])
                (plus:DI (reg:DI 201 [ D.6871 ])
                    (reg/f:DI 336)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:83 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 336)
        (expr_list:REG_DEAD (reg:DI 201 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 201 [ D.6871 ]))
                    (nil))))))
(insn 317 316 318 21 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:83 90 {*movsi_internal}
     (nil))
(insn 318 317 319 21 (set (reg:DI 203 [ D.6871 ])
        (sign_extend:DI (reg:SI 337))) preproc.cpp:83 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 337)
        (nil)))
(insn 319 318 320 21 (parallel [
            (set (reg:DI 204 [ D.6871 ])
                (ashift:DI (reg:DI 203 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:83 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 203 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 320 319 321 21 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])) preproc.cpp:83 89 {*movdi_internal}
     (nil))
(insn 321 320 322 21 (parallel [
            (set (reg/f:DI 205 [ D.6872 ])
                (plus:DI (reg:DI 204 [ D.6871 ])
                    (reg/f:DI 338)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:83 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 338)
        (expr_list:REG_DEAD (reg:DI 204 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
                        (reg:DI 204 [ D.6871 ]))
                    (nil))))))
(insn 322 321 323 21 (set (reg/f:DI 206 [ D.6873 ])
        (mem/f:DI (reg/f:DI 205 [ D.6872 ]) [0 *_163+0 S8 A64])) preproc.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 205 [ D.6872 ])
        (nil)))
(insn 323 322 324 21 (set (reg:SI 339)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:83 90 {*movsi_internal}
     (nil))
(insn 324 323 325 21 (set (reg:DI 207 [ D.6871 ])
        (sign_extend:DI (reg:SI 339))) preproc.cpp:83 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 339)
        (nil)))
(insn 325 324 326 21 (parallel [
            (set (reg:DI 208 [ D.6871 ])
                (ashift:DI (reg:DI 207 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:83 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 207 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 326 325 327 21 (set (reg/f:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:83 89 {*movdi_internal}
     (nil))
(insn 327 326 328 21 (parallel [
            (set (reg/f:DI 209 [ D.6872 ])
                (plus:DI (reg:DI 208 [ D.6871 ])
                    (reg/f:DI 340)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:83 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 340)
        (expr_list:REG_DEAD (reg:DI 208 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 208 [ D.6871 ]))
                    (nil))))))
(insn 328 327 329 21 (set (reg/f:DI 210 [ D.6873 ])
        (mem/f:DI (reg/f:DI 209 [ D.6872 ]) [0 *_167+0 S8 A64])) preproc.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209 [ D.6872 ])
        (nil)))
(insn 329 328 330 21 (set (reg:DI 1 dx)
        (reg/f:DI 202 [ D.6878 ])) preproc.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202 [ D.6878 ])
        (nil)))
(insn 330 329 331 21 (set (reg:DI 4 si)
        (reg/f:DI 206 [ D.6873 ])) preproc.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ D.6873 ])
        (nil)))
(insn 331 330 332 21 (set (reg:DI 5 di)
        (reg/f:DI 210 [ D.6873 ])) preproc.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 210 [ D.6873 ])
        (nil)))
(call_insn 332 331 333 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9normalizePfS_P12Procpar_info") [flags 0x3]  <function_decl 0x7fe499a9d798 normalize>) [0 normalize S1 A8])
            (const_int 0 [0]))) preproc.cpp:83 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;;              21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 333 332 334 22 16 "" [1 uses])
(note 334 333 335 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 567 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:33 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 567 335 568 22 (set (pc)
        (label_ref 336)) preproc.cpp:33 654 {jump}
     (nil)
 -> 336)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 568 567 339)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 211 341
(code_label 339 568 340 23 2 "" [1 uses])
(note 340 339 341 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 23 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:90 89 {*movdi_internal}
     (nil))
(insn 342 341 343 23 (set (reg:SI 211 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 341)
                (const_int 12 [0xc])) [0 preprocess_109(D)->pre_ecc+0 S4 A32])) preproc.cpp:90 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 341)
        (nil)))
(insn 343 342 344 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 211 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:90 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 211 [ D.6870 ])
        (nil)))
(jump_insn 344 343 345 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 358)
            (pc))) preproc.cpp:90 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 358)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 212 213 214 342 343 344 345
(note 345 344 346 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 24 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:92 89 {*movdi_internal}
     (nil))
(insn 347 346 348 24 (parallel [
            (set (reg/f:DI 212 [ D.6872 ])
                (plus:DI (reg/f:DI 342)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:92 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 342)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 348 347 349 24 (set (reg/f:DI 213 [ D.6873 ])
        (mem/f:DI (reg/f:DI 212 [ D.6872 ]) [0 *_172+0 S8 A64])) preproc.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 212 [ D.6872 ])
        (nil)))
(insn 349 348 350 24 (set (reg/f:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:92 89 {*movdi_internal}
     (nil))
(insn 350 349 351 24 (set (reg/f:DI 214 [ D.6873 ])
        (mem/f:DI (reg/f:DI 343) [0 *out_data_30(D)+0 S8 A64])) preproc.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 343)
        (nil)))
(insn 351 350 352 24 (set (reg:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:92 89 {*movdi_internal}
     (nil))
(insn 352 351 353 24 (set (reg:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:92 89 {*movdi_internal}
     (nil))
(insn 353 352 354 24 (set (reg:DI 2 cx)
        (reg:DI 344)) preproc.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 344)
        (nil)))
(insn 354 353 355 24 (set (reg:DI 1 dx)
        (reg:DI 345)) preproc.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 345)
        (nil)))
(insn 355 354 356 24 (set (reg:DI 4 si)
        (reg/f:DI 213 [ D.6873 ])) preproc.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ D.6873 ])
        (nil)))
(insn 356 355 357 24 (set (reg:DI 5 di)
        (reg/f:DI 214 [ D.6873 ])) preproc.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214 [ D.6873 ])
        (nil)))
(call_insn 357 356 358 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z14ecc_correctionPfS_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe499a9d870 ecc_correction>) [0 ecc_correction S1 A8])
            (const_int 0 [0]))) preproc.cpp:92 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 215 346
(code_label 358 357 359 25 18 "" [1 uses])
(note 359 358 360 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 25 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:96 89 {*movdi_internal}
     (nil))
(insn 361 360 362 25 (set (reg:SI 215 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 346)
                (const_int 36 [0x24])) [0 preprocess_109(D)->pre_quality+0 S4 A32])) preproc.cpp:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 346)
        (nil)))
(insn 362 361 363 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:96 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 215 [ D.6870 ])
        (nil)))
(jump_insn 363 362 364 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 381)
            (pc))) preproc.cpp:96 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 381)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 216 217 218 219 220 347 348 349 350 351
(note 364 363 365 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 26 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 366 365 367 26 (parallel [
            (set (reg/f:DI 216 [ D.6872 ])
                (plus:DI (reg/f:DI 347)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 367 366 368 26 (set (reg/f:DI 217 [ D.6873 ])
        (mem/f:DI (reg/f:DI 216 [ D.6872 ]) [0 *_177+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 216 [ D.6872 ])
        (nil)))
(insn 368 367 369 26 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 369 368 370 26 (parallel [
            (set (reg/f:DI 218 [ D.6872 ])
                (plus:DI (reg/f:DI 348)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 348)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 370 369 371 26 (set (reg/f:DI 219 [ D.6873 ])
        (mem/f:DI (reg/f:DI 218 [ D.6872 ]) [0 *_179+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218 [ D.6872 ])
        (nil)))
(insn 371 370 372 26 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 372 371 373 26 (set (reg/f:DI 220 [ D.6873 ])
        (mem/f:DI (reg/f:DI 349) [0 *out_data_30(D)+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 349)
        (nil)))
(insn 373 372 374 26 (set (reg:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 374 373 375 26 (set (reg:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 375 374 376 26 (set (reg:DI 37 r8)
        (reg:DI 350)) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 350)
        (nil)))
(insn 376 375 377 26 (set (reg:DI 2 cx)
        (reg:DI 351)) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 351)
        (nil)))
(insn 377 376 378 26 (set (reg:DI 1 dx)
        (reg/f:DI 217 [ D.6873 ])) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 217 [ D.6873 ])
        (nil)))
(insn 378 377 379 26 (set (reg:DI 4 si)
        (reg/f:DI 219 [ D.6873 ])) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 219 [ D.6873 ])
        (nil)))
(insn 379 378 380 26 (set (reg:DI 5 di)
        (reg/f:DI 220 [ D.6873 ])) preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.6873 ])
        (nil)))
(call_insn 380 379 381 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7qualityPfS_S_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe499a9d948 quality>) [0 quality S1 A8])
            (const_int 0 [0]))) preproc.cpp:98 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 221 352
(code_label 381 380 382 27 19 "" [1 uses])
(note 382 381 383 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 27 (set (reg/f:DI 352)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:102 89 {*movdi_internal}
     (nil))
(insn 384 383 385 27 (set (reg:SI 221 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 352)
                (const_int 40 [0x28])) [0 preprocess_109(D)->pre_quecc+0 S4 A32])) preproc.cpp:102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 352)
        (nil)))
(insn 385 384 386 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 221 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:102 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 221 [ D.6870 ])
        (nil)))
(jump_insn 386 385 387 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) preproc.cpp:102 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 404)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 222 223 224 225 226 353 354 355 356 357
(note 387 386 388 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 28 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (nil))
(insn 389 388 390 28 (parallel [
            (set (reg/f:DI 222 [ D.6872 ])
                (plus:DI (reg/f:DI 353)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:104 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 353)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 390 389 391 28 (set (reg/f:DI 223 [ D.6873 ])
        (mem/f:DI (reg/f:DI 222 [ D.6872 ]) [0 *_184+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222 [ D.6872 ])
        (nil)))
(insn 391 390 392 28 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (nil))
(insn 392 391 393 28 (parallel [
            (set (reg/f:DI 224 [ D.6872 ])
                (plus:DI (reg/f:DI 354)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:104 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 393 392 394 28 (set (reg/f:DI 225 [ D.6873 ])
        (mem/f:DI (reg/f:DI 224 [ D.6872 ]) [0 *_186+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.6872 ])
        (nil)))
(insn 394 393 395 28 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (nil))
(insn 395 394 396 28 (set (reg/f:DI 226 [ D.6873 ])
        (mem/f:DI (reg/f:DI 355) [0 *out_data_30(D)+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (nil)))
(insn 396 395 397 28 (set (reg:DI 356)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (nil))
(insn 397 396 398 28 (set (reg:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:104 89 {*movdi_internal}
     (nil))
(insn 398 397 399 28 (set (reg:DI 37 r8)
        (reg:DI 356)) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 356)
        (nil)))
(insn 399 398 400 28 (set (reg:DI 2 cx)
        (reg:DI 357)) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 357)
        (nil)))
(insn 400 399 401 28 (set (reg:DI 1 dx)
        (reg/f:DI 223 [ D.6873 ])) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 223 [ D.6873 ])
        (nil)))
(insn 401 400 402 28 (set (reg:DI 4 si)
        (reg/f:DI 225 [ D.6873 ])) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 225 [ D.6873 ])
        (nil)))
(insn 402 401 403 28 (set (reg:DI 5 di)
        (reg/f:DI 226 [ D.6873 ])) preproc.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ D.6873 ])
        (nil)))
(call_insn 403 402 404 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5queccPfS_S_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe499a9da20 quecc>) [0 quecc S1 A8])
            (const_int 0 [0]))) preproc.cpp:104 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;;              28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 404 403 405 29 20 "" [1 uses])
(note 405 404 406 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 444 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:110 90 {*movsi_internal}
     (nil))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;;              33 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 227 358
(code_label 444 406 407 30 23 "" [1 uses])
(note 407 444 408 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 30 (set (reg/f:DI 358)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])) preproc.cpp:110 89 {*movdi_internal}
     (nil))
(insn 409 408 410 30 (set (reg:SI 227 [ D.6870 ])
        (mem:SI (reg/f:DI 358) [0 *fid_26(D)+0 S4 A32])) preproc.cpp:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 358)
        (nil)))
(insn 410 409 411 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 227 [ D.6870 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) preproc.cpp:110 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 227 [ D.6870 ])
        (nil)))
(jump_insn 411 410 412 30 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 447)
            (pc))) preproc.cpp:110 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 447)
;;  succ:       34
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 228 229 230 231 359 360 361 362
(note 412 411 413 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 31 (set (reg:SI 359)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:112 90 {*movsi_internal}
     (nil))
(insn 414 413 415 31 (set (reg:DI 228 [ D.6871 ])
        (sign_extend:DI (reg:SI 359))) preproc.cpp:112 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 359)
        (nil)))
(insn 415 414 416 31 (set (reg:DI 360)
        (reg:DI 228 [ D.6871 ])) preproc.cpp:112 89 {*movdi_internal}
     (nil))
(insn 416 415 417 31 (parallel [
            (set (reg:DI 360)
                (ashift:DI (reg:DI 360)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:112 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 417 416 418 31 (parallel [
            (set (reg:DI 360)
                (plus:DI (reg:DI 360)
                    (reg:DI 228 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:112 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 228 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 418 417 419 31 (parallel [
            (set (reg:DI 361)
                (ashift:DI (reg:DI 360)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:112 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 360)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 419 418 420 31 (set (reg:DI 360)
        (reg:DI 361)) preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 361)
        (nil)))
(insn 420 419 421 31 (set (reg:DI 229 [ D.6871 ])
        (reg:DI 360)) preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 360)
        (nil)))
(insn 421 420 422 31 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:112 89 {*movdi_internal}
     (nil))
(insn 422 421 423 31 (parallel [
            (set (reg/f:DI 230 [ D.6877 ])
                (plus:DI (reg:DI 229 [ D.6871 ])
                    (reg/f:DI 362)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:112 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 362)
        (expr_list:REG_DEAD (reg:DI 229 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 229 [ D.6871 ]))
                    (nil))))))
(insn 423 422 424 31 (set (reg:SI 231 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 230 [ D.6877 ])
                (const_int 68 [0x44])) [0 _194->tilt+0 S4 A32])) preproc.cpp:112 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230 [ D.6877 ])
        (nil)))
(insn 424 423 425 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 231 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:112 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 231 [ D.6870 ])
        (nil)))
(jump_insn 425 424 426 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) preproc.cpp:112 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 441)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 232 233 234 235 236 237 238 363 364 365 366
(note 426 425 427 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 32 (set (reg:SI 363)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:114 90 {*movsi_internal}
     (nil))
(insn 428 427 429 32 (set (reg:DI 232 [ D.6871 ])
        (sign_extend:DI (reg:SI 363))) preproc.cpp:114 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 363)
        (nil)))
(insn 429 428 430 32 (parallel [
            (set (reg:DI 233 [ D.6871 ])
                (mult:DI (reg:DI 232 [ D.6871 ])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:114 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 232 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 430 429 431 32 (set (reg/f:DI 364)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:114 89 {*movdi_internal}
     (nil))
(insn 431 430 432 32 (parallel [
            (set (reg/f:DI 234 [ D.6878 ])
                (plus:DI (reg:DI 233 [ D.6871 ])
                    (reg/f:DI 364)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:114 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 364)
        (expr_list:REG_DEAD (reg:DI 233 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 233 [ D.6871 ]))
                    (nil))))))
(insn 432 431 433 32 (set (reg:SI 365)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:114 90 {*movsi_internal}
     (nil))
(insn 433 432 434 32 (set (reg:DI 235 [ D.6871 ])
        (sign_extend:DI (reg:SI 365))) preproc.cpp:114 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 365)
        (nil)))
(insn 434 433 435 32 (parallel [
            (set (reg:DI 236 [ D.6871 ])
                (ashift:DI (reg:DI 235 [ D.6871 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:114 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 235 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 435 434 436 32 (set (reg/f:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:114 89 {*movdi_internal}
     (nil))
(insn 436 435 437 32 (parallel [
            (set (reg/f:DI 237 [ D.6872 ])
                (plus:DI (reg:DI 236 [ D.6871 ])
                    (reg/f:DI 366)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:114 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 366)
        (expr_list:REG_DEAD (reg:DI 236 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 236 [ D.6871 ]))
                    (nil))))))
(insn 437 436 438 32 (set (reg/f:DI 238 [ D.6873 ])
        (mem/f:DI (reg/f:DI 237 [ D.6872 ]) [0 *_201+0 S8 A64])) preproc.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 237 [ D.6872 ])
        (nil)))
(insn 438 437 439 32 (set (reg:DI 4 si)
        (reg/f:DI 234 [ D.6878 ])) preproc.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 234 [ D.6878 ])
        (nil)))
(insn 439 438 440 32 (set (reg:DI 5 di)
        (reg/f:DI 238 [ D.6873 ])) preproc.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238 [ D.6873 ])
        (nil)))
(call_insn 440 439 441 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16baseline_correctPfP12Procpar_info") [flags 0x3]  <function_decl 0x7fe499a9dca8 baseline_correct>) [0 baseline_correct S1 A8])
            (const_int 0 [0]))) preproc.cpp:114 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;;              32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 441 440 442 33 22 "" [1 uses])
(note 442 441 443 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 569 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:110 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 569 443 570 33 (set (pc)
        (label_ref 444)) preproc.cpp:110 654 {jump}
     (nil)
 -> 444)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 570 569 447)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 239 367 368
(code_label 447 570 448 34 21 "" [1 uses])
(note 448 447 449 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 34 (set (reg/f:DI 367)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:121 89 {*movdi_internal}
     (nil))
(insn 450 449 451 34 (set (reg:SF 239 [ D.6874 ])
        (mem/j:SF (plus:DI (reg/f:DI 367)
                (const_int 28 [0x1c])) [0 preprocess_109(D)->comp_filter+0 S4 A32])) preproc.cpp:121 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 367)
        (nil)))
(insn 451 450 452 34 (set (reg:SF 368)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:121 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 452 451 453 34 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 239 [ D.6874 ])
            (reg:SF 368))) preproc.cpp:121 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 368)
        (nil)))
(jump_insn 453 452 555 34 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) preproc.cpp:121 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 478)
;;  succ:       40
;;              35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 239

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 239
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 239
;; lr  def 	 17 [flags] 369
(note 555 453 454 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 454 555 455 35 (set (reg:SF 369)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:121 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 455 454 456 35 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 239 [ D.6874 ])
            (reg:SF 369))) preproc.cpp:121 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 369)
        (expr_list:REG_DEAD (reg:SF 239 [ D.6874 ])
            (nil))))
(jump_insn 456 455 457 35 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) preproc.cpp:121 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 478)
;;  succ:       40
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 240 241 370 371
(note 457 456 458 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 36 (set (reg/f:DI 370)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:121 89 {*movdi_internal}
     (nil))
(insn 459 458 460 36 (parallel [
            (set (reg/f:DI 240 [ D.6877 ])
                (plus:DI (reg/f:DI 370)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:121 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 370)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 460 459 461 36 (set (reg:SF 241 [ D.6874 ])
        (mem/j:SF (plus:DI (reg/f:DI 240 [ D.6877 ])
                (const_int 28 [0x1c])) [0 _206->comp_filter+0 S4 A32])) preproc.cpp:121 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 240 [ D.6877 ])
        (nil)))
(insn 461 460 462 36 (set (reg:SF 371)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:121 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 462 461 463 36 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 241 [ D.6874 ])
            (reg:SF 371))) preproc.cpp:121 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 371)
        (nil)))
(jump_insn 463 462 556 36 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) preproc.cpp:121 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 478)
;;  succ:       40
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241
;; lr  def 	 17 [flags] 372
(note 556 463 464 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 464 556 465 37 (set (reg:SF 372)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:121 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 465 464 466 37 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 241 [ D.6874 ])
            (reg:SF 372))) preproc.cpp:121 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 372)
        (expr_list:REG_DEAD (reg:SF 241 [ D.6874 ])
            (nil))))
(jump_insn 466 465 467 37 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) preproc.cpp:121 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 478)
;;  succ:       40
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 242 373
(note 467 466 468 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 38 (set (reg/f:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:122 89 {*movdi_internal}
     (nil))
(insn 469 468 470 38 (set (reg:SI 242 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 373)
                (const_int 52 [0x34])) [0 preprocess_109(D)->pre_quecc_if+0 S4 A32])) preproc.cpp:122 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 373)
        (nil)))
(insn 470 469 471 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.6870 ])
            (const_int 1 [0x1]))) preproc.cpp:121 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 242 [ D.6870 ])
        (nil)))
(jump_insn 471 470 472 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) preproc.cpp:121 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 478)
;;  succ:       40
;;              39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 243 244 374
(note 472 471 473 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 39 (set (reg/f:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:122 89 {*movdi_internal}
     (nil))
(insn 474 473 475 39 (parallel [
            (set (reg/f:DI 243 [ D.6877 ])
                (plus:DI (reg/f:DI 374)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:122 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 374)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 475 474 476 39 (set (reg:SI 244 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 243 [ D.6877 ])
                (const_int 52 [0x34])) [0 _209->pre_quecc_if+0 S4 A32])) preproc.cpp:122 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 243 [ D.6877 ])
        (nil)))
(insn 476 475 477 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 244 [ D.6870 ])
            (const_int 1 [0x1]))) preproc.cpp:122 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 244 [ D.6870 ])
        (nil)))
(jump_insn 477 476 478 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 492)
            (pc))) preproc.cpp:122 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 492)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35
;;              37
;;              38
;;              39 (FALLTHRU)
;;              34
;;              36
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 245 246 247 375 376 377 378
(code_label 478 477 479 40 24 "" [5 uses])
(note 479 478 480 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 40 (set (reg/f:DI 375)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:124 89 {*movdi_internal}
     (nil))
(insn 481 480 482 40 (parallel [
            (set (reg/f:DI 245 [ D.6872 ])
                (plus:DI (reg/f:DI 375)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:124 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 375)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 482 481 483 40 (set (reg/f:DI 246 [ D.6873 ])
        (mem/f:DI (reg/f:DI 245 [ D.6872 ]) [0 *_211+0 S8 A64])) preproc.cpp:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.6872 ])
        (nil)))
(insn 483 482 484 40 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:124 89 {*movdi_internal}
     (nil))
(insn 484 483 485 40 (set (reg/f:DI 247 [ D.6873 ])
        (mem/f:DI (reg/f:DI 376) [0 *out_data_30(D)+0 S8 A64])) preproc.cpp:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 376)
        (nil)))
(insn 485 484 486 40 (set (reg:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:124 89 {*movdi_internal}
     (nil))
(insn 486 485 487 40 (set (reg:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:124 89 {*movdi_internal}
     (nil))
(insn 487 486 488 40 (set (reg:DI 2 cx)
        (reg:DI 377)) preproc.cpp:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 377)
        (nil)))
(insn 488 487 489 40 (set (reg:DI 1 dx)
        (reg:DI 378)) preproc.cpp:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 378)
        (nil)))
(insn 489 488 490 40 (set (reg:DI 4 si)
        (reg/f:DI 246 [ D.6873 ])) preproc.cpp:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 246 [ D.6873 ])
        (nil)))
(insn 490 489 491 40 (set (reg:DI 5 di)
        (reg/f:DI 247 [ D.6873 ])) preproc.cpp:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 247 [ D.6873 ])
        (nil)))
(call_insn 491 490 492 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6filterPfS_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe499a9dbd0 filter>) [0 filter S1 A8])
            (const_int 0 [0]))) preproc.cpp:124 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
;;              40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 492 491 493 41 25 "" [1 uses])
(note 493 492 494 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 530 41 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:129 90 {*movsi_internal}
     (nil))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;;              45 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 248 379
(code_label 530 494 495 42 28 "" [1 uses])
(note 495 530 496 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 42 (set (reg/f:DI 379)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])) preproc.cpp:129 89 {*movdi_internal}
     (nil))
(insn 497 496 498 42 (set (reg:SI 248 [ D.6870 ])
        (mem:SI (reg/f:DI 379) [0 *fid_26(D)+0 S4 A32])) preproc.cpp:129 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 379)
        (nil)))
(insn 498 497 499 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 248 [ D.6870 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) preproc.cpp:129 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 248 [ D.6870 ])
        (nil)))
(jump_insn 499 498 500 42 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 533)
            (pc))) preproc.cpp:129 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 533)
;;  succ:       46
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 249 250 251 252 380 381 382 383
(note 500 499 501 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 43 (set (reg:SI 380)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) preproc.cpp:130 90 {*movsi_internal}
     (nil))
(insn 502 501 503 43 (set (reg:DI 249 [ D.6871 ])
        (sign_extend:DI (reg:SI 380))) preproc.cpp:130 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 380)
        (nil)))
(insn 503 502 504 43 (set (reg:DI 381)
        (reg:DI 249 [ D.6871 ])) preproc.cpp:130 89 {*movdi_internal}
     (nil))
(insn 504 503 505 43 (parallel [
            (set (reg:DI 381)
                (ashift:DI (reg:DI 381)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:130 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 505 504 506 43 (parallel [
            (set (reg:DI 381)
                (plus:DI (reg:DI 381)
                    (reg:DI 249 [ D.6871 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:130 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 249 [ D.6871 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 249 [ D.6871 ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 506 505 507 43 (parallel [
            (set (reg:DI 382)
                (ashift:DI (reg:DI 381)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:130 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 381)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 507 506 508 43 (set (reg:DI 381)
        (reg:DI 382)) preproc.cpp:130 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 382)
        (nil)))
(insn 508 507 509 43 (set (reg:DI 250 [ D.6871 ])
        (reg:DI 381)) preproc.cpp:130 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 381)
        (nil)))
(insn 509 508 510 43 (set (reg/f:DI 383)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:130 89 {*movdi_internal}
     (nil))
(insn 510 509 511 43 (parallel [
            (set (reg/f:DI 251 [ D.6877 ])
                (plus:DI (reg:DI 250 [ D.6871 ])
                    (reg/f:DI 383)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:130 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 383)
        (expr_list:REG_DEAD (reg:DI 250 [ D.6871 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 250 [ D.6871 ]))
                    (nil))))))
(insn 511 510 512 43 (set (reg:SI 252 [ D.6870 ])
        (mem/j:SI (plus:DI (reg/f:DI 251 [ D.6877 ])
                (const_int 24 [0x18])) [0 _219->data_zero_fill+0 S4 A32])) preproc.cpp:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 251 [ D.6877 ])
        (nil)))
(insn 512 511 513 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ D.6870 ])
            (const_int 0 [0]))) preproc.cpp:130 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 252 [ D.6870 ])
        (nil)))
(jump_insn 513 512 514 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) preproc.cpp:130 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 527)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 253 254 255 384 385 386 387
(note 514 513 515 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 44 (set (reg/f:DI 384)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:131 89 {*movdi_internal}
     (nil))
(insn 516 515 517 44 (parallel [
            (set (reg/f:DI 253 [ D.6872 ])
                (plus:DI (reg/f:DI 384)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:131 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 384)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 517 516 518 44 (set (reg/f:DI 254 [ D.6873 ])
        (mem/f:DI (reg/f:DI 253 [ D.6872 ]) [0 *_221+0 S8 A64])) preproc.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ D.6872 ])
        (nil)))
(insn 518 517 519 44 (set (reg/f:DI 385)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) preproc.cpp:131 89 {*movdi_internal}
     (nil))
(insn 519 518 520 44 (set (reg/f:DI 255 [ D.6873 ])
        (mem/f:DI (reg/f:DI 385) [0 *out_data_30(D)+0 S8 A64])) preproc.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 385)
        (nil)))
(insn 520 519 521 44 (set (reg:DI 386)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:131 89 {*movdi_internal}
     (nil))
(insn 521 520 522 44 (set (reg:DI 387)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:131 89 {*movdi_internal}
     (nil))
(insn 522 521 523 44 (set (reg:DI 2 cx)
        (reg:DI 386)) preproc.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 386)
        (nil)))
(insn 523 522 524 44 (set (reg:DI 1 dx)
        (reg:DI 387)) preproc.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 387)
        (nil)))
(insn 524 523 525 44 (set (reg:DI 4 si)
        (reg/f:DI 254 [ D.6873 ])) preproc.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.6873 ])
        (nil)))
(insn 525 524 526 44 (set (reg:DI 5 di)
        (reg/f:DI 255 [ D.6873 ])) preproc.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 255 [ D.6873 ])
        (nil)))
(call_insn 526 525 527 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9zero_fillPfS_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe499a9daf8 zero_fill>) [0 zero_fill S1 A8])
            (const_int 0 [0]))) preproc.cpp:131 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 527 526 528 45 27 "" [1 uses])
(note 528 527 529 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 571 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:129 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 571 529 572 45 (set (pc)
        (label_ref 530)) preproc.cpp:129 654 {jump}
     (nil)
 -> 530)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 572 571 533)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 256 257
(code_label 533 572 534 46 26 "" [1 uses])
(note 534 533 535 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 538 46 (set (reg:SI 256 [ D.6870 ])
        (const_int 1 [0x1])) preproc.cpp:135 90 {*movsi_internal}
     (nil))
(insn 538 535 542 46 (set (reg:SI 257 [ <retval> ])
        (reg:SI 256 [ D.6870 ])) preproc.cpp:135 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 256 [ D.6870 ])
        (nil)))
(insn 542 538 543 46 (set (reg/i:SI 0 ax)
        (reg:SI 257 [ <retval> ])) preproc.cpp:136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 257 [ <retval> ])
        (nil)))
(insn 543 542 0 46 (use (reg/i:SI 0 ax)) preproc.cpp:136 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int scale(float*, Procpar_info*, Preprocess*) (_Z5scalePfP12Procpar_infoP10Preprocess, funcdef_no=3, decl_uid=5457, cgraph_uid=3, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 30 count 20 (    1)
Building IRA IR
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 264.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r298: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r298,l0) best SSE_REGS, allocno SSE_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a22 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a60 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r281,l0) best SSE_REGS, allocno SSE_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r278,l0) best SSE_REGS, allocno SSE_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a76 (r276,l0) best SSE_REGS, allocno SSE_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r273,l0) best SSE_REGS, allocno SSE_REGS
    r272: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a87 (r272,l0) best SSE_REGS, allocno SSE_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r269,l0) best SSE_REGS, allocno SSE_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r264,l0) best SSE_REGS, allocno SSE_REGS
    r263: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a117 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a143 (r254,l0) best SSE_REGS, allocno SSE_REGS
    r253: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a147 (r253,l0) best SSE_REGS, allocno SSE_REGS
    r252: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a150 (r252,l0) best SSE_REGS, allocno SSE_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a157 (r249,l0) best SSE_REGS, allocno SSE_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a162 (r247,l0) best SSE_REGS, allocno SSE_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a170 (r244,l0) best SSE_REGS, allocno SSE_REGS
    r243: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r243,l0) best SSE_REGS, allocno SSE_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a211 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a20 (r214,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r213: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a21 (r213,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r212: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a59 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a72 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a73 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a83 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a85 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a95 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a97 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a109 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a110 (r153,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r152: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a111 (r152,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a113 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a116 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a118 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a119 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a142 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a146 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a148 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a149 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a158 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a159 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a161 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a169 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a171 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a180 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a181 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a182 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a196 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a197 (r95,l0) best SSE_REGS, allocno SSE_REGS
    r94: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a198 (r94,l0) best SSE_REGS, allocno SSE_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r226,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r298,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a5(r225,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a6(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a15(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a16(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r215,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a20(r214,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a21(r213,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a22(r293,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a23(r212,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a24(r211,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a25(r210,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r209,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r292,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a28(r208,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a29(r202,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a30(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a34(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a40(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a41(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a47(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a48(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a53(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a54(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a55(r188,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a56(r283,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a57(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a58(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a59(r185,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a60(r282,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a61(r184,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a62(r183,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a63(r281,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a64(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a67(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a68(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a69(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r278,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a72(r177,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a73(r176,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a74(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a75(r175,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a76(r276,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a77(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a78(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a79(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a80(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a81(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a84(r273,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a85(r169,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a86(r168,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a87(r272,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a88(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a89(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a90(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a91(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a92(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a93(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a94(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r163,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a96(r269,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a97(r162,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a98(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a99(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a100(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a101(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a102(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a105(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a106(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a109(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a110(r153,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a111(r152,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a112(r264,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a113(r151,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a114(r150,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a115(r149,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a116(r148,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a117(r263,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a118(r147,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a119(r142,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a120(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a121(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a122(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a123(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a124(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a125(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a126(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a127(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a128(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a130(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a131(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a132(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a137(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a138(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a139(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a140(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a141(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a142(r130,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a143(r254,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a144(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a145(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a146(r127,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a147(r253,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a148(r126,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a149(r125,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a150(r252,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a151(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a152(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a153(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a154(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a155(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a156(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a157(r249,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a158(r120,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a159(r119,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a160(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a161(r118,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a162(r247,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a163(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a164(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a165(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a166(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a167(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a168(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a169(r113,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a170(r244,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a171(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a172(r111,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a173(r243,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a174(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a175(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a176(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a177(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a178(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r107,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a181(r106,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a182(r105,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a183(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a184(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a185(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a186(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a187(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a188(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a189(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a191(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a192(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a193(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a195(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a196(r96,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a197(r95,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a198(r94,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a199(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a200(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a201(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a202(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a203(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a204(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a205(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a206(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a207(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a208(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a209(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a210(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a211(r229,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 307(l0): point = 0
   Insn 306(l0): point = 2
   Insn 302(l0): point = 4
   Insn 299(l0): point = 6
   Insn 16(l0): point = 9
   Insn 15(l0): point = 11
   Insn 14(l0): point = 13
   Insn 13(l0): point = 15
   Insn 319(l0): point = 18
   Insn 293(l0): point = 20
   Insn 199(l0): point = 23
   Insn 198(l0): point = 25
   Insn 197(l0): point = 27
   Insn 196(l0): point = 29
   Insn 195(l0): point = 31
   Insn 194(l0): point = 33
   Insn 193(l0): point = 35
   Insn 192(l0): point = 37
   Insn 191(l0): point = 39
   Insn 190(l0): point = 41
   Insn 189(l0): point = 43
   Insn 188(l0): point = 45
   Insn 187(l0): point = 47
   Insn 186(l0): point = 49
   Insn 185(l0): point = 51
   Insn 288(l0): point = 54
   Insn 287(l0): point = 56
   Insn 286(l0): point = 58
   Insn 285(l0): point = 60
   Insn 284(l0): point = 62
   Insn 283(l0): point = 64
   Insn 282(l0): point = 66
   Insn 281(l0): point = 68
   Insn 280(l0): point = 70
   Insn 279(l0): point = 72
   Insn 278(l0): point = 74
   Insn 277(l0): point = 76
   Insn 276(l0): point = 78
   Insn 275(l0): point = 80
   Insn 274(l0): point = 82
   Insn 273(l0): point = 84
   Insn 272(l0): point = 86
   Insn 180(l0): point = 89
   Insn 179(l0): point = 91
   Insn 178(l0): point = 93
   Insn 177(l0): point = 95
   Insn 176(l0): point = 97
   Insn 175(l0): point = 99
   Insn 174(l0): point = 101
   Insn 173(l0): point = 103
   Insn 172(l0): point = 105
   Insn 171(l0): point = 107
   Insn 170(l0): point = 109
   Insn 169(l0): point = 111
   Insn 168(l0): point = 113
   Insn 80(l0): point = 116
   Insn 79(l0): point = 118
   Insn 78(l0): point = 120
   Insn 77(l0): point = 122
   Insn 76(l0): point = 124
   Insn 75(l0): point = 126
   Insn 74(l0): point = 128
   Insn 73(l0): point = 130
   Insn 72(l0): point = 132
   Insn 71(l0): point = 134
   Insn 70(l0): point = 136
   Insn 69(l0): point = 138
   Insn 68(l0): point = 140
   Insn 67(l0): point = 142
   Insn 66(l0): point = 144
   Insn 163(l0): point = 147
   Insn 162(l0): point = 149
   Insn 161(l0): point = 151
   Insn 160(l0): point = 153
   Insn 159(l0): point = 155
   Insn 158(l0): point = 157
   Insn 157(l0): point = 159
   Insn 156(l0): point = 161
   Insn 155(l0): point = 163
   Insn 154(l0): point = 165
   Insn 153(l0): point = 167
   Insn 152(l0): point = 169
   Insn 151(l0): point = 171
   Insn 150(l0): point = 173
   Insn 149(l0): point = 175
   Insn 61(l0): point = 178
   Insn 60(l0): point = 180
   Insn 59(l0): point = 182
   Insn 58(l0): point = 184
   Insn 57(l0): point = 186
   Insn 56(l0): point = 188
   Insn 55(l0): point = 190
   Insn 54(l0): point = 192
   Insn 53(l0): point = 194
   Insn 52(l0): point = 196
   Insn 51(l0): point = 198
   Insn 50(l0): point = 200
   Insn 49(l0): point = 202
   Insn 48(l0): point = 204
   Insn 47(l0): point = 206
   Insn 46(l0): point = 208
   Insn 45(l0): point = 210
   Insn 44(l0): point = 212
   Insn 43(l0): point = 214
   Insn 42(l0): point = 216
   Insn 41(l0): point = 218
   Insn 40(l0): point = 220
   Insn 39(l0): point = 222
   Insn 38(l0): point = 224
   Insn 37(l0): point = 226
   Insn 36(l0): point = 228
   Insn 35(l0): point = 230
   Insn 34(l0): point = 232
   Insn 33(l0): point = 234
   Insn 32(l0): point = 236
   Insn 31(l0): point = 238
   Insn 30(l0): point = 240
   Insn 29(l0): point = 242
   Insn 28(l0): point = 244
   Insn 27(l0): point = 246
   Insn 26(l0): point = 248
   Insn 25(l0): point = 250
   Insn 24(l0): point = 252
   Insn 23(l0): point = 254
   Insn 22(l0): point = 256
   Insn 21(l0): point = 258
   Insn 20(l0): point = 260
   Insn 19(l0): point = 262
   Insn 18(l0): point = 264
   Insn 315(l0): point = 267
   Insn 144(l0): point = 269
   Insn 143(l0): point = 271
   Insn 142(l0): point = 273
   Insn 141(l0): point = 275
   Insn 140(l0): point = 277
   Insn 139(l0): point = 279
   Insn 138(l0): point = 281
   Insn 137(l0): point = 283
   Insn 136(l0): point = 285
   Insn 135(l0): point = 287
   Insn 134(l0): point = 289
   Insn 133(l0): point = 291
   Insn 132(l0): point = 293
   Insn 131(l0): point = 295
   Insn 130(l0): point = 297
   Insn 129(l0): point = 299
   Insn 128(l0): point = 301
   Insn 127(l0): point = 303
   Insn 126(l0): point = 305
   Insn 125(l0): point = 307
   Insn 124(l0): point = 309
   Insn 123(l0): point = 311
   Insn 122(l0): point = 313
   Insn 121(l0): point = 315
   Insn 120(l0): point = 317
   Insn 119(l0): point = 319
   Insn 118(l0): point = 321
   Insn 117(l0): point = 323
   Insn 116(l0): point = 325
   Insn 115(l0): point = 327
   Insn 114(l0): point = 329
   Insn 112(l0): point = 332
   Insn 111(l0): point = 334
   Insn 110(l0): point = 336
   Insn 109(l0): point = 338
   Insn 108(l0): point = 340
   Insn 107(l0): point = 342
   Insn 105(l0): point = 345
   Insn 104(l0): point = 347
   Insn 103(l0): point = 349
   Insn 102(l0): point = 351
   Insn 101(l0): point = 353
   Insn 100(l0): point = 355
   Insn 99(l0): point = 357
   Insn 97(l0): point = 360
   Insn 96(l0): point = 362
   Insn 95(l0): point = 364
   Insn 94(l0): point = 366
   Insn 93(l0): point = 368
   Insn 92(l0): point = 370
   Insn 91(l0): point = 372
   Insn 90(l0): point = 374
   Insn 89(l0): point = 376
   Insn 88(l0): point = 378
   Insn 87(l0): point = 380
   Insn 86(l0): point = 382
   Insn 85(l0): point = 384
   Insn 84(l0): point = 386
   Insn 83(l0): point = 388
   Insn 82(l0): point = 390
   Insn 317(l0): point = 393
   Insn 267(l0): point = 395
   Insn 266(l0): point = 397
   Insn 265(l0): point = 399
   Insn 264(l0): point = 401
   Insn 263(l0): point = 403
   Insn 262(l0): point = 405
   Insn 261(l0): point = 407
   Insn 260(l0): point = 409
   Insn 259(l0): point = 411
   Insn 258(l0): point = 413
   Insn 257(l0): point = 415
   Insn 256(l0): point = 417
   Insn 255(l0): point = 419
   Insn 254(l0): point = 421
   Insn 253(l0): point = 423
   Insn 252(l0): point = 425
   Insn 251(l0): point = 427
   Insn 250(l0): point = 429
   Insn 249(l0): point = 431
   Insn 248(l0): point = 433
   Insn 247(l0): point = 435
   Insn 246(l0): point = 437
   Insn 245(l0): point = 439
   Insn 244(l0): point = 441
   Insn 243(l0): point = 443
   Insn 242(l0): point = 445
   Insn 241(l0): point = 447
   Insn 240(l0): point = 449
   Insn 239(l0): point = 451
   Insn 238(l0): point = 453
   Insn 237(l0): point = 455
   Insn 236(l0): point = 457
   Insn 235(l0): point = 459
   Insn 234(l0): point = 461
   Insn 232(l0): point = 464
   Insn 231(l0): point = 466
   Insn 230(l0): point = 468
   Insn 229(l0): point = 470
   Insn 228(l0): point = 472
   Insn 227(l0): point = 474
   Insn 225(l0): point = 477
   Insn 224(l0): point = 479
   Insn 223(l0): point = 481
   Insn 222(l0): point = 483
   Insn 221(l0): point = 485
   Insn 220(l0): point = 487
   Insn 219(l0): point = 489
   Insn 217(l0): point = 492
   Insn 216(l0): point = 494
   Insn 215(l0): point = 496
   Insn 214(l0): point = 498
   Insn 213(l0): point = 500
   Insn 212(l0): point = 502
   Insn 211(l0): point = 504
   Insn 210(l0): point = 506
   Insn 209(l0): point = 508
   Insn 208(l0): point = 510
   Insn 207(l0): point = 512
   Insn 206(l0): point = 514
   Insn 205(l0): point = 516
   Insn 204(l0): point = 518
   Insn 203(l0): point = 520
   Insn 202(l0): point = 522
   Insn 201(l0): point = 524
   Insn 11(l0): point = 527
   Insn 10(l0): point = 529
   Insn 9(l0): point = 531
   Insn 8(l0): point = 533
   Insn 4(l0): point = 535
   Insn 3(l0): point = 537
   Insn 2(l0): point = 539
 a0(r228): [3..4]
 a1(r227): [5..6]
 a2(r219): [55..76]
 a3(r226): [55..56]
 a4(r298): [57..58]
 a5(r225): [57..60]
 a6(r224): [61..62]
 a7(r297): [63..64]
 a8(r223): [63..66]
 a9(r222): [67..68]
 a10(r221): [69..70]
 a11(r220): [71..72]
 a12(r296): [73..74]
 a13(r295): [77..78]
 a14(r218): [77..80]
 a15(r217): [81..82]
 a16(r216): [83..84]
 a17(r294): [85..86]
 a18(r196): [396..451]
 a19(r215): [396..397]
 a20(r214): [398..399]
 a21(r213): [404..405]
 a22(r293): [406..407]
 a23(r212): [406..409]
 a24(r211): [410..411]
 a25(r210): [412..413]
 a26(r209): [412..417]
 a27(r292): [414..415]
 a28(r208): [418..419]
 a29(r202): [418..435]
 a30(r207): [420..421]
 a31(r291): [422..423]
 a32(r206): [422..425]
 a33(r205): [426..427]
 a34(r204): [428..429]
 a35(r203): [430..431]
 a36(r290): [432..433]
 a37(r201): [436..437]
 a38(r289): [438..439]
 a39(r200): [438..441]
 a40(r199): [442..443]
 a41(r198): [444..445]
 a42(r197): [446..447]
 a43(r288): [448..449]
 a44(r287): [452..453]
 a45(r195): [452..455]
 a46(r194): [456..457]
 a47(r193): [458..459]
 a48(r286): [460..461]
 a49(r192): [467..468]
 a50(r191): [467..472]
 a51(r285): [469..470]
 a52(r284): [473..474]
 a53(r190): [480..481]
 a54(r189): [482..483]
 a55(r188): [486..489]
 a56(r283): [486..487]
 a57(r187): [495..496]
 a58(r186): [497..498]
 a59(r185): [501..504]
 a60(r282): [501..502]
 a61(r184): [505..506]
 a62(r183): [507..510]
 a63(r281): [507..508]
 a64(r182): [511..512]
 a65(r280): [513..514]
 a66(r181): [513..516]
 a67(r180): [517..518]
 a68(r179): [519..520]
 a69(r178): [521..522]
 a70(r279): [523..524]
 a71(r278): [28..29]
 a72(r177): [30..31]
 a73(r176): [30..35]
 a74(r277): [32..33]
 a75(r175): [36..39]
 a76(r276): [36..37]
 a77(r174): [40..41]
 a78(r275): [42..43]
 a79(r173): [42..45]
 a80(r172): [46..47]
 a81(r171): [48..49]
 a82(r274): [50..51]
 a83(r170): [92..95]
 a84(r273): [92..93]
 a85(r169): [96..97]
 a86(r168): [98..101]
 a87(r272): [98..99]
 a88(r167): [102..103]
 a89(r271): [104..105]
 a90(r166): [104..107]
 a91(r165): [108..109]
 a92(r164): [110..111]
 a93(r270): [112..113]
 a94(r157): [148..167]
 a95(r163): [148..149]
 a96(r269): [150..151]
 a97(r162): [150..153]
 a98(r161): [154..155]
 a99(r268): [156..157]
 a100(r160): [156..159]
 a101(r159): [160..161]
 a102(r158): [162..163]
 a103(r267): [164..165]
 a104(r266): [168..169]
 a105(r156): [168..171]
 a106(r155): [172..173]
 a107(r265): [174..175]
 a108(r137): [270..321]
 a109(r154): [270..271]
 a110(r153): [272..273]
 a111(r152): [278..279]
 a112(r264): [280..281]
 a113(r151): [280..283]
 a114(r150): [284..285]
 a115(r149): [286..287]
 a116(r148): [286..291]
 a117(r263): [288..289]
 a118(r147): [292..293]
 a119(r142): [292..307]
 a120(r146): [294..295]
 a121(r262): [296..297]
 a122(r145): [296..299]
 a123(r144): [300..301]
 a124(r143): [302..303]
 a125(r261): [304..305]
 a126(r141): [308..309]
 a127(r260): [310..311]
 a128(r140): [310..313]
 a129(r139): [314..315]
 a130(r138): [316..317]
 a131(r259): [318..319]
 a132(r258): [322..323]
 a133(r136): [322..325]
 a134(r135): [326..327]
 a135(r257): [328..329]
 a136(r134): [335..336]
 a137(r133): [335..340]
 a138(r256): [337..338]
 a139(r255): [341..342]
 a140(r132): [348..349]
 a141(r131): [350..351]
 a142(r130): [354..357]
 a143(r254): [354..355]
 a144(r129): [363..364]
 a145(r128): [365..366]
 a146(r127): [369..372]
 a147(r253): [369..370]
 a148(r126): [373..374]
 a149(r125): [375..378]
 a150(r252): [375..376]
 a151(r124): [379..380]
 a152(r251): [381..382]
 a153(r123): [381..384]
 a154(r122): [385..386]
 a155(r121): [387..388]
 a156(r250): [389..390]
 a157(r249): [121..122]
 a158(r120): [123..124]
 a159(r119): [123..128]
 a160(r248): [125..126]
 a161(r118): [129..132]
 a162(r247): [129..130]
 a163(r117): [133..134]
 a164(r246): [135..136]
 a165(r116): [135..138]
 a166(r115): [139..140]
 a167(r114): [141..142]
 a168(r245): [143..144]
 a169(r113): [181..184]
 a170(r244): [181..182]
 a171(r112): [185..186]
 a172(r111): [187..190]
 a173(r243): [187..188]
 a174(r110): [191..192]
 a175(r242): [193..194]
 a176(r109): [193..196]
 a177(r108): [197..198]
 a178(r241): [199..200]
 a179(r100): [203..224]
 a180(r107): [203..204]
 a181(r106): [205..206]
 a182(r105): [205..210]
 a183(r240): [207..208]
 a184(r104): [211..212]
 a185(r239): [213..214]
 a186(r103): [213..216]
 a187(r102): [217..218]
 a188(r101): [219..220]
 a189(r238): [221..222]
 a190(r237): [225..226]
 a191(r99): [225..228]
 a192(r98): [229..230]
 a193(r97): [231..232]
 a194(r236): [233..234]
 a195(r90): [237..256]
 a196(r96): [237..238]
 a197(r95): [239..240]
 a198(r94): [239..244]
 a199(r235): [241..242]
 a200(r93): [245..246]
 a201(r234): [247..248]
 a202(r92): [247..250]
 a203(r91): [251..252]
 a204(r233): [253..254]
 a205(r232): [257..258]
 a206(r89): [257..260]
 a207(r88): [261..262]
 a208(r231): [263..264]
 a209(r87): [12..13]
 a210(r230): [14..15]
 a211(r229): [530..531]
Compressing live ranges: from 542 to 320 - 59%
Ranges after the compression:
 a0(r228): [0..1]
 a1(r227): [2..3]
 a2(r219): [26..41]
 a3(r226): [26..27]
 a4(r298): [28..29]
 a5(r225): [28..29]
 a6(r224): [30..31]
 a7(r297): [32..33]
 a8(r223): [32..33]
 a9(r222): [34..35]
 a10(r221): [36..37]
 a11(r220): [38..39]
 a12(r296): [40..41]
 a13(r295): [42..43]
 a14(r218): [42..43]
 a15(r217): [44..45]
 a16(r216): [46..47]
 a17(r294): [48..49]
 a18(r196): [236..275]
 a19(r215): [236..237]
 a20(r214): [238..239]
 a21(r213): [240..241]
 a22(r293): [242..243]
 a23(r212): [242..243]
 a24(r211): [244..245]
 a25(r210): [246..247]
 a26(r209): [246..249]
 a27(r292): [248..249]
 a28(r208): [250..251]
 a29(r202): [250..263]
 a30(r207): [252..253]
 a31(r291): [254..255]
 a32(r206): [254..255]
 a33(r205): [256..257]
 a34(r204): [258..259]
 a35(r203): [260..261]
 a36(r290): [262..263]
 a37(r201): [264..265]
 a38(r289): [266..267]
 a39(r200): [266..267]
 a40(r199): [268..269]
 a41(r198): [270..271]
 a42(r197): [272..273]
 a43(r288): [274..275]
 a44(r287): [276..277]
 a45(r195): [276..277]
 a46(r194): [278..279]
 a47(r193): [280..281]
 a48(r286): [282..283]
 a49(r192): [284..285]
 a50(r191): [284..287]
 a51(r285): [286..287]
 a52(r284): [288..289]
 a53(r190): [290..291]
 a54(r189): [292..293]
 a55(r188): [294..295]
 a56(r283): [294..295]
 a57(r187): [296..297]
 a58(r186): [298..299]
 a59(r185): [300..301]
 a60(r282): [300..301]
 a61(r184): [302..303]
 a62(r183): [304..305]
 a63(r281): [304..305]
 a64(r182): [306..307]
 a65(r280): [308..309]
 a66(r181): [308..309]
 a67(r180): [310..311]
 a68(r179): [312..313]
 a69(r178): [314..315]
 a70(r279): [316..317]
 a71(r278): [8..9]
 a72(r177): [10..11]
 a73(r176): [10..13]
 a74(r277): [12..13]
 a75(r175): [14..15]
 a76(r276): [14..15]
 a77(r174): [16..17]
 a78(r275): [18..19]
 a79(r173): [18..19]
 a80(r172): [20..21]
 a81(r171): [22..23]
 a82(r274): [24..25]
 a83(r170): [50..51]
 a84(r273): [50..51]
 a85(r169): [52..53]
 a86(r168): [54..55]
 a87(r272): [54..55]
 a88(r167): [56..57]
 a89(r271): [58..59]
 a90(r166): [58..59]
 a91(r165): [60..61]
 a92(r164): [62..63]
 a93(r270): [64..65]
 a94(r157): [84..97]
 a95(r163): [84..85]
 a96(r269): [86..87]
 a97(r162): [86..87]
 a98(r161): [88..89]
 a99(r268): [90..91]
 a100(r160): [90..91]
 a101(r159): [92..93]
 a102(r158): [94..95]
 a103(r267): [96..97]
 a104(r266): [98..99]
 a105(r156): [98..99]
 a106(r155): [100..101]
 a107(r265): [102..103]
 a108(r137): [162..197]
 a109(r154): [162..163]
 a110(r153): [164..165]
 a111(r152): [166..167]
 a112(r264): [168..169]
 a113(r151): [168..169]
 a114(r150): [170..171]
 a115(r149): [172..173]
 a116(r148): [172..175]
 a117(r263): [174..175]
 a118(r147): [176..177]
 a119(r142): [176..187]
 a120(r146): [178..179]
 a121(r262): [180..181]
 a122(r145): [180..181]
 a123(r144): [182..183]
 a124(r143): [184..185]
 a125(r261): [186..187]
 a126(r141): [188..189]
 a127(r260): [190..191]
 a128(r140): [190..191]
 a129(r139): [192..193]
 a130(r138): [194..195]
 a131(r259): [196..197]
 a132(r258): [198..199]
 a133(r136): [198..199]
 a134(r135): [200..201]
 a135(r257): [202..203]
 a136(r134): [204..205]
 a137(r133): [204..207]
 a138(r256): [206..207]
 a139(r255): [208..209]
 a140(r132): [210..211]
 a141(r131): [212..213]
 a142(r130): [214..215]
 a143(r254): [214..215]
 a144(r129): [216..217]
 a145(r128): [218..219]
 a146(r127): [220..221]
 a147(r253): [220..221]
 a148(r126): [222..223]
 a149(r125): [224..225]
 a150(r252): [224..225]
 a151(r124): [226..227]
 a152(r251): [228..229]
 a153(r123): [228..229]
 a154(r122): [230..231]
 a155(r121): [232..233]
 a156(r250): [234..235]
 a157(r249): [66..67]
 a158(r120): [68..69]
 a159(r119): [68..71]
 a160(r248): [70..71]
 a161(r118): [72..73]
 a162(r247): [72..73]
 a163(r117): [74..75]
 a164(r246): [76..77]
 a165(r116): [76..77]
 a166(r115): [78..79]
 a167(r114): [80..81]
 a168(r245): [82..83]
 a169(r113): [104..105]
 a170(r244): [104..105]
 a171(r112): [106..107]
 a172(r111): [108..109]
 a173(r243): [108..109]
 a174(r110): [110..111]
 a175(r242): [112..113]
 a176(r109): [112..113]
 a177(r108): [114..115]
 a178(r241): [116..117]
 a179(r100): [118..133]
 a180(r107): [118..119]
 a181(r106): [120..121]
 a182(r105): [120..123]
 a183(r240): [122..123]
 a184(r104): [124..125]
 a185(r239): [126..127]
 a186(r103): [126..127]
 a187(r102): [128..129]
 a188(r101): [130..131]
 a189(r238): [132..133]
 a190(r237): [134..135]
 a191(r99): [134..135]
 a192(r98): [136..137]
 a193(r97): [138..139]
 a194(r236): [140..141]
 a195(r90): [142..155]
 a196(r96): [142..143]
 a197(r95): [144..145]
 a198(r94): [144..147]
 a199(r235): [146..147]
 a200(r93): [148..149]
 a201(r234): [150..151]
 a202(r92): [150..151]
 a203(r91): [152..153]
 a204(r233): [154..155]
 a205(r232): [156..157]
 a206(r89): [156..157]
 a207(r88): [158..159]
 a208(r231): [160..161]
 a209(r87): [4..5]
 a210(r230): [6..7]
 a211(r229): [318..319]
  regions=1, blocks=20, points=320
    allocnos=212 (big 0), copies=0, conflicts=0, ranges=212
Disposition:
  209:r87  l0     0  207:r88  l0     0  206:r89  l0     1  195:r90  l0     1
  203:r91  l0     0  202:r92  l0     2  200:r93  l0     0  198:r94  l0    22
  197:r95  l0    21  196:r96  l0    21  193:r97  l0     0  192:r98  l0     0
  191:r99  l0     1  179:r100 l0     1  188:r101 l0     0  187:r102 l0     0
  186:r103 l0     2  184:r104 l0     0  182:r105 l0    22  181:r106 l0    21
  180:r107 l0    21  177:r108 l0     0  176:r109 l0     1  174:r110 l0     0
  172:r111 l0    22  171:r112 l0    21  169:r113 l0    21  167:r114 l0     0
  166:r115 l0     0  165:r116 l0     1  163:r117 l0     0  161:r118 l0    22
  159:r119 l0    21  158:r120 l0    22  155:r121 l0     0  154:r122 l0     0
  153:r123 l0     1  151:r124 l0     0  149:r125 l0    22  148:r126 l0    21
  146:r127 l0    21  145:r128 l0     0  144:r129 l0     0  142:r130 l0    21
  141:r131 l0     0  140:r132 l0     0  137:r133 l0     1  136:r134 l0     0
  134:r135 l0     0  133:r136 l0     1  108:r137 l0     3  130:r138 l0     0
  129:r139 l0     0  128:r140 l0     1  126:r141 l0     0  119:r142 l0    22
  124:r143 l0     0  123:r144 l0     0  122:r145 l0     1  120:r146 l0     0
  118:r147 l0    21  116:r148 l0    22  115:r149 l0    21  114:r150 l0    21
  113:r151 l0    21  111:r152 l0    21  110:r153 l0    21  109:r154 l0    21
  106:r155 l0     0  105:r156 l0     1   94:r157 l0     0  102:r158 l0     1
  101:r159 l0     1  100:r160 l0     2   98:r161 l0     1   97:r162 l0    22
   95:r163 l0    21   92:r164 l0     0   91:r165 l0     0   90:r166 l0     1
   88:r167 l0     0   86:r168 l0    22   85:r169 l0    21   83:r170 l0    21
   81:r171 l0     0   80:r172 l0     0   79:r173 l0     1   77:r174 l0     0
   75:r175 l0    22   73:r176 l0    21   72:r177 l0    22   69:r178 l0     0
   68:r179 l0     0   67:r180 l0     0   66:r181 l0     1   64:r182 l0     0
   62:r183 l0    22   61:r184 l0    21   59:r185 l0    21   58:r186 l0     0
   57:r187 l0     0   55:r188 l0    21   54:r189 l0     0   53:r190 l0     0
   50:r191 l0     1   49:r192 l0     0   47:r193 l0     0   46:r194 l0     0
   45:r195 l0     1   18:r196 l0     3   42:r197 l0     0   41:r198 l0     0
   40:r199 l0     0   39:r200 l0     1   37:r201 l0     0   29:r202 l0    22
   35:r203 l0     0   34:r204 l0     0   33:r205 l0     0   32:r206 l0     1
   30:r207 l0     0   28:r208 l0    21   26:r209 l0    22   25:r210 l0    21
   24:r211 l0    21   23:r212 l0    21   21:r213 l0    21   20:r214 l0    21
   19:r215 l0    21   16:r216 l0     0   15:r217 l0     0   14:r218 l0     1
    2:r219 l0     0   11:r220 l0     1   10:r221 l0     1    9:r222 l0     1
    8:r223 l0     2    6:r224 l0     1    5:r225 l0    22    3:r226 l0    21
    1:r227 l0     0    0:r228 l0     0  211:r229 l0    21  210:r230 l0     0
  208:r231 l0     0  205:r232 l0     0  204:r233 l0     0  201:r234 l0     0
  199:r235 l0     0  194:r236 l0     0  190:r237 l0     0  189:r238 l0     0
  185:r239 l0     0  183:r240 l0     0  178:r241 l0     0  175:r242 l0     0
  173:r243 l0    21  170:r244 l0    22  168:r245 l0     0  164:r246 l0     0
  162:r247 l0    21  160:r248 l0     0  157:r249 l0    21  156:r250 l0     0
  152:r251 l0     0  150:r252 l0    21  147:r253 l0    22  143:r254 l0    22
  139:r255 l0     0  138:r256 l0     0  135:r257 l0     0  132:r258 l0     0
  131:r259 l0     0  127:r260 l0     0  125:r261 l0     0  121:r262 l0     0
  117:r263 l0    21  112:r264 l0    22  107:r265 l0     0  104:r266 l0     0
  103:r267 l0     1   99:r268 l0     1   96:r269 l0    21   93:r270 l0     0
   89:r271 l0     0   87:r272 l0    21   84:r273 l0    22   82:r274 l0     0
   78:r275 l0     0   76:r276 l0    21   74:r277 l0     0   71:r278 l0    21
   70:r279 l0     0   65:r280 l0     0   63:r281 l0    21   60:r282 l0    22
   56:r283 l0    22   52:r284 l0     0   51:r285 l0     0   48:r286 l0     0
   44:r287 l0     0   43:r288 l0     0   38:r289 l0     0   36:r290 l0     0
   31:r291 l0     0   27:r292 l0    21   22:r293 l0    22   17:r294 l0     0
   13:r295 l0     0   12:r296 l0     1    7:r297 l0     1    4:r298 l0    21
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int scale(float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={4d,2u} r1={3d,1u} r2={3d} r4={3d,1u} r5={3d,1u} r6={1d,19u} r7={1d,21u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,18u} r17={89d,15u} r18={2d} r19={2d} r20={1d,87u,22e} r21={5d,4u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u,1e} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u,1e} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u,1e} r110={1d,1u} r111={1d,1u,1e} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u,1e} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u,1e} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u,1e} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u,1e} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u,1e} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u,1e} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u,1e} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1e} r174={1d,1u} r175={1d,1u,1e} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u,1e} r182={1d,1u} r183={1d,1u,1e} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1e} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u,1e} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u,1e} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u,1e} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u,1e} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} 
;;    total ref usage 894{465d,381u,48e} in 262{260 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
        (reg:DI 5 di [ data ])) preproc.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])
        (reg:DI 4 si [ procpar_info ])) preproc.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ procpar_info ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])
        (reg:DI 1 dx [ preprocess ])) preproc.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ preprocess ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:143 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 229)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) preproc.cpp:144 129 {*movsf_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 half+0 S4 A32])
        (reg:SF 229)) preproc.cpp:144 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 229)
        (nil)))
(insn 11 10 294 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:146 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              18 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 230
(code_label 294 11 12 3 44 "" [1 uses])
(note 12 294 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:146 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 87 [ D.6879 ])
        (mem/j:SI (plus:DI (reg/f:DI 230)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:146 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (nil)))
(insn 15 14 16 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.6879 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) preproc.cpp:146 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6879 ])
        (nil)))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) preproc.cpp:146 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 297)
;;  succ:       19
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 231 232 233 234 235 236 237 238 239 240 241 242 243 244
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:155 90 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 88 [ D.6880 ])
        (sign_extend:DI (reg:SI 231))) preproc.cpp:155 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 231)
        (nil)))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 89 [ D.6880 ])
                (ashift:DI (reg:DI 88 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:155 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:155 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 90 [ D.6881 ])
                (plus:DI (reg:DI 89 [ D.6880 ])
                    (reg/f:DI 232)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:155 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (expr_list:REG_DEAD (reg:DI 89 [ D.6880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 89 [ D.6880 ]))
                    (nil))))))
(insn 23 22 24 4 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:155 90 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 91 [ D.6880 ])
        (sign_extend:DI (reg:SI 233))) preproc.cpp:155 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 233)
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 92 [ D.6880 ])
                (ashift:DI (reg:DI 91 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:155 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:155 89 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 93 [ D.6881 ])
                (plus:DI (reg:DI 92 [ D.6880 ])
                    (reg/f:DI 234)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:155 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 234)
        (expr_list:REG_DEAD (reg:DI 92 [ D.6880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 92 [ D.6880 ]))
                    (nil))))))
(insn 28 27 29 4 (set (reg:SF 94 [ D.6882 ])
        (mem:SF (reg/f:DI 93 [ D.6881 ]) [0 *_19+0 S4 A32])) preproc.cpp:155 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.6881 ])
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) preproc.cpp:155 89 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:SF 95 [ D.6882 ])
        (mem/j:SF (plus:DI (reg/f:DI 235)
                (const_int 4 [0x4])) [0 preprocess_21(D)->scale_factor+0 S4 A32])) preproc.cpp:155 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 235)
        (nil)))
(insn 31 30 32 4 (set (reg:SF 96 [ D.6882 ])
        (mult:SF (reg:SF 94 [ D.6882 ])
            (reg:SF 95 [ D.6882 ]))) preproc.cpp:155 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 95 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 94 [ D.6882 ])
            (nil))))
(insn 32 31 33 4 (set (mem:SF (reg/f:DI 90 [ D.6881 ]) [0 *_16+0 S4 A32])
        (reg:SF 96 [ D.6882 ])) preproc.cpp:155 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 96 [ D.6882 ])
        (expr_list:REG_DEAD (reg/f:DI 90 [ D.6881 ])
            (nil))))
(insn 33 32 34 4 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:156 90 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 97 [ D.6883 ])
        (sign_extend:DI (reg:SI 236))) preproc.cpp:156 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 236)
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 98 [ D.6883 ])
                (plus:DI (reg:DI 97 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:156 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 99 [ D.6883 ])
                (ashift:DI (reg:DI 98 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:156 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:156 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg/f:DI 100 [ D.6881 ])
                (plus:DI (reg:DI 99 [ D.6883 ])
                    (reg/f:DI 237)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:156 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 237)
        (expr_list:REG_DEAD (reg:DI 99 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 99 [ D.6883 ]))
                    (nil))))))
(insn 39 38 40 4 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:156 90 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 101 [ D.6883 ])
        (sign_extend:DI (reg:SI 238))) preproc.cpp:156 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 238)
        (nil)))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 102 [ D.6883 ])
                (plus:DI (reg:DI 101 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:156 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 103 [ D.6883 ])
                (ashift:DI (reg:DI 102 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:156 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 102 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 4 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:156 89 {*movdi_internal}
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/f:DI 104 [ D.6881 ])
                (plus:DI (reg:DI 103 [ D.6883 ])
                    (reg/f:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:156 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 239)
        (expr_list:REG_DEAD (reg:DI 103 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 103 [ D.6883 ]))
                    (nil))))))
(insn 45 44 46 4 (set (reg:SF 105 [ D.6882 ])
        (mem:SF (reg/f:DI 104 [ D.6881 ]) [0 *_32+0 S4 A32])) preproc.cpp:156 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.6881 ])
        (nil)))
(insn 46 45 47 4 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) preproc.cpp:156 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (set (reg:SF 106 [ D.6882 ])
        (mem/j:SF (plus:DI (reg/f:DI 240)
                (const_int 4 [0x4])) [0 preprocess_21(D)->scale_factor+0 S4 A32])) preproc.cpp:156 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 240)
        (nil)))
(insn 48 47 49 4 (set (reg:SF 107 [ D.6882 ])
        (mult:SF (reg:SF 105 [ D.6882 ])
            (reg:SF 106 [ D.6882 ]))) preproc.cpp:156 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 106 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 105 [ D.6882 ])
            (nil))))
(insn 49 48 50 4 (set (mem:SF (reg/f:DI 100 [ D.6881 ]) [0 *_28+0 S4 A32])
        (reg:SF 107 [ D.6882 ])) preproc.cpp:156 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 107 [ D.6882 ])
        (expr_list:REG_DEAD (reg/f:DI 100 [ D.6881 ])
            (nil))))
(insn 50 49 51 4 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:158 90 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 108 [ D.6880 ])
        (sign_extend:DI (reg:SI 241))) preproc.cpp:158 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 109 [ D.6880 ])
                (ashift:DI (reg:DI 108 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:158 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 4 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:158 89 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg/f:DI 110 [ D.6881 ])
                (plus:DI (reg:DI 109 [ D.6880 ])
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:158 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (expr_list:REG_DEAD (reg:DI 109 [ D.6880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 109 [ D.6880 ]))
                    (nil))))))
(insn 55 54 56 4 (set (reg:SF 111 [ D.6882 ])
        (mem:SF (reg/f:DI 110 [ D.6881 ]) [0 *_39+0 S4 A32])) preproc.cpp:158 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.6881 ])
        (nil)))
(insn 56 55 57 4 (set (reg:V4SF 243)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:158 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 57 56 58 4 (parallel [
            (set (reg:SF 112 [ D.6882 ])
                (abs:SF (reg:SF 111 [ D.6882 ])))
            (use (reg:V4SF 243))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:158 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 243)
        (expr_list:REG_DEAD (reg:SF 111 [ D.6882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 111 [ D.6882 ]))
                    (nil))))))
(insn 58 57 59 4 (set (reg:DF 113 [ D.6884 ])
        (float_extend:DF (reg:SF 112 [ D.6882 ]))) preproc.cpp:158 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 112 [ D.6882 ])
        (nil)))
(insn 59 58 60 4 (set (reg:DF 244)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) preproc.cpp:158 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 60 59 61 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 244)
            (reg:DF 113 [ D.6884 ]))) preproc.cpp:158 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 244)
        (expr_list:REG_DEAD (reg:DF 113 [ D.6884 ])
            (nil))))
(jump_insn 61 60 65 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 166)
            (pc))) preproc.cpp:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 166)
;;  succ:       5 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114 115 116 117 118 119 120 245 246 247 248 249
(note 65 61 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:164 90 {*movsi_internal}
     (nil))
(insn 67 66 68 5 (set (reg:DI 114 [ D.6883 ])
        (sign_extend:DI (reg:SI 245))) preproc.cpp:164 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 68 67 69 5 (parallel [
            (set (reg:DI 115 [ D.6883 ])
                (plus:DI (reg:DI 114 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:164 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 5 (parallel [
            (set (reg:DI 116 [ D.6883 ])
                (ashift:DI (reg:DI 115 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:164 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 5 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:164 89 {*movdi_internal}
     (nil))
(insn 71 70 72 5 (parallel [
            (set (reg/f:DI 117 [ D.6881 ])
                (plus:DI (reg:DI 116 [ D.6883 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:164 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg:DI 116 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 116 [ D.6883 ]))
                    (nil))))))
(insn 72 71 73 5 (set (reg:SF 118 [ D.6882 ])
        (mem:SF (reg/f:DI 117 [ D.6881 ]) [0 *_46+0 S4 A32])) preproc.cpp:164 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.6881 ])
        (nil)))
(insn 73 72 74 5 (set (reg:V4SF 247)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:164 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 74 73 75 5 (parallel [
            (set (reg:SF 119 [ D.6882 ])
                (abs:SF (reg:SF 118 [ D.6882 ])))
            (use (reg:V4SF 247))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:164 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 247)
        (expr_list:REG_DEAD (reg:SF 118 [ D.6882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 118 [ D.6882 ]))
                    (nil))))))
(insn 75 74 76 5 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) preproc.cpp:164 89 {*movdi_internal}
     (nil))
(insn 76 75 77 5 (set (reg:SF 120 [ D.6882 ])
        (mem/j:SF (plus:DI (reg/f:DI 248)
                (const_int 4 [0x4])) [0 preprocess_21(D)->scale_factor+0 S4 A32])) preproc.cpp:164 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 248)
        (nil)))
(insn 77 76 78 5 (set (reg:SF 249)
        (mult:SF (reg:SF 119 [ D.6882 ])
            (reg:SF 120 [ D.6882 ]))) preproc.cpp:164 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 120 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 119 [ D.6882 ])
            (nil))))
(insn 78 77 79 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])
        (reg:SF 249)) preproc.cpp:164 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 249)
        (nil)))
(insn 79 78 80 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))) preproc.cpp:175 7 {*cmpsi_1}
     (nil))
(jump_insn 80 79 81 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) preproc.cpp:175 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 166)
;;  succ:       6 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121 122 123 124 125 126 127 128 129 250 251 252 253
(note 81 80 82 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 6 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:177 90 {*movsi_internal}
     (nil))
(insn 83 82 84 6 (set (reg:DI 121 [ D.6880 ])
        (sign_extend:DI (reg:SI 250))) preproc.cpp:177 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(insn 84 83 85 6 (parallel [
            (set (reg:DI 122 [ D.6880 ])
                (ashift:DI (reg:DI 121 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 123 [ D.6883 ])
                (plus:DI (reg:DI 122 [ D.6880 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 6 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:177 89 {*movdi_internal}
     (nil))
(insn 87 86 88 6 (parallel [
            (set (reg/f:DI 124 [ D.6881 ])
                (plus:DI (reg:DI 123 [ D.6883 ])
                    (reg/f:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:DI 123 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 123 [ D.6883 ]))
                    (nil))))))
(insn 88 87 89 6 (set (reg:SF 125 [ D.6882 ])
        (mem:SF (reg/f:DI 124 [ D.6881 ]) [0 *_54+0 S4 A32])) preproc.cpp:177 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ D.6881 ])
        (nil)))
(insn 89 88 90 6 (set (reg:V4SF 252)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:177 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 90 89 91 6 (parallel [
            (set (reg:SF 126 [ D.6882 ])
                (abs:SF (reg:SF 125 [ D.6882 ])))
            (use (reg:V4SF 252))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 252)
        (expr_list:REG_DEAD (reg:SF 125 [ D.6882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 125 [ D.6882 ]))
                    (nil))))))
(insn 91 90 92 6 (set (reg:DF 127 [ D.6884 ])
        (float_extend:DF (reg:SF 126 [ D.6882 ]))) preproc.cpp:177 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 126 [ D.6882 ])
        (nil)))
(insn 92 91 93 6 (set (reg:DF 253)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) preproc.cpp:177 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 93 92 94 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 253)
            (reg:DF 127 [ D.6884 ]))) preproc.cpp:177 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 253)
        (expr_list:REG_DEAD (reg:DF 127 [ D.6884 ])
            (nil))))
(insn 94 93 95 6 (set (reg:QI 128 [ D.6885 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) preproc.cpp:177 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 95 94 96 6 (parallel [
            (set (reg:QI 129 [ D.6885 ])
                (xor:QI (reg:QI 128 [ D.6885 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 128 [ D.6885 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 96 95 97 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.6885 ])
            (const_int 0 [0]))) preproc.cpp:177 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 129 [ D.6885 ])
        (nil)))
(jump_insn 97 96 98 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) preproc.cpp:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 147)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130 131 132 254
(note 98 97 99 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 7 (set (reg:DF 130 [ D.6884 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) preproc.cpp:177 152 {*extendsfdf2_sse}
     (nil))
(insn 100 99 101 7 (set (reg:DF 254)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) preproc.cpp:177 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 101 100 102 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 254)
            (reg:DF 130 [ D.6884 ]))) preproc.cpp:177 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 254)
        (expr_list:REG_DEAD (reg:DF 130 [ D.6884 ])
            (nil))))
(insn 102 101 103 7 (set (reg:QI 131 [ D.6885 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) preproc.cpp:177 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 103 102 104 7 (parallel [
            (set (reg:QI 132 [ D.6885 ])
                (xor:QI (reg:QI 131 [ D.6885 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 131 [ D.6885 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ D.6885 ])
            (const_int 0 [0]))) preproc.cpp:177 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 132 [ D.6885 ])
        (nil)))
(jump_insn 105 104 106 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) preproc.cpp:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 147)
;;  succ:       8 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133 134 255 256
(note 106 105 107 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 8 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:177 90 {*movsi_internal}
     (nil))
(insn 108 107 109 8 (parallel [
            (set (reg:SI 133 [ D.6879 ])
                (plus:SI (reg:SI 255)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:177 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 255)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 109 108 110 8 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:177 89 {*movdi_internal}
     (nil))
(insn 110 109 111 8 (set (reg:SI 134 [ D.6879 ])
        (mem/j:SI (plus:DI (reg/f:DI 256)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:177 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 256)
        (nil)))
(insn 111 110 112 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 133 [ D.6879 ])
            (reg:SI 134 [ D.6879 ]))) preproc.cpp:177 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 134 [ D.6879 ])
        (expr_list:REG_DEAD (reg:SI 133 [ D.6879 ])
            (nil))))
(jump_insn 112 111 113 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) preproc.cpp:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 147)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 257 258 259 260 261 262 263 264
(note 113 112 114 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 9 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:187 90 {*movsi_internal}
     (nil))
(insn 115 114 116 9 (set (reg:DI 135 [ D.6880 ])
        (sign_extend:DI (reg:SI 257))) preproc.cpp:187 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(insn 116 115 117 9 (parallel [
            (set (reg:DI 136 [ D.6880 ])
                (ashift:DI (reg:DI 135 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 117 116 118 9 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:187 89 {*movdi_internal}
     (nil))
(insn 118 117 119 9 (parallel [
            (set (reg/f:DI 137 [ D.6881 ])
                (plus:DI (reg:DI 136 [ D.6880 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:DI 136 [ D.6880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 136 [ D.6880 ]))
                    (nil))))))
(insn 119 118 120 9 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:187 90 {*movsi_internal}
     (nil))
(insn 120 119 121 9 (set (reg:DI 138 [ D.6880 ])
        (sign_extend:DI (reg:SI 259))) preproc.cpp:187 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 259)
        (nil)))
(insn 121 120 122 9 (parallel [
            (set (reg:DI 139 [ D.6880 ])
                (ashift:DI (reg:DI 138 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 138 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 9 (parallel [
            (set (reg:DI 140 [ D.6883 ])
                (plus:DI (reg:DI 139 [ D.6880 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 139 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 9 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:187 89 {*movdi_internal}
     (nil))
(insn 124 123 125 9 (parallel [
            (set (reg/f:DI 141 [ D.6881 ])
                (plus:DI (reg:DI 140 [ D.6883 ])
                    (reg/f:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 260)
        (expr_list:REG_DEAD (reg:DI 140 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 140 [ D.6883 ]))
                    (nil))))))
(insn 125 124 126 9 (set (reg:SF 142 [ D.6882 ])
        (mem:SF (reg/f:DI 141 [ D.6881 ]) [0 *_71+0 S4 A32])) preproc.cpp:187 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.6881 ])
        (nil)))
(insn 126 125 127 9 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:187 90 {*movsi_internal}
     (nil))
(insn 127 126 128 9 (set (reg:DI 143 [ D.6880 ])
        (sign_extend:DI (reg:SI 261))) preproc.cpp:187 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 261)
        (nil)))
(insn 128 127 129 9 (parallel [
            (set (reg:DI 144 [ D.6880 ])
                (ashift:DI (reg:DI 143 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 9 (parallel [
            (set (reg:DI 145 [ D.6883 ])
                (plus:DI (reg:DI 144 [ D.6880 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 144 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 9 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:187 89 {*movdi_internal}
     (nil))
(insn 131 130 132 9 (parallel [
            (set (reg/f:DI 146 [ D.6881 ])
                (plus:DI (reg:DI 145 [ D.6883 ])
                    (reg/f:DI 262)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:187 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 262)
        (expr_list:REG_DEAD (reg:DI 145 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 145 [ D.6883 ]))
                    (nil))))))
(insn 132 131 133 9 (set (reg:SF 147 [ D.6882 ])
        (mem:SF (reg/f:DI 146 [ D.6881 ]) [0 *_76+0 S4 A32])) preproc.cpp:187 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 146 [ D.6881 ])
        (nil)))
(insn 133 132 134 9 (set (reg:SF 148 [ D.6882 ])
        (mult:SF (reg:SF 142 [ D.6882 ])
            (reg:SF 147 [ D.6882 ]))) preproc.cpp:187 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 147 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 142 [ D.6882 ])
            (nil))))
(insn 134 133 135 9 (set (reg:SF 263)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])) preproc.cpp:188 129 {*movsf_internal}
     (nil))
(insn 135 134 136 9 (set (reg:SF 149 [ D.6882 ])
        (mult:SF (reg:SF 263)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) preproc.cpp:188 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 263)
        (nil)))
(insn 136 135 137 9 (set (reg:SF 150 [ D.6882 ])
        (plus:SF (reg:SF 148 [ D.6882 ])
            (reg:SF 149 [ D.6882 ]))) preproc.cpp:187 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 149 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 148 [ D.6882 ])
            (nil))))
(insn 137 136 138 9 (set (reg:DF 151 [ D.6884 ])
        (float_extend:DF (reg:SF 150 [ D.6882 ]))) preproc.cpp:187 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 150 [ D.6882 ])
        (nil)))
(insn 138 137 139 9 (set (reg:DF 264)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S8 A64])) preproc.cpp:187 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 139 138 140 9 (set (reg:DF 152 [ D.6884 ])
        (mult:DF (reg:DF 151 [ D.6884 ])
            (reg:DF 264))) preproc.cpp:187 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 264)
        (expr_list:REG_DEAD (reg:DF 151 [ D.6884 ])
            (nil))))
(insn 140 139 141 9 (set (reg:DF 21 xmm0)
        (reg:DF 152 [ D.6884 ])) preproc.cpp:187 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 152 [ D.6884 ])
        (nil)))
(call_insn 141 140 142 9 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:187 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 142 141 143 9 (set (reg:DF 153 [ D.6884 ])
        (reg:DF 21 xmm0)) preproc.cpp:187 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 143 142 144 9 (set (reg:SF 154 [ D.6882 ])
        (float_truncate:SF (reg:DF 153 [ D.6884 ]))) preproc.cpp:188 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 153 [ D.6884 ])
        (nil)))
(insn 144 143 315 9 (set (mem:SF (reg/f:DI 137 [ D.6881 ]) [0 *_67+0 S4 A32])
        (reg:SF 154 [ D.6882 ])) preproc.cpp:188 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 154 [ D.6882 ])
        (expr_list:REG_DEAD (reg/f:DI 137 [ D.6881 ])
            (nil))))
(jump_insn 315 144 316 9 (set (pc)
        (label_ref 166)) preproc.cpp:188 654 {jump}
     (nil)
 -> 166)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 316 315 147)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 155 156 157 158 159 160 161 162 163 265 266 267 268 269
(code_label 147 316 148 10 38 "" [3 uses])
(note 148 147 149 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 10 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:199 90 {*movsi_internal}
     (nil))
(insn 150 149 151 10 (set (reg:DI 155 [ D.6880 ])
        (sign_extend:DI (reg:SI 265))) preproc.cpp:199 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 265)
        (nil)))
(insn 151 150 152 10 (parallel [
            (set (reg:DI 156 [ D.6880 ])
                (ashift:DI (reg:DI 155 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:199 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 10 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:199 89 {*movdi_internal}
     (nil))
(insn 153 152 154 10 (parallel [
            (set (reg/f:DI 157 [ D.6881 ])
                (plus:DI (reg:DI 156 [ D.6880 ])
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:199 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 266)
        (expr_list:REG_DEAD (reg:DI 156 [ D.6880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 156 [ D.6880 ]))
                    (nil))))))
(insn 154 153 155 10 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:199 90 {*movsi_internal}
     (nil))
(insn 155 154 156 10 (set (reg:DI 158 [ D.6880 ])
        (sign_extend:DI (reg:SI 267))) preproc.cpp:199 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 267)
        (nil)))
(insn 156 155 157 10 (parallel [
            (set (reg:DI 159 [ D.6880 ])
                (ashift:DI (reg:DI 158 [ D.6880 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:199 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 158 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 157 156 158 10 (parallel [
            (set (reg:DI 160 [ D.6883 ])
                (plus:DI (reg:DI 159 [ D.6880 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:199 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 159 [ D.6880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 158 157 159 10 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:199 89 {*movdi_internal}
     (nil))
(insn 159 158 160 10 (parallel [
            (set (reg/f:DI 161 [ D.6881 ])
                (plus:DI (reg:DI 160 [ D.6883 ])
                    (reg/f:DI 268)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:199 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 268)
        (expr_list:REG_DEAD (reg:DI 160 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 160 [ D.6883 ]))
                    (nil))))))
(insn 160 159 161 10 (set (reg:SF 162 [ D.6882 ])
        (mem:SF (reg/f:DI 161 [ D.6881 ]) [0 *_93+0 S4 A32])) preproc.cpp:199 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 161 [ D.6881 ])
        (nil)))
(insn 161 160 162 10 (set (reg:SF 269)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) preproc.cpp:199 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 162 161 163 10 (set (reg:SF 163 [ D.6882 ])
        (mult:SF (reg:SF 162 [ D.6882 ])
            (reg:SF 269))) preproc.cpp:199 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 269)
        (expr_list:REG_DEAD (reg:SF 162 [ D.6882 ])
            (nil))))
(insn 163 162 166 10 (set (mem:SF (reg/f:DI 157 [ D.6881 ]) [0 *_89+0 S4 A32])
        (reg:SF 163 [ D.6882 ])) preproc.cpp:199 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 163 [ D.6882 ])
        (expr_list:REG_DEAD (reg/f:DI 157 [ D.6881 ])
            (nil))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              10 (FALLTHRU)
;;              4
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 164 165 166 167 168 169 170 270 271 272 273
(code_label 166 163 167 11 36 "" [3 uses])
(note 167 166 168 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 11 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:205 90 {*movsi_internal}
     (nil))
(insn 169 168 170 11 (set (reg:DI 164 [ D.6883 ])
        (sign_extend:DI (reg:SI 270))) preproc.cpp:205 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 270)
        (nil)))
(insn 170 169 171 11 (parallel [
            (set (reg:DI 165 [ D.6883 ])
                (plus:DI (reg:DI 164 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:205 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 164 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 11 (parallel [
            (set (reg:DI 166 [ D.6883 ])
                (ashift:DI (reg:DI 165 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:205 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 172 171 173 11 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:205 89 {*movdi_internal}
     (nil))
(insn 173 172 174 11 (parallel [
            (set (reg/f:DI 167 [ D.6881 ])
                (plus:DI (reg:DI 166 [ D.6883 ])
                    (reg/f:DI 271)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:205 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 271)
        (expr_list:REG_DEAD (reg:DI 166 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 166 [ D.6883 ]))
                    (nil))))))
(insn 174 173 175 11 (set (reg:SF 168 [ D.6882 ])
        (mem:SF (reg/f:DI 167 [ D.6881 ]) [0 *_100+0 S4 A32])) preproc.cpp:205 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.6881 ])
        (nil)))
(insn 175 174 176 11 (set (reg:V4SF 272)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:205 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 176 175 177 11 (parallel [
            (set (reg:SF 169 [ D.6882 ])
                (abs:SF (reg:SF 168 [ D.6882 ])))
            (use (reg:V4SF 272))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:205 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 272)
        (expr_list:REG_DEAD (reg:SF 168 [ D.6882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 168 [ D.6882 ]))
                    (nil))))))
(insn 177 176 178 11 (set (reg:DF 170 [ D.6884 ])
        (float_extend:DF (reg:SF 169 [ D.6882 ]))) preproc.cpp:205 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 169 [ D.6882 ])
        (nil)))
(insn 178 177 179 11 (set (reg:DF 273)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) preproc.cpp:205 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 179 178 180 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 273)
            (reg:DF 170 [ D.6884 ]))) preproc.cpp:205 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 273)
        (expr_list:REG_DEAD (reg:DF 170 [ D.6884 ])
            (nil))))
(jump_insn 180 179 184 11 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 291)
            (pc))) preproc.cpp:205 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 291)
;;  succ:       12 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 171 172 173 174 175 176 177 274 275 276 277 278
(note 184 180 185 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 12 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:215 90 {*movsi_internal}
     (nil))
(insn 186 185 187 12 (set (reg:DI 171 [ D.6883 ])
        (sign_extend:DI (reg:SI 274))) preproc.cpp:215 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 187 186 188 12 (parallel [
            (set (reg:DI 172 [ D.6883 ])
                (plus:DI (reg:DI 171 [ D.6883 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:215 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 171 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 188 187 189 12 (parallel [
            (set (reg:DI 173 [ D.6883 ])
                (ashift:DI (reg:DI 172 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:215 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 172 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 190 12 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:215 89 {*movdi_internal}
     (nil))
(insn 190 189 191 12 (parallel [
            (set (reg/f:DI 174 [ D.6881 ])
                (plus:DI (reg:DI 173 [ D.6883 ])
                    (reg/f:DI 275)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:215 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:DI 173 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 173 [ D.6883 ]))
                    (nil))))))
(insn 191 190 192 12 (set (reg:SF 175 [ D.6882 ])
        (mem:SF (reg/f:DI 174 [ D.6881 ]) [0 *_107+0 S4 A32])) preproc.cpp:215 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ D.6881 ])
        (nil)))
(insn 192 191 193 12 (set (reg:V4SF 276)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:215 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 193 192 194 12 (parallel [
            (set (reg:SF 176 [ D.6882 ])
                (abs:SF (reg:SF 175 [ D.6882 ])))
            (use (reg:V4SF 276))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:215 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 276)
        (expr_list:REG_DEAD (reg:SF 175 [ D.6882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 175 [ D.6882 ]))
                    (nil))))))
(insn 194 193 195 12 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) preproc.cpp:215 89 {*movdi_internal}
     (nil))
(insn 195 194 196 12 (set (reg:SF 177 [ D.6882 ])
        (mem/j:SF (plus:DI (reg/f:DI 277)
                (const_int 4 [0x4])) [0 preprocess_21(D)->scale_factor+0 S4 A32])) preproc.cpp:215 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (nil)))
(insn 196 195 197 12 (set (reg:SF 278)
        (mult:SF (reg:SF 176 [ D.6882 ])
            (reg:SF 177 [ D.6882 ]))) preproc.cpp:215 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 177 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 176 [ D.6882 ])
            (nil))))
(insn 197 196 198 12 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])
        (reg:SF 278)) preproc.cpp:215 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 278)
        (nil)))
(insn 198 197 199 12 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
            (const_int 0 [0]))) preproc.cpp:227 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 199 198 200 12 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) preproc.cpp:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 291)
;;  succ:       13 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 178 179 180 181 182 183 184 185 186 187 279 280 281 282
(note 200 199 201 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 13 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:228 90 {*movsi_internal}
     (nil))
(insn 202 201 203 13 (set (reg:DI 178 [ D.6883 ])
        (sign_extend:DI (reg:SI 279))) preproc.cpp:228 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 279)
        (nil)))
(insn 203 202 204 13 (parallel [
            (set (reg:DI 179 [ D.6883 ])
                (plus:DI (reg:DI 178 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 204 203 205 13 (parallel [
            (set (reg:DI 180 [ D.6883 ])
                (ashift:DI (reg:DI 179 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 205 204 206 13 (parallel [
            (set (reg:DI 181 [ D.6883 ])
                (plus:DI (reg:DI 180 [ D.6883 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 180 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 205 207 13 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:228 89 {*movdi_internal}
     (nil))
(insn 207 206 208 13 (parallel [
            (set (reg/f:DI 182 [ D.6881 ])
                (plus:DI (reg:DI 181 [ D.6883 ])
                    (reg/f:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (expr_list:REG_DEAD (reg:DI 181 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 181 [ D.6883 ]))
                    (nil))))))
(insn 208 207 209 13 (set (reg:SF 183 [ D.6882 ])
        (mem:SF (reg/f:DI 182 [ D.6881 ]) [0 *_116+0 S4 A32])) preproc.cpp:228 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ D.6881 ])
        (nil)))
(insn 209 208 210 13 (set (reg:V4SF 281)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:228 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 210 209 211 13 (parallel [
            (set (reg:SF 184 [ D.6882 ])
                (abs:SF (reg:SF 183 [ D.6882 ])))
            (use (reg:V4SF 281))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 281)
        (expr_list:REG_DEAD (reg:SF 183 [ D.6882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 183 [ D.6882 ]))
                    (nil))))))
(insn 211 210 212 13 (set (reg:DF 185 [ D.6884 ])
        (float_extend:DF (reg:SF 184 [ D.6882 ]))) preproc.cpp:228 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 184 [ D.6882 ])
        (nil)))
(insn 212 211 213 13 (set (reg:DF 282)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) preproc.cpp:228 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 213 212 214 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 282)
            (reg:DF 185 [ D.6884 ]))) preproc.cpp:228 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 282)
        (expr_list:REG_DEAD (reg:DF 185 [ D.6884 ])
            (nil))))
(insn 214 213 215 13 (set (reg:QI 186 [ D.6885 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) preproc.cpp:228 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 215 214 216 13 (parallel [
            (set (reg:QI 187 [ D.6885 ])
                (xor:QI (reg:QI 186 [ D.6885 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 186 [ D.6885 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 187 [ D.6885 ])
            (const_int 0 [0]))) preproc.cpp:228 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 187 [ D.6885 ])
        (nil)))
(jump_insn 217 216 218 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) preproc.cpp:228 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 270)
;;  succ:       14 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 188 189 190 283
(note 218 217 219 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 14 (set (reg:DF 188 [ D.6884 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) preproc.cpp:228 152 {*extendsfdf2_sse}
     (nil))
(insn 220 219 221 14 (set (reg:DF 283)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) preproc.cpp:228 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 221 220 222 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 283)
            (reg:DF 188 [ D.6884 ]))) preproc.cpp:228 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 283)
        (expr_list:REG_DEAD (reg:DF 188 [ D.6884 ])
            (nil))))
(insn 222 221 223 14 (set (reg:QI 189 [ D.6885 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) preproc.cpp:228 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 223 222 224 14 (parallel [
            (set (reg:QI 190 [ D.6885 ])
                (xor:QI (reg:QI 189 [ D.6885 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 189 [ D.6885 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 190 [ D.6885 ])
            (const_int 0 [0]))) preproc.cpp:228 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 190 [ D.6885 ])
        (nil)))
(jump_insn 225 224 226 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) preproc.cpp:228 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 270)
;;  succ:       15 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 191 192 284 285
(note 226 225 227 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 15 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:228 90 {*movsi_internal}
     (nil))
(insn 228 227 229 15 (parallel [
            (set (reg:SI 191 [ D.6879 ])
                (plus:SI (reg:SI 284)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:228 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 284)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 229 228 230 15 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:228 89 {*movdi_internal}
     (nil))
(insn 230 229 231 15 (set (reg:SI 192 [ D.6879 ])
        (mem/j:SI (plus:DI (reg/f:DI 285)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:228 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (nil)))
(insn 231 230 232 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 191 [ D.6879 ])
            (reg:SI 192 [ D.6879 ]))) preproc.cpp:228 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 192 [ D.6879 ])
        (expr_list:REG_DEAD (reg:SI 191 [ D.6879 ])
            (nil))))
(jump_insn 232 231 233 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) preproc.cpp:228 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 270)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 286 287 288 289 290 291 292 293
(note 233 232 234 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 16 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:239 90 {*movsi_internal}
     (nil))
(insn 235 234 236 16 (set (reg:DI 193 [ D.6883 ])
        (sign_extend:DI (reg:SI 286))) preproc.cpp:239 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
(insn 236 235 237 16 (parallel [
            (set (reg:DI 194 [ D.6883 ])
                (plus:DI (reg:DI 193 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 193 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 237 236 238 16 (parallel [
            (set (reg:DI 195 [ D.6883 ])
                (ashift:DI (reg:DI 194 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 194 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 238 237 239 16 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:239 89 {*movdi_internal}
     (nil))
(insn 239 238 240 16 (parallel [
            (set (reg/f:DI 196 [ D.6881 ])
                (plus:DI (reg:DI 195 [ D.6883 ])
                    (reg/f:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 287)
        (expr_list:REG_DEAD (reg:DI 195 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 195 [ D.6883 ]))
                    (nil))))))
(insn 240 239 241 16 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:239 90 {*movsi_internal}
     (nil))
(insn 241 240 242 16 (set (reg:DI 197 [ D.6883 ])
        (sign_extend:DI (reg:SI 288))) preproc.cpp:239 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 288)
        (nil)))
(insn 242 241 243 16 (parallel [
            (set (reg:DI 198 [ D.6883 ])
                (plus:DI (reg:DI 197 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 197 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 243 242 244 16 (parallel [
            (set (reg:DI 199 [ D.6883 ])
                (ashift:DI (reg:DI 198 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 198 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 244 243 245 16 (parallel [
            (set (reg:DI 200 [ D.6883 ])
                (plus:DI (reg:DI 199 [ D.6883 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 199 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 245 244 246 16 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:239 89 {*movdi_internal}
     (nil))
(insn 246 245 247 16 (parallel [
            (set (reg/f:DI 201 [ D.6881 ])
                (plus:DI (reg:DI 200 [ D.6883 ])
                    (reg/f:DI 289)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 289)
        (expr_list:REG_DEAD (reg:DI 200 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 200 [ D.6883 ]))
                    (nil))))))
(insn 247 246 248 16 (set (reg:SF 202 [ D.6882 ])
        (mem:SF (reg/f:DI 201 [ D.6881 ]) [0 *_135+0 S4 A32])) preproc.cpp:239 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 201 [ D.6881 ])
        (nil)))
(insn 248 247 249 16 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:239 90 {*movsi_internal}
     (nil))
(insn 249 248 250 16 (set (reg:DI 203 [ D.6883 ])
        (sign_extend:DI (reg:SI 290))) preproc.cpp:239 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 250 249 251 16 (parallel [
            (set (reg:DI 204 [ D.6883 ])
                (plus:DI (reg:DI 203 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 203 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 16 (parallel [
            (set (reg:DI 205 [ D.6883 ])
                (ashift:DI (reg:DI 204 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 204 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 16 (parallel [
            (set (reg:DI 206 [ D.6883 ])
                (plus:DI (reg:DI 205 [ D.6883 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 253 252 254 16 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:239 89 {*movdi_internal}
     (nil))
(insn 254 253 255 16 (parallel [
            (set (reg/f:DI 207 [ D.6881 ])
                (plus:DI (reg:DI 206 [ D.6883 ])
                    (reg/f:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:239 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (expr_list:REG_DEAD (reg:DI 206 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 206 [ D.6883 ]))
                    (nil))))))
(insn 255 254 256 16 (set (reg:SF 208 [ D.6882 ])
        (mem:SF (reg/f:DI 207 [ D.6881 ]) [0 *_141+0 S4 A32])) preproc.cpp:239 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 207 [ D.6881 ])
        (nil)))
(insn 256 255 257 16 (set (reg:SF 209 [ D.6882 ])
        (mult:SF (reg:SF 202 [ D.6882 ])
            (reg:SF 208 [ D.6882 ]))) preproc.cpp:239 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 208 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 202 [ D.6882 ])
            (nil))))
(insn 257 256 258 16 (set (reg:SF 292)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])) preproc.cpp:240 129 {*movsf_internal}
     (nil))
(insn 258 257 259 16 (set (reg:SF 210 [ D.6882 ])
        (mult:SF (reg:SF 292)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) preproc.cpp:240 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 292)
        (nil)))
(insn 259 258 260 16 (set (reg:SF 211 [ D.6882 ])
        (plus:SF (reg:SF 209 [ D.6882 ])
            (reg:SF 210 [ D.6882 ]))) preproc.cpp:239 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 210 [ D.6882 ])
        (expr_list:REG_DEAD (reg:SF 209 [ D.6882 ])
            (nil))))
(insn 260 259 261 16 (set (reg:DF 212 [ D.6884 ])
        (float_extend:DF (reg:SF 211 [ D.6882 ]))) preproc.cpp:239 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 211 [ D.6882 ])
        (nil)))
(insn 261 260 262 16 (set (reg:DF 293)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S8 A64])) preproc.cpp:239 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 262 261 263 16 (set (reg:DF 213 [ D.6884 ])
        (mult:DF (reg:DF 212 [ D.6884 ])
            (reg:DF 293))) preproc.cpp:239 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 293)
        (expr_list:REG_DEAD (reg:DF 212 [ D.6884 ])
            (nil))))
(insn 263 262 264 16 (set (reg:DF 21 xmm0)
        (reg:DF 213 [ D.6884 ])) preproc.cpp:239 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 213 [ D.6884 ])
        (nil)))
(call_insn 264 263 265 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:239 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 265 264 266 16 (set (reg:DF 214 [ D.6884 ])
        (reg:DF 21 xmm0)) preproc.cpp:239 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 266 265 267 16 (set (reg:SF 215 [ D.6882 ])
        (float_truncate:SF (reg:DF 214 [ D.6884 ]))) preproc.cpp:240 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 214 [ D.6884 ])
        (nil)))
(insn 267 266 317 16 (set (mem:SF (reg/f:DI 196 [ D.6881 ]) [0 *_130+0 S4 A32])
        (reg:SF 215 [ D.6882 ])) preproc.cpp:240 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 215 [ D.6882 ])
        (expr_list:REG_DEAD (reg/f:DI 196 [ D.6881 ])
            (nil))))
(jump_insn 317 267 318 16 (set (pc)
        (label_ref 291)) preproc.cpp:240 654 {jump}
     (nil)
 -> 291)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 318 317 270)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;;              15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 216 217 218 219 220 221 222 223 224 225 226 294 295 296 297 298
(code_label 270 318 271 17 42 "" [3 uses])
(note 271 270 272 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 17 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:252 90 {*movsi_internal}
     (nil))
(insn 273 272 274 17 (set (reg:DI 216 [ D.6883 ])
        (sign_extend:DI (reg:SI 294))) preproc.cpp:252 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 294)
        (nil)))
(insn 274 273 275 17 (parallel [
            (set (reg:DI 217 [ D.6883 ])
                (plus:DI (reg:DI 216 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 216 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 275 274 276 17 (parallel [
            (set (reg:DI 218 [ D.6883 ])
                (ashift:DI (reg:DI 217 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 217 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 276 275 277 17 (set (reg/f:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:252 89 {*movdi_internal}
     (nil))
(insn 277 276 278 17 (parallel [
            (set (reg/f:DI 219 [ D.6881 ])
                (plus:DI (reg:DI 218 [ D.6883 ])
                    (reg/f:DI 295)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 295)
        (expr_list:REG_DEAD (reg:DI 218 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 218 [ D.6883 ]))
                    (nil))))))
(insn 278 277 279 17 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) preproc.cpp:252 90 {*movsi_internal}
     (nil))
(insn 279 278 280 17 (set (reg:DI 220 [ D.6883 ])
        (sign_extend:DI (reg:SI 296))) preproc.cpp:252 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 296)
        (nil)))
(insn 280 279 281 17 (parallel [
            (set (reg:DI 221 [ D.6883 ])
                (plus:DI (reg:DI 220 [ D.6883 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 281 280 282 17 (parallel [
            (set (reg:DI 222 [ D.6883 ])
                (ashift:DI (reg:DI 221 [ D.6883 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 221 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 282 281 283 17 (parallel [
            (set (reg:DI 223 [ D.6883 ])
                (plus:DI (reg:DI 222 [ D.6883 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 222 [ D.6883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 283 282 284 17 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:252 89 {*movdi_internal}
     (nil))
(insn 284 283 285 17 (parallel [
            (set (reg/f:DI 224 [ D.6881 ])
                (plus:DI (reg:DI 223 [ D.6883 ])
                    (reg/f:DI 297)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 297)
        (expr_list:REG_DEAD (reg:DI 223 [ D.6883 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 223 [ D.6883 ]))
                    (nil))))))
(insn 285 284 286 17 (set (reg:SF 225 [ D.6882 ])
        (mem:SF (reg/f:DI 224 [ D.6881 ]) [0 *_160+0 S4 A32])) preproc.cpp:252 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.6881 ])
        (nil)))
(insn 286 285 287 17 (set (reg:SF 298)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) preproc.cpp:252 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 287 286 288 17 (set (reg:SF 226 [ D.6882 ])
        (mult:SF (reg:SF 225 [ D.6882 ])
            (reg:SF 298))) preproc.cpp:252 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 298)
        (expr_list:REG_DEAD (reg:SF 225 [ D.6882 ])
            (nil))))
(insn 288 287 291 17 (set (mem:SF (reg/f:DI 219 [ D.6881 ]) [0 *_155+0 S4 A32])
        (reg:SF 226 [ D.6882 ])) preproc.cpp:252 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 226 [ D.6882 ])
        (expr_list:REG_DEAD (reg/f:DI 219 [ D.6881 ])
            (nil))))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              17 (FALLTHRU)
;;              11
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 291 288 292 18 40 "" [3 uses])
(note 292 291 293 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 319 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:146 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 319 293 320 18 (set (pc)
        (label_ref 294)) preproc.cpp:146 654 {jump}
     (nil)
 -> 294)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 320 319 297)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 227 228
(code_label 297 320 298 19 35 "" [1 uses])
(note 298 297 299 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 302 19 (set (reg:SI 227 [ D.6879 ])
        (const_int 1 [0x1])) preproc.cpp:257 90 {*movsi_internal}
     (nil))
(insn 302 299 306 19 (set (reg:SI 228 [ <retval> ])
        (reg:SI 227 [ D.6879 ])) preproc.cpp:257 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 227 [ D.6879 ])
        (nil)))
(insn 306 302 307 19 (set (reg/i:SI 0 ax)
        (reg:SI 228 [ <retval> ])) preproc.cpp:258 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228 [ <retval> ])
        (nil)))
(insn 307 306 0 19 (use (reg/i:SI 0 ax)) preproc.cpp:258 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int baseline_correct(float*, Procpar_info*) (_Z16baseline_correctPfP12Procpar_info, funcdef_no=4, decl_uid=5491, cgraph_uid=4, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a32 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a30 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a36 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a44 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a42 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a51 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a70 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a31 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r123,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r122,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a5(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r113,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a18(r112,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a19(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a26(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a29(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a30(r148,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a31(r104,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a32(r149,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a33(r103,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a34(r147,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a35(r102,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a36(r145,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a37(r101,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a38(r146,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a39(r100,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a40(r144,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a41(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a42(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a43(r98,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a44(r143,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a45(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a48(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a49(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a52(r93,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a53(r139,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a54(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a55(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a56(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a57(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a61(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a62(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a63(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a64(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:53 NO_REX_SSE_REGS:53 SSE_REGS:53 MMX_REGS:73 INT_SSE_REGS:57 ALL_REGS:1140 MEM:19
  a66(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a69(r127,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a70(r126,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 121(l0): point = 0
   Insn 120(l0): point = 2
   Insn 116(l0): point = 4
   Insn 113(l0): point = 6
   Insn 77(l0): point = 9
   Insn 76(l0): point = 11
   Insn 75(l0): point = 13
   Insn 74(l0): point = 15
   Insn 125(l0): point = 18
   Insn 107(l0): point = 20
   Insn 106(l0): point = 22
   Insn 105(l0): point = 24
   Insn 104(l0): point = 26
   Insn 103(l0): point = 28
   Insn 102(l0): point = 30
   Insn 101(l0): point = 32
   Insn 100(l0): point = 34
   Insn 99(l0): point = 36
   Insn 98(l0): point = 38
   Insn 97(l0): point = 40
   Insn 96(l0): point = 42
   Insn 95(l0): point = 44
   Insn 94(l0): point = 46
   Insn 93(l0): point = 48
   Insn 92(l0): point = 50
   Insn 91(l0): point = 52
   Insn 90(l0): point = 54
   Insn 89(l0): point = 56
   Insn 88(l0): point = 58
   Insn 87(l0): point = 60
   Insn 86(l0): point = 62
   Insn 85(l0): point = 64
   Insn 84(l0): point = 66
   Insn 83(l0): point = 68
   Insn 82(l0): point = 70
   Insn 81(l0): point = 72
   Insn 80(l0): point = 74
   Insn 79(l0): point = 76
   Insn 72(l0): point = 79
   Insn 71(l0): point = 81
   Insn 70(l0): point = 83
   Insn 69(l0): point = 85
   Insn 68(l0): point = 87
   Insn 67(l0): point = 89
   Insn 66(l0): point = 91
   Insn 65(l0): point = 93
   Insn 64(l0): point = 95
   Insn 63(l0): point = 97
   Insn 62(l0): point = 99
   Insn 61(l0): point = 101
   Insn 60(l0): point = 103
   Insn 59(l0): point = 105
   Insn 58(l0): point = 107
   Insn 31(l0): point = 110
   Insn 30(l0): point = 112
   Insn 29(l0): point = 114
   Insn 28(l0): point = 116
   Insn 123(l0): point = 119
   Insn 52(l0): point = 121
   Insn 51(l0): point = 123
   Insn 50(l0): point = 125
   Insn 49(l0): point = 127
   Insn 48(l0): point = 129
   Insn 47(l0): point = 131
   Insn 46(l0): point = 133
   Insn 45(l0): point = 135
   Insn 44(l0): point = 137
   Insn 43(l0): point = 139
   Insn 42(l0): point = 141
   Insn 41(l0): point = 143
   Insn 40(l0): point = 145
   Insn 39(l0): point = 147
   Insn 38(l0): point = 149
   Insn 37(l0): point = 151
   Insn 36(l0): point = 153
   Insn 35(l0): point = 155
   Insn 34(l0): point = 157
   Insn 33(l0): point = 159
   Insn 26(l0): point = 162
   Insn 25(l0): point = 164
   Insn 22(l0): point = 166
   Insn 21(l0): point = 168
   Insn 20(l0): point = 170
   Insn 19(l0): point = 172
   Insn 18(l0): point = 174
   Insn 17(l0): point = 176
   Insn 16(l0): point = 178
   Insn 15(l0): point = 180
   Insn 14(l0): point = 182
   Insn 13(l0): point = 184
   Insn 12(l0): point = 186
   Insn 11(l0): point = 188
   Insn 10(l0): point = 190
   Insn 9(l0): point = 192
   Insn 8(l0): point = 194
   Insn 7(l0): point = 196
   Insn 3(l0): point = 198
   Insn 2(l0): point = 200
 a0(r125): [3..4]
 a1(r124): [5..6]
 a2(r117): [23..40]
 a3(r123): [23..24]
 a4(r122): [25..26]
 a5(r121): [27..28]
 a6(r158): [29..30]
 a7(r120): [29..32]
 a8(r119): [33..34]
 a9(r118): [35..36]
 a10(r157): [37..38]
 a11(r156): [41..42]
 a12(r116): [41..44]
 a13(r115): [45..46]
 a14(r114): [47..48]
 a15(r155): [49..50]
 a16(r108): [53..68]
 a17(r113): [53..54]
 a18(r112): [55..56]
 a19(r111): [57..58]
 a20(r154): [59..60]
 a21(r110): [59..62]
 a22(r109): [63..64]
 a23(r153): [65..66]
 a24(r152): [69..70]
 a25(r107): [69..72]
 a26(r106): [73..74]
 a27(r151): [75..76]
 a28(r105): [12..13]
 a29(r150): [14..15]
 a30(r148): [82..83]
 a31(r104): [84..87]
 a32(r149): [84..85]
 a33(r103): [88..89]
 a34(r147): [90..91]
 a35(r102): [90..93]
 a36(r145): [96..97]
 a37(r101): [98..101]
 a38(r146): [98..99]
 a39(r100): [102..103]
 a40(r144): [104..105]
 a41(r99): [104..107]
 a42(r142): [124..125]
 a43(r98): [126..129]
 a44(r143): [126..127]
 a45(r97): [130..131]
 a46(r141): [132..133]
 a47(r96): [132..135]
 a48(r95): [136..137]
 a49(r94): [138..139]
 a50(r140): [140..141]
 a51(r138): [144..145]
 a52(r93): [146..149]
 a53(r139): [146..147]
 a54(r92): [150..151]
 a55(r137): [152..153]
 a56(r91): [152..155]
 a57(r90): [156..157]
 a58(r136): [158..159]
 a59(r89): [113..114]
 a60(r135): [115..116]
 a61(r134): [163..164]
 a62(r88): [165..166]
 a63(r132): [167..168]
 a64(r131): [171..172]
 a65(r129): [173..180]
 a66(r130): [175..178]
 a67(r87): [181..182]
 a68(r128): [183..184]
 a69(r127): [187..188]
 a70(r126): [191..192]
Compressing live ranges: from 203 to 112 - 55%
Ranges after the compression:
 a0(r125): [0..1]
 a1(r124): [2..3]
 a2(r117): [8..21]
 a3(r123): [8..9]
 a4(r122): [10..11]
 a5(r121): [12..13]
 a6(r158): [14..15]
 a7(r120): [14..15]
 a8(r119): [16..17]
 a9(r118): [18..19]
 a10(r157): [20..21]
 a11(r156): [22..23]
 a12(r116): [22..23]
 a13(r115): [24..25]
 a14(r114): [26..27]
 a15(r155): [28..29]
 a16(r108): [30..41]
 a17(r113): [30..31]
 a18(r112): [32..33]
 a19(r111): [34..35]
 a20(r154): [36..37]
 a21(r110): [36..37]
 a22(r109): [38..39]
 a23(r153): [40..41]
 a24(r152): [42..43]
 a25(r107): [42..43]
 a26(r106): [44..45]
 a27(r151): [46..47]
 a28(r105): [4..5]
 a29(r150): [6..7]
 a30(r148): [48..49]
 a31(r104): [50..51]
 a32(r149): [50..51]
 a33(r103): [52..53]
 a34(r147): [54..55]
 a35(r102): [54..55]
 a36(r145): [56..57]
 a37(r101): [58..59]
 a38(r146): [58..59]
 a39(r100): [60..61]
 a40(r144): [62..63]
 a41(r99): [62..63]
 a42(r142): [68..69]
 a43(r98): [70..71]
 a44(r143): [70..71]
 a45(r97): [72..73]
 a46(r141): [74..75]
 a47(r96): [74..75]
 a48(r95): [76..77]
 a49(r94): [78..79]
 a50(r140): [80..81]
 a51(r138): [82..83]
 a52(r93): [84..85]
 a53(r139): [84..85]
 a54(r92): [86..87]
 a55(r137): [88..89]
 a56(r91): [88..89]
 a57(r90): [90..91]
 a58(r136): [92..93]
 a59(r89): [64..65]
 a60(r135): [66..67]
 a61(r134): [94..95]
 a62(r88): [96..97]
 a63(r132): [98..99]
 a64(r131): [100..101]
 a65(r129): [102..103]
 a66(r130): [102..103]
 a67(r87): [104..105]
 a68(r128): [106..107]
 a69(r127): [108..109]
 a70(r126): [110..111]
  regions=1, blocks=9, points=112
    allocnos=71 (big 0), copies=0, conflicts=0, ranges=71
Disposition:
   67:r87  l0     0   62:r88  l0     0   59:r89  l0     0   57:r90  l0     0
   56:r91  l0     1   54:r92  l0     0   52:r93  l0    21   49:r94  l0     0
   48:r95  l0     0   47:r96  l0     1   45:r97  l0     0   43:r98  l0    21
   41:r99  l0    21   39:r100 l0    21   37:r101 l0    21   35:r102 l0    21
   33:r103 l0    21   31:r104 l0    21   28:r105 l0     0   26:r106 l0     0
   25:r107 l0     1   16:r108 l0     0   22:r109 l0     1   21:r110 l0     2
   19:r111 l0     1   18:r112 l0    21   17:r113 l0    21   14:r114 l0     0
   13:r115 l0     0   12:r116 l0     1    2:r117 l0     0    9:r118 l0     1
    8:r119 l0     1    7:r120 l0     2    5:r121 l0     1    4:r122 l0    21
    3:r123 l0    21    1:r124 l0     0    0:r125 l0     0   70:r126 l0    21
   69:r127 l0    21   68:r128 l0     0   65:r129 l0     0   66:r130 l0     1
   64:r131 l0     0   63:r132 l0     0   61:r134 l0     0   60:r135 l0     0
   58:r136 l0     0   55:r137 l0     0   51:r138 l0    21   53:r139 l0    22
   50:r140 l0     0   46:r141 l0     0   42:r142 l0    21   44:r143 l0    22
   40:r144 l0    22   36:r145 l0    21   38:r146 l0    22   34:r147 l0    22
   30:r148 l0    21   32:r149 l0    22   29:r150 l0     0   27:r151 l0     0
   24:r152 l0     0   23:r153 l0     1   20:r154 l0     1   15:r155 l0     0
   11:r156 l0     0   10:r157 l0     1    6:r158 l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int baseline_correct(float*, Procpar_info*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,8u} r7={1d,8u} r16={1d,7u} r17={23d,3u} r20={1d,52u,6e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u,1e} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u,1e} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u,1e} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={2d,4u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} 
;;    total ref usage 283{115d,156u,12e} in 98{98 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 126 127 128 129 130 131 132 134
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
        (reg:DI 5 di [ data ])) preproc.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])
        (reg:DI 4 si [ procpar_info ])) preproc.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ procpar_info ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:264 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:264 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 126)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:265 129 {*movsf_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])
        (reg:SF 126)) preproc.cpp:265 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 126)
        (nil)))
(insn 11 10 12 2 (set (reg:SF 127)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:266 129 {*movsf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])
        (reg:SF 127)) preproc.cpp:266 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 127)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:268 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 87 [ D.6886 ])
        (mem/j:SI (plus:DI (reg/f:DI 128)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:268 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 129)
        (reg:SI 87 [ D.6886 ])) preproc.cpp:268 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6886 ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:SI 130)
                (plus:SI (reg:SI 129)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:268 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 129)
            (const_int 0 [0]))) preproc.cpp:268 3 {*cmpsi_ccno_1}
     (nil))
(insn 18 17 19 2 (set (reg:SI 129)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 130)
            (reg:SI 129))) preproc.cpp:268 953 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 131)
                (ashiftrt:SI (reg:SI 129)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:268 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 129)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32])
        (reg:SI 131)) preproc.cpp:268 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:270 89 {*movdi_internal}
     (nil))
(insn 22 21 25 2 (set (reg:SI 88 [ D.6886 ])
        (mem/j:SI (plus:DI (reg/f:DI 132)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:270 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (nil)))
(insn 25 22 26 2 (parallel [
            (set (reg:SI 134)
                (minus:SI (reg:SI 88 [ D.6886 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:270 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.6886 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 53 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 134)) preproc.cpp:270 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 135
(code_label 53 26 27 3 50 "" [1 uses])
(note 27 53 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:270 89 {*movdi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:SI 89 [ D.6886 ])
        (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:270 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (nil)))
(insn 30 29 31 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.6886 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) preproc.cpp:270 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6886 ])
        (nil)))
(jump_insn 31 30 32 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) preproc.cpp:270 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 56)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 91 92 93 94 95 96 97 98 136 137 138 139 140 141 142 143
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) preproc.cpp:272 90 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 90 [ D.6887 ])
        (sign_extend:DI (reg:SI 136))) preproc.cpp:272 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 91 [ D.6887 ])
                (ashift:DI (reg:DI 90 [ D.6887 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:272 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.6887 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 4 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:272 89 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg/f:DI 92 [ D.6888 ])
                (plus:DI (reg:DI 91 [ D.6887 ])
                    (reg/f:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:272 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 137)
        (expr_list:REG_DEAD (reg:DI 91 [ D.6887 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 91 [ D.6887 ]))
                    (nil))))))
(insn 38 37 39 4 (set (reg:SF 93 [ D.6889 ])
        (mem:SF (reg/f:DI 92 [ D.6888 ]) [0 *_20+0 S4 A32])) preproc.cpp:272 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6888 ])
        (nil)))
(insn 39 38 40 4 (set (reg:SF 139)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])) preproc.cpp:272 129 {*movsf_internal}
     (nil))
(insn 40 39 41 4 (set (reg:SF 138)
        (plus:SF (reg:SF 139)
            (reg:SF 93 [ D.6889 ]))) preproc.cpp:272 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 139)
        (expr_list:REG_DEAD (reg:SF 93 [ D.6889 ])
            (nil))))
(insn 41 40 42 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])
        (reg:SF 138)) preproc.cpp:272 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 138)
        (nil)))
(insn 42 41 43 4 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) preproc.cpp:273 90 {*movsi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 94 [ D.6890 ])
        (sign_extend:DI (reg:SI 140))) preproc.cpp:273 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 95 [ D.6890 ])
                (plus:DI (reg:DI 94 [ D.6890 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:273 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.6890 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 96 [ D.6890 ])
                (ashift:DI (reg:DI 95 [ D.6890 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:273 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 95 [ D.6890 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:273 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 97 [ D.6888 ])
                (plus:DI (reg:DI 96 [ D.6890 ])
                    (reg/f:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:273 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 141)
        (expr_list:REG_DEAD (reg:DI 96 [ D.6890 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 96 [ D.6890 ]))
                    (nil))))))
(insn 48 47 49 4 (set (reg:SF 98 [ D.6889 ])
        (mem:SF (reg/f:DI 97 [ D.6888 ]) [0 *_26+0 S4 A32])) preproc.cpp:273 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.6888 ])
        (nil)))
(insn 49 48 50 4 (set (reg:SF 143)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])) preproc.cpp:273 129 {*movsf_internal}
     (nil))
(insn 50 49 51 4 (set (reg:SF 142)
        (plus:SF (reg:SF 143)
            (reg:SF 98 [ D.6889 ]))) preproc.cpp:273 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 143)
        (expr_list:REG_DEAD (reg:SF 98 [ D.6889 ])
            (nil))))
(insn 51 50 52 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])
        (reg:SF 142)) preproc.cpp:273 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 142)
        (nil)))
(insn 52 51 123 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:270 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 123 52 124 4 (set (pc)
        (label_ref 53)) preproc.cpp:270 654 {jump}
     (nil)
 -> 53)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 124 123 56)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 99 100 101 102 103 104 144 145 146 147 148 149
(code_label 56 124 57 5 49 "" [1 uses])
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 5 (set (reg:DF 99 [ D.6891 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32]))) preproc.cpp:276 201 {*floatsidf2_sse}
     (nil))
(insn 59 58 60 5 (set (reg:DF 144)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) preproc.cpp:276 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 60 59 61 5 (set (reg:DF 100 [ D.6891 ])
        (div:DF (reg:DF 99 [ D.6891 ])
            (reg:DF 144))) preproc.cpp:276 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 144)
        (expr_list:REG_DEAD (reg:DF 99 [ D.6891 ])
            (nil))))
(insn 61 60 62 5 (set (reg:SF 101 [ D.6889 ])
        (float_truncate:SF (reg:DF 100 [ D.6891 ]))) preproc.cpp:276 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 100 [ D.6891 ])
        (nil)))
(insn 62 61 63 5 (set (reg:SF 146)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])) preproc.cpp:276 129 {*movsf_internal}
     (nil))
(insn 63 62 64 5 (set (reg:SF 145)
        (div:SF (reg:SF 146)
            (reg:SF 101 [ D.6889 ]))) preproc.cpp:276 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 146)
        (expr_list:REG_DEAD (reg:SF 101 [ D.6889 ])
            (nil))))
(insn 64 63 65 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])
        (reg:SF 145)) preproc.cpp:276 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 145)
        (nil)))
(insn 65 64 66 5 (set (reg:DF 102 [ D.6891 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32]))) preproc.cpp:277 201 {*floatsidf2_sse}
     (nil))
(insn 66 65 67 5 (set (reg:DF 147)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) preproc.cpp:277 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 67 66 68 5 (set (reg:DF 103 [ D.6891 ])
        (div:DF (reg:DF 102 [ D.6891 ])
            (reg:DF 147))) preproc.cpp:277 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 147)
        (expr_list:REG_DEAD (reg:DF 102 [ D.6891 ])
            (nil))))
(insn 68 67 69 5 (set (reg:SF 104 [ D.6889 ])
        (float_truncate:SF (reg:DF 103 [ D.6891 ]))) preproc.cpp:277 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 103 [ D.6891 ])
        (nil)))
(insn 69 68 70 5 (set (reg:SF 149)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])) preproc.cpp:277 129 {*movsf_internal}
     (nil))
(insn 70 69 71 5 (set (reg:SF 148)
        (div:SF (reg:SF 149)
            (reg:SF 104 [ D.6889 ]))) preproc.cpp:277 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 149)
        (expr_list:REG_DEAD (reg:SF 104 [ D.6889 ])
            (nil))))
(insn 71 70 72 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])
        (reg:SF 148)) preproc.cpp:277 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 148)
        (nil)))
(insn 72 71 108 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:279 90 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 150
(code_label 108 72 73 6 52 "" [1 uses])
(note 73 108 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 6 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) preproc.cpp:279 89 {*movdi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:SI 105 [ D.6886 ])
        (mem/j:SI (plus:DI (reg/f:DI 150)
                (const_int 300 [0x12c])) [0 procpar_info_11(D)->num_points+0 S4 A32])) preproc.cpp:279 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (nil)))
(insn 76 75 77 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 105 [ D.6886 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) preproc.cpp:279 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6886 ])
        (nil)))
(jump_insn 77 76 78 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) preproc.cpp:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 111)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 151 152 153 154 155 156 157 158
(note 78 77 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 7 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) preproc.cpp:281 90 {*movsi_internal}
     (nil))
(insn 80 79 81 7 (set (reg:DI 106 [ D.6887 ])
        (sign_extend:DI (reg:SI 151))) preproc.cpp:281 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
(insn 81 80 82 7 (parallel [
            (set (reg:DI 107 [ D.6887 ])
                (ashift:DI (reg:DI 106 [ D.6887 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:281 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.6887 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 7 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:281 89 {*movdi_internal}
     (nil))
(insn 83 82 84 7 (parallel [
            (set (reg/f:DI 108 [ D.6888 ])
                (plus:DI (reg:DI 107 [ D.6887 ])
                    (reg/f:DI 152)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:281 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (expr_list:REG_DEAD (reg:DI 107 [ D.6887 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 107 [ D.6887 ]))
                    (nil))))))
(insn 84 83 85 7 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) preproc.cpp:281 90 {*movsi_internal}
     (nil))
(insn 85 84 86 7 (set (reg:DI 109 [ D.6887 ])
        (sign_extend:DI (reg:SI 153))) preproc.cpp:281 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 86 85 87 7 (parallel [
            (set (reg:DI 110 [ D.6887 ])
                (ashift:DI (reg:DI 109 [ D.6887 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:281 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 109 [ D.6887 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 7 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:281 89 {*movdi_internal}
     (nil))
(insn 88 87 89 7 (parallel [
            (set (reg/f:DI 111 [ D.6888 ])
                (plus:DI (reg:DI 110 [ D.6887 ])
                    (reg/f:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:281 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (expr_list:REG_DEAD (reg:DI 110 [ D.6887 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 110 [ D.6887 ]))
                    (nil))))))
(insn 89 88 90 7 (set (reg:SF 112 [ D.6889 ])
        (mem:SF (reg/f:DI 111 [ D.6888 ]) [0 *_45+0 S4 A32])) preproc.cpp:281 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.6888 ])
        (nil)))
(insn 90 89 91 7 (set (reg:SF 113 [ D.6889 ])
        (minus:SF (reg:SF 112 [ D.6889 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32]))) preproc.cpp:281 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 112 [ D.6889 ])
        (nil)))
(insn 91 90 92 7 (set (mem:SF (reg/f:DI 108 [ D.6888 ]) [0 *_42+0 S4 A32])
        (reg:SF 113 [ D.6889 ])) preproc.cpp:281 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 113 [ D.6889 ])
        (expr_list:REG_DEAD (reg/f:DI 108 [ D.6888 ])
            (nil))))
(insn 92 91 93 7 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) preproc.cpp:282 90 {*movsi_internal}
     (nil))
(insn 93 92 94 7 (set (reg:DI 114 [ D.6890 ])
        (sign_extend:DI (reg:SI 155))) preproc.cpp:282 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 94 93 95 7 (parallel [
            (set (reg:DI 115 [ D.6890 ])
                (plus:DI (reg:DI 114 [ D.6890 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:282 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.6890 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 7 (parallel [
            (set (reg:DI 116 [ D.6890 ])
                (ashift:DI (reg:DI 115 [ D.6890 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:282 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ D.6890 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 96 95 97 7 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:282 89 {*movdi_internal}
     (nil))
(insn 97 96 98 7 (parallel [
            (set (reg/f:DI 117 [ D.6888 ])
                (plus:DI (reg:DI 116 [ D.6890 ])
                    (reg/f:DI 156)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:282 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_DEAD (reg:DI 116 [ D.6890 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 116 [ D.6890 ]))
                    (nil))))))
(insn 98 97 99 7 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) preproc.cpp:282 90 {*movsi_internal}
     (nil))
(insn 99 98 100 7 (set (reg:DI 118 [ D.6890 ])
        (sign_extend:DI (reg:SI 157))) preproc.cpp:282 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 100 99 101 7 (parallel [
            (set (reg:DI 119 [ D.6890 ])
                (plus:DI (reg:DI 118 [ D.6890 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:282 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ D.6890 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 7 (parallel [
            (set (reg:DI 120 [ D.6890 ])
                (ashift:DI (reg:DI 119 [ D.6890 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:282 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.6890 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 7 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) preproc.cpp:282 89 {*movdi_internal}
     (nil))
(insn 103 102 104 7 (parallel [
            (set (reg/f:DI 121 [ D.6888 ])
                (plus:DI (reg:DI 120 [ D.6890 ])
                    (reg/f:DI 158)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:282 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_DEAD (reg:DI 120 [ D.6890 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 120 [ D.6890 ]))
                    (nil))))))
(insn 104 103 105 7 (set (reg:SF 122 [ D.6889 ])
        (mem:SF (reg/f:DI 121 [ D.6888 ]) [0 *_56+0 S4 A32])) preproc.cpp:282 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.6888 ])
        (nil)))
(insn 105 104 106 7 (set (reg:SF 123 [ D.6889 ])
        (minus:SF (reg:SF 122 [ D.6889 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32]))) preproc.cpp:282 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 122 [ D.6889 ])
        (nil)))
(insn 106 105 107 7 (set (mem:SF (reg/f:DI 117 [ D.6888 ]) [0 *_52+0 S4 A32])
        (reg:SF 123 [ D.6889 ])) preproc.cpp:282 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 123 [ D.6889 ])
        (expr_list:REG_DEAD (reg/f:DI 117 [ D.6888 ])
            (nil))))
(insn 107 106 125 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:279 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 125 107 126 7 (set (pc)
        (label_ref 108)) preproc.cpp:279 654 {jump}
     (nil)
 -> 108)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 126 125 111)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 124 125
(code_label 111 126 112 8 51 "" [1 uses])
(note 112 111 113 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 116 8 (set (reg:SI 124 [ D.6886 ])
        (const_int 1 [0x1])) preproc.cpp:285 90 {*movsi_internal}
     (nil))
(insn 116 113 120 8 (set (reg:SI 125 [ <retval> ])
        (reg:SI 124 [ D.6886 ])) preproc.cpp:285 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124 [ D.6886 ])
        (nil)))
(insn 120 116 121 8 (set (reg/i:SI 0 ax)
        (reg:SI 125 [ <retval> ])) preproc.cpp:286 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ <retval> ])
        (nil)))
(insn 121 120 0 8 (use (reg/i:SI 0 ax)) preproc.cpp:286 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int ecc_correction(float*, float*, Procpar_info*, Preprocess*) (_Z14ecc_correctionPfS_P12Procpar_infoP10Preprocess, funcdef_no=5, decl_uid=5466, cgraph_uid=5, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 184.
verify found no changes in insn with uid = 198.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r242: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a7 (r242,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r239,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a28 (r236,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a39 (r233,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a48 (r226,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a64 (r221,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a98 (r212,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a114 (r207,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a150 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a151 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a152 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a153 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a154 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a155 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r191,l0) best AREG, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r187,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r180,l0) best SSE_REGS, allocno SSE_REGS
    r179: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a17 (r179,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r178: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a27 (r172,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a38 (r164,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a49 (r159,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a58 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a65 (r148,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a66 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a68 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a69 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a67 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a85 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a92 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a99 (r123,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a101 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a100 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a108 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a115 (r112,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a116 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a118 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a119 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a127 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a117 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a134 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a136 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a135 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a142 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r189,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r188,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r186,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r187,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r242,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a8(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r181,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a15(r180,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r178,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r179,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a18(r239,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a19(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r173,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r171,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r172,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a28(r236,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a29(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a31(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r166,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a36(r165,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r163,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a38(r164,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a39(r233,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a40(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r229,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a45(r230,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a46(r227,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a47(r228,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a48(r226,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a49(r159,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a50(r153,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a51(r158,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a52(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a55(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a56(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a58(r152,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a59(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a60(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a62(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a63(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r221,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a65(r148,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a66(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a67(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a68(r146,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a69(r140,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a70(r145,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a71(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a72(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a73(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a74(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a75(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r139,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a78(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a79(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a80(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a81(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a82(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r133,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a85(r128,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a86(r132,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a87(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a88(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a90(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a91(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a92(r127,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a93(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a94(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a96(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a98(r212,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a99(r123,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a100(r117,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a101(r122,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a102(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a106(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r116,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a109(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a110(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a111(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a112(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a113(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r207,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a115(r112,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a116(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a117(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a118(r110,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a119(r104,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a120(r109,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a121(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a124(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a125(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r103,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a128(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a129(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a130(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a131(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a132(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r97,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a135(r92,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a136(r96,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a137(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a138(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a139(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a140(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a141(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a142(r91,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a143(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a144(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a146(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a147(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a148(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a149(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a150(r197,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a151(r196,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a152(r195,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a153(r194,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a154(r193,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a155(r192,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 217(l0): point = 0
   Insn 216(l0): point = 2
   Insn 212(l0): point = 4
   Insn 209(l0): point = 6
   Insn 27(l0): point = 9
   Insn 26(l0): point = 11
   Insn 25(l0): point = 13
   Insn 24(l0): point = 15
   Insn 219(l0): point = 18
   Insn 203(l0): point = 20
   Insn 202(l0): point = 22
   Insn 201(l0): point = 24
   Insn 200(l0): point = 26
   Insn 199(l0): point = 28
   Insn 198(l0): point = 30
   Insn 197(l0): point = 32
   Insn 196(l0): point = 34
   Insn 195(l0): point = 36
   Insn 194(l0): point = 38
   Insn 193(l0): point = 40
   Insn 192(l0): point = 42
   Insn 191(l0): point = 44
   Insn 190(l0): point = 46
   Insn 189(l0): point = 48
   Insn 188(l0): point = 50
   Insn 187(l0): point = 52
   Insn 186(l0): point = 54
   Insn 185(l0): point = 56
   Insn 184(l0): point = 58
   Insn 183(l0): point = 60
   Insn 182(l0): point = 62
   Insn 181(l0): point = 64
   Insn 180(l0): point = 66
   Insn 179(l0): point = 68
   Insn 178(l0): point = 70
   Insn 177(l0): point = 72
   Insn 176(l0): point = 74
   Insn 175(l0): point = 76
   Insn 174(l0): point = 78
   Insn 173(l0): point = 80
   Insn 172(l0): point = 82
   Insn 171(l0): point = 84
   Insn 170(l0): point = 86
   Insn 169(l0): point = 88
   Insn 168(l0): point = 90
   Insn 167(l0): point = 92
   Insn 166(l0): point = 94
   Insn 165(l0): point = 96
   Insn 164(l0): point = 98
   Insn 163(l0): point = 100
   Insn 162(l0): point = 102
   Insn 161(l0): point = 104
   Insn 160(l0): point = 106
   Insn 159(l0): point = 108
   Insn 158(l0): point = 110
   Insn 157(l0): point = 112
   Insn 156(l0): point = 114
   Insn 155(l0): point = 116
   Insn 154(l0): point = 118
   Insn 153(l0): point = 120
   Insn 152(l0): point = 122
   Insn 151(l0): point = 124
   Insn 150(l0): point = 126
   Insn 149(l0): point = 128
   Insn 148(l0): point = 130
   Insn 147(l0): point = 132
   Insn 146(l0): point = 134
   Insn 145(l0): point = 136
   Insn 144(l0): point = 138
   Insn 143(l0): point = 140
   Insn 142(l0): point = 142
   Insn 141(l0): point = 144
   Insn 140(l0): point = 146
   Insn 139(l0): point = 148
   Insn 138(l0): point = 150
   Insn 137(l0): point = 152
   Insn 136(l0): point = 154
   Insn 135(l0): point = 156
   Insn 134(l0): point = 158
   Insn 133(l0): point = 160
   Insn 132(l0): point = 162
   Insn 131(l0): point = 164
   Insn 130(l0): point = 166
   Insn 129(l0): point = 168
   Insn 128(l0): point = 170
   Insn 127(l0): point = 172
   Insn 126(l0): point = 174
   Insn 125(l0): point = 176
   Insn 124(l0): point = 178
   Insn 123(l0): point = 180
   Insn 122(l0): point = 182
   Insn 121(l0): point = 184
   Insn 120(l0): point = 186
   Insn 119(l0): point = 188
   Insn 118(l0): point = 190
   Insn 117(l0): point = 192
   Insn 116(l0): point = 194
   Insn 115(l0): point = 196
   Insn 114(l0): point = 198
   Insn 113(l0): point = 200
   Insn 112(l0): point = 202
   Insn 111(l0): point = 204
   Insn 110(l0): point = 206
   Insn 109(l0): point = 208
   Insn 108(l0): point = 210
   Insn 107(l0): point = 212
   Insn 106(l0): point = 214
   Insn 105(l0): point = 216
   Insn 104(l0): point = 218
   Insn 103(l0): point = 220
   Insn 102(l0): point = 222
   Insn 101(l0): point = 224
   Insn 100(l0): point = 226
   Insn 99(l0): point = 228
   Insn 98(l0): point = 230
   Insn 97(l0): point = 232
   Insn 96(l0): point = 234
   Insn 95(l0): point = 236
   Insn 94(l0): point = 238
   Insn 93(l0): point = 240
   Insn 92(l0): point = 242
   Insn 91(l0): point = 244
   Insn 90(l0): point = 246
   Insn 89(l0): point = 248
   Insn 88(l0): point = 250
   Insn 87(l0): point = 252
   Insn 86(l0): point = 254
   Insn 85(l0): point = 256
   Insn 84(l0): point = 258
   Insn 83(l0): point = 260
   Insn 82(l0): point = 262
   Insn 81(l0): point = 264
   Insn 80(l0): point = 266
   Insn 79(l0): point = 268
   Insn 78(l0): point = 270
   Insn 77(l0): point = 272
   Insn 76(l0): point = 274
   Insn 75(l0): point = 276
   Insn 74(l0): point = 278
   Insn 73(l0): point = 280
   Insn 72(l0): point = 282
   Insn 71(l0): point = 284
   Insn 70(l0): point = 286
   Insn 69(l0): point = 288
   Insn 68(l0): point = 290
   Insn 67(l0): point = 292
   Insn 66(l0): point = 294
   Insn 65(l0): point = 296
   Insn 64(l0): point = 298
   Insn 63(l0): point = 300
   Insn 62(l0): point = 302
   Insn 61(l0): point = 304
   Insn 60(l0): point = 306
   Insn 59(l0): point = 308
   Insn 58(l0): point = 310
   Insn 57(l0): point = 312
   Insn 56(l0): point = 314
   Insn 55(l0): point = 316
   Insn 54(l0): point = 318
   Insn 53(l0): point = 320
   Insn 52(l0): point = 322
   Insn 51(l0): point = 324
   Insn 50(l0): point = 326
   Insn 49(l0): point = 328
   Insn 48(l0): point = 330
   Insn 47(l0): point = 332
   Insn 46(l0): point = 334
   Insn 45(l0): point = 336
   Insn 44(l0): point = 338
   Insn 43(l0): point = 340
   Insn 42(l0): point = 342
   Insn 41(l0): point = 344
   Insn 40(l0): point = 346
   Insn 39(l0): point = 348
   Insn 38(l0): point = 350
   Insn 37(l0): point = 352
   Insn 36(l0): point = 354
   Insn 35(l0): point = 356
   Insn 34(l0): point = 358
   Insn 33(l0): point = 360
   Insn 32(l0): point = 362
   Insn 31(l0): point = 364
   Insn 30(l0): point = 366
   Insn 29(l0): point = 368
   Insn 22(l0): point = 371
   Insn 21(l0): point = 373
   Insn 20(l0): point = 375
   Insn 19(l0): point = 377
   Insn 18(l0): point = 379
   Insn 17(l0): point = 381
   Insn 16(l0): point = 383
   Insn 15(l0): point = 385
   Insn 14(l0): point = 387
   Insn 13(l0): point = 389
   Insn 12(l0): point = 391
   Insn 11(l0): point = 393
   Insn 10(l0): point = 395
   Insn 9(l0): point = 397
   Insn 5(l0): point = 399
   Insn 4(l0): point = 401
   Insn 3(l0): point = 403
   Insn 2(l0): point = 405
 a0(r191): [3..4]
 a1(r190): [5..6]
 a2(r185): [23..38]
 a3(r189): [23..24]
 a4(r188): [25..26]
 a5(r186): [25..36]
 a6(r187): [27..28]
 a7(r242): [33..34]
 a8(r241): [39..40]
 a9(r184): [39..42]
 a10(r183): [43..44]
 a11(r182): [45..46]
 a12(r240): [47..48]
 a13(r177): [51..66]
 a14(r181): [51..52]
 a15(r180): [53..54]
 a16(r178): [53..64]
 a17(r179): [55..56]
 a18(r239): [61..62]
 a19(r238): [67..68]
 a20(r176): [67..70]
 a21(r175): [71..72]
 a22(r237): [73..74]
 a23(r170): [77..92]
 a24(r174): [77..78]
 a25(r173): [79..80]
 a26(r171): [79..90]
 a27(r172): [81..82]
 a28(r236): [87..88]
 a29(r235): [93..94]
 a30(r169): [93..96]
 a31(r168): [97..98]
 a32(r167): [99..100]
 a33(r234): [101..102]
 a34(r162): [105..120]
 a35(r166): [105..106]
 a36(r165): [107..108]
 a37(r163): [107..118]
 a38(r164): [109..110]
 a39(r233): [115..116]
 a40(r232): [121..122]
 a41(r161): [121..124]
 a42(r160): [125..126]
 a43(r231): [127..128]
 a44(r229): [131..132]
 a45(r230): [133..134]
 a46(r227): [137..138]
 a47(r228): [139..140]
 a48(r226): [143..144]
 a49(r159): [149..152]
 a50(r153): [151..168]
 a51(r158): [153..154]
 a52(r157): [155..156]
 a53(r225): [157..158]
 a54(r156): [157..160]
 a55(r155): [161..162]
 a56(r154): [163..164]
 a57(r224): [165..166]
 a58(r152): [169..170]
 a59(r151): [171..172]
 a60(r223): [173..174]
 a61(r150): [173..176]
 a62(r149): [177..178]
 a63(r222): [179..180]
 a64(r221): [183..184]
 a65(r148): [189..190]
 a66(r147): [191..192]
 a67(r134): [191..226]
 a68(r146): [193..194]
 a69(r140): [193..210]
 a70(r145): [195..196]
 a71(r144): [197..198]
 a72(r220): [199..200]
 a73(r143): [199..202]
 a74(r142): [203..204]
 a75(r141): [205..206]
 a76(r219): [207..208]
 a77(r139): [211..212]
 a78(r138): [213..214]
 a79(r218): [215..216]
 a80(r137): [215..218]
 a81(r136): [219..220]
 a82(r135): [221..222]
 a83(r217): [223..224]
 a84(r133): [227..228]
 a85(r128): [227..242]
 a86(r132): [229..230]
 a87(r131): [231..232]
 a88(r216): [233..234]
 a89(r130): [233..236]
 a90(r129): [237..238]
 a91(r215): [239..240]
 a92(r127): [243..244]
 a93(r126): [245..246]
 a94(r214): [247..248]
 a95(r125): [247..250]
 a96(r124): [251..252]
 a97(r213): [253..254]
 a98(r212): [257..258]
 a99(r123): [263..266]
 a100(r117): [265..282]
 a101(r122): [267..268]
 a102(r121): [269..270]
 a103(r211): [271..272]
 a104(r120): [271..274]
 a105(r119): [275..276]
 a106(r118): [277..278]
 a107(r210): [279..280]
 a108(r116): [283..284]
 a109(r115): [285..286]
 a110(r209): [287..288]
 a111(r114): [287..290]
 a112(r113): [291..292]
 a113(r208): [293..294]
 a114(r207): [297..298]
 a115(r112): [303..304]
 a116(r111): [305..306]
 a117(r98): [305..340]
 a118(r110): [307..308]
 a119(r104): [307..324]
 a120(r109): [309..310]
 a121(r108): [311..312]
 a122(r206): [313..314]
 a123(r107): [313..316]
 a124(r106): [317..318]
 a125(r105): [319..320]
 a126(r205): [321..322]
 a127(r103): [325..326]
 a128(r102): [327..328]
 a129(r204): [329..330]
 a130(r101): [329..332]
 a131(r100): [333..334]
 a132(r99): [335..336]
 a133(r203): [337..338]
 a134(r97): [341..342]
 a135(r92): [341..356]
 a136(r96): [343..344]
 a137(r95): [345..346]
 a138(r202): [347..348]
 a139(r94): [347..350]
 a140(r93): [351..352]
 a141(r201): [353..354]
 a142(r91): [357..358]
 a143(r90): [359..360]
 a144(r200): [361..362]
 a145(r89): [361..364]
 a146(r88): [365..366]
 a147(r199): [367..368]
 a148(r87): [12..13]
 a149(r198): [14..15]
 a150(r197): [374..375]
 a151(r196): [378..379]
 a152(r195): [382..383]
 a153(r194): [386..387]
 a154(r193): [390..391]
 a155(r192): [394..395]
Compressing live ranges: from 408 to 248 - 60%
Ranges after the compression:
 a0(r191): [0..1]
 a1(r190): [2..3]
 a2(r185): [8..15]
 a3(r189): [8..9]
 a4(r188): [10..11]
 a5(r186): [10..15]
 a6(r187): [12..13]
 a7(r242): [14..15]
 a8(r241): [16..17]
 a9(r184): [16..17]
 a10(r183): [18..19]
 a11(r182): [20..21]
 a12(r240): [22..23]
 a13(r177): [24..31]
 a14(r181): [24..25]
 a15(r180): [26..27]
 a16(r178): [26..31]
 a17(r179): [28..29]
 a18(r239): [30..31]
 a19(r238): [32..33]
 a20(r176): [32..33]
 a21(r175): [34..35]
 a22(r237): [36..37]
 a23(r170): [38..45]
 a24(r174): [38..39]
 a25(r173): [40..41]
 a26(r171): [40..45]
 a27(r172): [42..43]
 a28(r236): [44..45]
 a29(r235): [46..47]
 a30(r169): [46..47]
 a31(r168): [48..49]
 a32(r167): [50..51]
 a33(r234): [52..53]
 a34(r162): [54..61]
 a35(r166): [54..55]
 a36(r165): [56..57]
 a37(r163): [56..61]
 a38(r164): [58..59]
 a39(r233): [60..61]
 a40(r232): [62..63]
 a41(r161): [62..63]
 a42(r160): [64..65]
 a43(r231): [66..67]
 a44(r229): [68..69]
 a45(r230): [70..71]
 a46(r227): [72..73]
 a47(r228): [74..75]
 a48(r226): [76..77]
 a49(r159): [78..79]
 a50(r153): [78..91]
 a51(r158): [80..81]
 a52(r157): [82..83]
 a53(r225): [84..85]
 a54(r156): [84..85]
 a55(r155): [86..87]
 a56(r154): [88..89]
 a57(r224): [90..91]
 a58(r152): [92..93]
 a59(r151): [94..95]
 a60(r223): [96..97]
 a61(r150): [96..97]
 a62(r149): [98..99]
 a63(r222): [100..101]
 a64(r221): [102..103]
 a65(r148): [104..105]
 a66(r147): [106..107]
 a67(r134): [106..133]
 a68(r146): [108..109]
 a69(r140): [108..121]
 a70(r145): [110..111]
 a71(r144): [112..113]
 a72(r220): [114..115]
 a73(r143): [114..115]
 a74(r142): [116..117]
 a75(r141): [118..119]
 a76(r219): [120..121]
 a77(r139): [122..123]
 a78(r138): [124..125]
 a79(r218): [126..127]
 a80(r137): [126..127]
 a81(r136): [128..129]
 a82(r135): [130..131]
 a83(r217): [132..133]
 a84(r133): [134..135]
 a85(r128): [134..145]
 a86(r132): [136..137]
 a87(r131): [138..139]
 a88(r216): [140..141]
 a89(r130): [140..141]
 a90(r129): [142..143]
 a91(r215): [144..145]
 a92(r127): [146..147]
 a93(r126): [148..149]
 a94(r214): [150..151]
 a95(r125): [150..151]
 a96(r124): [152..153]
 a97(r213): [154..155]
 a98(r212): [156..157]
 a99(r123): [158..159]
 a100(r117): [158..171]
 a101(r122): [160..161]
 a102(r121): [162..163]
 a103(r211): [164..165]
 a104(r120): [164..165]
 a105(r119): [166..167]
 a106(r118): [168..169]
 a107(r210): [170..171]
 a108(r116): [172..173]
 a109(r115): [174..175]
 a110(r209): [176..177]
 a111(r114): [176..177]
 a112(r113): [178..179]
 a113(r208): [180..181]
 a114(r207): [182..183]
 a115(r112): [184..185]
 a116(r111): [186..187]
 a117(r98): [186..213]
 a118(r110): [188..189]
 a119(r104): [188..201]
 a120(r109): [190..191]
 a121(r108): [192..193]
 a122(r206): [194..195]
 a123(r107): [194..195]
 a124(r106): [196..197]
 a125(r105): [198..199]
 a126(r205): [200..201]
 a127(r103): [202..203]
 a128(r102): [204..205]
 a129(r204): [206..207]
 a130(r101): [206..207]
 a131(r100): [208..209]
 a132(r99): [210..211]
 a133(r203): [212..213]
 a134(r97): [214..215]
 a135(r92): [214..225]
 a136(r96): [216..217]
 a137(r95): [218..219]
 a138(r202): [220..221]
 a139(r94): [220..221]
 a140(r93): [222..223]
 a141(r201): [224..225]
 a142(r91): [226..227]
 a143(r90): [228..229]
 a144(r200): [230..231]
 a145(r89): [230..231]
 a146(r88): [232..233]
 a147(r199): [234..235]
 a148(r87): [4..5]
 a149(r198): [6..7]
 a150(r197): [236..237]
 a151(r196): [238..239]
 a152(r195): [240..241]
 a153(r194): [242..243]
 a154(r193): [244..245]
 a155(r192): [246..247]
  pref0:a7(r242)<-hr21@1
  pref1:a18(r239)<-hr21@1
  pref2:a28(r236)<-hr21@1
  pref3:a39(r233)<-hr21@1
  pref4:a48(r226)<-hr21@1
  pref5:a64(r221)<-hr21@1
  pref6:a98(r212)<-hr21@1
  pref7:a114(r207)<-hr21@1
  regions=1, blocks=6, points=248
    allocnos=156 (big 0), copies=0, conflicts=0, ranges=156
Disposition:
  148:r87  l0     0  146:r88  l0     0  145:r89  l0     1  143:r90  l0     0
  142:r91  l0    21  135:r92  l0    22  140:r93  l0     0  139:r94  l0     1
  137:r95  l0     0  136:r96  l0    21  134:r97  l0    21  117:r98  l0    22
  132:r99  l0     0  131:r100 l0     0  130:r101 l0     1  128:r102 l0     0
  127:r103 l0    21  119:r104 l0    23  125:r105 l0     0  124:r106 l0     0
  123:r107 l0     1  121:r108 l0     0  120:r109 l0    21  118:r110 l0    21
  116:r111 l0    21  115:r112 l0    21  112:r113 l0     0  111:r114 l0     1
  109:r115 l0     0  108:r116 l0    21  100:r117 l0    22  106:r118 l0     0
  105:r119 l0     0  104:r120 l0     1  102:r121 l0     0  101:r122 l0    21
   99:r123 l0    21   96:r124 l0     0   95:r125 l0     1   93:r126 l0     0
   92:r127 l0    21   85:r128 l0    22   90:r129 l0     0   89:r130 l0     1
   87:r131 l0     0   86:r132 l0    21   84:r133 l0    21   67:r134 l0    22
   82:r135 l0     0   81:r136 l0     0   80:r137 l0     1   78:r138 l0     0
   77:r139 l0    21   69:r140 l0    23   75:r141 l0     0   74:r142 l0     0
   73:r143 l0     1   71:r144 l0     0   70:r145 l0    21   68:r146 l0    21
   66:r147 l0    21   65:r148 l0    21   62:r149 l0     0   61:r150 l0     1
   59:r151 l0     0   58:r152 l0    21   50:r153 l0    22   56:r154 l0     0
   55:r155 l0     0   54:r156 l0     1   52:r157 l0     0   51:r158 l0    21
   49:r159 l0    21   42:r160 l0     0   41:r161 l0     1   34:r162 l0     3
   37:r163 l0   mem   38:r164 l0    21   36:r165 l0    21   35:r166 l0    21
   32:r167 l0     0   31:r168 l0     0   30:r169 l0     1   23:r170 l0     3
   26:r171 l0   mem   27:r172 l0    21   25:r173 l0    21   24:r174 l0    21
   21:r175 l0     0   20:r176 l0     1   13:r177 l0     3   16:r178 l0   mem
   17:r179 l0    21   15:r180 l0    21   14:r181 l0    21   11:r182 l0     0
   10:r183 l0     0    9:r184 l0     1    2:r185 l0     3    5:r186 l0   mem
    6:r187 l0    21    4:r188 l0    21    3:r189 l0    21    1:r190 l0     0
    0:r191 l0     0  155:r192 l0    21  154:r193 l0    21  153:r194 l0    21
  152:r195 l0    21  151:r196 l0    21  150:r197 l0    21  149:r198 l0     0
  147:r199 l0     0  144:r200 l0     0  141:r201 l0     0  138:r202 l0     0
  133:r203 l0     0  129:r204 l0     0  126:r205 l0     0  122:r206 l0     0
  114:r207 l0     0  113:r208 l0     0  110:r209 l0     0  107:r210 l0     0
  103:r211 l0     0   98:r212 l0     0   97:r213 l0     0   94:r214 l0     0
   91:r215 l0     0   88:r216 l0     0   83:r217 l0     0   79:r218 l0     0
   76:r219 l0     0   72:r220 l0     0   64:r221 l0     0   63:r222 l0     0
   60:r223 l0     0   57:r224 l0     0   53:r225 l0     0   48:r226 l0     0
   46:r227 l0    21   47:r228 l0    21   44:r229 l0    21   45:r230 l0    21
   43:r231 l0     0   40:r232 l0     0   39:r233 l0     0   33:r234 l0     0
   29:r235 l0     0   28:r236 l0     0   22:r237 l0     0   19:r238 l0     0
   18:r239 l0     0   12:r240 l0     0    8:r241 l0     0    7:r242 l0     0
+++Costs: overall 43, reg -17, mem 60, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int ecc_correction(float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1]
;;  ref usage 	r0={10d,2u} r1={9d,1u} r2={9d,1u} r4={9d,1u} r5={9d,1u} r6={1d,5u} r7={1d,13u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,4u} r17={50d,1u} r18={8d} r19={8d} r20={1d,71u,16e} r21={17d,16u} r22={11d,2u} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u,1e} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u,1e} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u,1e} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u,1e} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u,1e} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u,1e} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} 
;;    total ref usage 1110{804d,274u,32e} in 202{194 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 192 193 194 195 196 197
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) preproc.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) preproc.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) preproc.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) preproc.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:293 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DF 192)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:294 128 {*movdf_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64])
        (reg:DF 192)) preproc.cpp:294 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 192)
        (nil)))
(insn 12 11 13 2 (set (reg:DF 193)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:294 128 {*movdf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 193)) preproc.cpp:294 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 193)
        (nil)))
(insn 14 13 15 2 (set (reg:DF 194)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:295 128 {*movdf_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_sup+0 S8 A64])
        (reg:DF 194)) preproc.cpp:295 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 194)
        (nil)))
(insn 16 15 17 2 (set (reg:DF 195)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:295 128 {*movdf_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 195)) preproc.cpp:295 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 195)
        (nil)))
(insn 18 17 19 2 (set (reg:DF 196)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:295 128 {*movdf_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 196)) preproc.cpp:295 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 196)
        (nil)))
(insn 20 19 21 2 (set (reg:DF 197)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:296 128 {*movdf_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 197)) preproc.cpp:296 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 197)
        (nil)))
(insn 22 21 204 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:299 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 198
(code_label 204 22 23 3 56 "" [1 uses])
(note 23 204 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 procpar_info+0 S8 A64])) preproc.cpp:299 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:SI 87 [ D.6892 ])
        (mem/j:SI (plus:DI (reg/f:DI 198)
                (const_int 300 [0x12c])) [0 procpar_info_12(D)->num_points+0 S4 A32])) preproc.cpp:299 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (nil)))
(insn 26 25 27 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.6892 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32]))) preproc.cpp:299 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6892 ])
        (nil)))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 207)
            (pc))) preproc.cpp:299 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 207)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:301 90 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 88 [ D.6893 ])
        (sign_extend:DI (reg:SI 199))) preproc.cpp:301 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 89 [ D.6893 ])
                (ashift:DI (reg:DI 88 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:301 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:301 89 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 90 [ D.6894 ])
                (plus:DI (reg:DI 89 [ D.6893 ])
                    (reg/f:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:301 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (expr_list:REG_DEAD (reg:DI 89 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 89 [ D.6893 ]))
                    (nil))))))
(insn 34 33 35 4 (set (reg:SF 91 [ D.6895 ])
        (mem:SF (reg/f:DI 90 [ D.6894 ]) [0 *_17+0 S4 A32])) preproc.cpp:301 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6894 ])
        (nil)))
(insn 35 34 36 4 (set (reg:DF 92 [ D.6896 ])
        (float_extend:DF (reg:SF 91 [ D.6895 ]))) preproc.cpp:301 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 91 [ D.6895 ])
        (nil)))
(insn 36 35 37 4 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:301 90 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 93 [ D.6893 ])
        (sign_extend:DI (reg:SI 201))) preproc.cpp:301 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 94 [ D.6893 ])
                (ashift:DI (reg:DI 93 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:301 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 4 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:301 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 95 [ D.6894 ])
                (plus:DI (reg:DI 94 [ D.6893 ])
                    (reg/f:DI 202)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:301 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (expr_list:REG_DEAD (reg:DI 94 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 94 [ D.6893 ]))
                    (nil))))))
(insn 41 40 42 4 (set (reg:SF 96 [ D.6895 ])
        (mem:SF (reg/f:DI 95 [ D.6894 ]) [0 *_22+0 S4 A32])) preproc.cpp:301 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6894 ])
        (nil)))
(insn 42 41 43 4 (set (reg:DF 97 [ D.6896 ])
        (float_extend:DF (reg:SF 96 [ D.6895 ]))) preproc.cpp:301 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 96 [ D.6895 ])
        (nil)))
(insn 43 42 44 4 (set (reg:DF 98 [ D.6896 ])
        (mult:DF (reg:DF 92 [ D.6896 ])
            (reg:DF 97 [ D.6896 ]))) preproc.cpp:301 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.6896 ])
        (expr_list:REG_DEAD (reg:DF 92 [ D.6896 ])
            (nil))))
(insn 44 43 45 4 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:302 90 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (set (reg:DI 99 [ D.6897 ])
        (sign_extend:DI (reg:SI 203))) preproc.cpp:302 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 100 [ D.6897 ])
                (plus:DI (reg:DI 99 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:302 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 101 [ D.6897 ])
                (ashift:DI (reg:DI 100 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:302 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 4 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:302 89 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (parallel [
            (set (reg/f:DI 102 [ D.6894 ])
                (plus:DI (reg:DI 101 [ D.6897 ])
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:302 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg:DI 101 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 101 [ D.6897 ]))
                    (nil))))))
(insn 50 49 51 4 (set (reg:SF 103 [ D.6895 ])
        (mem:SF (reg/f:DI 102 [ D.6894 ]) [0 *_29+0 S4 A32])) preproc.cpp:302 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.6894 ])
        (nil)))
(insn 51 50 52 4 (set (reg:DF 104 [ D.6896 ])
        (float_extend:DF (reg:SF 103 [ D.6895 ]))) preproc.cpp:302 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 103 [ D.6895 ])
        (nil)))
(insn 52 51 53 4 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:302 90 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 105 [ D.6897 ])
        (sign_extend:DI (reg:SI 205))) preproc.cpp:302 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 205)
        (nil)))
(insn 54 53 55 4 (parallel [
            (set (reg:DI 106 [ D.6897 ])
                (plus:DI (reg:DI 105 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:302 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 55 54 56 4 (parallel [
            (set (reg:DI 107 [ D.6897 ])
                (ashift:DI (reg:DI 106 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:302 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 4 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:302 89 {*movdi_internal}
     (nil))
(insn 57 56 58 4 (parallel [
            (set (reg/f:DI 108 [ D.6894 ])
                (plus:DI (reg:DI 107 [ D.6897 ])
                    (reg/f:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:302 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (expr_list:REG_DEAD (reg:DI 107 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 107 [ D.6897 ]))
                    (nil))))))
(insn 58 57 59 4 (set (reg:SF 109 [ D.6895 ])
        (mem:SF (reg/f:DI 108 [ D.6894 ]) [0 *_35+0 S4 A32])) preproc.cpp:302 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.6894 ])
        (nil)))
(insn 59 58 60 4 (set (reg:DF 110 [ D.6896 ])
        (float_extend:DF (reg:SF 109 [ D.6895 ]))) preproc.cpp:302 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 109 [ D.6895 ])
        (nil)))
(insn 60 59 61 4 (set (reg:DF 111 [ D.6896 ])
        (mult:DF (reg:DF 104 [ D.6896 ])
            (reg:DF 110 [ D.6896 ]))) preproc.cpp:302 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 110 [ D.6896 ])
        (expr_list:REG_DEAD (reg:DF 104 [ D.6896 ])
            (nil))))
(insn 61 60 62 4 (set (reg:DF 112 [ D.6896 ])
        (plus:DF (reg:DF 98 [ D.6896 ])
            (reg:DF 111 [ D.6896 ]))) preproc.cpp:301 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 111 [ D.6896 ])
        (expr_list:REG_DEAD (reg:DF 98 [ D.6896 ])
            (nil))))
(insn 62 61 63 4 (set (reg:DF 21 xmm0)
        (reg:DF 112 [ D.6896 ])) preproc.cpp:302 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 112 [ D.6896 ])
        (nil)))
(call_insn 63 62 64 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:302 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 64 63 65 4 (set (reg:DF 207)
        (reg:DF 21 xmm0)) preproc.cpp:302 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 65 64 66 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64])
        (reg:DF 207)) preproc.cpp:302 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 207)
        (nil)))
(insn 66 65 67 4 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:304 90 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:DI 113 [ D.6893 ])
        (sign_extend:DI (reg:SI 208))) preproc.cpp:304 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 114 [ D.6893 ])
                (ashift:DI (reg:DI 113 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:304 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 4 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:304 89 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (parallel [
            (set (reg/f:DI 115 [ D.6894 ])
                (plus:DI (reg:DI 114 [ D.6893 ])
                    (reg/f:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:304 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_DEAD (reg:DI 114 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 114 [ D.6893 ]))
                    (nil))))))
(insn 71 70 72 4 (set (reg:SF 116 [ D.6895 ])
        (mem:SF (reg/f:DI 115 [ D.6894 ]) [0 *_44+0 S4 A32])) preproc.cpp:304 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.6894 ])
        (nil)))
(insn 72 71 73 4 (set (reg:DF 117 [ D.6896 ])
        (float_extend:DF (reg:SF 116 [ D.6895 ]))) preproc.cpp:304 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 116 [ D.6895 ])
        (nil)))
(insn 73 72 74 4 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:304 90 {*movsi_internal}
     (nil))
(insn 74 73 75 4 (set (reg:DI 118 [ D.6897 ])
        (sign_extend:DI (reg:SI 210))) preproc.cpp:304 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 210)
        (nil)))
(insn 75 74 76 4 (parallel [
            (set (reg:DI 119 [ D.6897 ])
                (plus:DI (reg:DI 118 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:304 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 4 (parallel [
            (set (reg:DI 120 [ D.6897 ])
                (ashift:DI (reg:DI 119 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:304 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 4 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:304 89 {*movdi_internal}
     (nil))
(insn 78 77 79 4 (parallel [
            (set (reg/f:DI 121 [ D.6894 ])
                (plus:DI (reg:DI 120 [ D.6897 ])
                    (reg/f:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:304 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 211)
        (expr_list:REG_DEAD (reg:DI 120 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 120 [ D.6897 ]))
                    (nil))))))
(insn 79 78 80 4 (set (reg:SF 122 [ D.6895 ])
        (mem:SF (reg/f:DI 121 [ D.6894 ]) [0 *_50+0 S4 A32])) preproc.cpp:304 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.6894 ])
        (nil)))
(insn 80 79 81 4 (set (reg:DF 123 [ D.6896 ])
        (float_extend:DF (reg:SF 122 [ D.6895 ]))) preproc.cpp:304 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 122 [ D.6895 ])
        (nil)))
(insn 81 80 82 4 (set (reg:DF 22 xmm1)
        (reg:DF 117 [ D.6896 ])) preproc.cpp:304 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 117 [ D.6896 ])
        (nil)))
(insn 82 81 83 4 (set (reg:DF 21 xmm0)
        (reg:DF 123 [ D.6896 ])) preproc.cpp:304 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 123 [ D.6896 ])
        (nil)))
(call_insn 83 82 84 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:304 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 84 83 85 4 (set (reg:DF 212)
        (reg:DF 21 xmm0)) preproc.cpp:304 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 85 84 86 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_sup+0 S8 A64])
        (reg:DF 212)) preproc.cpp:304 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 212)
        (nil)))
(insn 86 85 87 4 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:306 90 {*movsi_internal}
     (nil))
(insn 87 86 88 4 (set (reg:DI 124 [ D.6893 ])
        (sign_extend:DI (reg:SI 213))) preproc.cpp:306 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 213)
        (nil)))
(insn 88 87 89 4 (parallel [
            (set (reg:DI 125 [ D.6893 ])
                (ashift:DI (reg:DI 124 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:306 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 4 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:306 89 {*movdi_internal}
     (nil))
(insn 90 89 91 4 (parallel [
            (set (reg/f:DI 126 [ D.6894 ])
                (plus:DI (reg:DI 125 [ D.6893 ])
                    (reg/f:DI 214)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:306 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (expr_list:REG_DEAD (reg:DI 125 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 125 [ D.6893 ]))
                    (nil))))))
(insn 91 90 92 4 (set (reg:SF 127 [ D.6895 ])
        (mem:SF (reg/f:DI 126 [ D.6894 ]) [0 *_58+0 S4 A32])) preproc.cpp:306 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.6894 ])
        (nil)))
(insn 92 91 93 4 (set (reg:DF 128 [ D.6896 ])
        (float_extend:DF (reg:SF 127 [ D.6895 ]))) preproc.cpp:306 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 127 [ D.6895 ])
        (nil)))
(insn 93 92 94 4 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:306 90 {*movsi_internal}
     (nil))
(insn 94 93 95 4 (set (reg:DI 129 [ D.6893 ])
        (sign_extend:DI (reg:SI 215))) preproc.cpp:306 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
(insn 95 94 96 4 (parallel [
            (set (reg:DI 130 [ D.6893 ])
                (ashift:DI (reg:DI 129 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:306 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 96 95 97 4 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:306 89 {*movdi_internal}
     (nil))
(insn 97 96 98 4 (parallel [
            (set (reg/f:DI 131 [ D.6894 ])
                (plus:DI (reg:DI 130 [ D.6893 ])
                    (reg/f:DI 216)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:306 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (expr_list:REG_DEAD (reg:DI 130 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 130 [ D.6893 ]))
                    (nil))))))
(insn 98 97 99 4 (set (reg:SF 132 [ D.6895 ])
        (mem:SF (reg/f:DI 131 [ D.6894 ]) [0 *_63+0 S4 A32])) preproc.cpp:306 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.6894 ])
        (nil)))
(insn 99 98 100 4 (set (reg:DF 133 [ D.6896 ])
        (float_extend:DF (reg:SF 132 [ D.6895 ]))) preproc.cpp:306 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 132 [ D.6895 ])
        (nil)))
(insn 100 99 101 4 (set (reg:DF 134 [ D.6896 ])
        (mult:DF (reg:DF 128 [ D.6896 ])
            (reg:DF 133 [ D.6896 ]))) preproc.cpp:306 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 133 [ D.6896 ])
        (expr_list:REG_DEAD (reg:DF 128 [ D.6896 ])
            (nil))))
(insn 101 100 102 4 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:307 90 {*movsi_internal}
     (nil))
(insn 102 101 103 4 (set (reg:DI 135 [ D.6897 ])
        (sign_extend:DI (reg:SI 217))) preproc.cpp:307 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 103 102 104 4 (parallel [
            (set (reg:DI 136 [ D.6897 ])
                (plus:DI (reg:DI 135 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:307 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 4 (parallel [
            (set (reg:DI 137 [ D.6897 ])
                (ashift:DI (reg:DI 136 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:307 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 4 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:307 89 {*movdi_internal}
     (nil))
(insn 106 105 107 4 (parallel [
            (set (reg/f:DI 138 [ D.6894 ])
                (plus:DI (reg:DI 137 [ D.6897 ])
                    (reg/f:DI 218)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:307 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (expr_list:REG_DEAD (reg:DI 137 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 137 [ D.6897 ]))
                    (nil))))))
(insn 107 106 108 4 (set (reg:SF 139 [ D.6895 ])
        (mem:SF (reg/f:DI 138 [ D.6894 ]) [0 *_70+0 S4 A32])) preproc.cpp:307 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.6894 ])
        (nil)))
(insn 108 107 109 4 (set (reg:DF 140 [ D.6896 ])
        (float_extend:DF (reg:SF 139 [ D.6895 ]))) preproc.cpp:307 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 139 [ D.6895 ])
        (nil)))
(insn 109 108 110 4 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:307 90 {*movsi_internal}
     (nil))
(insn 110 109 111 4 (set (reg:DI 141 [ D.6897 ])
        (sign_extend:DI (reg:SI 219))) preproc.cpp:307 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
(insn 111 110 112 4 (parallel [
            (set (reg:DI 142 [ D.6897 ])
                (plus:DI (reg:DI 141 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:307 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 4 (parallel [
            (set (reg:DI 143 [ D.6897 ])
                (ashift:DI (reg:DI 142 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:307 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 4 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:307 89 {*movdi_internal}
     (nil))
(insn 114 113 115 4 (parallel [
            (set (reg/f:DI 144 [ D.6894 ])
                (plus:DI (reg:DI 143 [ D.6897 ])
                    (reg/f:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:307 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg:DI 143 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 143 [ D.6897 ]))
                    (nil))))))
(insn 115 114 116 4 (set (reg:SF 145 [ D.6895 ])
        (mem:SF (reg/f:DI 144 [ D.6894 ]) [0 *_76+0 S4 A32])) preproc.cpp:307 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.6894 ])
        (nil)))
(insn 116 115 117 4 (set (reg:DF 146 [ D.6896 ])
        (float_extend:DF (reg:SF 145 [ D.6895 ]))) preproc.cpp:307 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 145 [ D.6895 ])
        (nil)))
(insn 117 116 118 4 (set (reg:DF 147 [ D.6896 ])
        (mult:DF (reg:DF 140 [ D.6896 ])
            (reg:DF 146 [ D.6896 ]))) preproc.cpp:307 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 146 [ D.6896 ])
        (expr_list:REG_DEAD (reg:DF 140 [ D.6896 ])
            (nil))))
(insn 118 117 119 4 (set (reg:DF 148 [ D.6896 ])
        (plus:DF (reg:DF 134 [ D.6896 ])
            (reg:DF 147 [ D.6896 ]))) preproc.cpp:306 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.6896 ])
        (expr_list:REG_DEAD (reg:DF 134 [ D.6896 ])
            (nil))))
(insn 119 118 120 4 (set (reg:DF 21 xmm0)
        (reg:DF 148 [ D.6896 ])) preproc.cpp:307 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 148 [ D.6896 ])
        (nil)))
(call_insn 120 119 121 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:307 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 121 120 122 4 (set (reg:DF 221)
        (reg:DF 21 xmm0)) preproc.cpp:307 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 122 121 123 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 221)) preproc.cpp:307 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 221)
        (nil)))
(insn 123 122 124 4 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:309 90 {*movsi_internal}
     (nil))
(insn 124 123 125 4 (set (reg:DI 149 [ D.6893 ])
        (sign_extend:DI (reg:SI 222))) preproc.cpp:309 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 222)
        (nil)))
(insn 125 124 126 4 (parallel [
            (set (reg:DI 150 [ D.6893 ])
                (ashift:DI (reg:DI 149 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:309 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 4 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:309 89 {*movdi_internal}
     (nil))
(insn 127 126 128 4 (parallel [
            (set (reg/f:DI 151 [ D.6894 ])
                (plus:DI (reg:DI 150 [ D.6893 ])
                    (reg/f:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:309 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 223)
        (expr_list:REG_DEAD (reg:DI 150 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 150 [ D.6893 ]))
                    (nil))))))
(insn 128 127 129 4 (set (reg:SF 152 [ D.6895 ])
        (mem:SF (reg/f:DI 151 [ D.6894 ]) [0 *_85+0 S4 A32])) preproc.cpp:309 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.6894 ])
        (nil)))
(insn 129 128 130 4 (set (reg:DF 153 [ D.6896 ])
        (float_extend:DF (reg:SF 152 [ D.6895 ]))) preproc.cpp:309 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 152 [ D.6895 ])
        (nil)))
(insn 130 129 131 4 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:309 90 {*movsi_internal}
     (nil))
(insn 131 130 132 4 (set (reg:DI 154 [ D.6897 ])
        (sign_extend:DI (reg:SI 224))) preproc.cpp:309 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 224)
        (nil)))
(insn 132 131 133 4 (parallel [
            (set (reg:DI 155 [ D.6897 ])
                (plus:DI (reg:DI 154 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:309 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 4 (parallel [
            (set (reg:DI 156 [ D.6897 ])
                (ashift:DI (reg:DI 155 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:309 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 4 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:309 89 {*movdi_internal}
     (nil))
(insn 135 134 136 4 (parallel [
            (set (reg/f:DI 157 [ D.6894 ])
                (plus:DI (reg:DI 156 [ D.6897 ])
                    (reg/f:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:309 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 225)
        (expr_list:REG_DEAD (reg:DI 156 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 156 [ D.6897 ]))
                    (nil))))))
(insn 136 135 137 4 (set (reg:SF 158 [ D.6895 ])
        (mem:SF (reg/f:DI 157 [ D.6894 ]) [0 *_91+0 S4 A32])) preproc.cpp:309 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ D.6894 ])
        (nil)))
(insn 137 136 138 4 (set (reg:DF 159 [ D.6896 ])
        (float_extend:DF (reg:SF 158 [ D.6895 ]))) preproc.cpp:309 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 158 [ D.6895 ])
        (nil)))
(insn 138 137 139 4 (set (reg:DF 22 xmm1)
        (reg:DF 153 [ D.6896 ])) preproc.cpp:309 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 153 [ D.6896 ])
        (nil)))
(insn 139 138 140 4 (set (reg:DF 21 xmm0)
        (reg:DF 159 [ D.6896 ])) preproc.cpp:309 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 159 [ D.6896 ])
        (nil)))
(call_insn 140 139 141 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:309 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 141 140 142 4 (set (reg:DF 226)
        (reg:DF 21 xmm0)) preproc.cpp:309 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 142 141 143 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 226)) preproc.cpp:309 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 226)
        (nil)))
(insn 143 142 144 4 (set (reg:DF 228)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_sup+0 S8 A64])) preproc.cpp:311 128 {*movdf_internal}
     (nil))
(insn 144 143 145 4 (set (reg:DF 227)
        (minus:DF (reg:DF 228)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64]))) preproc.cpp:311 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 228)
        (nil)))
(insn 145 144 146 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 227)) preproc.cpp:311 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 227)
        (nil)))
(insn 146 145 147 4 (set (reg:DF 230)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64])) preproc.cpp:312 128 {*movdf_internal}
     (nil))
(insn 147 146 148 4 (set (reg:DF 229)
        (minus:DF (reg:DF 230)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64]))) preproc.cpp:312 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 230)
        (nil)))
(insn 148 147 149 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 229)) preproc.cpp:312 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 229)
        (nil)))
(insn 149 148 150 4 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:314 90 {*movsi_internal}
     (nil))
(insn 150 149 151 4 (set (reg:DI 160 [ D.6893 ])
        (sign_extend:DI (reg:SI 231))) preproc.cpp:314 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 231)
        (nil)))
(insn 151 150 152 4 (parallel [
            (set (reg:DI 161 [ D.6893 ])
                (ashift:DI (reg:DI 160 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:314 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 160 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 4 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:314 89 {*movdi_internal}
     (nil))
(insn 153 152 154 4 (parallel [
            (set (reg/f:DI 162 [ D.6894 ])
                (plus:DI (reg:DI 161 [ D.6893 ])
                    (reg/f:DI 232)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:314 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (expr_list:REG_DEAD (reg:DI 161 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 161 [ D.6893 ]))
                    (nil))))))
(insn 154 153 155 4 (set (reg:SF 163 [ D.6895 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64]))) preproc.cpp:314 157 {*truncdfsf_fast_sse}
     (nil))
(insn 155 154 156 4 (set (reg:DF 233)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) preproc.cpp:314 128 {*movdf_internal}
     (nil))
(insn 156 155 157 4 (set (reg:DF 21 xmm0)
        (reg:DF 233)) preproc.cpp:314 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 233)
        (nil)))
(call_insn/u 157 156 158 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:314 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 158 157 159 4 (set (reg:DF 164 [ D.6896 ])
        (reg:DF 21 xmm0)) preproc.cpp:314 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 159 158 160 4 (set (reg:SF 165 [ D.6895 ])
        (float_truncate:SF (reg:DF 164 [ D.6896 ]))) preproc.cpp:314 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 164 [ D.6896 ])
        (nil)))
(insn 160 159 161 4 (set (reg:SF 166 [ D.6895 ])
        (mult:SF (reg:SF 163 [ D.6895 ])
            (reg:SF 165 [ D.6895 ]))) preproc.cpp:314 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 165 [ D.6895 ])
        (expr_list:REG_DEAD (reg:SF 163 [ D.6895 ])
            (nil))))
(insn 161 160 162 4 (set (mem:SF (reg/f:DI 162 [ D.6894 ]) [0 *_100+0 S4 A32])
        (reg:SF 166 [ D.6895 ])) preproc.cpp:314 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 166 [ D.6895 ])
        (expr_list:REG_DEAD (reg/f:DI 162 [ D.6894 ])
            (nil))))
(insn 162 161 163 4 (set (reg:SI 234)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:315 90 {*movsi_internal}
     (nil))
(insn 163 162 164 4 (set (reg:DI 167 [ D.6897 ])
        (sign_extend:DI (reg:SI 234))) preproc.cpp:315 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 234)
        (nil)))
(insn 164 163 165 4 (parallel [
            (set (reg:DI 168 [ D.6897 ])
                (plus:DI (reg:DI 167 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:315 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 167 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 4 (parallel [
            (set (reg:DI 169 [ D.6897 ])
                (ashift:DI (reg:DI 168 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:315 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 4 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) preproc.cpp:315 89 {*movdi_internal}
     (nil))
(insn 167 166 168 4 (parallel [
            (set (reg/f:DI 170 [ D.6894 ])
                (plus:DI (reg:DI 169 [ D.6897 ])
                    (reg/f:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:315 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 235)
        (expr_list:REG_DEAD (reg:DI 169 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 169 [ D.6897 ]))
                    (nil))))))
(insn 168 167 169 4 (set (reg:SF 171 [ D.6895 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64]))) preproc.cpp:315 157 {*truncdfsf_fast_sse}
     (nil))
(insn 169 168 170 4 (set (reg:DF 236)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) preproc.cpp:315 128 {*movdf_internal}
     (nil))
(insn 170 169 171 4 (set (reg:DF 21 xmm0)
        (reg:DF 236)) preproc.cpp:315 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 236)
        (nil)))
(call_insn/u 171 170 172 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:315 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 172 171 173 4 (set (reg:DF 172 [ D.6896 ])
        (reg:DF 21 xmm0)) preproc.cpp:315 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 173 172 174 4 (set (reg:SF 173 [ D.6895 ])
        (float_truncate:SF (reg:DF 172 [ D.6896 ]))) preproc.cpp:315 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 172 [ D.6896 ])
        (nil)))
(insn 174 173 175 4 (set (reg:SF 174 [ D.6895 ])
        (mult:SF (reg:SF 171 [ D.6895 ])
            (reg:SF 173 [ D.6895 ]))) preproc.cpp:315 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 173 [ D.6895 ])
        (expr_list:REG_DEAD (reg:SF 171 [ D.6895 ])
            (nil))))
(insn 175 174 176 4 (set (mem:SF (reg/f:DI 170 [ D.6894 ]) [0 *_109+0 S4 A32])
        (reg:SF 174 [ D.6895 ])) preproc.cpp:315 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 174 [ D.6895 ])
        (expr_list:REG_DEAD (reg/f:DI 170 [ D.6894 ])
            (nil))))
(insn 176 175 177 4 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:317 90 {*movsi_internal}
     (nil))
(insn 177 176 178 4 (set (reg:DI 175 [ D.6893 ])
        (sign_extend:DI (reg:SI 237))) preproc.cpp:317 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 237)
        (nil)))
(insn 178 177 179 4 (parallel [
            (set (reg:DI 176 [ D.6893 ])
                (ashift:DI (reg:DI 175 [ D.6893 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:317 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 175 [ D.6893 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 4 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:317 89 {*movdi_internal}
     (nil))
(insn 180 179 181 4 (parallel [
            (set (reg/f:DI 177 [ D.6894 ])
                (plus:DI (reg:DI 176 [ D.6893 ])
                    (reg/f:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 238)
        (expr_list:REG_DEAD (reg:DI 176 [ D.6893 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 176 [ D.6893 ]))
                    (nil))))))
(insn 181 180 182 4 (set (reg:SF 178 [ D.6895 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64]))) preproc.cpp:317 157 {*truncdfsf_fast_sse}
     (nil))
(insn 182 181 183 4 (set (reg:DF 239)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) preproc.cpp:317 128 {*movdf_internal}
     (nil))
(insn 183 182 184 4 (set (reg:DF 21 xmm0)
        (reg:DF 239)) preproc.cpp:317 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 239)
        (nil)))
(call_insn/u 184 183 185 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:317 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 185 184 186 4 (set (reg:DF 179 [ D.6896 ])
        (reg:DF 21 xmm0)) preproc.cpp:317 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 186 185 187 4 (set (reg:SF 180 [ D.6895 ])
        (float_truncate:SF (reg:DF 179 [ D.6896 ]))) preproc.cpp:317 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 179 [ D.6896 ])
        (nil)))
(insn 187 186 188 4 (set (reg:SF 181 [ D.6895 ])
        (mult:SF (reg:SF 178 [ D.6895 ])
            (reg:SF 180 [ D.6895 ]))) preproc.cpp:317 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 180 [ D.6895 ])
        (expr_list:REG_DEAD (reg:SF 178 [ D.6895 ])
            (nil))))
(insn 188 187 189 4 (set (mem:SF (reg/f:DI 177 [ D.6894 ]) [0 *_117+0 S4 A32])
        (reg:SF 181 [ D.6895 ])) preproc.cpp:317 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 181 [ D.6895 ])
        (expr_list:REG_DEAD (reg/f:DI 177 [ D.6894 ])
            (nil))))
(insn 189 188 190 4 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) preproc.cpp:318 90 {*movsi_internal}
     (nil))
(insn 190 189 191 4 (set (reg:DI 182 [ D.6897 ])
        (sign_extend:DI (reg:SI 240))) preproc.cpp:318 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 240)
        (nil)))
(insn 191 190 192 4 (parallel [
            (set (reg:DI 183 [ D.6897 ])
                (plus:DI (reg:DI 182 [ D.6897 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:318 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 182 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 4 (parallel [
            (set (reg:DI 184 [ D.6897 ])
                (ashift:DI (reg:DI 183 [ D.6897 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:318 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 183 [ D.6897 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 4 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) preproc.cpp:318 89 {*movdi_internal}
     (nil))
(insn 194 193 195 4 (parallel [
            (set (reg/f:DI 185 [ D.6894 ])
                (plus:DI (reg:DI 184 [ D.6897 ])
                    (reg/f:DI 241)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:318 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 241)
        (expr_list:REG_DEAD (reg:DI 184 [ D.6897 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 184 [ D.6897 ]))
                    (nil))))))
(insn 195 194 196 4 (set (reg:SF 186 [ D.6895 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64]))) preproc.cpp:318 157 {*truncdfsf_fast_sse}
     (nil))
(insn 196 195 197 4 (set (reg:DF 242)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) preproc.cpp:318 128 {*movdf_internal}
     (nil))
(insn 197 196 198 4 (set (reg:DF 21 xmm0)
        (reg:DF 242)) preproc.cpp:318 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 242)
        (nil)))
(call_insn/u 198 197 199 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:318 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 199 198 200 4 (set (reg:DF 187 [ D.6896 ])
        (reg:DF 21 xmm0)) preproc.cpp:318 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 200 199 201 4 (set (reg:SF 188 [ D.6895 ])
        (float_truncate:SF (reg:DF 187 [ D.6896 ]))) preproc.cpp:318 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 187 [ D.6896 ])
        (nil)))
(insn 201 200 202 4 (set (reg:SF 189 [ D.6895 ])
        (mult:SF (reg:SF 186 [ D.6895 ])
            (reg:SF 188 [ D.6895 ]))) preproc.cpp:318 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 188 [ D.6895 ])
        (expr_list:REG_DEAD (reg:SF 186 [ D.6895 ])
            (nil))))
(insn 202 201 203 4 (set (mem:SF (reg/f:DI 185 [ D.6894 ]) [0 *_126+0 S4 A32])
        (reg:SF 189 [ D.6895 ])) preproc.cpp:318 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 189 [ D.6895 ])
        (expr_list:REG_DEAD (reg/f:DI 185 [ D.6894 ])
            (nil))))
(insn 203 202 219 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:299 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 219 203 220 4 (set (pc)
        (label_ref 204)) preproc.cpp:299 654 {jump}
     (nil)
 -> 204)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 220 219 207)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 190 191
(code_label 207 220 208 5 55 "" [1 uses])
(note 208 207 209 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 212 5 (set (reg:SI 190 [ D.6892 ])
        (const_int 1 [0x1])) preproc.cpp:321 90 {*movsi_internal}
     (nil))
(insn 212 209 216 5 (set (reg:SI 191 [ <retval> ])
        (reg:SI 190 [ D.6892 ])) preproc.cpp:321 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190 [ D.6892 ])
        (nil)))
(insn 216 212 217 5 (set (reg/i:SI 0 ax)
        (reg:SI 191 [ <retval> ])) preproc.cpp:323 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 191 [ <retval> ])
        (nil)))
(insn 217 216 0 5 (use (reg/i:SI 0 ax)) preproc.cpp:323 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int zero_fill(float*, float*, Procpar_info*, Preprocess*) (_Z9zero_fillPfS_P12Procpar_infoP10Preprocess, funcdef_no=6, decl_uid=5483, cgraph_uid=6, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r109: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r109,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a4(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r106,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a11(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a16(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a19(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 62(l0): point = 0
   Insn 61(l0): point = 2
   Insn 57(l0): point = 4
   Insn 54(l0): point = 7
   Insn 31(l0): point = 10
   Insn 30(l0): point = 12
   Insn 29(l0): point = 14
   Insn 28(l0): point = 16
   Insn 66(l0): point = 19
   Insn 48(l0): point = 21
   Insn 47(l0): point = 23
   Insn 46(l0): point = 25
   Insn 45(l0): point = 27
   Insn 44(l0): point = 29
   Insn 43(l0): point = 31
   Insn 42(l0): point = 33
   Insn 41(l0): point = 35
   Insn 40(l0): point = 37
   Insn 39(l0): point = 39
   Insn 38(l0): point = 41
   Insn 37(l0): point = 43
   Insn 36(l0): point = 45
   Insn 35(l0): point = 47
   Insn 34(l0): point = 49
   Insn 33(l0): point = 51
   Insn 26(l0): point = 54
   Insn 25(l0): point = 56
   Insn 24(l0): point = 58
   Insn 64(l0): point = 61
   Insn 19(l0): point = 63
   Insn 18(l0): point = 65
   Insn 17(l0): point = 67
   Insn 15(l0): point = 70
   Insn 14(l0): point = 72
   Insn 13(l0): point = 74
   Insn 12(l0): point = 76
   Insn 11(l0): point = 78
   Insn 10(l0): point = 80
   Insn 9(l0): point = 82
   Insn 5(l0): point = 84
   Insn 4(l0): point = 86
   Insn 3(l0): point = 88
   Insn 2(l0): point = 90
 a0(r98): [3..4]
 a1(r87): [61..63] [5..7]
 a2(r97): [24..27]
 a3(r109): [24..25]
 a4(r108): [28..29]
 a5(r96): [28..31]
 a6(r95): [32..33]
 a7(r94): [34..35]
 a8(r107): [36..37]
 a9(r93): [40..43]
 a10(r106): [40..41]
 a11(r105): [44..45]
 a12(r92): [44..47]
 a13(r91): [48..49]
 a14(r104): [50..51]
 a15(r90): [13..14]
 a16(r103): [15..16]
 a17(r102): [55..56]
 a18(r101): [57..58]
 a19(r89): [73..74]
 a20(r88): [73..78]
 a21(r100): [75..76]
 a22(r99): [79..80]
Compressing live ranges: from 93 to 38 - 40%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r87): [30..31] [2..3]
 a2(r97): [8..9]
 a3(r109): [8..9]
 a4(r108): [10..11]
 a5(r96): [10..11]
 a6(r95): [12..13]
 a7(r94): [14..15]
 a8(r107): [16..17]
 a9(r93): [18..19]
 a10(r106): [18..19]
 a11(r105): [20..21]
 a12(r92): [20..21]
 a13(r91): [22..23]
 a14(r104): [24..25]
 a15(r90): [4..5]
 a16(r103): [6..7]
 a17(r102): [26..27]
 a18(r101): [28..29]
 a19(r89): [32..33]
 a20(r88): [32..35]
 a21(r100): [34..35]
 a22(r99): [36..37]
  regions=1, blocks=9, points=38
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
    1:r87  l0     0   20:r88  l0     1   19:r89  l0     0   15:r90  l0     0
   13:r91  l0     0   12:r92  l0     1    9:r93  l0     0    7:r94  l0     0
    6:r95  l0     0    5:r96  l0     1    2:r97  l0     0    0:r98  l0     0
   22:r99  l0     0   21:r100 l0     0   18:r101 l0     0   17:r102 l0     0
   16:r103 l0     0   14:r104 l0     0   11:r105 l0     0   10:r106 l0    21
    8:r107 l0     0    4:r108 l0     0    3:r109 l0    21
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int zero_fill(float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={9d,2u} r18={1d} r19={1d} r20={1d,25u,2e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} 
;;    total ref usage 210{125d,81u,4e} in 43{42 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 99 100
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:328 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:332 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 88 [ D.6899 ])
        (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 24 [0x18])) [0 preprocess_7(D)->data_zero_fill+0 S4 A32])) preproc.cpp:332 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) preproc.cpp:332 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 89 [ D.6899 ])
        (mem/j:SI (plus:DI (reg/f:DI 100)
                (const_int 300 [0x12c])) [0 procpar_info_9(D)->num_points+0 S4 A32])) preproc.cpp:332 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (nil)))
(insn 14 13 15 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.6899 ])
            (reg:SI 89 [ D.6899 ]))) preproc.cpp:332 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6899 ])
        (expr_list:REG_DEAD (reg:SI 88 [ D.6899 ])
            (nil))))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) preproc.cpp:332 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fe4996bee10 *.LC10>)) preproc.cpp:333 89 {*movdi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe499ba8000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) preproc.cpp:333 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 64 3 (set (reg:SI 87 [ D.6899 ])
        (const_int 0 [0])) preproc.cpp:334 90 {*movsi_internal}
     (nil))
(jump_insn 64 19 65 3 (set (pc)
        (label_ref 55)) preproc.cpp:334 654 {jump}
     (nil)
 -> 55)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 65 64 22)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 101 102
(code_label 22 65 23 4 59 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) preproc.cpp:337 89 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 102)
        (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 300 [0x12c])) [0 procpar_info_9(D)->num_points+0 S4 A32])) preproc.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(insn 26 25 49 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (reg:SI 102)) preproc.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 103
(code_label 49 26 27 5 62 "" [1 uses])
(note 27 49 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) preproc.cpp:337 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 90 [ D.6899 ])
        (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 24 [0x18])) [0 preprocess_7(D)->data_zero_fill+0 S4 A32])) preproc.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 30 29 31 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 90 [ D.6899 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) preproc.cpp:337 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6899 ])
        (nil)))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) preproc.cpp:337 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 52)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 92 93 94 95 96 97 104 105 106 107 108 109
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) preproc.cpp:339 90 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 91 [ D.6900 ])
        (sign_extend:DI (reg:SI 104))) preproc.cpp:339 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 92 [ D.6900 ])
                (ashift:DI (reg:DI 91 [ D.6900 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:339 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.6900 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 6 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])) preproc.cpp:339 89 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg/f:DI 93 [ D.6901 ])
                (plus:DI (reg:DI 92 [ D.6900 ])
                    (reg/f:DI 105)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:339 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_DEAD (reg:DI 92 [ D.6900 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])
                        (reg:DI 92 [ D.6900 ]))
                    (nil))))))
(insn 38 37 39 6 (set (reg:SF 106)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:339 129 {*movsf_internal}
     (nil))
(insn 39 38 40 6 (set (mem:SF (reg/f:DI 93 [ D.6901 ]) [0 *_18+0 S4 A32])
        (reg:SF 106)) preproc.cpp:339 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 106)
        (expr_list:REG_DEAD (reg/f:DI 93 [ D.6901 ])
            (nil))))
(insn 40 39 41 6 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) preproc.cpp:340 90 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:DI 94 [ D.6902 ])
        (sign_extend:DI (reg:SI 107))) preproc.cpp:340 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 95 [ D.6902 ])
                (plus:DI (reg:DI 94 [ D.6902 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:340 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.6902 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 96 [ D.6902 ])
                (ashift:DI (reg:DI 95 [ D.6902 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:340 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 95 [ D.6902 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 6 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])) preproc.cpp:340 89 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg/f:DI 97 [ D.6901 ])
                (plus:DI (reg:DI 96 [ D.6902 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:340 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_DEAD (reg:DI 96 [ D.6902 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])
                        (reg:DI 96 [ D.6902 ]))
                    (nil))))))
(insn 46 45 47 6 (set (reg:SF 109)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:340 129 {*movsf_internal}
     (nil))
(insn 47 46 48 6 (set (mem:SF (reg/f:DI 97 [ D.6901 ]) [0 *_23+0 S4 A32])
        (reg:SF 109)) preproc.cpp:340 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 109)
        (expr_list:REG_DEAD (reg/f:DI 97 [ D.6901 ])
            (nil))))
(insn 48 47 66 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:337 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 66 48 67 6 (set (pc)
        (label_ref 49)) preproc.cpp:337 654 {jump}
     (nil)
 -> 49)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 52)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 52 67 53 7 61 "" [1 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:SI 87 [ D.6899 ])
        (const_int 1 [0x1])) preproc.cpp:343 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              3 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 98
(code_label 55 54 56 8 60 "" [1 uses])
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 61 8 (set (reg:SI 98 [ <retval> ])
        (reg:SI 87 [ D.6899 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6899 ])
        (nil)))
(insn 61 57 62 8 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) preproc.cpp:345 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ <retval> ])
        (nil)))
(insn 62 61 0 8 (use (reg/i:SI 0 ax)) preproc.cpp:345 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int normalize(float*, float*, Procpar_info*) (_Z9normalizePfS_P12Procpar_info, funcdef_no=7, decl_uid=5461, cgraph_uid=7, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a32 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a34 (r145,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a68 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a18 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a35 (r111,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r95,l0) best SSE_REGS, allocno SSE_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r131,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r130,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a15(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r121,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a19(r120,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a20(r119,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a21(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a24(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a28(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a32(r147,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a33(r146,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a34(r145,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a35(r111,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a36(r110,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a37(r97,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a38(r109,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a39(r103,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a40(r108,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a41(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a44(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r102,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a48(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a52(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r96,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a55(r91,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a56(r95,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a57(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a60(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r90,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a63(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a66(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r136,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a69(r135,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 123(l0): point = 0
   Insn 122(l0): point = 2
   Insn 118(l0): point = 4
   Insn 115(l0): point = 6
   Insn 77(l0): point = 9
   Insn 76(l0): point = 11
   Insn 75(l0): point = 13
   Insn 74(l0): point = 15
   Insn 130(l0): point = 18
   Insn 109(l0): point = 20
   Insn 108(l0): point = 22
   Insn 107(l0): point = 24
   Insn 106(l0): point = 26
   Insn 105(l0): point = 28
   Insn 104(l0): point = 30
   Insn 103(l0): point = 32
   Insn 102(l0): point = 34
   Insn 101(l0): point = 36
   Insn 100(l0): point = 38
   Insn 99(l0): point = 40
   Insn 98(l0): point = 42
   Insn 97(l0): point = 44
   Insn 96(l0): point = 46
   Insn 95(l0): point = 48
   Insn 94(l0): point = 50
   Insn 93(l0): point = 52
   Insn 92(l0): point = 54
   Insn 91(l0): point = 56
   Insn 90(l0): point = 58
   Insn 89(l0): point = 60
   Insn 88(l0): point = 62
   Insn 87(l0): point = 64
   Insn 86(l0): point = 66
   Insn 85(l0): point = 68
   Insn 84(l0): point = 70
   Insn 83(l0): point = 72
   Insn 82(l0): point = 74
   Insn 81(l0): point = 76
   Insn 80(l0): point = 78
   Insn 79(l0): point = 80
   Insn 72(l0): point = 83
   Insn 16(l0): point = 86
   Insn 15(l0): point = 88
   Insn 128(l0): point = 91
   Insn 66(l0): point = 93
   Insn 63(l0): point = 96
   Insn 62(l0): point = 98
   Insn 57(l0): point = 101
   Insn 56(l0): point = 103
   Insn 55(l0): point = 105
   Insn 54(l0): point = 107
   Insn 53(l0): point = 109
   Insn 52(l0): point = 111
   Insn 51(l0): point = 113
   Insn 50(l0): point = 115
   Insn 49(l0): point = 117
   Insn 48(l0): point = 119
   Insn 47(l0): point = 121
   Insn 46(l0): point = 123
   Insn 45(l0): point = 125
   Insn 44(l0): point = 127
   Insn 43(l0): point = 129
   Insn 42(l0): point = 131
   Insn 41(l0): point = 133
   Insn 40(l0): point = 135
   Insn 39(l0): point = 137
   Insn 38(l0): point = 139
   Insn 37(l0): point = 141
   Insn 36(l0): point = 143
   Insn 35(l0): point = 145
   Insn 34(l0): point = 147
   Insn 33(l0): point = 149
   Insn 32(l0): point = 151
   Insn 31(l0): point = 153
   Insn 30(l0): point = 155
   Insn 29(l0): point = 157
   Insn 28(l0): point = 159
   Insn 27(l0): point = 161
   Insn 26(l0): point = 163
   Insn 25(l0): point = 165
   Insn 24(l0): point = 167
   Insn 23(l0): point = 169
   Insn 22(l0): point = 171
   Insn 21(l0): point = 173
   Insn 20(l0): point = 175
   Insn 19(l0): point = 177
   Insn 18(l0): point = 179
   Insn 13(l0): point = 182
   Insn 12(l0): point = 184
   Insn 11(l0): point = 186
   Insn 10(l0): point = 188
   Insn 9(l0): point = 190
   Insn 8(l0): point = 192
   Insn 4(l0): point = 194
   Insn 3(l0): point = 196
   Insn 2(l0): point = 198
 a0(r134): [3..4]
 a1(r133): [5..6]
 a2(r125): [23..42]
 a3(r132): [23..24]
 a4(r131): [25..26]
 a5(r130): [25..28]
 a6(r129): [29..30]
 a7(r156): [31..32]
 a8(r128): [31..34]
 a9(r127): [35..36]
 a10(r126): [37..38]
 a11(r155): [39..40]
 a12(r154): [43..44]
 a13(r124): [43..46]
 a14(r123): [47..48]
 a15(r122): [49..50]
 a16(r153): [51..52]
 a17(r115): [55..72]
 a18(r121): [55..56]
 a19(r120): [57..58]
 a20(r119): [57..60]
 a21(r118): [61..62]
 a22(r152): [63..64]
 a23(r117): [63..66]
 a24(r116): [67..68]
 a25(r151): [69..70]
 a26(r150): [73..74]
 a27(r114): [73..76]
 a28(r113): [77..78]
 a29(r149): [79..80]
 a30(r112): [12..13]
 a31(r148): [14..15]
 a32(r147): [97..98]
 a33(r146): [104..105]
 a34(r145): [108..109]
 a35(r111): [114..115]
 a36(r110): [116..117]
 a37(r97): [116..151]
 a38(r109): [118..119]
 a39(r103): [118..135]
 a40(r108): [120..121]
 a41(r107): [122..123]
 a42(r144): [124..125]
 a43(r106): [124..127]
 a44(r105): [128..129]
 a45(r104): [130..131]
 a46(r143): [132..133]
 a47(r102): [136..137]
 a48(r101): [138..139]
 a49(r142): [140..141]
 a50(r100): [140..143]
 a51(r99): [144..145]
 a52(r98): [146..147]
 a53(r141): [148..149]
 a54(r96): [152..153]
 a55(r91): [152..167]
 a56(r95): [154..155]
 a57(r94): [156..157]
 a58(r140): [158..159]
 a59(r93): [158..161]
 a60(r92): [162..163]
 a61(r139): [164..165]
 a62(r90): [168..169]
 a63(r89): [170..171]
 a64(r138): [172..173]
 a65(r88): [172..175]
 a66(r87): [176..177]
 a67(r137): [178..179]
 a68(r136): [185..186]
 a69(r135): [189..190]
Compressing live ranges: from 201 to 110 - 54%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r133): [2..3]
 a2(r125): [8..21]
 a3(r132): [8..9]
 a4(r131): [10..11]
 a5(r130): [10..11]
 a6(r129): [12..13]
 a7(r156): [14..15]
 a8(r128): [14..15]
 a9(r127): [16..17]
 a10(r126): [18..19]
 a11(r155): [20..21]
 a12(r154): [22..23]
 a13(r124): [22..23]
 a14(r123): [24..25]
 a15(r122): [26..27]
 a16(r153): [28..29]
 a17(r115): [30..41]
 a18(r121): [30..31]
 a19(r120): [32..33]
 a20(r119): [32..33]
 a21(r118): [34..35]
 a22(r152): [36..37]
 a23(r117): [36..37]
 a24(r116): [38..39]
 a25(r151): [40..41]
 a26(r150): [42..43]
 a27(r114): [42..43]
 a28(r113): [44..45]
 a29(r149): [46..47]
 a30(r112): [4..5]
 a31(r148): [6..7]
 a32(r147): [48..49]
 a33(r146): [50..51]
 a34(r145): [52..53]
 a35(r111): [54..55]
 a36(r110): [56..57]
 a37(r97): [56..83]
 a38(r109): [58..59]
 a39(r103): [58..71]
 a40(r108): [60..61]
 a41(r107): [62..63]
 a42(r144): [64..65]
 a43(r106): [64..65]
 a44(r105): [66..67]
 a45(r104): [68..69]
 a46(r143): [70..71]
 a47(r102): [72..73]
 a48(r101): [74..75]
 a49(r142): [76..77]
 a50(r100): [76..77]
 a51(r99): [78..79]
 a52(r98): [80..81]
 a53(r141): [82..83]
 a54(r96): [84..85]
 a55(r91): [84..95]
 a56(r95): [86..87]
 a57(r94): [88..89]
 a58(r140): [90..91]
 a59(r93): [90..91]
 a60(r92): [92..93]
 a61(r139): [94..95]
 a62(r90): [96..97]
 a63(r89): [98..99]
 a64(r138): [100..101]
 a65(r88): [100..101]
 a66(r87): [102..103]
 a67(r137): [104..105]
 a68(r136): [106..107]
 a69(r135): [108..109]
  pref0:a34(r145)<-hr21@1
  regions=1, blocks=11, points=110
    allocnos=70 (big 0), copies=0, conflicts=0, ranges=70
Disposition:
   66:r87  l0     0   65:r88  l0     1   63:r89  l0     0   62:r90  l0    21
   55:r91  l0    22   60:r92  l0     0   59:r93  l0     1   57:r94  l0     0
   56:r95  l0    21   54:r96  l0    21   37:r97  l0    22   52:r98  l0     0
   51:r99  l0     0   50:r100 l0     1   48:r101 l0     0   47:r102 l0    21
   39:r103 l0    23   45:r104 l0     0   44:r105 l0     0   43:r106 l0     1
   41:r107 l0     0   40:r108 l0    21   38:r109 l0    21   36:r110 l0    21
   35:r111 l0    21   30:r112 l0     0   28:r113 l0     0   27:r114 l0     1
   17:r115 l0     0   24:r116 l0     1   23:r117 l0     2   21:r118 l0     1
   20:r119 l0    22   19:r120 l0    21   18:r121 l0    21   15:r122 l0     0
   14:r123 l0     0   13:r124 l0     1    2:r125 l0     0   10:r126 l0     1
    9:r127 l0     1    8:r128 l0     2    6:r129 l0     1    5:r130 l0    22
    4:r131 l0    21    3:r132 l0    21    1:r133 l0     0    0:r134 l0     0
   69:r135 l0    21   68:r136 l0    21   67:r137 l0     0   64:r138 l0     0
   61:r139 l0     0   58:r140 l0     0   53:r141 l0     0   49:r142 l0     0
   46:r143 l0     0   42:r144 l0     0   34:r145 l0     0   33:r146 l0    21
   32:r147 l0    21   31:r148 l0     0   29:r149 l0     0   26:r150 l0     0
   25:r151 l0     1   22:r152 l0     1   16:r153 l0     0   12:r154 l0     0
   11:r155 l0     1    7:r156 l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int normalize(float*, float*, Procpar_info*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d} r4={2d,1u} r5={2d,1u} r6={1d,10u} r7={1d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,9u} r17={26d,3u} r18={1d} r19={1d} r20={1d,48u,8e} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u,1e} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u,1e} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u,1e} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 362{188d,158u,16e} in 96{95 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 135 136
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
        (reg:DI 5 di [ data ])) preproc.cpp:347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])
        (reg:DI 4 si [ scratch ])) preproc.cpp:347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ scratch ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) preproc.cpp:347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:349 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DF 135)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:350 128 {*movdf_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])
        (reg:DF 135)) preproc.cpp:350 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 135)
        (nil)))
(insn 11 10 12 2 (set (reg:DF 136)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:351 128 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64])
        (reg:DF 136)) preproc.cpp:351 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 136)
        (nil)))
(insn 13 12 67 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:357 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              6 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 67 13 14 3 67 "" [1 uses])
(note 14 67 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 99 [0x63]))) preproc.cpp:357 7 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) preproc.cpp:357 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 70)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 137 138 139 140 141 142 143 144 145 146
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:359 90 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 87 [ D.6904 ])
        (sign_extend:DI (reg:SI 137))) preproc.cpp:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 88 [ D.6904 ])
                (ashift:DI (reg:DI 87 [ D.6904 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:359 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.6904 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) preproc.cpp:359 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 89 [ D.6905 ])
                (plus:DI (reg:DI 88 [ D.6904 ])
                    (reg/f:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:359 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (expr_list:REG_DEAD (reg:DI 88 [ D.6904 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 88 [ D.6904 ]))
                    (nil))))))
(insn 23 22 24 4 (set (reg:SF 90 [ D.6906 ])
        (mem:SF (reg/f:DI 89 [ D.6905 ]) [0 *_15+0 S4 A32])) preproc.cpp:359 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6905 ])
        (nil)))
(insn 24 23 25 4 (set (reg:DF 91 [ D.6907 ])
        (float_extend:DF (reg:SF 90 [ D.6906 ]))) preproc.cpp:359 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 90 [ D.6906 ])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:359 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 92 [ D.6904 ])
        (sign_extend:DI (reg:SI 139))) preproc.cpp:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 93 [ D.6904 ])
                (ashift:DI (reg:DI 92 [ D.6904 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:359 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.6904 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) preproc.cpp:359 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 94 [ D.6905 ])
                (plus:DI (reg:DI 93 [ D.6904 ])
                    (reg/f:DI 140)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:359 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_DEAD (reg:DI 93 [ D.6904 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 93 [ D.6904 ]))
                    (nil))))))
(insn 30 29 31 4 (set (reg:SF 95 [ D.6906 ])
        (mem:SF (reg/f:DI 94 [ D.6905 ]) [0 *_20+0 S4 A32])) preproc.cpp:359 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.6905 ])
        (nil)))
(insn 31 30 32 4 (set (reg:DF 96 [ D.6907 ])
        (float_extend:DF (reg:SF 95 [ D.6906 ]))) preproc.cpp:359 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 95 [ D.6906 ])
        (nil)))
(insn 32 31 33 4 (set (reg:DF 97 [ D.6907 ])
        (mult:DF (reg:DF 91 [ D.6907 ])
            (reg:DF 96 [ D.6907 ]))) preproc.cpp:359 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 96 [ D.6907 ])
        (expr_list:REG_DEAD (reg:DF 91 [ D.6907 ])
            (nil))))
(insn 33 32 34 4 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:360 90 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 98 [ D.6908 ])
        (sign_extend:DI (reg:SI 141))) preproc.cpp:360 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 99 [ D.6908 ])
                (plus:DI (reg:DI 98 [ D.6908 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 100 [ D.6908 ])
                (ashift:DI (reg:DI 99 [ D.6908 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) preproc.cpp:360 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg/f:DI 101 [ D.6905 ])
                (plus:DI (reg:DI 100 [ D.6908 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_DEAD (reg:DI 100 [ D.6908 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 100 [ D.6908 ]))
                    (nil))))))
(insn 39 38 40 4 (set (reg:SF 102 [ D.6906 ])
        (mem:SF (reg/f:DI 101 [ D.6905 ]) [0 *_27+0 S4 A32])) preproc.cpp:360 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.6905 ])
        (nil)))
(insn 40 39 41 4 (set (reg:DF 103 [ D.6907 ])
        (float_extend:DF (reg:SF 102 [ D.6906 ]))) preproc.cpp:360 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 102 [ D.6906 ])
        (nil)))
(insn 41 40 42 4 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:360 90 {*movsi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 104 [ D.6908 ])
        (sign_extend:DI (reg:SI 143))) preproc.cpp:360 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 143)
        (nil)))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 105 [ D.6908 ])
                (plus:DI (reg:DI 104 [ D.6908 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 106 [ D.6908 ])
                (ashift:DI (reg:DI 105 [ D.6908 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 4 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) preproc.cpp:360 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 107 [ D.6905 ])
                (plus:DI (reg:DI 106 [ D.6908 ])
                    (reg/f:DI 144)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (expr_list:REG_DEAD (reg:DI 106 [ D.6908 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 106 [ D.6908 ]))
                    (nil))))))
(insn 47 46 48 4 (set (reg:SF 108 [ D.6906 ])
        (mem:SF (reg/f:DI 107 [ D.6905 ]) [0 *_33+0 S4 A32])) preproc.cpp:360 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.6905 ])
        (nil)))
(insn 48 47 49 4 (set (reg:DF 109 [ D.6907 ])
        (float_extend:DF (reg:SF 108 [ D.6906 ]))) preproc.cpp:360 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 108 [ D.6906 ])
        (nil)))
(insn 49 48 50 4 (set (reg:DF 110 [ D.6907 ])
        (mult:DF (reg:DF 103 [ D.6907 ])
            (reg:DF 109 [ D.6907 ]))) preproc.cpp:360 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 109 [ D.6907 ])
        (expr_list:REG_DEAD (reg:DF 103 [ D.6907 ])
            (nil))))
(insn 50 49 51 4 (set (reg:DF 111 [ D.6907 ])
        (plus:DF (reg:DF 97 [ D.6907 ])
            (reg:DF 110 [ D.6907 ]))) preproc.cpp:359 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 110 [ D.6907 ])
        (expr_list:REG_DEAD (reg:DF 97 [ D.6907 ])
            (nil))))
(insn 51 50 52 4 (set (reg:DF 21 xmm0)
        (reg:DF 111 [ D.6907 ])) preproc.cpp:360 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 111 [ D.6907 ])
        (nil)))
(call_insn 52 51 53 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:360 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 53 52 54 4 (set (reg:DF 145)
        (reg:DF 21 xmm0)) preproc.cpp:360 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 54 53 55 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])
        (reg:DF 145)) preproc.cpp:360 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 145)
        (nil)))
(insn 55 54 56 4 (set (reg:DF 146)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])) preproc.cpp:362 128 {*movdf_internal}
     (nil))
(insn 56 55 57 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 146)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64]))) preproc.cpp:362 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 146)
        (nil)))
(jump_insn 57 56 61 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) preproc.cpp:362 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 64)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 147
(note 61 57 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 5 (set (reg:DF 147)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])) preproc.cpp:362 128 {*movdf_internal}
     (nil))
(insn 63 62 64 5 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64])
        (reg:DF 147)) preproc.cpp:362 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 147)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 64 63 65 6 65 "" [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 128 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:357 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 128 66 129 6 (set (pc)
        (label_ref 67)) preproc.cpp:357 654 {jump}
     (nil)
 -> 67)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 129 128 70)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 70 129 71 7 64 "" [1 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 110 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:366 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              9 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 112 148
(code_label 110 72 73 8 69 "" [1 uses])
(note 73 110 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 8 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:366 89 {*movdi_internal}
     (nil))
(insn 75 74 76 8 (set (reg:SI 112 [ D.6909 ])
        (mem/j:SI (plus:DI (reg/f:DI 148)
                (const_int 300 [0x12c])) [0 procpar_info_43(D)->num_points+0 S4 A32])) preproc.cpp:366 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (nil)))
(insn 76 75 77 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 112 [ D.6909 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) preproc.cpp:366 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ D.6909 ])
        (nil)))
(jump_insn 77 76 78 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) preproc.cpp:366 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 113)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 149 150 151 152 153 154 155 156
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (reg:SI 149)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:368 90 {*movsi_internal}
     (nil))
(insn 80 79 81 9 (set (reg:DI 113 [ D.6904 ])
        (sign_extend:DI (reg:SI 149))) preproc.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 149)
        (nil)))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 114 [ D.6904 ])
                (ashift:DI (reg:DI 113 [ D.6904 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:368 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.6904 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 9 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])) preproc.cpp:368 89 {*movdi_internal}
     (nil))
(insn 83 82 84 9 (parallel [
            (set (reg/f:DI 115 [ D.6905 ])
                (plus:DI (reg:DI 114 [ D.6904 ])
                    (reg/f:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:368 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (expr_list:REG_DEAD (reg:DI 114 [ D.6904 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])
                        (reg:DI 114 [ D.6904 ]))
                    (nil))))))
(insn 84 83 85 9 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:368 90 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (set (reg:DI 116 [ D.6904 ])
        (sign_extend:DI (reg:SI 151))) preproc.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
(insn 86 85 87 9 (parallel [
            (set (reg:DI 117 [ D.6904 ])
                (ashift:DI (reg:DI 116 [ D.6904 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:368 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ D.6904 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 9 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) preproc.cpp:368 89 {*movdi_internal}
     (nil))
(insn 88 87 89 9 (parallel [
            (set (reg/f:DI 118 [ D.6905 ])
                (plus:DI (reg:DI 117 [ D.6904 ])
                    (reg/f:DI 152)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:368 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (expr_list:REG_DEAD (reg:DI 117 [ D.6904 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 117 [ D.6904 ]))
                    (nil))))))
(insn 89 88 90 9 (set (reg:SF 119 [ D.6906 ])
        (mem:SF (reg/f:DI 118 [ D.6905 ]) [0 *_51+0 S4 A32])) preproc.cpp:368 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ D.6905 ])
        (nil)))
(insn 90 89 91 9 (set (reg:SF 120 [ D.6906 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64]))) preproc.cpp:368 157 {*truncdfsf_fast_sse}
     (nil))
(insn 91 90 92 9 (set (reg:SF 121 [ D.6906 ])
        (div:SF (reg:SF 119 [ D.6906 ])
            (reg:SF 120 [ D.6906 ]))) preproc.cpp:368 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 120 [ D.6906 ])
        (expr_list:REG_DEAD (reg:SF 119 [ D.6906 ])
            (nil))))
(insn 92 91 93 9 (set (mem:SF (reg/f:DI 115 [ D.6905 ]) [0 *_48+0 S4 A32])
        (reg:SF 121 [ D.6906 ])) preproc.cpp:368 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 121 [ D.6906 ])
        (expr_list:REG_DEAD (reg/f:DI 115 [ D.6905 ])
            (nil))))
(insn 93 92 94 9 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:369 90 {*movsi_internal}
     (nil))
(insn 94 93 95 9 (set (reg:DI 122 [ D.6908 ])
        (sign_extend:DI (reg:SI 153))) preproc.cpp:369 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 95 94 96 9 (parallel [
            (set (reg:DI 123 [ D.6908 ])
                (plus:DI (reg:DI 122 [ D.6908 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:369 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 96 95 97 9 (parallel [
            (set (reg:DI 124 [ D.6908 ])
                (ashift:DI (reg:DI 123 [ D.6908 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:369 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 9 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])) preproc.cpp:369 89 {*movdi_internal}
     (nil))
(insn 98 97 99 9 (parallel [
            (set (reg/f:DI 125 [ D.6905 ])
                (plus:DI (reg:DI 124 [ D.6908 ])
                    (reg/f:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:369 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (expr_list:REG_DEAD (reg:DI 124 [ D.6908 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])
                        (reg:DI 124 [ D.6908 ]))
                    (nil))))))
(insn 99 98 100 9 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:369 90 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (reg:DI 126 [ D.6908 ])
        (sign_extend:DI (reg:SI 155))) preproc.cpp:369 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 101 100 102 9 (parallel [
            (set (reg:DI 127 [ D.6908 ])
                (plus:DI (reg:DI 126 [ D.6908 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:369 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 9 (parallel [
            (set (reg:DI 128 [ D.6908 ])
                (ashift:DI (reg:DI 127 [ D.6908 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:369 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 127 [ D.6908 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 9 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) preproc.cpp:369 89 {*movdi_internal}
     (nil))
(insn 104 103 105 9 (parallel [
            (set (reg/f:DI 129 [ D.6905 ])
                (plus:DI (reg:DI 128 [ D.6908 ])
                    (reg/f:DI 156)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:369 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_DEAD (reg:DI 128 [ D.6908 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 128 [ D.6908 ]))
                    (nil))))))
(insn 105 104 106 9 (set (reg:SF 130 [ D.6906 ])
        (mem:SF (reg/f:DI 129 [ D.6905 ]) [0 *_63+0 S4 A32])) preproc.cpp:369 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.6905 ])
        (nil)))
(insn 106 105 107 9 (set (reg:SF 131 [ D.6906 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64]))) preproc.cpp:369 157 {*truncdfsf_fast_sse}
     (nil))
(insn 107 106 108 9 (set (reg:SF 132 [ D.6906 ])
        (div:SF (reg:SF 130 [ D.6906 ])
            (reg:SF 131 [ D.6906 ]))) preproc.cpp:369 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 131 [ D.6906 ])
        (expr_list:REG_DEAD (reg:SF 130 [ D.6906 ])
            (nil))))
(insn 108 107 109 9 (set (mem:SF (reg/f:DI 125 [ D.6905 ]) [0 *_59+0 S4 A32])
        (reg:SF 132 [ D.6906 ])) preproc.cpp:369 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 132 [ D.6906 ])
        (expr_list:REG_DEAD (reg/f:DI 125 [ D.6905 ])
            (nil))))
(insn 109 108 130 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:366 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 130 109 131 9 (set (pc)
        (label_ref 110)) preproc.cpp:366 654 {jump}
     (nil)
 -> 110)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 131 130 113)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 133 134
(code_label 113 131 114 10 68 "" [1 uses])
(note 114 113 115 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 118 10 (set (reg:SI 133 [ D.6909 ])
        (const_int 1 [0x1])) preproc.cpp:373 90 {*movsi_internal}
     (nil))
(insn 118 115 122 10 (set (reg:SI 134 [ <retval> ])
        (reg:SI 133 [ D.6909 ])) preproc.cpp:373 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133 [ D.6909 ])
        (nil)))
(insn 122 118 123 10 (set (reg/i:SI 0 ax)
        (reg:SI 134 [ <retval> ])) preproc.cpp:375 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ <retval> ])
        (nil)))
(insn 123 122 0 10 (use (reg/i:SI 0 ax)) preproc.cpp:375 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int quality(float*, float*, float*, Procpar_info*, Preprocess*) (_Z7qualityPfS_S_P12Procpar_infoP10Preprocess, funcdef_no=8, decl_uid=5472, cgraph_uid=8, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 206.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 270.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r300: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a7 (r300,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r297,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r294,l0) best SSE_REGS, allocno SSE_REGS
    r293: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r291,l0) best SSE_REGS, allocno SSE_REGS
    r290: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a32 (r290,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a43 (r287,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r281,l0) best SSE_REGS, allocno SSE_REGS
    r280: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a52 (r280,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a68 (r275,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a102 (r266,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a118 (r261,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a152 (r252,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a168 (r247,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a204 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a205 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a206 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a207 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a208 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a209 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a210 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a211 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a212 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a213 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r227,l0) best AREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r223,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r222: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r216,l0) best SSE_REGS, allocno SSE_REGS
    r215: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a17 (r215,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r214: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a31 (r208,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r207: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a30 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r201,l0) best SSE_REGS, allocno SSE_REGS
    r200: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a42 (r200,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r199: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r199,l0) best SSE_REGS, allocno SSE_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a53 (r195,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r194: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a69 (r184,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a72 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a73 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a81 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a71 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a103 (r159,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a105 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a119 (r148,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a131 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a138 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a140 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a139 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a146 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a153 (r123,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a155 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a162 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a169 (r112,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a170 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a174 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a181 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a171 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a188 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a190 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a189 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a196 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r225,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r224,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r222,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r223,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r300,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a8(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r217,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a15(r216,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r214,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r215,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a18(r297,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a19(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r293,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a24(r294,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a25(r291,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a26(r292,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a27(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r210,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a29(r209,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a30(r207,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a31(r208,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a32(r290,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a33(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a36(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a37(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a39(r202,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a40(r201,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a41(r199,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a42(r200,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a43(r287,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a44(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r283,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a49(r284,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a50(r281,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a51(r282,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a52(r280,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a53(r195,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a54(r189,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a55(r194,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a56(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a58(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a59(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a60(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r188,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a63(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a66(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r275,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a69(r184,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a70(r183,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a71(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a72(r182,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a73(r176,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a74(r181,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a75(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a78(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a79(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r175,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a82(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a85(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a86(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a87(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r169,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a89(r164,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a90(r168,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a91(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r163,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a97(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a99(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a100(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r266,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a103(r159,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a104(r153,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a105(r158,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a106(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a110(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a111(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r152,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a113(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a114(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a116(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r261,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a119(r148,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a120(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a121(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a122(r146,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a123(r140,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r145,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a125(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r139,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a132(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a135(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a136(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r133,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a139(r128,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a140(r132,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a141(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r127,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a148(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a150(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r252,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a153(r123,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a154(r117,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a155(r122,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a156(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a157(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a158(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a159(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a160(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a161(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a162(r116,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a163(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a164(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a165(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a166(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a167(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a168(r247,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a169(r112,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a170(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a171(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a172(r110,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a173(r104,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a174(r109,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a175(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a176(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a177(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a178(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a179(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r103,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a182(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a183(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a184(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a185(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a186(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a188(r97,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a189(r92,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a190(r96,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a191(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a192(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a193(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a194(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a195(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a196(r91,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a197(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a198(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a199(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a200(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a201(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a202(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a203(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a204(r237,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a205(r236,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a206(r235,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a207(r234,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a208(r233,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a209(r232,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a210(r231,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a211(r230,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a212(r229,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a213(r228,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 289(l0): point = 0
   Insn 288(l0): point = 2
   Insn 284(l0): point = 4
   Insn 281(l0): point = 6
   Insn 36(l0): point = 9
   Insn 35(l0): point = 11
   Insn 34(l0): point = 13
   Insn 33(l0): point = 15
   Insn 291(l0): point = 18
   Insn 275(l0): point = 20
   Insn 274(l0): point = 22
   Insn 273(l0): point = 24
   Insn 272(l0): point = 26
   Insn 271(l0): point = 28
   Insn 270(l0): point = 30
   Insn 269(l0): point = 32
   Insn 268(l0): point = 34
   Insn 267(l0): point = 36
   Insn 266(l0): point = 38
   Insn 265(l0): point = 40
   Insn 264(l0): point = 42
   Insn 263(l0): point = 44
   Insn 262(l0): point = 46
   Insn 261(l0): point = 48
   Insn 260(l0): point = 50
   Insn 259(l0): point = 52
   Insn 258(l0): point = 54
   Insn 257(l0): point = 56
   Insn 256(l0): point = 58
   Insn 255(l0): point = 60
   Insn 254(l0): point = 62
   Insn 253(l0): point = 64
   Insn 252(l0): point = 66
   Insn 251(l0): point = 68
   Insn 250(l0): point = 70
   Insn 249(l0): point = 72
   Insn 248(l0): point = 74
   Insn 247(l0): point = 76
   Insn 246(l0): point = 78
   Insn 245(l0): point = 80
   Insn 244(l0): point = 82
   Insn 243(l0): point = 84
   Insn 242(l0): point = 86
   Insn 241(l0): point = 88
   Insn 240(l0): point = 90
   Insn 239(l0): point = 92
   Insn 238(l0): point = 94
   Insn 237(l0): point = 96
   Insn 236(l0): point = 98
   Insn 235(l0): point = 100
   Insn 234(l0): point = 102
   Insn 233(l0): point = 104
   Insn 232(l0): point = 106
   Insn 231(l0): point = 108
   Insn 230(l0): point = 110
   Insn 229(l0): point = 112
   Insn 228(l0): point = 114
   Insn 227(l0): point = 116
   Insn 226(l0): point = 118
   Insn 225(l0): point = 120
   Insn 224(l0): point = 122
   Insn 223(l0): point = 124
   Insn 222(l0): point = 126
   Insn 221(l0): point = 128
   Insn 220(l0): point = 130
   Insn 219(l0): point = 132
   Insn 218(l0): point = 134
   Insn 217(l0): point = 136
   Insn 216(l0): point = 138
   Insn 215(l0): point = 140
   Insn 214(l0): point = 142
   Insn 213(l0): point = 144
   Insn 212(l0): point = 146
   Insn 211(l0): point = 148
   Insn 210(l0): point = 150
   Insn 209(l0): point = 152
   Insn 208(l0): point = 154
   Insn 207(l0): point = 156
   Insn 206(l0): point = 158
   Insn 205(l0): point = 160
   Insn 204(l0): point = 162
   Insn 203(l0): point = 164
   Insn 202(l0): point = 166
   Insn 201(l0): point = 168
   Insn 200(l0): point = 170
   Insn 199(l0): point = 172
   Insn 198(l0): point = 174
   Insn 197(l0): point = 176
   Insn 196(l0): point = 178
   Insn 195(l0): point = 180
   Insn 194(l0): point = 182
   Insn 193(l0): point = 184
   Insn 192(l0): point = 186
   Insn 191(l0): point = 188
   Insn 190(l0): point = 190
   Insn 189(l0): point = 192
   Insn 188(l0): point = 194
   Insn 187(l0): point = 196
   Insn 186(l0): point = 198
   Insn 185(l0): point = 200
   Insn 184(l0): point = 202
   Insn 183(l0): point = 204
   Insn 182(l0): point = 206
   Insn 181(l0): point = 208
   Insn 180(l0): point = 210
   Insn 179(l0): point = 212
   Insn 178(l0): point = 214
   Insn 177(l0): point = 216
   Insn 176(l0): point = 218
   Insn 175(l0): point = 220
   Insn 174(l0): point = 222
   Insn 173(l0): point = 224
   Insn 172(l0): point = 226
   Insn 171(l0): point = 228
   Insn 170(l0): point = 230
   Insn 169(l0): point = 232
   Insn 168(l0): point = 234
   Insn 167(l0): point = 236
   Insn 166(l0): point = 238
   Insn 165(l0): point = 240
   Insn 164(l0): point = 242
   Insn 163(l0): point = 244
   Insn 162(l0): point = 246
   Insn 161(l0): point = 248
   Insn 160(l0): point = 250
   Insn 159(l0): point = 252
   Insn 158(l0): point = 254
   Insn 157(l0): point = 256
   Insn 156(l0): point = 258
   Insn 155(l0): point = 260
   Insn 154(l0): point = 262
   Insn 153(l0): point = 264
   Insn 152(l0): point = 266
   Insn 151(l0): point = 268
   Insn 150(l0): point = 270
   Insn 149(l0): point = 272
   Insn 148(l0): point = 274
   Insn 147(l0): point = 276
   Insn 146(l0): point = 278
   Insn 145(l0): point = 280
   Insn 144(l0): point = 282
   Insn 143(l0): point = 284
   Insn 142(l0): point = 286
   Insn 141(l0): point = 288
   Insn 140(l0): point = 290
   Insn 139(l0): point = 292
   Insn 138(l0): point = 294
   Insn 137(l0): point = 296
   Insn 136(l0): point = 298
   Insn 135(l0): point = 300
   Insn 134(l0): point = 302
   Insn 133(l0): point = 304
   Insn 132(l0): point = 306
   Insn 131(l0): point = 308
   Insn 130(l0): point = 310
   Insn 129(l0): point = 312
   Insn 128(l0): point = 314
   Insn 127(l0): point = 316
   Insn 126(l0): point = 318
   Insn 125(l0): point = 320
   Insn 124(l0): point = 322
   Insn 123(l0): point = 324
   Insn 122(l0): point = 326
   Insn 121(l0): point = 328
   Insn 120(l0): point = 330
   Insn 119(l0): point = 332
   Insn 118(l0): point = 334
   Insn 117(l0): point = 336
   Insn 116(l0): point = 338
   Insn 115(l0): point = 340
   Insn 114(l0): point = 342
   Insn 113(l0): point = 344
   Insn 112(l0): point = 346
   Insn 111(l0): point = 348
   Insn 110(l0): point = 350
   Insn 109(l0): point = 352
   Insn 108(l0): point = 354
   Insn 107(l0): point = 356
   Insn 106(l0): point = 358
   Insn 105(l0): point = 360
   Insn 104(l0): point = 362
   Insn 103(l0): point = 364
   Insn 102(l0): point = 366
   Insn 101(l0): point = 368
   Insn 100(l0): point = 370
   Insn 99(l0): point = 372
   Insn 98(l0): point = 374
   Insn 97(l0): point = 376
   Insn 96(l0): point = 378
   Insn 95(l0): point = 380
   Insn 94(l0): point = 382
   Insn 93(l0): point = 384
   Insn 92(l0): point = 386
   Insn 91(l0): point = 388
   Insn 90(l0): point = 390
   Insn 89(l0): point = 392
   Insn 88(l0): point = 394
   Insn 87(l0): point = 396
   Insn 86(l0): point = 398
   Insn 85(l0): point = 400
   Insn 84(l0): point = 402
   Insn 83(l0): point = 404
   Insn 82(l0): point = 406
   Insn 81(l0): point = 408
   Insn 80(l0): point = 410
   Insn 79(l0): point = 412
   Insn 78(l0): point = 414
   Insn 77(l0): point = 416
   Insn 76(l0): point = 418
   Insn 75(l0): point = 420
   Insn 74(l0): point = 422
   Insn 73(l0): point = 424
   Insn 72(l0): point = 426
   Insn 71(l0): point = 428
   Insn 70(l0): point = 430
   Insn 69(l0): point = 432
   Insn 68(l0): point = 434
   Insn 67(l0): point = 436
   Insn 66(l0): point = 438
   Insn 65(l0): point = 440
   Insn 64(l0): point = 442
   Insn 63(l0): point = 444
   Insn 62(l0): point = 446
   Insn 61(l0): point = 448
   Insn 60(l0): point = 450
   Insn 59(l0): point = 452
   Insn 58(l0): point = 454
   Insn 57(l0): point = 456
   Insn 56(l0): point = 458
   Insn 55(l0): point = 460
   Insn 54(l0): point = 462
   Insn 53(l0): point = 464
   Insn 52(l0): point = 466
   Insn 51(l0): point = 468
   Insn 50(l0): point = 470
   Insn 49(l0): point = 472
   Insn 48(l0): point = 474
   Insn 47(l0): point = 476
   Insn 46(l0): point = 478
   Insn 45(l0): point = 480
   Insn 44(l0): point = 482
   Insn 43(l0): point = 484
   Insn 42(l0): point = 486
   Insn 41(l0): point = 488
   Insn 40(l0): point = 490
   Insn 39(l0): point = 492
   Insn 38(l0): point = 494
   Insn 31(l0): point = 497
   Insn 30(l0): point = 499
   Insn 29(l0): point = 501
   Insn 28(l0): point = 503
   Insn 27(l0): point = 505
   Insn 26(l0): point = 507
   Insn 25(l0): point = 509
   Insn 24(l0): point = 511
   Insn 23(l0): point = 513
   Insn 22(l0): point = 515
   Insn 21(l0): point = 517
   Insn 20(l0): point = 519
   Insn 19(l0): point = 521
   Insn 18(l0): point = 523
   Insn 17(l0): point = 525
   Insn 16(l0): point = 527
   Insn 15(l0): point = 529
   Insn 14(l0): point = 531
   Insn 13(l0): point = 533
   Insn 12(l0): point = 535
   Insn 11(l0): point = 537
   Insn 10(l0): point = 539
   Insn 6(l0): point = 541
   Insn 5(l0): point = 543
   Insn 4(l0): point = 545
   Insn 3(l0): point = 547
   Insn 2(l0): point = 549
 a0(r227): [3..4]
 a1(r226): [5..6]
 a2(r221): [23..38]
 a3(r225): [23..24]
 a4(r224): [25..26]
 a5(r222): [25..36]
 a6(r223): [27..28]
 a7(r300): [33..34]
 a8(r299): [39..40]
 a9(r220): [39..42]
 a10(r219): [43..44]
 a11(r218): [45..46]
 a12(r298): [47..48]
 a13(r213): [51..66]
 a14(r217): [51..52]
 a15(r216): [53..54]
 a16(r214): [53..64]
 a17(r215): [55..56]
 a18(r297): [61..62]
 a19(r296): [67..68]
 a20(r212): [67..70]
 a21(r211): [71..72]
 a22(r295): [73..74]
 a23(r293): [77..78]
 a24(r294): [79..80]
 a25(r291): [83..84]
 a26(r292): [85..86]
 a27(r206): [89..104]
 a28(r210): [89..90]
 a29(r209): [91..92]
 a30(r207): [91..102]
 a31(r208): [93..94]
 a32(r290): [99..100]
 a33(r289): [105..106]
 a34(r205): [105..108]
 a35(r204): [109..110]
 a36(r203): [111..112]
 a37(r288): [113..114]
 a38(r198): [117..132]
 a39(r202): [117..118]
 a40(r201): [119..120]
 a41(r199): [119..130]
 a42(r200): [121..122]
 a43(r287): [127..128]
 a44(r286): [133..134]
 a45(r197): [133..136]
 a46(r196): [137..138]
 a47(r285): [139..140]
 a48(r283): [143..144]
 a49(r284): [145..146]
 a50(r281): [149..150]
 a51(r282): [151..152]
 a52(r280): [155..156]
 a53(r195): [161..164]
 a54(r189): [163..180]
 a55(r194): [165..166]
 a56(r193): [167..168]
 a57(r279): [169..170]
 a58(r192): [169..172]
 a59(r191): [173..174]
 a60(r190): [175..176]
 a61(r278): [177..178]
 a62(r188): [181..182]
 a63(r187): [183..184]
 a64(r277): [185..186]
 a65(r186): [185..188]
 a66(r185): [189..190]
 a67(r276): [191..192]
 a68(r275): [195..196]
 a69(r184): [201..202]
 a70(r183): [203..204]
 a71(r170): [203..238]
 a72(r182): [205..206]
 a73(r176): [205..222]
 a74(r181): [207..208]
 a75(r180): [209..210]
 a76(r274): [211..212]
 a77(r179): [211..214]
 a78(r178): [215..216]
 a79(r177): [217..218]
 a80(r273): [219..220]
 a81(r175): [223..224]
 a82(r174): [225..226]
 a83(r272): [227..228]
 a84(r173): [227..230]
 a85(r172): [231..232]
 a86(r171): [233..234]
 a87(r271): [235..236]
 a88(r169): [239..240]
 a89(r164): [239..254]
 a90(r168): [241..242]
 a91(r167): [243..244]
 a92(r270): [245..246]
 a93(r166): [245..248]
 a94(r165): [249..250]
 a95(r269): [251..252]
 a96(r163): [255..256]
 a97(r162): [257..258]
 a98(r268): [259..260]
 a99(r161): [259..262]
 a100(r160): [263..264]
 a101(r267): [265..266]
 a102(r266): [269..270]
 a103(r159): [275..278]
 a104(r153): [277..294]
 a105(r158): [279..280]
 a106(r157): [281..282]
 a107(r265): [283..284]
 a108(r156): [283..286]
 a109(r155): [287..288]
 a110(r154): [289..290]
 a111(r264): [291..292]
 a112(r152): [295..296]
 a113(r151): [297..298]
 a114(r263): [299..300]
 a115(r150): [299..302]
 a116(r149): [303..304]
 a117(r262): [305..306]
 a118(r261): [309..310]
 a119(r148): [315..316]
 a120(r147): [317..318]
 a121(r134): [317..352]
 a122(r146): [319..320]
 a123(r140): [319..336]
 a124(r145): [321..322]
 a125(r144): [323..324]
 a126(r260): [325..326]
 a127(r143): [325..328]
 a128(r142): [329..330]
 a129(r141): [331..332]
 a130(r259): [333..334]
 a131(r139): [337..338]
 a132(r138): [339..340]
 a133(r258): [341..342]
 a134(r137): [341..344]
 a135(r136): [345..346]
 a136(r135): [347..348]
 a137(r257): [349..350]
 a138(r133): [353..354]
 a139(r128): [353..368]
 a140(r132): [355..356]
 a141(r131): [357..358]
 a142(r256): [359..360]
 a143(r130): [359..362]
 a144(r129): [363..364]
 a145(r255): [365..366]
 a146(r127): [369..370]
 a147(r126): [371..372]
 a148(r254): [373..374]
 a149(r125): [373..376]
 a150(r124): [377..378]
 a151(r253): [379..380]
 a152(r252): [383..384]
 a153(r123): [389..392]
 a154(r117): [391..408]
 a155(r122): [393..394]
 a156(r121): [395..396]
 a157(r251): [397..398]
 a158(r120): [397..400]
 a159(r119): [401..402]
 a160(r118): [403..404]
 a161(r250): [405..406]
 a162(r116): [409..410]
 a163(r115): [411..412]
 a164(r249): [413..414]
 a165(r114): [413..416]
 a166(r113): [417..418]
 a167(r248): [419..420]
 a168(r247): [423..424]
 a169(r112): [429..430]
 a170(r111): [431..432]
 a171(r98): [431..466]
 a172(r110): [433..434]
 a173(r104): [433..450]
 a174(r109): [435..436]
 a175(r108): [437..438]
 a176(r246): [439..440]
 a177(r107): [439..442]
 a178(r106): [443..444]
 a179(r105): [445..446]
 a180(r245): [447..448]
 a181(r103): [451..452]
 a182(r102): [453..454]
 a183(r244): [455..456]
 a184(r101): [455..458]
 a185(r100): [459..460]
 a186(r99): [461..462]
 a187(r243): [463..464]
 a188(r97): [467..468]
 a189(r92): [467..482]
 a190(r96): [469..470]
 a191(r95): [471..472]
 a192(r242): [473..474]
 a193(r94): [473..476]
 a194(r93): [477..478]
 a195(r241): [479..480]
 a196(r91): [483..484]
 a197(r90): [485..486]
 a198(r240): [487..488]
 a199(r89): [487..490]
 a200(r88): [491..492]
 a201(r239): [493..494]
 a202(r87): [12..13]
 a203(r238): [14..15]
 a204(r237): [500..501]
 a205(r236): [504..505]
 a206(r235): [508..509]
 a207(r234): [512..513]
 a208(r233): [516..517]
 a209(r232): [520..521]
 a210(r231): [524..525]
 a211(r230): [528..529]
 a212(r229): [532..533]
 a213(r228): [536..537]
Compressing live ranges: from 552 to 344 - 62%
Ranges after the compression:
 a0(r227): [0..1]
 a1(r226): [2..3]
 a2(r221): [8..15]
 a3(r225): [8..9]
 a4(r224): [10..11]
 a5(r222): [10..15]
 a6(r223): [12..13]
 a7(r300): [14..15]
 a8(r299): [16..17]
 a9(r220): [16..17]
 a10(r219): [18..19]
 a11(r218): [20..21]
 a12(r298): [22..23]
 a13(r213): [24..31]
 a14(r217): [24..25]
 a15(r216): [26..27]
 a16(r214): [26..31]
 a17(r215): [28..29]
 a18(r297): [30..31]
 a19(r296): [32..33]
 a20(r212): [32..33]
 a21(r211): [34..35]
 a22(r295): [36..37]
 a23(r293): [38..39]
 a24(r294): [40..41]
 a25(r291): [42..43]
 a26(r292): [44..45]
 a27(r206): [46..53]
 a28(r210): [46..47]
 a29(r209): [48..49]
 a30(r207): [48..53]
 a31(r208): [50..51]
 a32(r290): [52..53]
 a33(r289): [54..55]
 a34(r205): [54..55]
 a35(r204): [56..57]
 a36(r203): [58..59]
 a37(r288): [60..61]
 a38(r198): [62..69]
 a39(r202): [62..63]
 a40(r201): [64..65]
 a41(r199): [64..69]
 a42(r200): [66..67]
 a43(r287): [68..69]
 a44(r286): [70..71]
 a45(r197): [70..71]
 a46(r196): [72..73]
 a47(r285): [74..75]
 a48(r283): [76..77]
 a49(r284): [78..79]
 a50(r281): [80..81]
 a51(r282): [82..83]
 a52(r280): [84..85]
 a53(r195): [86..87]
 a54(r189): [86..99]
 a55(r194): [88..89]
 a56(r193): [90..91]
 a57(r279): [92..93]
 a58(r192): [92..93]
 a59(r191): [94..95]
 a60(r190): [96..97]
 a61(r278): [98..99]
 a62(r188): [100..101]
 a63(r187): [102..103]
 a64(r277): [104..105]
 a65(r186): [104..105]
 a66(r185): [106..107]
 a67(r276): [108..109]
 a68(r275): [110..111]
 a69(r184): [112..113]
 a70(r183): [114..115]
 a71(r170): [114..141]
 a72(r182): [116..117]
 a73(r176): [116..129]
 a74(r181): [118..119]
 a75(r180): [120..121]
 a76(r274): [122..123]
 a77(r179): [122..123]
 a78(r178): [124..125]
 a79(r177): [126..127]
 a80(r273): [128..129]
 a81(r175): [130..131]
 a82(r174): [132..133]
 a83(r272): [134..135]
 a84(r173): [134..135]
 a85(r172): [136..137]
 a86(r171): [138..139]
 a87(r271): [140..141]
 a88(r169): [142..143]
 a89(r164): [142..153]
 a90(r168): [144..145]
 a91(r167): [146..147]
 a92(r270): [148..149]
 a93(r166): [148..149]
 a94(r165): [150..151]
 a95(r269): [152..153]
 a96(r163): [154..155]
 a97(r162): [156..157]
 a98(r268): [158..159]
 a99(r161): [158..159]
 a100(r160): [160..161]
 a101(r267): [162..163]
 a102(r266): [164..165]
 a103(r159): [166..167]
 a104(r153): [166..179]
 a105(r158): [168..169]
 a106(r157): [170..171]
 a107(r265): [172..173]
 a108(r156): [172..173]
 a109(r155): [174..175]
 a110(r154): [176..177]
 a111(r264): [178..179]
 a112(r152): [180..181]
 a113(r151): [182..183]
 a114(r263): [184..185]
 a115(r150): [184..185]
 a116(r149): [186..187]
 a117(r262): [188..189]
 a118(r261): [190..191]
 a119(r148): [192..193]
 a120(r147): [194..195]
 a121(r134): [194..221]
 a122(r146): [196..197]
 a123(r140): [196..209]
 a124(r145): [198..199]
 a125(r144): [200..201]
 a126(r260): [202..203]
 a127(r143): [202..203]
 a128(r142): [204..205]
 a129(r141): [206..207]
 a130(r259): [208..209]
 a131(r139): [210..211]
 a132(r138): [212..213]
 a133(r258): [214..215]
 a134(r137): [214..215]
 a135(r136): [216..217]
 a136(r135): [218..219]
 a137(r257): [220..221]
 a138(r133): [222..223]
 a139(r128): [222..233]
 a140(r132): [224..225]
 a141(r131): [226..227]
 a142(r256): [228..229]
 a143(r130): [228..229]
 a144(r129): [230..231]
 a145(r255): [232..233]
 a146(r127): [234..235]
 a147(r126): [236..237]
 a148(r254): [238..239]
 a149(r125): [238..239]
 a150(r124): [240..241]
 a151(r253): [242..243]
 a152(r252): [244..245]
 a153(r123): [246..247]
 a154(r117): [246..259]
 a155(r122): [248..249]
 a156(r121): [250..251]
 a157(r251): [252..253]
 a158(r120): [252..253]
 a159(r119): [254..255]
 a160(r118): [256..257]
 a161(r250): [258..259]
 a162(r116): [260..261]
 a163(r115): [262..263]
 a164(r249): [264..265]
 a165(r114): [264..265]
 a166(r113): [266..267]
 a167(r248): [268..269]
 a168(r247): [270..271]
 a169(r112): [272..273]
 a170(r111): [274..275]
 a171(r98): [274..301]
 a172(r110): [276..277]
 a173(r104): [276..289]
 a174(r109): [278..279]
 a175(r108): [280..281]
 a176(r246): [282..283]
 a177(r107): [282..283]
 a178(r106): [284..285]
 a179(r105): [286..287]
 a180(r245): [288..289]
 a181(r103): [290..291]
 a182(r102): [292..293]
 a183(r244): [294..295]
 a184(r101): [294..295]
 a185(r100): [296..297]
 a186(r99): [298..299]
 a187(r243): [300..301]
 a188(r97): [302..303]
 a189(r92): [302..313]
 a190(r96): [304..305]
 a191(r95): [306..307]
 a192(r242): [308..309]
 a193(r94): [308..309]
 a194(r93): [310..311]
 a195(r241): [312..313]
 a196(r91): [314..315]
 a197(r90): [316..317]
 a198(r240): [318..319]
 a199(r89): [318..319]
 a200(r88): [320..321]
 a201(r239): [322..323]
 a202(r87): [4..5]
 a203(r238): [6..7]
 a204(r237): [324..325]
 a205(r236): [326..327]
 a206(r235): [328..329]
 a207(r234): [330..331]
 a208(r233): [332..333]
 a209(r232): [334..335]
 a210(r231): [336..337]
 a211(r230): [338..339]
 a212(r229): [340..341]
 a213(r228): [342..343]
  pref0:a7(r300)<-hr21@1
  pref1:a18(r297)<-hr21@1
  pref2:a32(r290)<-hr21@1
  pref3:a43(r287)<-hr21@1
  pref4:a52(r280)<-hr21@1
  pref5:a68(r275)<-hr21@1
  pref6:a102(r266)<-hr21@1
  pref7:a118(r261)<-hr21@1
  pref8:a152(r252)<-hr21@1
  pref9:a168(r247)<-hr21@1
  regions=1, blocks=6, points=344
    allocnos=214 (big 0), copies=0, conflicts=0, ranges=214
Disposition:
  202:r87  l0     0  200:r88  l0     0  199:r89  l0     1  197:r90  l0     0
  196:r91  l0    21  189:r92  l0    22  194:r93  l0     0  193:r94  l0     1
  191:r95  l0     0  190:r96  l0    21  188:r97  l0    21  171:r98  l0    22
  186:r99  l0     0  185:r100 l0     0  184:r101 l0     1  182:r102 l0     0
  181:r103 l0    21  173:r104 l0    23  179:r105 l0     0  178:r106 l0     0
  177:r107 l0     1  175:r108 l0     0  174:r109 l0    21  172:r110 l0    21
  170:r111 l0    21  169:r112 l0    21  166:r113 l0     0  165:r114 l0     1
  163:r115 l0     0  162:r116 l0    21  154:r117 l0    22  160:r118 l0     0
  159:r119 l0     0  158:r120 l0     1  156:r121 l0     0  155:r122 l0    21
  153:r123 l0    21  150:r124 l0     0  149:r125 l0     1  147:r126 l0     0
  146:r127 l0    21  139:r128 l0    22  144:r129 l0     0  143:r130 l0     1
  141:r131 l0     0  140:r132 l0    21  138:r133 l0    21  121:r134 l0    22
  136:r135 l0     0  135:r136 l0     0  134:r137 l0     1  132:r138 l0     0
  131:r139 l0    21  123:r140 l0    23  129:r141 l0     0  128:r142 l0     0
  127:r143 l0     1  125:r144 l0     0  124:r145 l0    21  122:r146 l0    21
  120:r147 l0    21  119:r148 l0    21  116:r149 l0     0  115:r150 l0     1
  113:r151 l0     0  112:r152 l0    21  104:r153 l0    22  110:r154 l0     0
  109:r155 l0     0  108:r156 l0     1  106:r157 l0     0  105:r158 l0    21
  103:r159 l0    21  100:r160 l0     0   99:r161 l0     1   97:r162 l0     0
   96:r163 l0    21   89:r164 l0    22   94:r165 l0     0   93:r166 l0     1
   91:r167 l0     0   90:r168 l0    21   88:r169 l0    21   71:r170 l0    22
   86:r171 l0     0   85:r172 l0     0   84:r173 l0     1   82:r174 l0     0
   81:r175 l0    21   73:r176 l0    23   79:r177 l0     0   78:r178 l0     0
   77:r179 l0     1   75:r180 l0     0   74:r181 l0    21   72:r182 l0    21
   70:r183 l0    21   69:r184 l0    21   66:r185 l0     0   65:r186 l0     1
   63:r187 l0     0   62:r188 l0    21   54:r189 l0    22   60:r190 l0     0
   59:r191 l0     0   58:r192 l0     1   56:r193 l0     0   55:r194 l0    21
   53:r195 l0    21   46:r196 l0     0   45:r197 l0     1   38:r198 l0     3
   41:r199 l0   mem   42:r200 l0    21   40:r201 l0    21   39:r202 l0    21
   36:r203 l0     0   35:r204 l0     0   34:r205 l0     1   27:r206 l0     3
   30:r207 l0   mem   31:r208 l0    21   29:r209 l0    21   28:r210 l0    21
   21:r211 l0     0   20:r212 l0     1   13:r213 l0     3   16:r214 l0   mem
   17:r215 l0    21   15:r216 l0    21   14:r217 l0    21   11:r218 l0     0
   10:r219 l0     0    9:r220 l0     1    2:r221 l0     3    5:r222 l0   mem
    6:r223 l0    21    4:r224 l0    21    3:r225 l0    21    1:r226 l0     0
    0:r227 l0     0  213:r228 l0    21  212:r229 l0    21  211:r230 l0    21
  210:r231 l0    21  209:r232 l0    21  208:r233 l0    21  207:r234 l0    21
  206:r235 l0    21  205:r236 l0    21  204:r237 l0    21  203:r238 l0     0
  201:r239 l0     0  198:r240 l0     0  195:r241 l0     0  192:r242 l0     0
  187:r243 l0     0  183:r244 l0     0  180:r245 l0     0  176:r246 l0     0
  168:r247 l0     0  167:r248 l0     0  164:r249 l0     0  161:r250 l0     0
  157:r251 l0     0  152:r252 l0     0  151:r253 l0     0  148:r254 l0     0
  145:r255 l0     0  142:r256 l0     0  137:r257 l0     0  133:r258 l0     0
  130:r259 l0     0  126:r260 l0     0  118:r261 l0     0  117:r262 l0     0
  114:r263 l0     0  111:r264 l0     0  107:r265 l0     0  102:r266 l0     0
  101:r267 l0     0   98:r268 l0     0   95:r269 l0     0   92:r270 l0     0
   87:r271 l0     0   83:r272 l0     0   80:r273 l0     0   76:r274 l0     0
   68:r275 l0     0   67:r276 l0     0   64:r277 l0     0   61:r278 l0     0
   57:r279 l0     0   52:r280 l0     0   50:r281 l0    21   51:r282 l0    21
   48:r283 l0    21   49:r284 l0    21   47:r285 l0     0   44:r286 l0     0
   43:r287 l0     0   37:r288 l0     0   33:r289 l0     0   32:r290 l0     0
   25:r291 l0    21   26:r292 l0    21   23:r293 l0    21   24:r294 l0    21
   22:r295 l0     0   19:r296 l0     0   18:r297 l0     0   12:r298 l0     0
    8:r299 l0     0    7:r300 l0     0
+++Costs: overall 39, reg -21, mem 60, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int quality(float*, float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8]
;;  ref usage 	r0={12d,2u} r1={11d,1u} r2={11d,1u} r4={11d,1u} r5={11d,1u} r6={1d,5u} r7={1d,15u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,4u} r17={67d,1u} r18={10d} r19={10d} r20={1d,96u,22e} r21={21d,20u} r22={14d,3u} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d,1u} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u,1e} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u,1e} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u,1e} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1e} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1e} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u,1e} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u,1e} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u,1e} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1e} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u,1e} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} 
;;    total ref usage 1433{1024d,365u,44e} in 274{264 regular + 10 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 228 229 230 231 232 233 234 235 236 237
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) preproc.cpp:378 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) preproc.cpp:378 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
        (reg:DI 1 dx [ scratch ])) preproc.cpp:378 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ scratch ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 procpar_info+0 S8 A64])
        (reg:DI 2 cx [ procpar_info ])) preproc.cpp:378 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ procpar_info ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 preprocess+0 S8 A64])
        (reg:DI 37 r8 [ preprocess ])) preproc.cpp:378 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ preprocess ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:380 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DF 228)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:381 128 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 228)) preproc.cpp:381 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 228)
        (nil)))
(insn 13 12 14 2 (set (reg:DF 229)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:381 128 {*movdf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 229)) preproc.cpp:381 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 229)
        (nil)))
(insn 15 14 16 2 (set (reg:DF 230)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:381 128 {*movdf_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 230)) preproc.cpp:381 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 230)
        (nil)))
(insn 17 16 18 2 (set (reg:DF 231)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:381 128 {*movdf_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 231)) preproc.cpp:381 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 231)
        (nil)))
(insn 19 18 20 2 (set (reg:DF 232)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:382 128 {*movdf_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 phase_sup+0 S8 A64])
        (reg:DF 232)) preproc.cpp:382 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 232)
        (nil)))
(insn 21 20 22 2 (set (reg:DF 233)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:382 128 {*movdf_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 233)) preproc.cpp:382 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 233)
        (nil)))
(insn 23 22 24 2 (set (reg:DF 234)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:382 128 {*movdf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 234)) preproc.cpp:382 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 234)
        (nil)))
(insn 25 24 26 2 (set (reg:DF 235)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:382 128 {*movdf_internal}
     (nil))
(insn 26 25 27 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 235)) preproc.cpp:382 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 235)
        (nil)))
(insn 27 26 28 2 (set (reg:DF 236)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:383 128 {*movdf_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 236)) preproc.cpp:383 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 236)
        (nil)))
(insn 29 28 30 2 (set (reg:DF 237)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:383 128 {*movdf_internal}
     (nil))
(insn 30 29 31 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 237)) preproc.cpp:383 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 237)
        (nil)))
(insn 31 30 276 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:385 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 238
(code_label 276 31 32 3 74 "" [1 uses])
(note 32 276 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 3 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 procpar_info+0 S8 A64])) preproc.cpp:385 89 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:SI 87 [ D.6910 ])
        (mem/j:SI (plus:DI (reg/f:DI 238)
                (const_int 300 [0x12c])) [0 procpar_info_16(D)->num_points+0 S4 A32])) preproc.cpp:385 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238)
        (nil)))
(insn 35 34 36 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.6910 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32]))) preproc.cpp:385 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6910 ])
        (nil)))
(jump_insn 36 35 37 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) preproc.cpp:385 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 279)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:387 90 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 88 [ D.6911 ])
        (sign_extend:DI (reg:SI 239))) preproc.cpp:387 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 239)
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 89 [ D.6911 ])
                (ashift:DI (reg:DI 88 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:387 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 4 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:387 89 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (parallel [
            (set (reg/f:DI 90 [ D.6912 ])
                (plus:DI (reg:DI 89 [ D.6911 ])
                    (reg/f:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:387 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 240)
        (expr_list:REG_DEAD (reg:DI 89 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 89 [ D.6911 ]))
                    (nil))))))
(insn 43 42 44 4 (set (reg:SF 91 [ D.6913 ])
        (mem:SF (reg/f:DI 90 [ D.6912 ]) [0 *_21+0 S4 A32])) preproc.cpp:387 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6912 ])
        (nil)))
(insn 44 43 45 4 (set (reg:DF 92 [ D.6914 ])
        (float_extend:DF (reg:SF 91 [ D.6913 ]))) preproc.cpp:387 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 91 [ D.6913 ])
        (nil)))
(insn 45 44 46 4 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:387 90 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:DI 93 [ D.6911 ])
        (sign_extend:DI (reg:SI 241))) preproc.cpp:387 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 94 [ D.6911 ])
                (ashift:DI (reg:DI 93 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:387 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 4 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:387 89 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (parallel [
            (set (reg/f:DI 95 [ D.6912 ])
                (plus:DI (reg:DI 94 [ D.6911 ])
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:387 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (expr_list:REG_DEAD (reg:DI 94 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 94 [ D.6911 ]))
                    (nil))))))
(insn 50 49 51 4 (set (reg:SF 96 [ D.6913 ])
        (mem:SF (reg/f:DI 95 [ D.6912 ]) [0 *_26+0 S4 A32])) preproc.cpp:387 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6912 ])
        (nil)))
(insn 51 50 52 4 (set (reg:DF 97 [ D.6914 ])
        (float_extend:DF (reg:SF 96 [ D.6913 ]))) preproc.cpp:387 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 96 [ D.6913 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DF 98 [ D.6914 ])
        (mult:DF (reg:DF 92 [ D.6914 ])
            (reg:DF 97 [ D.6914 ]))) preproc.cpp:387 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 92 [ D.6914 ])
            (nil))))
(insn 53 52 54 4 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:388 90 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 99 [ D.6915 ])
        (sign_extend:DI (reg:SI 243))) preproc.cpp:388 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
(insn 55 54 56 4 (parallel [
            (set (reg:DI 100 [ D.6915 ])
                (plus:DI (reg:DI 99 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 101 [ D.6915 ])
                (ashift:DI (reg:DI 100 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:388 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 4 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:388 89 {*movdi_internal}
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg/f:DI 102 [ D.6912 ])
                (plus:DI (reg:DI 101 [ D.6915 ])
                    (reg/f:DI 244)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 244)
        (expr_list:REG_DEAD (reg:DI 101 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 101 [ D.6915 ]))
                    (nil))))))
(insn 59 58 60 4 (set (reg:SF 103 [ D.6913 ])
        (mem:SF (reg/f:DI 102 [ D.6912 ]) [0 *_33+0 S4 A32])) preproc.cpp:388 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.6912 ])
        (nil)))
(insn 60 59 61 4 (set (reg:DF 104 [ D.6914 ])
        (float_extend:DF (reg:SF 103 [ D.6913 ]))) preproc.cpp:388 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 103 [ D.6913 ])
        (nil)))
(insn 61 60 62 4 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:388 90 {*movsi_internal}
     (nil))
(insn 62 61 63 4 (set (reg:DI 105 [ D.6915 ])
        (sign_extend:DI (reg:SI 245))) preproc.cpp:388 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 63 62 64 4 (parallel [
            (set (reg:DI 106 [ D.6915 ])
                (plus:DI (reg:DI 105 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 64 63 65 4 (parallel [
            (set (reg:DI 107 [ D.6915 ])
                (ashift:DI (reg:DI 106 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:388 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 4 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:388 89 {*movdi_internal}
     (nil))
(insn 66 65 67 4 (parallel [
            (set (reg/f:DI 108 [ D.6912 ])
                (plus:DI (reg:DI 107 [ D.6915 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg:DI 107 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 107 [ D.6915 ]))
                    (nil))))))
(insn 67 66 68 4 (set (reg:SF 109 [ D.6913 ])
        (mem:SF (reg/f:DI 108 [ D.6912 ]) [0 *_39+0 S4 A32])) preproc.cpp:388 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.6912 ])
        (nil)))
(insn 68 67 69 4 (set (reg:DF 110 [ D.6914 ])
        (float_extend:DF (reg:SF 109 [ D.6913 ]))) preproc.cpp:388 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 109 [ D.6913 ])
        (nil)))
(insn 69 68 70 4 (set (reg:DF 111 [ D.6914 ])
        (mult:DF (reg:DF 104 [ D.6914 ])
            (reg:DF 110 [ D.6914 ]))) preproc.cpp:388 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 110 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 104 [ D.6914 ])
            (nil))))
(insn 70 69 71 4 (set (reg:DF 112 [ D.6914 ])
        (plus:DF (reg:DF 98 [ D.6914 ])
            (reg:DF 111 [ D.6914 ]))) preproc.cpp:387 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 111 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 98 [ D.6914 ])
            (nil))))
(insn 71 70 72 4 (set (reg:DF 21 xmm0)
        (reg:DF 112 [ D.6914 ])) preproc.cpp:388 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 112 [ D.6914 ])
        (nil)))
(call_insn 72 71 73 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:388 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 73 72 74 4 (set (reg:DF 247)
        (reg:DF 21 xmm0)) preproc.cpp:388 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 74 73 75 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 247)) preproc.cpp:388 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 247)
        (nil)))
(insn 75 74 76 4 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:390 90 {*movsi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:DI 113 [ D.6911 ])
        (sign_extend:DI (reg:SI 248))) preproc.cpp:390 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 248)
        (nil)))
(insn 77 76 78 4 (parallel [
            (set (reg:DI 114 [ D.6911 ])
                (ashift:DI (reg:DI 113 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:390 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 4 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:390 89 {*movdi_internal}
     (nil))
(insn 79 78 80 4 (parallel [
            (set (reg/f:DI 115 [ D.6912 ])
                (plus:DI (reg:DI 114 [ D.6911 ])
                    (reg/f:DI 249)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:390 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (expr_list:REG_DEAD (reg:DI 114 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 114 [ D.6911 ]))
                    (nil))))))
(insn 80 79 81 4 (set (reg:SF 116 [ D.6913 ])
        (mem:SF (reg/f:DI 115 [ D.6912 ]) [0 *_48+0 S4 A32])) preproc.cpp:390 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.6912 ])
        (nil)))
(insn 81 80 82 4 (set (reg:DF 117 [ D.6914 ])
        (float_extend:DF (reg:SF 116 [ D.6913 ]))) preproc.cpp:390 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 116 [ D.6913 ])
        (nil)))
(insn 82 81 83 4 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:390 90 {*movsi_internal}
     (nil))
(insn 83 82 84 4 (set (reg:DI 118 [ D.6915 ])
        (sign_extend:DI (reg:SI 250))) preproc.cpp:390 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(insn 84 83 85 4 (parallel [
            (set (reg:DI 119 [ D.6915 ])
                (plus:DI (reg:DI 118 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:390 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 4 (parallel [
            (set (reg:DI 120 [ D.6915 ])
                (ashift:DI (reg:DI 119 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:390 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 4 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:390 89 {*movdi_internal}
     (nil))
(insn 87 86 88 4 (parallel [
            (set (reg/f:DI 121 [ D.6912 ])
                (plus:DI (reg:DI 120 [ D.6915 ])
                    (reg/f:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:390 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:DI 120 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 120 [ D.6915 ]))
                    (nil))))))
(insn 88 87 89 4 (set (reg:SF 122 [ D.6913 ])
        (mem:SF (reg/f:DI 121 [ D.6912 ]) [0 *_54+0 S4 A32])) preproc.cpp:390 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.6912 ])
        (nil)))
(insn 89 88 90 4 (set (reg:DF 123 [ D.6914 ])
        (float_extend:DF (reg:SF 122 [ D.6913 ]))) preproc.cpp:390 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 122 [ D.6913 ])
        (nil)))
(insn 90 89 91 4 (set (reg:DF 22 xmm1)
        (reg:DF 117 [ D.6914 ])) preproc.cpp:390 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 117 [ D.6914 ])
        (nil)))
(insn 91 90 92 4 (set (reg:DF 21 xmm0)
        (reg:DF 123 [ D.6914 ])) preproc.cpp:390 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 123 [ D.6914 ])
        (nil)))
(call_insn 92 91 93 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:390 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 93 92 94 4 (set (reg:DF 252)
        (reg:DF 21 xmm0)) preproc.cpp:390 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 94 93 95 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 phase_sup+0 S8 A64])
        (reg:DF 252)) preproc.cpp:390 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 252)
        (nil)))
(insn 95 94 96 4 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:392 90 {*movsi_internal}
     (nil))
(insn 96 95 97 4 (set (reg:DI 124 [ D.6911 ])
        (sign_extend:DI (reg:SI 253))) preproc.cpp:392 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 253)
        (nil)))
(insn 97 96 98 4 (parallel [
            (set (reg:DI 125 [ D.6911 ])
                (ashift:DI (reg:DI 124 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:392 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 99 4 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:392 89 {*movdi_internal}
     (nil))
(insn 99 98 100 4 (parallel [
            (set (reg/f:DI 126 [ D.6912 ])
                (plus:DI (reg:DI 125 [ D.6911 ])
                    (reg/f:DI 254)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:392 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 254)
        (expr_list:REG_DEAD (reg:DI 125 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 125 [ D.6911 ]))
                    (nil))))))
(insn 100 99 101 4 (set (reg:SF 127 [ D.6913 ])
        (mem:SF (reg/f:DI 126 [ D.6912 ]) [0 *_62+0 S4 A32])) preproc.cpp:392 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.6912 ])
        (nil)))
(insn 101 100 102 4 (set (reg:DF 128 [ D.6914 ])
        (float_extend:DF (reg:SF 127 [ D.6913 ]))) preproc.cpp:392 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 127 [ D.6913 ])
        (nil)))
(insn 102 101 103 4 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:392 90 {*movsi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:DI 129 [ D.6911 ])
        (sign_extend:DI (reg:SI 255))) preproc.cpp:392 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 255)
        (nil)))
(insn 104 103 105 4 (parallel [
            (set (reg:DI 130 [ D.6911 ])
                (ashift:DI (reg:DI 129 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:392 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 4 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:392 89 {*movdi_internal}
     (nil))
(insn 106 105 107 4 (parallel [
            (set (reg/f:DI 131 [ D.6912 ])
                (plus:DI (reg:DI 130 [ D.6911 ])
                    (reg/f:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:392 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 256)
        (expr_list:REG_DEAD (reg:DI 130 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 130 [ D.6911 ]))
                    (nil))))))
(insn 107 106 108 4 (set (reg:SF 132 [ D.6913 ])
        (mem:SF (reg/f:DI 131 [ D.6912 ]) [0 *_67+0 S4 A32])) preproc.cpp:392 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.6912 ])
        (nil)))
(insn 108 107 109 4 (set (reg:DF 133 [ D.6914 ])
        (float_extend:DF (reg:SF 132 [ D.6913 ]))) preproc.cpp:392 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 132 [ D.6913 ])
        (nil)))
(insn 109 108 110 4 (set (reg:DF 134 [ D.6914 ])
        (mult:DF (reg:DF 128 [ D.6914 ])
            (reg:DF 133 [ D.6914 ]))) preproc.cpp:392 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 133 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 128 [ D.6914 ])
            (nil))))
(insn 110 109 111 4 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:393 90 {*movsi_internal}
     (nil))
(insn 111 110 112 4 (set (reg:DI 135 [ D.6915 ])
        (sign_extend:DI (reg:SI 257))) preproc.cpp:393 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(insn 112 111 113 4 (parallel [
            (set (reg:DI 136 [ D.6915 ])
                (plus:DI (reg:DI 135 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 4 (parallel [
            (set (reg:DI 137 [ D.6915 ])
                (ashift:DI (reg:DI 136 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:393 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 4 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:393 89 {*movdi_internal}
     (nil))
(insn 115 114 116 4 (parallel [
            (set (reg/f:DI 138 [ D.6912 ])
                (plus:DI (reg:DI 137 [ D.6915 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:DI 137 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 137 [ D.6915 ]))
                    (nil))))))
(insn 116 115 117 4 (set (reg:SF 139 [ D.6913 ])
        (mem:SF (reg/f:DI 138 [ D.6912 ]) [0 *_74+0 S4 A32])) preproc.cpp:393 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.6912 ])
        (nil)))
(insn 117 116 118 4 (set (reg:DF 140 [ D.6914 ])
        (float_extend:DF (reg:SF 139 [ D.6913 ]))) preproc.cpp:393 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 139 [ D.6913 ])
        (nil)))
(insn 118 117 119 4 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:393 90 {*movsi_internal}
     (nil))
(insn 119 118 120 4 (set (reg:DI 141 [ D.6915 ])
        (sign_extend:DI (reg:SI 259))) preproc.cpp:393 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 259)
        (nil)))
(insn 120 119 121 4 (parallel [
            (set (reg:DI 142 [ D.6915 ])
                (plus:DI (reg:DI 141 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 120 122 4 (parallel [
            (set (reg:DI 143 [ D.6915 ])
                (ashift:DI (reg:DI 142 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:393 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 4 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:393 89 {*movdi_internal}
     (nil))
(insn 123 122 124 4 (parallel [
            (set (reg/f:DI 144 [ D.6912 ])
                (plus:DI (reg:DI 143 [ D.6915 ])
                    (reg/f:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 260)
        (expr_list:REG_DEAD (reg:DI 143 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 143 [ D.6915 ]))
                    (nil))))))
(insn 124 123 125 4 (set (reg:SF 145 [ D.6913 ])
        (mem:SF (reg/f:DI 144 [ D.6912 ]) [0 *_80+0 S4 A32])) preproc.cpp:393 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.6912 ])
        (nil)))
(insn 125 124 126 4 (set (reg:DF 146 [ D.6914 ])
        (float_extend:DF (reg:SF 145 [ D.6913 ]))) preproc.cpp:393 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 145 [ D.6913 ])
        (nil)))
(insn 126 125 127 4 (set (reg:DF 147 [ D.6914 ])
        (mult:DF (reg:DF 140 [ D.6914 ])
            (reg:DF 146 [ D.6914 ]))) preproc.cpp:393 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 146 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 140 [ D.6914 ])
            (nil))))
(insn 127 126 128 4 (set (reg:DF 148 [ D.6914 ])
        (plus:DF (reg:DF 134 [ D.6914 ])
            (reg:DF 147 [ D.6914 ]))) preproc.cpp:392 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 134 [ D.6914 ])
            (nil))))
(insn 128 127 129 4 (set (reg:DF 21 xmm0)
        (reg:DF 148 [ D.6914 ])) preproc.cpp:393 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 148 [ D.6914 ])
        (nil)))
(call_insn 129 128 130 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:393 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 130 129 131 4 (set (reg:DF 261)
        (reg:DF 21 xmm0)) preproc.cpp:393 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 131 130 132 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 261)) preproc.cpp:393 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 261)
        (nil)))
(insn 132 131 133 4 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:395 90 {*movsi_internal}
     (nil))
(insn 133 132 134 4 (set (reg:DI 149 [ D.6911 ])
        (sign_extend:DI (reg:SI 262))) preproc.cpp:395 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
(insn 134 133 135 4 (parallel [
            (set (reg:DI 150 [ D.6911 ])
                (ashift:DI (reg:DI 149 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:395 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 4 (set (reg/f:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:395 89 {*movdi_internal}
     (nil))
(insn 136 135 137 4 (parallel [
            (set (reg/f:DI 151 [ D.6912 ])
                (plus:DI (reg:DI 150 [ D.6911 ])
                    (reg/f:DI 263)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:395 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 263)
        (expr_list:REG_DEAD (reg:DI 150 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 150 [ D.6911 ]))
                    (nil))))))
(insn 137 136 138 4 (set (reg:SF 152 [ D.6913 ])
        (mem:SF (reg/f:DI 151 [ D.6912 ]) [0 *_89+0 S4 A32])) preproc.cpp:395 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.6912 ])
        (nil)))
(insn 138 137 139 4 (set (reg:DF 153 [ D.6914 ])
        (float_extend:DF (reg:SF 152 [ D.6913 ]))) preproc.cpp:395 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 152 [ D.6913 ])
        (nil)))
(insn 139 138 140 4 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:395 90 {*movsi_internal}
     (nil))
(insn 140 139 141 4 (set (reg:DI 154 [ D.6915 ])
        (sign_extend:DI (reg:SI 264))) preproc.cpp:395 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 264)
        (nil)))
(insn 141 140 142 4 (parallel [
            (set (reg:DI 155 [ D.6915 ])
                (plus:DI (reg:DI 154 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:395 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 4 (parallel [
            (set (reg:DI 156 [ D.6915 ])
                (ashift:DI (reg:DI 155 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:395 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 4 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:395 89 {*movdi_internal}
     (nil))
(insn 144 143 145 4 (parallel [
            (set (reg/f:DI 157 [ D.6912 ])
                (plus:DI (reg:DI 156 [ D.6915 ])
                    (reg/f:DI 265)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:395 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 265)
        (expr_list:REG_DEAD (reg:DI 156 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 156 [ D.6915 ]))
                    (nil))))))
(insn 145 144 146 4 (set (reg:SF 158 [ D.6913 ])
        (mem:SF (reg/f:DI 157 [ D.6912 ]) [0 *_95+0 S4 A32])) preproc.cpp:395 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ D.6912 ])
        (nil)))
(insn 146 145 147 4 (set (reg:DF 159 [ D.6914 ])
        (float_extend:DF (reg:SF 158 [ D.6913 ]))) preproc.cpp:395 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 158 [ D.6913 ])
        (nil)))
(insn 147 146 148 4 (set (reg:DF 22 xmm1)
        (reg:DF 153 [ D.6914 ])) preproc.cpp:395 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 153 [ D.6914 ])
        (nil)))
(insn 148 147 149 4 (set (reg:DF 21 xmm0)
        (reg:DF 159 [ D.6914 ])) preproc.cpp:395 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 159 [ D.6914 ])
        (nil)))
(call_insn 149 148 150 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:395 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 150 149 151 4 (set (reg:DF 266)
        (reg:DF 21 xmm0)) preproc.cpp:395 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 151 150 152 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 266)) preproc.cpp:395 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 266)
        (nil)))
(insn 152 151 153 4 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:397 90 {*movsi_internal}
     (nil))
(insn 153 152 154 4 (set (reg:DI 160 [ D.6911 ])
        (sign_extend:DI (reg:SI 267))) preproc.cpp:397 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 267)
        (nil)))
(insn 154 153 155 4 (parallel [
            (set (reg:DI 161 [ D.6911 ])
                (ashift:DI (reg:DI 160 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:397 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 160 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 4 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) preproc.cpp:397 89 {*movdi_internal}
     (nil))
(insn 156 155 157 4 (parallel [
            (set (reg/f:DI 162 [ D.6912 ])
                (plus:DI (reg:DI 161 [ D.6911 ])
                    (reg/f:DI 268)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:397 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 268)
        (expr_list:REG_DEAD (reg:DI 161 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 161 [ D.6911 ]))
                    (nil))))))
(insn 157 156 158 4 (set (reg:SF 163 [ D.6913 ])
        (mem:SF (reg/f:DI 162 [ D.6912 ]) [0 *_103+0 S4 A32])) preproc.cpp:397 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 162 [ D.6912 ])
        (nil)))
(insn 158 157 159 4 (set (reg:DF 164 [ D.6914 ])
        (float_extend:DF (reg:SF 163 [ D.6913 ]))) preproc.cpp:397 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 163 [ D.6913 ])
        (nil)))
(insn 159 158 160 4 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:397 90 {*movsi_internal}
     (nil))
(insn 160 159 161 4 (set (reg:DI 165 [ D.6911 ])
        (sign_extend:DI (reg:SI 269))) preproc.cpp:397 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 269)
        (nil)))
(insn 161 160 162 4 (parallel [
            (set (reg:DI 166 [ D.6911 ])
                (ashift:DI (reg:DI 165 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:397 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 4 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) preproc.cpp:397 89 {*movdi_internal}
     (nil))
(insn 163 162 164 4 (parallel [
            (set (reg/f:DI 167 [ D.6912 ])
                (plus:DI (reg:DI 166 [ D.6911 ])
                    (reg/f:DI 270)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:397 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 270)
        (expr_list:REG_DEAD (reg:DI 166 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 166 [ D.6911 ]))
                    (nil))))))
(insn 164 163 165 4 (set (reg:SF 168 [ D.6913 ])
        (mem:SF (reg/f:DI 167 [ D.6912 ]) [0 *_108+0 S4 A32])) preproc.cpp:397 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.6912 ])
        (nil)))
(insn 165 164 166 4 (set (reg:DF 169 [ D.6914 ])
        (float_extend:DF (reg:SF 168 [ D.6913 ]))) preproc.cpp:397 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 168 [ D.6913 ])
        (nil)))
(insn 166 165 167 4 (set (reg:DF 170 [ D.6914 ])
        (mult:DF (reg:DF 164 [ D.6914 ])
            (reg:DF 169 [ D.6914 ]))) preproc.cpp:397 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 169 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 164 [ D.6914 ])
            (nil))))
(insn 167 166 168 4 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:398 90 {*movsi_internal}
     (nil))
(insn 168 167 169 4 (set (reg:DI 171 [ D.6915 ])
        (sign_extend:DI (reg:SI 271))) preproc.cpp:398 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 271)
        (nil)))
(insn 169 168 170 4 (parallel [
            (set (reg:DI 172 [ D.6915 ])
                (plus:DI (reg:DI 171 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:398 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 171 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 170 169 171 4 (parallel [
            (set (reg:DI 173 [ D.6915 ])
                (ashift:DI (reg:DI 172 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:398 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 172 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 4 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) preproc.cpp:398 89 {*movdi_internal}
     (nil))
(insn 172 171 173 4 (parallel [
            (set (reg/f:DI 174 [ D.6912 ])
                (plus:DI (reg:DI 173 [ D.6915 ])
                    (reg/f:DI 272)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:398 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 272)
        (expr_list:REG_DEAD (reg:DI 173 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 173 [ D.6915 ]))
                    (nil))))))
(insn 173 172 174 4 (set (reg:SF 175 [ D.6913 ])
        (mem:SF (reg/f:DI 174 [ D.6912 ]) [0 *_115+0 S4 A32])) preproc.cpp:398 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ D.6912 ])
        (nil)))
(insn 174 173 175 4 (set (reg:DF 176 [ D.6914 ])
        (float_extend:DF (reg:SF 175 [ D.6913 ]))) preproc.cpp:398 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 175 [ D.6913 ])
        (nil)))
(insn 175 174 176 4 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:398 90 {*movsi_internal}
     (nil))
(insn 176 175 177 4 (set (reg:DI 177 [ D.6915 ])
        (sign_extend:DI (reg:SI 273))) preproc.cpp:398 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(insn 177 176 178 4 (parallel [
            (set (reg:DI 178 [ D.6915 ])
                (plus:DI (reg:DI 177 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:398 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 177 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 4 (parallel [
            (set (reg:DI 179 [ D.6915 ])
                (ashift:DI (reg:DI 178 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:398 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 4 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) preproc.cpp:398 89 {*movdi_internal}
     (nil))
(insn 180 179 181 4 (parallel [
            (set (reg/f:DI 180 [ D.6912 ])
                (plus:DI (reg:DI 179 [ D.6915 ])
                    (reg/f:DI 274)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:398 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 274)
        (expr_list:REG_DEAD (reg:DI 179 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 179 [ D.6915 ]))
                    (nil))))))
(insn 181 180 182 4 (set (reg:SF 181 [ D.6913 ])
        (mem:SF (reg/f:DI 180 [ D.6912 ]) [0 *_121+0 S4 A32])) preproc.cpp:398 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ D.6912 ])
        (nil)))
(insn 182 181 183 4 (set (reg:DF 182 [ D.6914 ])
        (float_extend:DF (reg:SF 181 [ D.6913 ]))) preproc.cpp:398 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 181 [ D.6913 ])
        (nil)))
(insn 183 182 184 4 (set (reg:DF 183 [ D.6914 ])
        (mult:DF (reg:DF 176 [ D.6914 ])
            (reg:DF 182 [ D.6914 ]))) preproc.cpp:398 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 182 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 176 [ D.6914 ])
            (nil))))
(insn 184 183 185 4 (set (reg:DF 184 [ D.6914 ])
        (plus:DF (reg:DF 170 [ D.6914 ])
            (reg:DF 183 [ D.6914 ]))) preproc.cpp:397 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 183 [ D.6914 ])
        (expr_list:REG_DEAD (reg:DF 170 [ D.6914 ])
            (nil))))
(insn 185 184 186 4 (set (reg:DF 21 xmm0)
        (reg:DF 184 [ D.6914 ])) preproc.cpp:398 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 184 [ D.6914 ])
        (nil)))
(call_insn 186 185 187 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:398 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 187 186 188 4 (set (reg:DF 275)
        (reg:DF 21 xmm0)) preproc.cpp:398 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 188 187 189 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 275)) preproc.cpp:398 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 275)
        (nil)))
(insn 189 188 190 4 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:400 90 {*movsi_internal}
     (nil))
(insn 190 189 191 4 (set (reg:DI 185 [ D.6911 ])
        (sign_extend:DI (reg:SI 276))) preproc.cpp:400 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))
(insn 191 190 192 4 (parallel [
            (set (reg:DI 186 [ D.6911 ])
                (ashift:DI (reg:DI 185 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:400 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 185 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 4 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) preproc.cpp:400 89 {*movdi_internal}
     (nil))
(insn 193 192 194 4 (parallel [
            (set (reg/f:DI 187 [ D.6912 ])
                (plus:DI (reg:DI 186 [ D.6911 ])
                    (reg/f:DI 277)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:400 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (expr_list:REG_DEAD (reg:DI 186 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 186 [ D.6911 ]))
                    (nil))))))
(insn 194 193 195 4 (set (reg:SF 188 [ D.6913 ])
        (mem:SF (reg/f:DI 187 [ D.6912 ]) [0 *_130+0 S4 A32])) preproc.cpp:400 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.6912 ])
        (nil)))
(insn 195 194 196 4 (set (reg:DF 189 [ D.6914 ])
        (float_extend:DF (reg:SF 188 [ D.6913 ]))) preproc.cpp:400 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 188 [ D.6913 ])
        (nil)))
(insn 196 195 197 4 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:400 90 {*movsi_internal}
     (nil))
(insn 197 196 198 4 (set (reg:DI 190 [ D.6915 ])
        (sign_extend:DI (reg:SI 278))) preproc.cpp:400 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(insn 198 197 199 4 (parallel [
            (set (reg:DI 191 [ D.6915 ])
                (plus:DI (reg:DI 190 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:400 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 190 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 4 (parallel [
            (set (reg:DI 192 [ D.6915 ])
                (ashift:DI (reg:DI 191 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:400 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 191 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 4 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) preproc.cpp:400 89 {*movdi_internal}
     (nil))
(insn 201 200 202 4 (parallel [
            (set (reg/f:DI 193 [ D.6912 ])
                (plus:DI (reg:DI 192 [ D.6915 ])
                    (reg/f:DI 279)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:400 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 279)
        (expr_list:REG_DEAD (reg:DI 192 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 192 [ D.6915 ]))
                    (nil))))))
(insn 202 201 203 4 (set (reg:SF 194 [ D.6913 ])
        (mem:SF (reg/f:DI 193 [ D.6912 ]) [0 *_136+0 S4 A32])) preproc.cpp:400 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 193 [ D.6912 ])
        (nil)))
(insn 203 202 204 4 (set (reg:DF 195 [ D.6914 ])
        (float_extend:DF (reg:SF 194 [ D.6913 ]))) preproc.cpp:400 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 194 [ D.6913 ])
        (nil)))
(insn 204 203 205 4 (set (reg:DF 22 xmm1)
        (reg:DF 189 [ D.6914 ])) preproc.cpp:400 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 189 [ D.6914 ])
        (nil)))
(insn 205 204 206 4 (set (reg:DF 21 xmm0)
        (reg:DF 195 [ D.6914 ])) preproc.cpp:400 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 195 [ D.6914 ])
        (nil)))
(call_insn 206 205 207 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:400 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 207 206 208 4 (set (reg:DF 280)
        (reg:DF 21 xmm0)) preproc.cpp:400 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 208 207 209 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 280)) preproc.cpp:400 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 280)
        (nil)))
(insn 209 208 210 4 (set (reg:DF 282)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])) preproc.cpp:404 128 {*movdf_internal}
     (nil))
(insn 210 209 211 4 (set (reg:DF 281)
        (div:DF (reg:DF 282)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64]))) preproc.cpp:404 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 282)
        (nil)))
(insn 211 210 212 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 281)) preproc.cpp:404 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 281)
        (nil)))
(insn 212 211 213 4 (set (reg:DF 284)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 phase_sup+0 S8 A64])) preproc.cpp:405 128 {*movdf_internal}
     (nil))
(insn 213 212 214 4 (set (reg:DF 283)
        (minus:DF (reg:DF 284)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64]))) preproc.cpp:405 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 284)
        (nil)))
(insn 214 213 215 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 283)) preproc.cpp:405 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 283)
        (nil)))
(insn 215 214 216 4 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:407 90 {*movsi_internal}
     (nil))
(insn 216 215 217 4 (set (reg:DI 196 [ D.6911 ])
        (sign_extend:DI (reg:SI 285))) preproc.cpp:407 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 285)
        (nil)))
(insn 217 216 218 4 (parallel [
            (set (reg:DI 197 [ D.6911 ])
                (ashift:DI (reg:DI 196 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:407 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 219 4 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:407 89 {*movdi_internal}
     (nil))
(insn 219 218 220 4 (parallel [
            (set (reg/f:DI 198 [ D.6912 ])
                (plus:DI (reg:DI 197 [ D.6911 ])
                    (reg/f:DI 286)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:407 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 286)
        (expr_list:REG_DEAD (reg:DI 197 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 197 [ D.6911 ]))
                    (nil))))))
(insn 220 219 221 4 (set (reg:SF 199 [ D.6913 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64]))) preproc.cpp:407 157 {*truncdfsf_fast_sse}
     (nil))
(insn 221 220 222 4 (set (reg:DF 287)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])) preproc.cpp:407 128 {*movdf_internal}
     (nil))
(insn 222 221 223 4 (set (reg:DF 21 xmm0)
        (reg:DF 287)) preproc.cpp:407 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 287)
        (nil)))
(call_insn/u 223 222 224 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:407 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 224 223 225 4 (set (reg:DF 200 [ D.6914 ])
        (reg:DF 21 xmm0)) preproc.cpp:407 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 225 224 226 4 (set (reg:SF 201 [ D.6913 ])
        (float_truncate:SF (reg:DF 200 [ D.6914 ]))) preproc.cpp:407 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 200 [ D.6914 ])
        (nil)))
(insn 226 225 227 4 (set (reg:SF 202 [ D.6913 ])
        (mult:SF (reg:SF 199 [ D.6913 ])
            (reg:SF 201 [ D.6913 ]))) preproc.cpp:407 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 201 [ D.6913 ])
        (expr_list:REG_DEAD (reg:SF 199 [ D.6913 ])
            (nil))))
(insn 227 226 228 4 (set (mem:SF (reg/f:DI 198 [ D.6912 ]) [0 *_145+0 S4 A32])
        (reg:SF 202 [ D.6913 ])) preproc.cpp:407 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 202 [ D.6913 ])
        (expr_list:REG_DEAD (reg/f:DI 198 [ D.6912 ])
            (nil))))
(insn 228 227 229 4 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:408 90 {*movsi_internal}
     (nil))
(insn 229 228 230 4 (set (reg:DI 203 [ D.6915 ])
        (sign_extend:DI (reg:SI 288))) preproc.cpp:408 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 288)
        (nil)))
(insn 230 229 231 4 (parallel [
            (set (reg:DI 204 [ D.6915 ])
                (plus:DI (reg:DI 203 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 203 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 232 4 (parallel [
            (set (reg:DI 205 [ D.6915 ])
                (ashift:DI (reg:DI 204 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:408 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 204 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 232 231 233 4 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) preproc.cpp:408 89 {*movdi_internal}
     (nil))
(insn 233 232 234 4 (parallel [
            (set (reg/f:DI 206 [ D.6912 ])
                (plus:DI (reg:DI 205 [ D.6915 ])
                    (reg/f:DI 289)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 289)
        (expr_list:REG_DEAD (reg:DI 205 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 205 [ D.6915 ]))
                    (nil))))))
(insn 234 233 235 4 (set (reg:SF 207 [ D.6913 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64]))) preproc.cpp:408 157 {*truncdfsf_fast_sse}
     (nil))
(insn 235 234 236 4 (set (reg:DF 290)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])) preproc.cpp:408 128 {*movdf_internal}
     (nil))
(insn 236 235 237 4 (set (reg:DF 21 xmm0)
        (reg:DF 290)) preproc.cpp:408 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 290)
        (nil)))
(call_insn/u 237 236 238 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:408 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 238 237 239 4 (set (reg:DF 208 [ D.6914 ])
        (reg:DF 21 xmm0)) preproc.cpp:408 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 239 238 240 4 (set (reg:SF 209 [ D.6913 ])
        (float_truncate:SF (reg:DF 208 [ D.6914 ]))) preproc.cpp:408 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 208 [ D.6914 ])
        (nil)))
(insn 240 239 241 4 (set (reg:SF 210 [ D.6913 ])
        (mult:SF (reg:SF 207 [ D.6913 ])
            (reg:SF 209 [ D.6913 ]))) preproc.cpp:408 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 209 [ D.6913 ])
        (expr_list:REG_DEAD (reg:SF 207 [ D.6913 ])
            (nil))))
(insn 241 240 242 4 (set (mem:SF (reg/f:DI 206 [ D.6912 ]) [0 *_154+0 S4 A32])
        (reg:SF 210 [ D.6913 ])) preproc.cpp:408 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 210 [ D.6913 ])
        (expr_list:REG_DEAD (reg/f:DI 206 [ D.6912 ])
            (nil))))
(insn 242 241 243 4 (set (reg:DF 292)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])) preproc.cpp:412 128 {*movdf_internal}
     (nil))
(insn 243 242 244 4 (set (reg:DF 291)
        (div:DF (reg:DF 292)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64]))) preproc.cpp:412 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 292)
        (nil)))
(insn 244 243 245 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 291)) preproc.cpp:412 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 291)
        (nil)))
(insn 245 244 246 4 (set (reg:DF 294)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 phase_unsup+0 S8 A64])) preproc.cpp:413 128 {*movdf_internal}
     (nil))
(insn 246 245 247 4 (set (reg:DF 293)
        (minus:DF (reg:DF 294)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64]))) preproc.cpp:413 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 294)
        (nil)))
(insn 247 246 248 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 293)) preproc.cpp:413 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 293)
        (nil)))
(insn 248 247 249 4 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:415 90 {*movsi_internal}
     (nil))
(insn 249 248 250 4 (set (reg:DI 211 [ D.6911 ])
        (sign_extend:DI (reg:SI 295))) preproc.cpp:415 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 295)
        (nil)))
(insn 250 249 251 4 (parallel [
            (set (reg:DI 212 [ D.6911 ])
                (ashift:DI (reg:DI 211 [ D.6911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:415 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 211 [ D.6911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 4 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:415 89 {*movdi_internal}
     (nil))
(insn 252 251 253 4 (parallel [
            (set (reg/f:DI 213 [ D.6912 ])
                (plus:DI (reg:DI 212 [ D.6911 ])
                    (reg/f:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:415 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (expr_list:REG_DEAD (reg:DI 212 [ D.6911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 212 [ D.6911 ]))
                    (nil))))))
(insn 253 252 254 4 (set (reg:SF 214 [ D.6913 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64]))) preproc.cpp:415 157 {*truncdfsf_fast_sse}
     (nil))
(insn 254 253 255 4 (set (reg:DF 297)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])) preproc.cpp:415 128 {*movdf_internal}
     (nil))
(insn 255 254 256 4 (set (reg:DF 21 xmm0)
        (reg:DF 297)) preproc.cpp:415 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 297)
        (nil)))
(call_insn/u 256 255 257 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:415 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 257 256 258 4 (set (reg:DF 215 [ D.6914 ])
        (reg:DF 21 xmm0)) preproc.cpp:415 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 258 257 259 4 (set (reg:SF 216 [ D.6913 ])
        (float_truncate:SF (reg:DF 215 [ D.6914 ]))) preproc.cpp:415 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 215 [ D.6914 ])
        (nil)))
(insn 259 258 260 4 (set (reg:SF 217 [ D.6913 ])
        (mult:SF (reg:SF 214 [ D.6913 ])
            (reg:SF 216 [ D.6913 ]))) preproc.cpp:415 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 216 [ D.6913 ])
        (expr_list:REG_DEAD (reg:SF 214 [ D.6913 ])
            (nil))))
(insn 260 259 261 4 (set (mem:SF (reg/f:DI 213 [ D.6912 ]) [0 *_164+0 S4 A32])
        (reg:SF 217 [ D.6913 ])) preproc.cpp:415 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 217 [ D.6913 ])
        (expr_list:REG_DEAD (reg/f:DI 213 [ D.6912 ])
            (nil))))
(insn 261 260 262 4 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) preproc.cpp:416 90 {*movsi_internal}
     (nil))
(insn 262 261 263 4 (set (reg:DI 218 [ D.6915 ])
        (sign_extend:DI (reg:SI 298))) preproc.cpp:416 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 298)
        (nil)))
(insn 263 262 264 4 (parallel [
            (set (reg:DI 219 [ D.6915 ])
                (plus:DI (reg:DI 218 [ D.6915 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 218 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 264 263 265 4 (parallel [
            (set (reg:DI 220 [ D.6915 ])
                (ashift:DI (reg:DI 219 [ D.6915 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:416 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.6915 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 265 264 266 4 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) preproc.cpp:416 89 {*movdi_internal}
     (nil))
(insn 266 265 267 4 (parallel [
            (set (reg/f:DI 221 [ D.6912 ])
                (plus:DI (reg:DI 220 [ D.6915 ])
                    (reg/f:DI 299)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (expr_list:REG_DEAD (reg:DI 220 [ D.6915 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 220 [ D.6915 ]))
                    (nil))))))
(insn 267 266 268 4 (set (reg:SF 222 [ D.6913 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64]))) preproc.cpp:416 157 {*truncdfsf_fast_sse}
     (nil))
(insn 268 267 269 4 (set (reg:DF 300)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])) preproc.cpp:416 128 {*movdf_internal}
     (nil))
(insn 269 268 270 4 (set (reg:DF 21 xmm0)
        (reg:DF 300)) preproc.cpp:416 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 300)
        (nil)))
(call_insn/u 270 269 271 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:416 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 271 270 272 4 (set (reg:DF 223 [ D.6914 ])
        (reg:DF 21 xmm0)) preproc.cpp:416 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 272 271 273 4 (set (reg:SF 224 [ D.6913 ])
        (float_truncate:SF (reg:DF 223 [ D.6914 ]))) preproc.cpp:416 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 223 [ D.6914 ])
        (nil)))
(insn 273 272 274 4 (set (reg:SF 225 [ D.6913 ])
        (mult:SF (reg:SF 222 [ D.6913 ])
            (reg:SF 224 [ D.6913 ]))) preproc.cpp:416 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 224 [ D.6913 ])
        (expr_list:REG_DEAD (reg:SF 222 [ D.6913 ])
            (nil))))
(insn 274 273 275 4 (set (mem:SF (reg/f:DI 221 [ D.6912 ]) [0 *_173+0 S4 A32])
        (reg:SF 225 [ D.6913 ])) preproc.cpp:416 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 225 [ D.6913 ])
        (expr_list:REG_DEAD (reg/f:DI 221 [ D.6912 ])
            (nil))))
(insn 275 274 291 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:385 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 291 275 292 4 (set (pc)
        (label_ref 276)) preproc.cpp:385 654 {jump}
     (nil)
 -> 276)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 292 291 279)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 226 227
(code_label 279 292 280 5 73 "" [1 uses])
(note 280 279 281 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 284 5 (set (reg:SI 226 [ D.6910 ])
        (const_int 1 [0x1])) preproc.cpp:419 90 {*movsi_internal}
     (nil))
(insn 284 281 288 5 (set (reg:SI 227 [ <retval> ])
        (reg:SI 226 [ D.6910 ])) preproc.cpp:419 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 226 [ D.6910 ])
        (nil)))
(insn 288 284 289 5 (set (reg/i:SI 0 ax)
        (reg:SI 227 [ <retval> ])) preproc.cpp:421 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 227 [ <retval> ])
        (nil)))
(insn 289 288 0 5 (use (reg/i:SI 0 ax)) preproc.cpp:421 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int filter(float*, float*, Procpar_info*, Preprocess*) (_Z6filterPfS_P12Procpar_infoP10Preprocess, funcdef_no=9, decl_uid=5488, cgraph_uid=9, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 29 n_edges 44 count 29 (    1)
Building IRA IR
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 244.
verify found no changes in insn with uid = 288.
verify found no changes in insn with uid = 325.
verify found no changes in insn with uid = 399.
verify found no changes in insn with uid = 437.
verify found no changes in insn with uid = 482.
verify found no changes in insn with uid = 520.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r489: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r489,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r488: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r488,l0) best SSE_REGS, allocno SSE_REGS
    r487: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r487,l0) best SSE_REGS, allocno SSE_REGS
    r486: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r486,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r485: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r485,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r484: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r484,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r483: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r483,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r482: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r482,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r481: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r481,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r480: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r480,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r479: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r479,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r478: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r478,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r477: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r477,l0) best SSE_REGS, allocno SSE_REGS
    r476: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r476,l0) best SSE_REGS, allocno SSE_REGS
    r475: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r475,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r474: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r474,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r473: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r473,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r472: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r472,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r471: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r471,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r470: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r470,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r469: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r469,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r468: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r468,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r467: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r467,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r466: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r466,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r465: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a83 (r465,l0) best SSE_REGS, allocno SSE_REGS
    r464: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r464,l0) best SSE_REGS, allocno SSE_REGS
    r463: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r463,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r462: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r462,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r461: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r461,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r460: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r460,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r459: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r459,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r458: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r458,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r457: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r457,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r456: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r456,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r455: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r455,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r454: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a118 (r454,l0) best SSE_REGS, allocno SSE_REGS
    r453: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r453,l0) best SSE_REGS, allocno SSE_REGS
    r452: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r452,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r451: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r451,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r450,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r449: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r449,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r448,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r447: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r447,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r446: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r446,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r445: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r445,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r444: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r444,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r443: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r443,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r442: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r442,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r441: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a146 (r441,l0) best SSE_REGS, allocno SSE_REGS
    r440: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a148 (r440,l0) best SSE_REGS, allocno SSE_REGS
    r439: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r439,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r438: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r438,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r437: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a161 (r437,l0) best SSE_REGS, allocno SSE_REGS
    r436: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a164 (r436,l0) best SSE_REGS, allocno SSE_REGS
    r435: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r435,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r434: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r434,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r433: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r433,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r432,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r429,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r428,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r427,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r426: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a195 (r426,l0) best SSE_REGS, allocno SSE_REGS
    r425: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a198 (r425,l0) best SSE_REGS, allocno SSE_REGS
    r424: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r424,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r419,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r415,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r414: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a229 (r414,l0) best SSE_REGS, allocno SSE_REGS
    r413: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a232 (r413,l0) best SSE_REGS, allocno SSE_REGS
    r412: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r412,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r411,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r408,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a263 (r403,l0) best SSE_REGS, allocno SSE_REGS
    r402: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a266 (r402,l0) best SSE_REGS, allocno SSE_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r401,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r400: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r400,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r391,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a291 (r390,l0) best SSE_REGS, allocno SSE_REGS
    r389: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a293 (r389,l0) best SSE_REGS, allocno SSE_REGS
    r388: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r388,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r387: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a300 (r387,l0) best SSE_REGS, allocno SSE_REGS
    r386: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a304 (r386,l0) best SSE_REGS, allocno SSE_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a315 (r381,l0) best SSE_REGS, allocno SSE_REGS
    r380: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a320 (r380,l0) best SSE_REGS, allocno SSE_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a321 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r378: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a322 (r378,l0) best SSE_REGS, allocno SSE_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a324 (r377,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a329 (r375,l0) best SSE_REGS, allocno SSE_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a331 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a336 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a339 (r372,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a341 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a342 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a347 (r369,l0) best SSE_REGS, allocno SSE_REGS
    r368: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a351 (r368,l0) best SSE_REGS, allocno SSE_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a355 (r367,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a356 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a358 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a360 (r364,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a362 (r363,l0) best SSE_REGS, allocno SSE_REGS
    r362: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a367 (r362,l0) best SSE_REGS, allocno SSE_REGS
    r361: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a368 (r361,l0) best SSE_REGS, allocno SSE_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a370 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a374 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a375 (r358,l0) best SSE_REGS, allocno SSE_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a377 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a382 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a384 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a386 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a388 (r353,l0) best SSE_REGS, allocno SSE_REGS
    r352: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a387 (r352,l0) best SSE_REGS, allocno SSE_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a390 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a391 (r350,l0) best SSE_REGS, allocno SSE_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a395 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a396 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a398 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a399 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a400 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a401 (r344,l0) best SSE_REGS, allocno SSE_REGS
    r343: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a402 (r343,l0) best SSE_REGS, allocno SSE_REGS
    r342: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r342,l0) best AREG, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r339,l0) best SSE_REGS, allocno SSE_REGS
    r338: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r338,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r337: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a7 (r337,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r336: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r336,l0) best SSE_REGS, allocno SSE_REGS
    r335: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a10 (r335,l0) best SSE_REGS, allocno SSE_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a9 (r333,l0) best SSE_REGS, allocno SSE_REGS
    r332: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a17 (r330,l0) best SSE_REGS, allocno SSE_REGS
    r329: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r327,l0) best SSE_REGS, allocno SSE_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r325,l0) best SSE_REGS, allocno SSE_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r315,l0) best SSE_REGS, allocno SSE_REGS
    r314: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a41 (r314,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r313: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a42 (r313,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r312: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r312,l0) best SSE_REGS, allocno SSE_REGS
    r311: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r311,l0) best SSE_REGS, allocno SSE_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a44 (r309,l0) best SSE_REGS, allocno SSE_REGS
    r308: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r308,l0) best SSE_REGS, allocno SSE_REGS
    r307: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r307,l0) best SSE_REGS, allocno SSE_REGS
    r306: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r306,l0) best SSE_REGS, allocno SSE_REGS
    r305: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r305,l0) best SSE_REGS, allocno SSE_REGS
    r304: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r304,l0) best SSE_REGS, allocno SSE_REGS
    r303: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r303,l0) best SSE_REGS, allocno SSE_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r301,l0) best SSE_REGS, allocno SSE_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a76 (r291,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r290: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a77 (r290,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r289: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a80 (r288,l0) best SSE_REGS, allocno SSE_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a79 (r286,l0) best SSE_REGS, allocno SSE_REGS
    r285: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a85 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a87 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r281,l0) best SSE_REGS, allocno SSE_REGS
    r280: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r280,l0) best SSE_REGS, allocno SSE_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r278,l0) best SSE_REGS, allocno SSE_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a108 (r269,l0) best SSE_REGS, allocno SSE_REGS
    r268: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a109 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a111 (r267,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r266: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a112 (r266,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r265: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a113 (r265,l0) best SSE_REGS, allocno SSE_REGS
    r264: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r264,l0) best SSE_REGS, allocno SSE_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r262,l0) best SSE_REGS, allocno SSE_REGS
    r261: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a119 (r261,l0) best SSE_REGS, allocno SSE_REGS
    r260: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r259,l0) best SSE_REGS, allocno SSE_REGS
    r258: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r258,l0) best SSE_REGS, allocno SSE_REGS
    r257: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r257,l0) best SSE_REGS, allocno SSE_REGS
    r256: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a125 (r256,l0) best SSE_REGS, allocno SSE_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a110 (r254,l0) best SSE_REGS, allocno SSE_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a147 (r244,l0) best SSE_REGS, allocno SSE_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a152 (r242,l0) best SSE_REGS, allocno SSE_REGS
    r241: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a153 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a155 (r240,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r239: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a156 (r239,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r238: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a157 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a159 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a158 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a162 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a163 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a165 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a166 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a167 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a168 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a186 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a187 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a189 (r217,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r216: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a190 (r216,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r215: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a191 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a193 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a192 (r213,l0) best SSE_REGS, allocno SSE_REGS
    r212: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a196 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a197 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a199 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a200 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a201 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a202 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a188 (r205,l0) best SSE_REGS, allocno SSE_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a220 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a221 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a223 (r195,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r194: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a224 (r194,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a225 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a227 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a226 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a230 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a231 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a233 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a234 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a235 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a236 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a222 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a254 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a255 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a257 (r172,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r171: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a258 (r171,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a259 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a261 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a260 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a264 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a265 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a267 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a268 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a269 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a270 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a256 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a292 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a296 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a297 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a298 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a301 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a302 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a303 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a305 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a306 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a299 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a314 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a316 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a317 (r135,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r134: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a318 (r134,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a319 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a330 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a332 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a333 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a334 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a335 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a337 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a338 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a340 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a343 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a344 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a345 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a348 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a349 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a350 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a352 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a353 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a354 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a357 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a359 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a346 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a361 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a363 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a364 (r105,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r104: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a365 (r104,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a366 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a369 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a371 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a372 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a373 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a376 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a378 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a379 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a380 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a381 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a383 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a385 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a389 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a392 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a394 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a397 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a393 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r340,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r339,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r325,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a6(r338,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r337,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a8(r336,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a9(r333,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a10(r335,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a11(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r489,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r488,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a14(r332,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a15(r331,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a16(r487,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a17(r330,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a18(r329,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a19(r328,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a20(r327,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a21(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a22(r486,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a23(r485,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a24(r483,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a25(r484,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a26(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r482,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a29(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a30(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r481,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r480,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a34(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r479,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r316,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a39(r315,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a40(r301,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a41(r314,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a42(r313,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a43(r312,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a44(r309,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a45(r311,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a46(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r478,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r477,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a49(r308,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a50(r307,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a51(r476,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a52(r306,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a53(r305,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a54(r304,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a55(r303,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a56(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a57(r475,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r474,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a59(r472,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a60(r473,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a61(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r471,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a64(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r470,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r469,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a67(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a68(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a69(r468,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a70(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a71(r467,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a72(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r293,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a74(r292,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a75(r278,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a76(r291,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a77(r290,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a78(r289,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a79(r286,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a80(r288,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a81(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r466,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r465,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a84(r285,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a85(r284,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a86(r464,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a87(r283,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a88(r282,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a89(r281,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a90(r280,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a91(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a92(r463,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a93(r462,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r460,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a95(r461,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a96(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r459,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a98(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a99(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a100(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r458,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r457,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a103(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a104(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r456,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a108(r269,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a109(r268,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a110(r254,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a111(r267,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a112(r266,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a113(r265,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a114(r262,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a115(r264,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a116(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r455,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r454,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a119(r261,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a120(r260,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a121(r453,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a122(r259,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a123(r258,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r257,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a125(r256,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a126(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a127(r452,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r451,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r449,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a130(r450,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a131(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r448,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r447,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a137(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a138(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a139(r445,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a140(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a141(r444,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a142(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a143(r443,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a144(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a145(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a146(r441,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r244,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a148(r440,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a149(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a150(r439,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a151(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a152(r242,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a153(r241,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a154(r228,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a155(r240,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a156(r239,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a157(r238,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a158(r236,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a159(r237,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a160(r438,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a161(r437,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a162(r235,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a163(r234,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a164(r436,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a165(r233,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a166(r232,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a167(r231,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a168(r230,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a169(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a170(r435,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a171(r434,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a172(r432,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a173(r433,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a174(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a175(r431,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a176(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a177(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a178(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a179(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a180(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a182(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a183(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a184(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a185(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a186(r219,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a187(r218,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a188(r205,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a189(r217,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a190(r216,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a191(r215,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a192(r213,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a193(r214,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a194(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a195(r426,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a196(r212,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a197(r211,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a198(r425,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a199(r210,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a200(r209,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a201(r208,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a202(r207,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a203(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a204(r424,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a205(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a206(r421,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a207(r422,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a208(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a209(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a211(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a212(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a213(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a214(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a215(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a216(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a217(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a218(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a219(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a220(r197,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a221(r196,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a222(r183,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a223(r195,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a224(r194,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a225(r193,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a226(r191,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a227(r192,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a228(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a229(r414,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a230(r190,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a231(r189,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a232(r413,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a233(r188,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a234(r187,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a235(r186,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a236(r185,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a237(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a238(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a239(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a240(r409,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a241(r410,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a242(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a243(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a244(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a245(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a246(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a247(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a248(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a249(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a250(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a251(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a252(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a253(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a254(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a255(r173,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a256(r160,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a257(r172,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a258(r171,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a259(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a260(r168,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a261(r169,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a262(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a263(r403,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a264(r167,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a265(r166,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a266(r402,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a267(r165,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a268(r164,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a269(r163,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a270(r162,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a271(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a272(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a273(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a274(r398,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a275(r399,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a276(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a277(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a278(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a279(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a280(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a281(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a282(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a283(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a284(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a285(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a286(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a287(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a288(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a289(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a290(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a291(r390,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a292(r150,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a293(r389,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a294(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a295(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a296(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a297(r148,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a298(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a299(r138,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a300(r387,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a301(r146,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a302(r145,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a303(r144,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a304(r386,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a305(r143,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a306(r142,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a307(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a308(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a309(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a310(r140,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:31 NO_REX_SSE_REGS:31 SSE_REGS:31 MMX_REGS:41 INT_SSE_REGS:33 ALL_REGS:626 MEM:11
  a311(r383,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a312(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a313(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a314(r137,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a315(r381,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a316(r136,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a317(r135,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a318(r134,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a319(r133,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a320(r380,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a321(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a322(r378,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a323(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a324(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a325(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a326(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a327(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a328(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a329(r375,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a330(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a331(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a332(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a333(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a334(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a335(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a336(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a337(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a338(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a339(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a340(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a341(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a342(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a343(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a344(r118,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a345(r117,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a346(r108,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a347(r369,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a348(r116,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a349(r115,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a350(r114,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a351(r368,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a352(r113,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a353(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a354(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a355(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a356(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a357(r110,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:31 NO_REX_SSE_REGS:31 SSE_REGS:31 MMX_REGS:41 INT_SSE_REGS:33 ALL_REGS:626 MEM:11
  a358(r365,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a359(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a360(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a361(r107,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a362(r363,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a363(r106,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a364(r105,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a365(r104,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a366(r103,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a367(r362,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a368(r361,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a369(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a370(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a371(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a372(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a373(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a374(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a375(r358,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a376(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a377(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a378(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a379(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a380(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a381(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a382(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a383(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a384(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a385(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a386(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a387(r352,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a388(r353,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a389(r91,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a390(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a391(r350,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a392(r90,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a393(r87,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a394(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a395(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a396(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a397(r88,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a398(r347,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a399(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a400(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a401(r344,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a402(r343,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 541(l0): point = 0
   Insn 540(l0): point = 2
   Insn 536(l0): point = 4
   Insn 533(l0): point = 6
   Insn 356(l0): point = 9
   Insn 355(l0): point = 11
   Insn 354(l0): point = 13
   Insn 353(l0): point = 15
   Insn 557(l0): point = 18
   Insn 527(l0): point = 20
   Insn 524(l0): point = 23
   Insn 523(l0): point = 25
   Insn 522(l0): point = 27
   Insn 521(l0): point = 29
   Insn 520(l0): point = 31
   Insn 519(l0): point = 33
   Insn 518(l0): point = 35
   Insn 517(l0): point = 37
   Insn 516(l0): point = 39
   Insn 515(l0): point = 41
   Insn 514(l0): point = 43
   Insn 513(l0): point = 45
   Insn 512(l0): point = 47
   Insn 511(l0): point = 49
   Insn 510(l0): point = 51
   Insn 509(l0): point = 53
   Insn 508(l0): point = 55
   Insn 507(l0): point = 57
   Insn 506(l0): point = 59
   Insn 505(l0): point = 61
   Insn 504(l0): point = 63
   Insn 503(l0): point = 65
   Insn 502(l0): point = 67
   Insn 501(l0): point = 69
   Insn 500(l0): point = 71
   Insn 499(l0): point = 73
   Insn 498(l0): point = 75
   Insn 497(l0): point = 77
   Insn 496(l0): point = 79
   Insn 495(l0): point = 81
   Insn 494(l0): point = 83
   Insn 493(l0): point = 85
   Insn 492(l0): point = 87
   Insn 491(l0): point = 89
   Insn 490(l0): point = 91
   Insn 489(l0): point = 93
   Insn 488(l0): point = 95
   Insn 487(l0): point = 97
   Insn 486(l0): point = 99
   Insn 485(l0): point = 101
   Insn 484(l0): point = 103
   Insn 483(l0): point = 105
   Insn 482(l0): point = 107
   Insn 481(l0): point = 109
   Insn 480(l0): point = 111
   Insn 479(l0): point = 113
   Insn 478(l0): point = 115
   Insn 477(l0): point = 117
   Insn 476(l0): point = 119
   Insn 475(l0): point = 121
   Insn 474(l0): point = 123
   Insn 473(l0): point = 125
   Insn 472(l0): point = 127
   Insn 471(l0): point = 129
   Insn 470(l0): point = 131
   Insn 469(l0): point = 133
   Insn 468(l0): point = 135
   Insn 467(l0): point = 137
   Insn 466(l0): point = 139
   Insn 465(l0): point = 141
   Insn 464(l0): point = 143
   Insn 463(l0): point = 145
   Insn 462(l0): point = 147
   Insn 461(l0): point = 149
   Insn 460(l0): point = 151
   Insn 459(l0): point = 153
   Insn 458(l0): point = 155
   Insn 457(l0): point = 157
   Insn 456(l0): point = 159
   Insn 455(l0): point = 161
   Insn 454(l0): point = 163
   Insn 453(l0): point = 165
   Insn 452(l0): point = 167
   Insn 451(l0): point = 169
   Insn 449(l0): point = 172
   Insn 448(l0): point = 174
   Insn 447(l0): point = 176
   Insn 446(l0): point = 178
   Insn 555(l0): point = 181
   Insn 441(l0): point = 183
   Insn 440(l0): point = 185
   Insn 439(l0): point = 187
   Insn 438(l0): point = 189
   Insn 437(l0): point = 191
   Insn 436(l0): point = 193
   Insn 435(l0): point = 195
   Insn 434(l0): point = 197
   Insn 433(l0): point = 199
   Insn 432(l0): point = 201
   Insn 431(l0): point = 203
   Insn 430(l0): point = 205
   Insn 429(l0): point = 207
   Insn 428(l0): point = 209
   Insn 427(l0): point = 211
   Insn 426(l0): point = 213
   Insn 425(l0): point = 215
   Insn 424(l0): point = 217
   Insn 423(l0): point = 219
   Insn 422(l0): point = 221
   Insn 421(l0): point = 223
   Insn 420(l0): point = 225
   Insn 419(l0): point = 227
   Insn 418(l0): point = 229
   Insn 417(l0): point = 231
   Insn 416(l0): point = 233
   Insn 415(l0): point = 235
   Insn 414(l0): point = 237
   Insn 413(l0): point = 239
   Insn 412(l0): point = 241
   Insn 411(l0): point = 243
   Insn 410(l0): point = 245
   Insn 409(l0): point = 247
   Insn 408(l0): point = 249
   Insn 407(l0): point = 251
   Insn 406(l0): point = 253
   Insn 405(l0): point = 255
   Insn 404(l0): point = 257
   Insn 403(l0): point = 259
   Insn 402(l0): point = 261
   Insn 401(l0): point = 263
   Insn 400(l0): point = 265
   Insn 399(l0): point = 267
   Insn 398(l0): point = 269
   Insn 397(l0): point = 271
   Insn 396(l0): point = 273
   Insn 395(l0): point = 275
   Insn 394(l0): point = 277
   Insn 393(l0): point = 279
   Insn 392(l0): point = 281
   Insn 391(l0): point = 283
   Insn 390(l0): point = 285
   Insn 389(l0): point = 287
   Insn 388(l0): point = 289
   Insn 387(l0): point = 291
   Insn 386(l0): point = 293
   Insn 385(l0): point = 295
   Insn 384(l0): point = 297
   Insn 383(l0): point = 299
   Insn 382(l0): point = 301
   Insn 381(l0): point = 303
   Insn 380(l0): point = 305
   Insn 379(l0): point = 307
   Insn 378(l0): point = 309
   Insn 377(l0): point = 311
   Insn 376(l0): point = 313
   Insn 375(l0): point = 315
   Insn 374(l0): point = 317
   Insn 373(l0): point = 319
   Insn 372(l0): point = 321
   Insn 371(l0): point = 323
   Insn 370(l0): point = 325
   Insn 369(l0): point = 327
   Insn 368(l0): point = 329
   Insn 366(l0): point = 332
   Insn 365(l0): point = 334
   Insn 364(l0): point = 336
   Insn 363(l0): point = 338
   Insn 361(l0): point = 341
   Insn 360(l0): point = 343
   Insn 359(l0): point = 345
   Insn 358(l0): point = 347
   Insn 351(l0): point = 350
   Insn 346(l0): point = 353
   Insn 345(l0): point = 355
   Insn 344(l0): point = 357
   Insn 343(l0): point = 360
   Insn 342(l0): point = 362
   Insn 341(l0): point = 364
   Insn 340(l0): point = 366
   Insn 339(l0): point = 368
   Insn 338(l0): point = 370
   Insn 165(l0): point = 373
   Insn 164(l0): point = 375
   Insn 163(l0): point = 377
   Insn 162(l0): point = 379
   Insn 553(l0): point = 382
   Insn 332(l0): point = 384
   Insn 329(l0): point = 387
   Insn 328(l0): point = 389
   Insn 327(l0): point = 391
   Insn 326(l0): point = 393
   Insn 325(l0): point = 395
   Insn 324(l0): point = 397
   Insn 323(l0): point = 399
   Insn 322(l0): point = 401
   Insn 321(l0): point = 403
   Insn 320(l0): point = 405
   Insn 319(l0): point = 407
   Insn 318(l0): point = 409
   Insn 317(l0): point = 411
   Insn 316(l0): point = 413
   Insn 315(l0): point = 415
   Insn 314(l0): point = 417
   Insn 313(l0): point = 419
   Insn 312(l0): point = 421
   Insn 311(l0): point = 423
   Insn 310(l0): point = 425
   Insn 309(l0): point = 427
   Insn 308(l0): point = 429
   Insn 307(l0): point = 431
   Insn 306(l0): point = 433
   Insn 305(l0): point = 435
   Insn 304(l0): point = 437
   Insn 303(l0): point = 439
   Insn 302(l0): point = 441
   Insn 301(l0): point = 443
   Insn 300(l0): point = 445
   Insn 299(l0): point = 447
   Insn 298(l0): point = 449
   Insn 297(l0): point = 451
   Insn 296(l0): point = 453
   Insn 295(l0): point = 455
   Insn 294(l0): point = 457
   Insn 293(l0): point = 459
   Insn 292(l0): point = 461
   Insn 291(l0): point = 463
   Insn 290(l0): point = 465
   Insn 289(l0): point = 467
   Insn 288(l0): point = 469
   Insn 287(l0): point = 471
   Insn 286(l0): point = 473
   Insn 285(l0): point = 475
   Insn 284(l0): point = 477
   Insn 283(l0): point = 479
   Insn 282(l0): point = 481
   Insn 281(l0): point = 483
   Insn 280(l0): point = 485
   Insn 279(l0): point = 487
   Insn 278(l0): point = 489
   Insn 277(l0): point = 491
   Insn 276(l0): point = 493
   Insn 275(l0): point = 495
   Insn 274(l0): point = 497
   Insn 273(l0): point = 499
   Insn 272(l0): point = 501
   Insn 271(l0): point = 503
   Insn 270(l0): point = 505
   Insn 269(l0): point = 507
   Insn 268(l0): point = 509
   Insn 267(l0): point = 511
   Insn 266(l0): point = 513
   Insn 265(l0): point = 515
   Insn 264(l0): point = 517
   Insn 263(l0): point = 519
   Insn 262(l0): point = 521
   Insn 261(l0): point = 523
   Insn 260(l0): point = 525
   Insn 259(l0): point = 527
   Insn 258(l0): point = 529
   Insn 256(l0): point = 532
   Insn 255(l0): point = 534
   Insn 254(l0): point = 536
   Insn 253(l0): point = 538
   Insn 551(l0): point = 541
   Insn 248(l0): point = 543
   Insn 247(l0): point = 545
   Insn 246(l0): point = 547
   Insn 245(l0): point = 549
   Insn 244(l0): point = 551
   Insn 243(l0): point = 553
   Insn 242(l0): point = 555
   Insn 241(l0): point = 557
   Insn 240(l0): point = 559
   Insn 239(l0): point = 561
   Insn 238(l0): point = 563
   Insn 237(l0): point = 565
   Insn 236(l0): point = 567
   Insn 235(l0): point = 569
   Insn 234(l0): point = 571
   Insn 233(l0): point = 573
   Insn 232(l0): point = 575
   Insn 231(l0): point = 577
   Insn 230(l0): point = 579
   Insn 229(l0): point = 581
   Insn 228(l0): point = 583
   Insn 227(l0): point = 585
   Insn 226(l0): point = 587
   Insn 225(l0): point = 589
   Insn 224(l0): point = 591
   Insn 223(l0): point = 593
   Insn 222(l0): point = 595
   Insn 221(l0): point = 597
   Insn 220(l0): point = 599
   Insn 219(l0): point = 601
   Insn 218(l0): point = 603
   Insn 217(l0): point = 605
   Insn 216(l0): point = 607
   Insn 215(l0): point = 609
   Insn 214(l0): point = 611
   Insn 213(l0): point = 613
   Insn 212(l0): point = 615
   Insn 211(l0): point = 617
   Insn 210(l0): point = 619
   Insn 209(l0): point = 621
   Insn 208(l0): point = 623
   Insn 207(l0): point = 625
   Insn 206(l0): point = 627
   Insn 205(l0): point = 629
   Insn 204(l0): point = 631
   Insn 203(l0): point = 633
   Insn 202(l0): point = 635
   Insn 201(l0): point = 637
   Insn 200(l0): point = 639
   Insn 199(l0): point = 641
   Insn 198(l0): point = 643
   Insn 197(l0): point = 645
   Insn 196(l0): point = 647
   Insn 195(l0): point = 649
   Insn 194(l0): point = 651
   Insn 193(l0): point = 653
   Insn 192(l0): point = 655
   Insn 191(l0): point = 657
   Insn 190(l0): point = 659
   Insn 189(l0): point = 661
   Insn 188(l0): point = 663
   Insn 187(l0): point = 665
   Insn 186(l0): point = 667
   Insn 185(l0): point = 669
   Insn 184(l0): point = 671
   Insn 183(l0): point = 673
   Insn 182(l0): point = 675
   Insn 181(l0): point = 677
   Insn 180(l0): point = 679
   Insn 179(l0): point = 681
   Insn 178(l0): point = 683
   Insn 177(l0): point = 685
   Insn 175(l0): point = 688
   Insn 174(l0): point = 690
   Insn 173(l0): point = 692
   Insn 172(l0): point = 694
   Insn 170(l0): point = 697
   Insn 169(l0): point = 699
   Insn 168(l0): point = 701
   Insn 167(l0): point = 703
   Insn 160(l0): point = 706
   Insn 155(l0): point = 709
   Insn 154(l0): point = 711
   Insn 153(l0): point = 713
   Insn 152(l0): point = 716
   Insn 151(l0): point = 718
   Insn 150(l0): point = 720
   Insn 149(l0): point = 722
   Insn 148(l0): point = 724
   Insn 145(l0): point = 727
   Insn 144(l0): point = 729
   Insn 143(l0): point = 731
   Insn 142(l0): point = 733
   Insn 141(l0): point = 735
   Insn 140(l0): point = 737
   Insn 139(l0): point = 739
   Insn 138(l0): point = 741
   Insn 137(l0): point = 743
   Insn 136(l0): point = 745
   Insn 135(l0): point = 747
   Insn 134(l0): point = 749
   Insn 133(l0): point = 751
   Insn 132(l0): point = 753
   Insn 131(l0): point = 755
   Insn 130(l0): point = 757
   Insn 129(l0): point = 759
   Insn 128(l0): point = 761
   Insn 127(l0): point = 763
   Insn 126(l0): point = 765
   Insn 125(l0): point = 767
   Insn 124(l0): point = 769
   Insn 123(l0): point = 771
   Insn 122(l0): point = 773
   Insn 121(l0): point = 775
   Insn 120(l0): point = 777
   Insn 119(l0): point = 779
   Insn 118(l0): point = 781
   Insn 117(l0): point = 783
   Insn 116(l0): point = 785
   Insn 115(l0): point = 787
   Insn 114(l0): point = 789
   Insn 113(l0): point = 791
   Insn 112(l0): point = 793
   Insn 111(l0): point = 795
   Insn 110(l0): point = 797
   Insn 109(l0): point = 799
   Insn 108(l0): point = 801
   Insn 107(l0): point = 803
   Insn 106(l0): point = 805
   Insn 105(l0): point = 807
   Insn 104(l0): point = 809
   Insn 103(l0): point = 811
   Insn 102(l0): point = 813
   Insn 101(l0): point = 815
   Insn 100(l0): point = 817
   Insn 99(l0): point = 819
   Insn 97(l0): point = 822
   Insn 96(l0): point = 824
   Insn 95(l0): point = 826
   Insn 94(l0): point = 828
   Insn 93(l0): point = 830
   Insn 91(l0): point = 833
   Insn 90(l0): point = 835
   Insn 89(l0): point = 837
   Insn 88(l0): point = 839
   Insn 85(l0): point = 842
   Insn 84(l0): point = 844
   Insn 83(l0): point = 846
   Insn 82(l0): point = 848
   Insn 81(l0): point = 850
   Insn 80(l0): point = 852
   Insn 79(l0): point = 854
   Insn 78(l0): point = 856
   Insn 77(l0): point = 858
   Insn 76(l0): point = 860
   Insn 75(l0): point = 862
   Insn 74(l0): point = 864
   Insn 73(l0): point = 866
   Insn 72(l0): point = 868
   Insn 71(l0): point = 870
   Insn 70(l0): point = 872
   Insn 69(l0): point = 874
   Insn 68(l0): point = 876
   Insn 67(l0): point = 878
   Insn 66(l0): point = 880
   Insn 65(l0): point = 882
   Insn 64(l0): point = 884
   Insn 63(l0): point = 886
   Insn 62(l0): point = 888
   Insn 61(l0): point = 890
   Insn 60(l0): point = 892
   Insn 59(l0): point = 894
   Insn 58(l0): point = 896
   Insn 57(l0): point = 898
   Insn 56(l0): point = 900
   Insn 55(l0): point = 902
   Insn 54(l0): point = 904
   Insn 53(l0): point = 906
   Insn 52(l0): point = 908
   Insn 51(l0): point = 910
   Insn 50(l0): point = 912
   Insn 49(l0): point = 914
   Insn 48(l0): point = 916
   Insn 47(l0): point = 918
   Insn 46(l0): point = 920
   Insn 45(l0): point = 922
   Insn 44(l0): point = 924
   Insn 43(l0): point = 926
   Insn 42(l0): point = 928
   Insn 41(l0): point = 930
   Insn 40(l0): point = 932
   Insn 38(l0): point = 935
   Insn 37(l0): point = 937
   Insn 36(l0): point = 939
   Insn 35(l0): point = 941
   Insn 33(l0): point = 944
   Insn 32(l0): point = 946
   Insn 31(l0): point = 948
   Insn 30(l0): point = 950
   Insn 29(l0): point = 952
   Insn 28(l0): point = 954
   Insn 27(l0): point = 956
   Insn 26(l0): point = 958
   Insn 25(l0): point = 960
   Insn 24(l0): point = 962
   Insn 23(l0): point = 964
   Insn 22(l0): point = 966
   Insn 21(l0): point = 968
   Insn 20(l0): point = 970
   Insn 19(l0): point = 972
   Insn 18(l0): point = 974
   Insn 17(l0): point = 976
   Insn 16(l0): point = 978
   Insn 15(l0): point = 980
   Insn 14(l0): point = 982
   Insn 13(l0): point = 984
   Insn 12(l0): point = 986
   Insn 11(l0): point = 988
   Insn 10(l0): point = 990
   Insn 9(l0): point = 992
   Insn 5(l0): point = 994
   Insn 4(l0): point = 996
   Insn 3(l0): point = 998
   Insn 2(l0): point = 1000
 a0(r342): [3..4]
 a1(r341): [5..6]
 a2(r320): [24..87]
 a3(r340): [24..25]
 a4(r339): [26..27]
 a5(r325): [26..73]
 a6(r338): [28..29]
 a7(r337): [34..35]
 a8(r336): [36..37]
 a9(r333): [36..45]
 a10(r335): [38..39]
 a11(r334): [40..41]
 a12(r489): [42..43]
 a13(r488): [46..47]
 a14(r332): [46..49]
 a15(r331): [50..53]
 a16(r487): [50..51]
 a17(r330): [54..55]
 a18(r329): [54..57]
 a19(r328): [58..59]
 a20(r327): [58..61]
 a21(r326): [62..63]
 a22(r486): [64..65]
 a23(r485): [66..67]
 a24(r483): [68..71]
 a25(r484): [68..69]
 a26(r324): [74..75]
 a27(r482): [76..77]
 a28(r323): [76..79]
 a29(r322): [80..81]
 a30(r321): [82..83]
 a31(r481): [84..85]
 a32(r480): [88..89]
 a33(r319): [88..91]
 a34(r318): [92..93]
 a35(r317): [94..95]
 a36(r479): [96..97]
 a37(r297): [100..161]
 a38(r316): [100..101]
 a39(r315): [102..103]
 a40(r301): [102..149]
 a41(r314): [104..105]
 a42(r313): [110..111]
 a43(r312): [112..113]
 a44(r309): [112..121]
 a45(r311): [114..115]
 a46(r310): [116..117]
 a47(r478): [118..119]
 a48(r477): [122..123]
 a49(r308): [122..125]
 a50(r307): [126..129]
 a51(r476): [126..127]
 a52(r306): [130..131]
 a53(r305): [130..133]
 a54(r304): [134..135]
 a55(r303): [134..137]
 a56(r302): [138..139]
 a57(r475): [140..141]
 a58(r474): [142..143]
 a59(r472): [144..147]
 a60(r473): [144..145]
 a61(r300): [150..151]
 a62(r471): [152..153]
 a63(r299): [152..155]
 a64(r298): [156..157]
 a65(r470): [158..159]
 a66(r469): [162..163]
 a67(r296): [162..165]
 a68(r295): [166..167]
 a69(r468): [168..169]
 a70(r294): [175..176]
 a71(r467): [177..178]
 a72(r273): [184..247]
 a73(r293): [184..185]
 a74(r292): [186..187]
 a75(r278): [186..233]
 a76(r291): [188..189]
 a77(r290): [194..195]
 a78(r289): [196..197]
 a79(r286): [196..205]
 a80(r288): [198..199]
 a81(r287): [200..201]
 a82(r466): [202..203]
 a83(r465): [206..207]
 a84(r285): [206..209]
 a85(r284): [210..213]
 a86(r464): [210..211]
 a87(r283): [214..215]
 a88(r282): [214..217]
 a89(r281): [218..219]
 a90(r280): [218..221]
 a91(r279): [222..223]
 a92(r463): [224..225]
 a93(r462): [226..227]
 a94(r460): [228..231]
 a95(r461): [228..229]
 a96(r277): [234..235]
 a97(r459): [236..237]
 a98(r276): [236..239]
 a99(r275): [240..241]
 a100(r274): [242..243]
 a101(r458): [244..245]
 a102(r457): [248..249]
 a103(r272): [248..251]
 a104(r271): [252..253]
 a105(r270): [254..255]
 a106(r456): [256..257]
 a107(r250): [260..321]
 a108(r269): [260..261]
 a109(r268): [262..263]
 a110(r254): [262..309]
 a111(r267): [264..265]
 a112(r266): [270..271]
 a113(r265): [272..273]
 a114(r262): [272..281]
 a115(r264): [274..275]
 a116(r263): [276..277]
 a117(r455): [278..279]
 a118(r454): [282..283]
 a119(r261): [282..285]
 a120(r260): [286..289]
 a121(r453): [286..287]
 a122(r259): [290..291]
 a123(r258): [290..293]
 a124(r257): [294..295]
 a125(r256): [294..297]
 a126(r255): [298..299]
 a127(r452): [300..301]
 a128(r451): [302..303]
 a129(r449): [304..307]
 a130(r450): [304..305]
 a131(r253): [310..311]
 a132(r448): [312..313]
 a133(r252): [312..315]
 a134(r251): [316..317]
 a135(r447): [318..319]
 a136(r446): [322..323]
 a137(r249): [322..325]
 a138(r248): [326..327]
 a139(r445): [328..329]
 a140(r247): [335..336]
 a141(r444): [337..338]
 a142(r246): [344..345]
 a143(r443): [346..347]
 a144(r245): [12..13]
 a145(r442): [14..15]
 a146(r441): [356..357]
 a147(r244): [356..366]
 a148(r440): [363..364]
 a149(r243): [367..368]
 a150(r439): [369..370]
 a151(r223): [388..449]
 a152(r242): [388..389]
 a153(r241): [390..391]
 a154(r228): [390..435]
 a155(r240): [392..393]
 a156(r239): [398..399]
 a157(r238): [400..401]
 a158(r236): [400..407]
 a159(r237): [402..403]
 a160(r438): [404..405]
 a161(r437): [408..409]
 a162(r235): [408..411]
 a163(r234): [412..415]
 a164(r436): [412..413]
 a165(r233): [416..417]
 a166(r232): [416..419]
 a167(r231): [420..421]
 a168(r230): [420..423]
 a169(r229): [424..425]
 a170(r435): [426..427]
 a171(r434): [428..429]
 a172(r432): [430..433]
 a173(r433): [430..431]
 a174(r227): [436..437]
 a175(r431): [438..439]
 a176(r226): [438..441]
 a177(r225): [442..443]
 a178(r224): [444..445]
 a179(r430): [446..447]
 a180(r429): [450..451]
 a181(r222): [450..453]
 a182(r221): [454..455]
 a183(r220): [456..457]
 a184(r428): [458..459]
 a185(r201): [462..521]
 a186(r219): [462..463]
 a187(r218): [464..465]
 a188(r205): [464..509]
 a189(r217): [466..467]
 a190(r216): [472..473]
 a191(r215): [474..475]
 a192(r213): [474..481]
 a193(r214): [476..477]
 a194(r427): [478..479]
 a195(r426): [482..483]
 a196(r212): [482..485]
 a197(r211): [486..489]
 a198(r425): [486..487]
 a199(r210): [490..491]
 a200(r209): [490..493]
 a201(r208): [494..495]
 a202(r207): [494..497]
 a203(r206): [498..499]
 a204(r424): [500..501]
 a205(r423): [502..503]
 a206(r421): [504..507]
 a207(r422): [504..505]
 a208(r204): [510..511]
 a209(r420): [512..513]
 a210(r203): [512..515]
 a211(r202): [516..517]
 a212(r419): [518..519]
 a213(r418): [522..523]
 a214(r200): [522..525]
 a215(r199): [526..527]
 a216(r417): [528..529]
 a217(r198): [535..536]
 a218(r416): [537..538]
 a219(r178): [544..605]
 a220(r197): [544..545]
 a221(r196): [546..547]
 a222(r183): [546..591]
 a223(r195): [548..549]
 a224(r194): [554..555]
 a225(r193): [556..557]
 a226(r191): [556..563]
 a227(r192): [558..559]
 a228(r415): [560..561]
 a229(r414): [564..565]
 a230(r190): [564..567]
 a231(r189): [568..571]
 a232(r413): [568..569]
 a233(r188): [572..573]
 a234(r187): [572..575]
 a235(r186): [576..577]
 a236(r185): [576..579]
 a237(r184): [580..581]
 a238(r412): [582..583]
 a239(r411): [584..585]
 a240(r409): [586..589]
 a241(r410): [586..587]
 a242(r182): [592..593]
 a243(r408): [594..595]
 a244(r181): [594..597]
 a245(r180): [598..599]
 a246(r179): [600..601]
 a247(r407): [602..603]
 a248(r406): [606..607]
 a249(r177): [606..609]
 a250(r176): [610..611]
 a251(r175): [612..613]
 a252(r405): [614..615]
 a253(r156): [618..677]
 a254(r174): [618..619]
 a255(r173): [620..621]
 a256(r160): [620..665]
 a257(r172): [622..623]
 a258(r171): [628..629]
 a259(r170): [630..631]
 a260(r168): [630..637]
 a261(r169): [632..633]
 a262(r404): [634..635]
 a263(r403): [638..639]
 a264(r167): [638..641]
 a265(r166): [642..645]
 a266(r402): [642..643]
 a267(r165): [646..647]
 a268(r164): [646..649]
 a269(r163): [650..651]
 a270(r162): [650..653]
 a271(r161): [654..655]
 a272(r401): [656..657]
 a273(r400): [658..659]
 a274(r398): [660..663]
 a275(r399): [660..661]
 a276(r159): [666..667]
 a277(r397): [668..669]
 a278(r158): [668..671]
 a279(r157): [672..673]
 a280(r396): [674..675]
 a281(r395): [678..679]
 a282(r155): [678..681]
 a283(r154): [682..683]
 a284(r394): [684..685]
 a285(r153): [691..692]
 a286(r393): [693..694]
 a287(r152): [700..701]
 a288(r392): [702..703]
 a289(r151): [376..377]
 a290(r391): [378..379]
 a291(r390): [712..713]
 a292(r150): [712..722]
 a293(r389): [719..720]
 a294(r388): [723..724]
 a295(r132): [728..783]
 a296(r149): [728..729]
 a297(r148): [730..731]
 a298(r147): [732..733]
 a299(r138): [732..763]
 a300(r387): [734..735]
 a301(r146): [734..737]
 a302(r145): [738..739]
 a303(r144): [740..743]
 a304(r386): [740..741]
 a305(r143): [744..745]
 a306(r142): [746..747]
 a307(r141): [748..749]
 a308(r385): [750..751]
 a309(r384): [752..753]
 a310(r140): [754..757]
 a311(r383): [754..755]
 a312(r139): [758..759]
 a313(r382): [760..761]
 a314(r137): [764..767]
 a315(r381): [764..765]
 a316(r136): [768..769]
 a317(r135): [770..771]
 a318(r134): [776..777]
 a319(r133): [778..779]
 a320(r380): [780..781]
 a321(r379): [784..785]
 a322(r378): [788..789]
 a323(r131): [790..791]
 a324(r377): [792..793]
 a325(r130): [792..795]
 a326(r129): [796..797]
 a327(r128): [798..799]
 a328(r376): [800..801]
 a329(r375): [804..805]
 a330(r127): [806..807]
 a331(r374): [808..809]
 a332(r126): [808..811]
 a333(r125): [812..813]
 a334(r124): [814..815]
 a335(r123): [816..817]
 a336(r373): [818..819]
 a337(r122): [825..826]
 a338(r121): [827..828]
 a339(r372): [829..830]
 a340(r120): [836..837]
 a341(r371): [838..839]
 a342(r370): [843..844]
 a343(r119): [843..846]
 a344(r118): [847..848]
 a345(r117): [849..850]
 a346(r108): [849..880]
 a347(r369): [851..852]
 a348(r116): [851..854]
 a349(r115): [855..856]
 a350(r114): [857..860]
 a351(r368): [857..858]
 a352(r113): [861..862]
 a353(r112): [863..864]
 a354(r111): [865..866]
 a355(r367): [867..868]
 a356(r366): [869..870]
 a357(r110): [871..874]
 a358(r365): [871..872]
 a359(r109): [875..876]
 a360(r364): [877..878]
 a361(r107): [881..884]
 a362(r363): [881..882]
 a363(r106): [885..886]
 a364(r105): [887..888]
 a365(r104): [893..894]
 a366(r103): [895..896]
 a367(r362): [897..898]
 a368(r361): [901..902]
 a369(r102): [903..904]
 a370(r360): [905..906]
 a371(r101): [905..908]
 a372(r100): [909..910]
 a373(r99): [911..912]
 a374(r359): [913..914]
 a375(r358): [917..918]
 a376(r98): [919..920]
 a377(r357): [921..922]
 a378(r97): [921..924]
 a379(r96): [925..926]
 a380(r95): [927..928]
 a381(r94): [929..930]
 a382(r356): [931..932]
 a383(r93): [938..939]
 a384(r355): [940..941]
 a385(r92): [947..948]
 a386(r354): [949..950]
 a387(r352): [953..954]
 a388(r353): [955..956]
 a389(r91): [955..958]
 a390(r351): [959..960]
 a391(r350): [963..964]
 a392(r90): [965..966]
 a393(r87): [965..980]
 a394(r89): [967..968]
 a395(r349): [969..970]
 a396(r348): [971..972]
 a397(r88): [973..976]
 a398(r347): [973..974]
 a399(r346): [977..978]
 a400(r345): [981..982]
 a401(r344): [985..986]
 a402(r343): [989..990]
Compressing live ranges: from 1003 to 604 - 60%
Ranges after the compression:
 a0(r342): [0..1]
 a1(r341): [2..3]
 a2(r320): [8..49]
 a3(r340): [8..9]
 a4(r339): [10..11]
 a5(r325): [10..39]
 a6(r338): [12..13]
 a7(r337): [14..15]
 a8(r336): [16..17]
 a9(r333): [16..23]
 a10(r335): [18..19]
 a11(r334): [20..21]
 a12(r489): [22..23]
 a13(r488): [24..25]
 a14(r332): [24..25]
 a15(r331): [26..27]
 a16(r487): [26..27]
 a17(r330): [28..29]
 a18(r329): [28..29]
 a19(r328): [30..31]
 a20(r327): [30..31]
 a21(r326): [32..33]
 a22(r486): [34..35]
 a23(r485): [36..37]
 a24(r483): [38..39]
 a25(r484): [38..39]
 a26(r324): [40..41]
 a27(r482): [42..43]
 a28(r323): [42..43]
 a29(r322): [44..45]
 a30(r321): [46..47]
 a31(r481): [48..49]
 a32(r480): [50..51]
 a33(r319): [50..51]
 a34(r318): [52..53]
 a35(r317): [54..55]
 a36(r479): [56..57]
 a37(r297): [58..97]
 a38(r316): [58..59]
 a39(r315): [60..61]
 a40(r301): [60..89]
 a41(r314): [62..63]
 a42(r313): [64..65]
 a43(r312): [66..67]
 a44(r309): [66..73]
 a45(r311): [68..69]
 a46(r310): [70..71]
 a47(r478): [72..73]
 a48(r477): [74..75]
 a49(r308): [74..75]
 a50(r307): [76..77]
 a51(r476): [76..77]
 a52(r306): [78..79]
 a53(r305): [78..79]
 a54(r304): [80..81]
 a55(r303): [80..81]
 a56(r302): [82..83]
 a57(r475): [84..85]
 a58(r474): [86..87]
 a59(r472): [88..89]
 a60(r473): [88..89]
 a61(r300): [90..91]
 a62(r471): [92..93]
 a63(r299): [92..93]
 a64(r298): [94..95]
 a65(r470): [96..97]
 a66(r469): [98..99]
 a67(r296): [98..99]
 a68(r295): [100..101]
 a69(r468): [102..103]
 a70(r294): [104..105]
 a71(r467): [106..107]
 a72(r273): [108..149]
 a73(r293): [108..109]
 a74(r292): [110..111]
 a75(r278): [110..139]
 a76(r291): [112..113]
 a77(r290): [114..115]
 a78(r289): [116..117]
 a79(r286): [116..123]
 a80(r288): [118..119]
 a81(r287): [120..121]
 a82(r466): [122..123]
 a83(r465): [124..125]
 a84(r285): [124..125]
 a85(r284): [126..127]
 a86(r464): [126..127]
 a87(r283): [128..129]
 a88(r282): [128..129]
 a89(r281): [130..131]
 a90(r280): [130..131]
 a91(r279): [132..133]
 a92(r463): [134..135]
 a93(r462): [136..137]
 a94(r460): [138..139]
 a95(r461): [138..139]
 a96(r277): [140..141]
 a97(r459): [142..143]
 a98(r276): [142..143]
 a99(r275): [144..145]
 a100(r274): [146..147]
 a101(r458): [148..149]
 a102(r457): [150..151]
 a103(r272): [150..151]
 a104(r271): [152..153]
 a105(r270): [154..155]
 a106(r456): [156..157]
 a107(r250): [158..197]
 a108(r269): [158..159]
 a109(r268): [160..161]
 a110(r254): [160..189]
 a111(r267): [162..163]
 a112(r266): [164..165]
 a113(r265): [166..167]
 a114(r262): [166..173]
 a115(r264): [168..169]
 a116(r263): [170..171]
 a117(r455): [172..173]
 a118(r454): [174..175]
 a119(r261): [174..175]
 a120(r260): [176..177]
 a121(r453): [176..177]
 a122(r259): [178..179]
 a123(r258): [178..179]
 a124(r257): [180..181]
 a125(r256): [180..181]
 a126(r255): [182..183]
 a127(r452): [184..185]
 a128(r451): [186..187]
 a129(r449): [188..189]
 a130(r450): [188..189]
 a131(r253): [190..191]
 a132(r448): [192..193]
 a133(r252): [192..193]
 a134(r251): [194..195]
 a135(r447): [196..197]
 a136(r446): [198..199]
 a137(r249): [198..199]
 a138(r248): [200..201]
 a139(r445): [202..203]
 a140(r247): [204..205]
 a141(r444): [206..207]
 a142(r246): [208..209]
 a143(r443): [210..211]
 a144(r245): [4..5]
 a145(r442): [6..7]
 a146(r441): [212..213]
 a147(r244): [212..215]
 a148(r440): [214..215]
 a149(r243): [216..217]
 a150(r439): [218..219]
 a151(r223): [224..263]
 a152(r242): [224..225]
 a153(r241): [226..227]
 a154(r228): [226..253]
 a155(r240): [228..229]
 a156(r239): [230..231]
 a157(r238): [232..233]
 a158(r236): [232..237]
 a159(r237): [234..235]
 a160(r438): [236..237]
 a161(r437): [238..239]
 a162(r235): [238..239]
 a163(r234): [240..241]
 a164(r436): [240..241]
 a165(r233): [242..243]
 a166(r232): [242..243]
 a167(r231): [244..245]
 a168(r230): [244..245]
 a169(r229): [246..247]
 a170(r435): [248..249]
 a171(r434): [250..251]
 a172(r432): [252..253]
 a173(r433): [252..253]
 a174(r227): [254..255]
 a175(r431): [256..257]
 a176(r226): [256..257]
 a177(r225): [258..259]
 a178(r224): [260..261]
 a179(r430): [262..263]
 a180(r429): [264..265]
 a181(r222): [264..265]
 a182(r221): [266..267]
 a183(r220): [268..269]
 a184(r428): [270..271]
 a185(r201): [272..309]
 a186(r219): [272..273]
 a187(r218): [274..275]
 a188(r205): [274..301]
 a189(r217): [276..277]
 a190(r216): [278..279]
 a191(r215): [280..281]
 a192(r213): [280..285]
 a193(r214): [282..283]
 a194(r427): [284..285]
 a195(r426): [286..287]
 a196(r212): [286..287]
 a197(r211): [288..289]
 a198(r425): [288..289]
 a199(r210): [290..291]
 a200(r209): [290..291]
 a201(r208): [292..293]
 a202(r207): [292..293]
 a203(r206): [294..295]
 a204(r424): [296..297]
 a205(r423): [298..299]
 a206(r421): [300..301]
 a207(r422): [300..301]
 a208(r204): [302..303]
 a209(r420): [304..305]
 a210(r203): [304..305]
 a211(r202): [306..307]
 a212(r419): [308..309]
 a213(r418): [310..311]
 a214(r200): [310..311]
 a215(r199): [312..313]
 a216(r417): [314..315]
 a217(r198): [316..317]
 a218(r416): [318..319]
 a219(r178): [320..359]
 a220(r197): [320..321]
 a221(r196): [322..323]
 a222(r183): [322..349]
 a223(r195): [324..325]
 a224(r194): [326..327]
 a225(r193): [328..329]
 a226(r191): [328..333]
 a227(r192): [330..331]
 a228(r415): [332..333]
 a229(r414): [334..335]
 a230(r190): [334..335]
 a231(r189): [336..337]
 a232(r413): [336..337]
 a233(r188): [338..339]
 a234(r187): [338..339]
 a235(r186): [340..341]
 a236(r185): [340..341]
 a237(r184): [342..343]
 a238(r412): [344..345]
 a239(r411): [346..347]
 a240(r409): [348..349]
 a241(r410): [348..349]
 a242(r182): [350..351]
 a243(r408): [352..353]
 a244(r181): [352..353]
 a245(r180): [354..355]
 a246(r179): [356..357]
 a247(r407): [358..359]
 a248(r406): [360..361]
 a249(r177): [360..361]
 a250(r176): [362..363]
 a251(r175): [364..365]
 a252(r405): [366..367]
 a253(r156): [368..405]
 a254(r174): [368..369]
 a255(r173): [370..371]
 a256(r160): [370..397]
 a257(r172): [372..373]
 a258(r171): [374..375]
 a259(r170): [376..377]
 a260(r168): [376..381]
 a261(r169): [378..379]
 a262(r404): [380..381]
 a263(r403): [382..383]
 a264(r167): [382..383]
 a265(r166): [384..385]
 a266(r402): [384..385]
 a267(r165): [386..387]
 a268(r164): [386..387]
 a269(r163): [388..389]
 a270(r162): [388..389]
 a271(r161): [390..391]
 a272(r401): [392..393]
 a273(r400): [394..395]
 a274(r398): [396..397]
 a275(r399): [396..397]
 a276(r159): [398..399]
 a277(r397): [400..401]
 a278(r158): [400..401]
 a279(r157): [402..403]
 a280(r396): [404..405]
 a281(r395): [406..407]
 a282(r155): [406..407]
 a283(r154): [408..409]
 a284(r394): [410..411]
 a285(r153): [412..413]
 a286(r393): [414..415]
 a287(r152): [416..417]
 a288(r392): [418..419]
 a289(r151): [220..221]
 a290(r391): [222..223]
 a291(r390): [420..421]
 a292(r150): [420..423]
 a293(r389): [422..423]
 a294(r388): [424..425]
 a295(r132): [426..465]
 a296(r149): [426..427]
 a297(r148): [428..429]
 a298(r147): [430..431]
 a299(r138): [430..453]
 a300(r387): [432..433]
 a301(r146): [432..433]
 a302(r145): [434..435]
 a303(r144): [436..437]
 a304(r386): [436..437]
 a305(r143): [438..439]
 a306(r142): [440..441]
 a307(r141): [442..443]
 a308(r385): [444..445]
 a309(r384): [446..447]
 a310(r140): [448..449]
 a311(r383): [448..449]
 a312(r139): [450..451]
 a313(r382): [452..453]
 a314(r137): [454..455]
 a315(r381): [454..455]
 a316(r136): [456..457]
 a317(r135): [458..459]
 a318(r134): [460..461]
 a319(r133): [462..463]
 a320(r380): [464..465]
 a321(r379): [466..467]
 a322(r378): [468..469]
 a323(r131): [470..471]
 a324(r377): [472..473]
 a325(r130): [472..473]
 a326(r129): [474..475]
 a327(r128): [476..477]
 a328(r376): [478..479]
 a329(r375): [480..481]
 a330(r127): [482..483]
 a331(r374): [484..485]
 a332(r126): [484..485]
 a333(r125): [486..487]
 a334(r124): [488..489]
 a335(r123): [490..491]
 a336(r373): [492..493]
 a337(r122): [494..495]
 a338(r121): [496..497]
 a339(r372): [498..499]
 a340(r120): [500..501]
 a341(r371): [502..503]
 a342(r370): [504..505]
 a343(r119): [504..505]
 a344(r118): [506..507]
 a345(r117): [508..509]
 a346(r108): [508..531]
 a347(r369): [510..511]
 a348(r116): [510..511]
 a349(r115): [512..513]
 a350(r114): [514..515]
 a351(r368): [514..515]
 a352(r113): [516..517]
 a353(r112): [518..519]
 a354(r111): [520..521]
 a355(r367): [522..523]
 a356(r366): [524..525]
 a357(r110): [526..527]
 a358(r365): [526..527]
 a359(r109): [528..529]
 a360(r364): [530..531]
 a361(r107): [532..533]
 a362(r363): [532..533]
 a363(r106): [534..535]
 a364(r105): [536..537]
 a365(r104): [538..539]
 a366(r103): [540..541]
 a367(r362): [542..543]
 a368(r361): [544..545]
 a369(r102): [546..547]
 a370(r360): [548..549]
 a371(r101): [548..549]
 a372(r100): [550..551]
 a373(r99): [552..553]
 a374(r359): [554..555]
 a375(r358): [556..557]
 a376(r98): [558..559]
 a377(r357): [560..561]
 a378(r97): [560..561]
 a379(r96): [562..563]
 a380(r95): [564..565]
 a381(r94): [566..567]
 a382(r356): [568..569]
 a383(r93): [570..571]
 a384(r355): [572..573]
 a385(r92): [574..575]
 a386(r354): [576..577]
 a387(r352): [578..579]
 a388(r353): [580..581]
 a389(r91): [580..581]
 a390(r351): [582..583]
 a391(r350): [584..585]
 a392(r90): [586..587]
 a393(r87): [586..597]
 a394(r89): [588..589]
 a395(r349): [590..591]
 a396(r348): [592..593]
 a397(r88): [594..595]
 a398(r347): [594..595]
 a399(r346): [596..597]
 a400(r345): [598..599]
 a401(r344): [600..601]
 a402(r343): [602..603]
  regions=1, blocks=29, points=604
    allocnos=403 (big 0), copies=0, conflicts=0, ranges=403
Disposition:
  393:r87  l0    22  397:r88  l0     0  394:r89  l0     0  392:r90  l0    21
  389:r91  l0    21  385:r92  l0     0  383:r93  l0     0  381:r94  l0     0
  380:r95  l0     0  379:r96  l0     0  378:r97  l0     1  376:r98  l0     0
  373:r99  l0     0  372:r100 l0     0  371:r101 l0     1  369:r102 l0     0
  366:r103 l0    21  365:r104 l0    21  364:r105 l0    21  363:r106 l0    21
  361:r107 l0    21  346:r108 l0    21  359:r109 l0     0  357:r110 l0     0
  354:r111 l0     0  353:r112 l0    22  352:r113 l0    22  350:r114 l0    22
  349:r115 l0    22  348:r116 l0    22  345:r117 l0    22  344:r118 l0    21
  343:r119 l0    21  340:r120 l0     0  338:r121 l0     0  337:r122 l0     0
  335:r123 l0     0  334:r124 l0     0  333:r125 l0     0  332:r126 l0     1
  330:r127 l0     0  327:r128 l0     0  326:r129 l0     0  325:r130 l0     1
  323:r131 l0     0  295:r132 l0     3  319:r133 l0    21  318:r134 l0    21
  317:r135 l0    21  316:r136 l0    21  314:r137 l0    21  299:r138 l0    21
  312:r139 l0     0  310:r140 l0     0  307:r141 l0     0  306:r142 l0    22
  305:r143 l0    22  303:r144 l0    22  302:r145 l0    22  301:r146 l0    22
  298:r147 l0    22  297:r148 l0    21  296:r149 l0    21  292:r150 l0    21
  289:r151 l0     0  287:r152 l0     0  285:r153 l0     0  283:r154 l0     0
  282:r155 l0     1  253:r156 l0     3  279:r157 l0     0  278:r158 l0     1
  276:r159 l0     0  256:r160 l0   mem  271:r161 l0     0  270:r162 l0    22
  269:r163 l0    21  268:r164 l0    22  267:r165 l0    21  265:r166 l0    21
  264:r167 l0    21  260:r168 l0    22  261:r169 l0    21  259:r170 l0    21
  258:r171 l0    21  257:r172 l0    21  255:r173 l0    21  254:r174 l0    21
  251:r175 l0     0  250:r176 l0     0  249:r177 l0     1  219:r178 l0     3
  246:r179 l0     0  245:r180 l0     0  244:r181 l0     1  242:r182 l0     0
  222:r183 l0   mem  237:r184 l0     0  236:r185 l0    22  235:r186 l0    21
  234:r187 l0    22  233:r188 l0    21  231:r189 l0    21  230:r190 l0    21
  226:r191 l0    22  227:r192 l0    21  225:r193 l0    21  224:r194 l0    21
  223:r195 l0    21  221:r196 l0    21  220:r197 l0    21  217:r198 l0     0
  215:r199 l0     0  214:r200 l0     1  185:r201 l0     3  211:r202 l0     0
  210:r203 l0     1  208:r204 l0     0  188:r205 l0   mem  203:r206 l0     0
  202:r207 l0    22  201:r208 l0    21  200:r209 l0    22  199:r210 l0    21
  197:r211 l0    21  196:r212 l0    21  192:r213 l0    22  193:r214 l0    21
  191:r215 l0    21  190:r216 l0    21  189:r217 l0    21  187:r218 l0    21
  186:r219 l0    21  183:r220 l0     0  182:r221 l0     0  181:r222 l0     1
  151:r223 l0     3  178:r224 l0     0  177:r225 l0     0  176:r226 l0     1
  174:r227 l0     0  154:r228 l0   mem  169:r229 l0     0  168:r230 l0    22
  167:r231 l0    21  166:r232 l0    22  165:r233 l0    21  163:r234 l0    21
  162:r235 l0    21  158:r236 l0    22  159:r237 l0    21  157:r238 l0    21
  156:r239 l0    21  155:r240 l0    21  153:r241 l0    21  152:r242 l0    21
  149:r243 l0     0  147:r244 l0    21  144:r245 l0     0  142:r246 l0     0
  140:r247 l0     0  138:r248 l0     0  137:r249 l0     1  107:r250 l0     3
  134:r251 l0     0  133:r252 l0     1  131:r253 l0     0  110:r254 l0   mem
  126:r255 l0     0  125:r256 l0    22  124:r257 l0    21  123:r258 l0    22
  122:r259 l0    21  120:r260 l0    21  119:r261 l0    21  114:r262 l0    22
  116:r263 l0     0  115:r264 l0    21  113:r265 l0    21  112:r266 l0    21
  111:r267 l0    21  109:r268 l0    21  108:r269 l0    21  105:r270 l0     0
  104:r271 l0     0  103:r272 l0     1   72:r273 l0     3  100:r274 l0     0
   99:r275 l0     0   98:r276 l0     1   96:r277 l0     0   75:r278 l0   mem
   91:r279 l0     0   90:r280 l0    22   89:r281 l0    21   88:r282 l0    22
   87:r283 l0    21   85:r284 l0    21   84:r285 l0    21   79:r286 l0    22
   81:r287 l0     0   80:r288 l0    21   78:r289 l0    21   77:r290 l0    21
   76:r291 l0    21   74:r292 l0    21   73:r293 l0    21   70:r294 l0     0
   68:r295 l0     0   67:r296 l0     1   37:r297 l0     3   64:r298 l0     0
   63:r299 l0     1   61:r300 l0     0   40:r301 l0   mem   56:r302 l0     0
   55:r303 l0    22   54:r304 l0    21   53:r305 l0    22   52:r306 l0    21
   50:r307 l0    21   49:r308 l0    21   44:r309 l0    22   46:r310 l0     0
   45:r311 l0    21   43:r312 l0    21   42:r313 l0    21   41:r314 l0    21
   39:r315 l0    21   38:r316 l0    21   35:r317 l0     0   34:r318 l0     0
   33:r319 l0     1    2:r320 l0     3   30:r321 l0     0   29:r322 l0     0
   28:r323 l0     1   26:r324 l0     0    5:r325 l0   mem   21:r326 l0     0
   20:r327 l0    22   19:r328 l0    21   18:r329 l0    22   17:r330 l0    21
   15:r331 l0    21   14:r332 l0    21    9:r333 l0    22   11:r334 l0     0
   10:r335 l0    21    8:r336 l0    21    7:r337 l0    21    6:r338 l0    21
    4:r339 l0    21    3:r340 l0    21    1:r341 l0     0    0:r342 l0     0
  402:r343 l0    21  401:r344 l0    21  400:r345 l0     0  399:r346 l0     0
  398:r347 l0     1  396:r348 l0     0  395:r349 l0     0  391:r350 l0    21
  390:r351 l0     0  387:r352 l0    21  388:r353 l0    22  386:r354 l0     0
  384:r355 l0     0  382:r356 l0     0  377:r357 l0     0  375:r358 l0    21
  374:r359 l0     0  370:r360 l0     0  368:r361 l0    21  367:r362 l0    21
  362:r363 l0    22  360:r364 l0     0  358:r365 l0     1  356:r366 l0     0
  355:r367 l0     0  351:r368 l0    23  347:r369 l0    23  342:r370 l0     0
  341:r371 l0     0  339:r372 l0     0  336:r373 l0     0  331:r374 l0     0
  329:r375 l0    21  328:r376 l0     0  324:r377 l0     0  322:r378 l0    21
  321:r379 l0     0  320:r380 l0    21  315:r381 l0    22  313:r382 l0     0
  311:r383 l0     1  309:r384 l0     0  308:r385 l0     0  304:r386 l0    23
  300:r387 l0    23  294:r388 l0     0  293:r389 l0    22  291:r390 l0    22
  290:r391 l0     0  288:r392 l0     0  286:r393 l0     0  284:r394 l0     0
  281:r395 l0     0  280:r396 l0     0  277:r397 l0     0  274:r398 l0     0
  275:r399 l0     1  273:r400 l0     0  272:r401 l0     0  266:r402 l0    22
  263:r403 l0    22  262:r404 l0     0  252:r405 l0     0  248:r406 l0     0
  247:r407 l0     0  243:r408 l0     0  240:r409 l0     0  241:r410 l0     1
  239:r411 l0     0  238:r412 l0     0  232:r413 l0    22  229:r414 l0    22
  228:r415 l0     0  218:r416 l0     0  216:r417 l0     0  213:r418 l0     0
  212:r419 l0     0  209:r420 l0     0  206:r421 l0     0  207:r422 l0     1
  205:r423 l0     0  204:r424 l0     0  198:r425 l0    22  195:r426 l0    22
  194:r427 l0     0  184:r428 l0     0  180:r429 l0     0  179:r430 l0     0
  175:r431 l0     0  172:r432 l0     0  173:r433 l0     1  171:r434 l0     0
  170:r435 l0     0  164:r436 l0    22  161:r437 l0    22  160:r438 l0     0
  150:r439 l0     0  148:r440 l0    22  146:r441 l0    22  145:r442 l0     0
  143:r443 l0     0  141:r444 l0     0  139:r445 l0     0  136:r446 l0     0
  135:r447 l0     0  132:r448 l0     0  129:r449 l0     0  130:r450 l0     1
  128:r451 l0     0  127:r452 l0     0  121:r453 l0    22  118:r454 l0    22
  117:r455 l0     0  106:r456 l0     0  102:r457 l0     0  101:r458 l0     0
   97:r459 l0     0   94:r460 l0     0   95:r461 l0     1   93:r462 l0     0
   92:r463 l0     0   86:r464 l0    22   83:r465 l0    22   82:r466 l0     0
   71:r467 l0     0   69:r468 l0     0   66:r469 l0     0   65:r470 l0     0
   62:r471 l0     0   59:r472 l0     0   60:r473 l0     1   58:r474 l0     0
   57:r475 l0     0   51:r476 l0    22   48:r477 l0    22   47:r478 l0     0
   36:r479 l0     0   32:r480 l0     0   31:r481 l0     0   27:r482 l0     0
   24:r483 l0     0   25:r484 l0     1   23:r485 l0     0   22:r486 l0     0
   16:r487 l0    22   13:r488 l0    22   12:r489 l0     0
+++Costs: overall 127, reg 23, mem 104, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int filter(float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={12d,2u} r1={11d,1u} r2={11d,1u} r4={11d,1u} r5={11d,1u} r6={1d,28u} r7={1d,38u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,27u} r17={132d,16u} r18={10d} r19={10d} r20={1d,152u,27e} r21={21d,20u} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,1u} r88={1d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,2u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1e} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u,1e} r156={1d,1u} r157={1d,1u} r158={1d,1u,1e} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u,1e} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u,1e} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u,1e} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u,1e} r201={1d,1u} r202={1d,1u} r203={1d,1u,1e} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u,1e} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u,1e} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u,1e} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u,1e} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,2u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u,1e} r250={1d,1u} r251={1d,1u} r252={1d,1u,1e} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u,1e} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u,1e} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u,1e} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u,1e} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u,1e} r297={1d,1u} r298={1d,1u} r299={1d,1u,1e} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u,1e} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u,1e} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u,1e} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u,1e} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,2u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,2u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,2u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,2u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,1u} r445={1d,1u} r446={1d,1u} r447={1d,1u} r448={1d,1u} r449={1d,2u} r450={1d,1u} r451={1d,1u} r452={1d,1u} r453={1d,1u} r454={1d,1u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={1d,1u} r459={1d,1u} r460={1d,2u} r461={1d,1u} r462={1d,1u} r463={1d,1u} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,1u} r471={1d,1u} r472={1d,2u} r473={1d,1u} r474={1d,1u} r475={1d,1u} r476={1d,1u} r477={1d,1u} r478={1d,1u} r479={1d,1u} r480={1d,1u} r481={1d,1u} r482={1d,1u} r483={1d,2u} r484={1d,1u} r485={1d,1u} r486={1d,1u} r487={1d,1u} r488={1d,1u} r489={1d,1u} 
;;    total ref usage 2037{1275d,703u,59e} in 488{478 regular + 10 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 343 344 345 346 347 348 349 350 351 352 353 354
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) preproc.cpp:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) preproc.cpp:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) preproc.cpp:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) preproc.cpp:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:426 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SF 343)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:428 129 {*movsf_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32])
        (reg:SF 343)) preproc.cpp:428 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 343)
        (nil)))
(insn 12 11 13 2 (set (reg:SF 344)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:428 129 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])
        (reg:SF 344)) preproc.cpp:428 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 344)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:430 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SF 87 [ D.6916 ])
        (mem/j:SF (reg/f:DI 345) [0 procpar_info_15(D)->acquision_time+0 S4 A64])) preproc.cpp:430 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 345)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:430 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 88 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 346)
                (const_int 300 [0x12c])) [0 procpar_info_15(D)->num_points+0 S4 A32])) preproc.cpp:430 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 346)
        (nil)))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 347)
                (lshiftrt:SI (reg:SI 88 [ D.6917 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:430 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 348)
                (plus:SI (reg:SI 347)
                    (reg:SI 88 [ D.6917 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:430 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 347)
        (expr_list:REG_DEAD (reg:SI 88 [ D.6917 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 349)
                (ashiftrt:SI (reg:SI 348)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:430 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 348)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 2 (set (reg:SI 89 [ D.6917 ])
        (reg:SI 349)) preproc.cpp:430 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 349)
        (nil)))
(insn 22 21 23 2 (set (reg:SF 90 [ D.6916 ])
        (float:SF (reg:SI 89 [ D.6917 ]))) preproc.cpp:430 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6917 ])
        (nil)))
(insn 23 22 24 2 (set (reg:SF 350)
        (div:SF (reg:SF 87 [ D.6916 ])
            (reg:SF 90 [ D.6916 ]))) preproc.cpp:430 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 90 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 87 [ D.6916 ])
            (nil))))
(insn 24 23 25 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32])
        (reg:SF 350)) preproc.cpp:430 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 350)
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:431 89 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SF 91 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 351)
                (const_int 48 [0x30])) [0 preprocess_21(D)->pre_delay_time+0 S4 A32])) preproc.cpp:431 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (nil)))
(insn 27 26 28 2 (set (reg:SF 353)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) preproc.cpp:431 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 28 27 29 2 (set (reg:SF 352)
        (div:SF (reg:SF 91 [ D.6916 ])
            (reg:SF 353))) preproc.cpp:431 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 353)
        (expr_list:REG_DEAD (reg:SF 91 [ D.6916 ])
            (nil))))
(insn 29 28 30 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32])
        (reg:SF 352)) preproc.cpp:431 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 352)
        (nil)))
(insn 30 29 31 2 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:437 89 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 92 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 354)
                (const_int 40 [0x28])) [0 preprocess_21(D)->pre_quecc+0 S4 A32])) preproc.cpp:437 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (nil)))
(insn 32 31 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6917 ])
            (const_int 0 [0]))) preproc.cpp:437 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6917 ])
        (nil)))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) preproc.cpp:437 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 86)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 355
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:437 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:SI 93 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 355)
                (const_int 52 [0x34])) [0 preprocess_21(D)->pre_quecc_if+0 S4 A32])) preproc.cpp:437 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (nil)))
(insn 37 36 38 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.6917 ])
            (const_int 1 [0x1]))) preproc.cpp:437 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.6917 ])
        (nil)))
(jump_insn 38 37 39 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) preproc.cpp:437 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 86)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/f:DI 356)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:438 89 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:SI 94 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 356)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:438 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 356)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 95 [ D.6918 ])
        (sign_extend:DI (reg:SI 94 [ D.6917 ]))) preproc.cpp:438 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 94 [ D.6917 ])
        (nil)))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 96 [ D.6918 ])
                (ashift:DI (reg:DI 95 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:438 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 95 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 97 [ D.6919 ])
                (plus:DI (reg:DI 96 [ D.6918 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:438 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 4 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:438 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 98 [ D.6920 ])
                (plus:DI (reg:DI 97 [ D.6919 ])
                    (reg/f:DI 357)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:438 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 357)
        (expr_list:REG_DEAD (reg:DI 97 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 97 [ D.6919 ]))
                    (nil))))))
(insn 47 46 48 4 (set (reg:SF 358)
        (mem:SF (reg/f:DI 98 [ D.6920 ]) [0 *_31+0 S4 A32])) preproc.cpp:438 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.6920 ])
        (nil)))
(insn 48 47 49 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32])
        (reg:SF 358)) preproc.cpp:438 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 358)
        (nil)))
(insn 49 48 50 4 (set (reg/f:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:439 89 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:SI 99 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 359)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:439 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 359)
        (nil)))
(insn 51 50 52 4 (set (reg:DI 100 [ D.6918 ])
        (sign_extend:DI (reg:SI 99 [ D.6917 ]))) preproc.cpp:439 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99 [ D.6917 ])
        (nil)))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 101 [ D.6918 ])
                (ashift:DI (reg:DI 100 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:439 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 4 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:439 89 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg/f:DI 102 [ D.6920 ])
                (plus:DI (reg:DI 101 [ D.6918 ])
                    (reg/f:DI 360)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:439 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (expr_list:REG_DEAD (reg:DI 101 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 101 [ D.6918 ]))
                    (nil))))))
(insn 55 54 56 4 (set (reg:SF 361)
        (mem:SF (reg/f:DI 102 [ D.6920 ]) [0 *_36+0 S4 A32])) preproc.cpp:439 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.6920 ])
        (nil)))
(insn 56 55 57 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])
        (reg:SF 361)) preproc.cpp:439 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 361)
        (nil)))
(insn 57 56 58 4 (set (reg:SF 362)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])) preproc.cpp:441 129 {*movsf_internal}
     (nil))
(insn 58 57 59 4 (set (reg:SF 103 [ D.6916 ])
        (div:SF (reg:SF 362)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32]))) preproc.cpp:441 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 362)
        (nil)))
(insn 59 58 60 4 (set (reg:DF 104 [ D.6921 ])
        (float_extend:DF (reg:SF 103 [ D.6916 ]))) preproc.cpp:441 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 103 [ D.6916 ])
        (nil)))
(insn 60 59 61 4 (set (reg:DF 21 xmm0)
        (reg:DF 104 [ D.6921 ])) preproc.cpp:441 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 104 [ D.6921 ])
        (nil)))
(call_insn 61 60 62 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7fe499b56d80 log>) [0 __builtin_log S1 A8])
            (const_int 0 [0]))) preproc.cpp:441 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 62 61 63 4 (set (reg:DF 105 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:441 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 63 62 64 4 (set (reg:SF 106 [ D.6916 ])
        (float_truncate:SF (reg:DF 105 [ D.6921 ]))) preproc.cpp:441 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 105 [ D.6921 ])
        (nil)))
(insn 64 63 65 4 (set (reg:DF 107 [ D.6921 ])
        (float_extend:DF (reg:SF 106 [ D.6916 ]))) preproc.cpp:441 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 106 [ D.6916 ])
        (nil)))
(insn 65 64 66 4 (set (reg:V2DF 363)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) preproc.cpp:441 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 66 65 67 4 (parallel [
            (set (reg:DF 108 [ D.6921 ])
                (neg:DF (reg:DF 107 [ D.6921 ])))
            (use (reg:V2DF 363))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:441 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 363)
        (expr_list:REG_DEAD (reg:DF 107 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:DF (reg:DF 107 [ D.6921 ]))
                    (nil))))))
(insn 67 66 68 4 (set (reg/f:DI 364)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:442 89 {*movdi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:SI 109 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 364)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:442 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 364)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:SI 110 [ D.6917 ])
                (plus:SI (reg:SI 109 [ D.6917 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:442 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.6917 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 4 (parallel [
            (set (reg:SI 365)
                (lshiftrt:SI (reg:SI 110 [ D.6917 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:442 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 4 (parallel [
            (set (reg:SI 366)
                (plus:SI (reg:SI 365)
                    (reg:SI 110 [ D.6917 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:442 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 365)
        (expr_list:REG_DEAD (reg:SI 110 [ D.6917 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 72 71 73 4 (parallel [
            (set (reg:SI 367)
                (ashiftrt:SI (reg:SI 366)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:442 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 366)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 73 72 74 4 (set (reg:SI 111 [ D.6917 ])
        (reg:SI 367)) preproc.cpp:442 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 367)
        (nil)))
(insn 74 73 75 4 (set (reg:SF 112 [ D.6916 ])
        (float:SF (reg:SI 111 [ D.6917 ]))) preproc.cpp:442 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 111 [ D.6917 ])
        (nil)))
(insn 75 74 76 4 (set (reg:SF 113 [ D.6916 ])
        (mult:SF (reg:SF 112 [ D.6916 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:442 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 112 [ D.6916 ])
        (nil)))
(insn 76 75 77 4 (set (reg:SF 114 [ D.6916 ])
        (plus:SF (reg:SF 113 [ D.6916 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:442 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 113 [ D.6916 ])
        (nil)))
(insn 77 76 78 4 (set (reg:V4SF 368)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:442 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 78 77 79 4 (parallel [
            (set (reg:SF 115 [ D.6916 ])
                (abs:SF (reg:SF 114 [ D.6916 ])))
            (use (reg:V4SF 368))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:442 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 368)
        (expr_list:REG_DEAD (reg:SF 114 [ D.6916 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 114 [ D.6916 ]))
                    (nil))))))
(insn 79 78 80 4 (set (reg:DF 116 [ D.6921 ])
        (float_extend:DF (reg:SF 115 [ D.6916 ]))) preproc.cpp:442 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 115 [ D.6916 ])
        (nil)))
(insn 80 79 81 4 (set (reg:DF 369)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S8 A64])) preproc.cpp:442 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 81 80 82 4 (set (reg:DF 117 [ D.6921 ])
        (mult:DF (reg:DF 116 [ D.6921 ])
            (reg:DF 369))) preproc.cpp:442 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 369)
        (expr_list:REG_DEAD (reg:DF 116 [ D.6921 ])
            (nil))))
(insn 82 81 83 4 (set (reg:DF 118 [ D.6921 ])
        (div:DF (reg:DF 108 [ D.6921 ])
            (reg:DF 117 [ D.6921 ]))) preproc.cpp:441 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 117 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 108 [ D.6921 ])
            (nil))))
(insn 83 82 84 4 (set (reg:SF 119 [ D.6916 ])
        (float_truncate:SF (reg:DF 118 [ D.6921 ]))) preproc.cpp:442 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 118 [ D.6921 ])
        (nil)))
(insn 84 83 85 4 (set (reg/f:DI 370)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:442 89 {*movdi_internal}
     (nil))
(insn 85 84 86 4 (set (mem/j:SF (plus:DI (reg/f:DI 370)
                (const_int 28 [0x1c])) [0 preprocess_21(D)->comp_filter+0 S4 A32])
        (reg:SF 119 [ D.6916 ])) preproc.cpp:442 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 370)
        (expr_list:REG_DEAD (reg:SF 119 [ D.6916 ])
            (nil))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 371
(code_label 86 85 87 5 77 "" [2 uses])
(note 87 86 88 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 5 (set (reg/f:DI 371)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:445 89 {*movdi_internal}
     (nil))
(insn 89 88 90 5 (set (reg:SI 120 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 371)
                (const_int 40 [0x28])) [0 preprocess_21(D)->pre_quecc+0 S4 A32])) preproc.cpp:445 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 371)
        (nil)))
(insn 90 89 91 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.6917 ])
            (const_int 0 [0]))) preproc.cpp:445 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 120 [ D.6917 ])
        (nil)))
(jump_insn 91 90 92 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) preproc.cpp:445 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 146)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121 122 372
(note 92 91 93 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 6 (set (reg/f:DI 372)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:445 89 {*movdi_internal}
     (nil))
(insn 94 93 95 6 (parallel [
            (set (reg/f:DI 121 [ D.6922 ])
                (plus:DI (reg/f:DI 372)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:445 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 372)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 95 94 96 6 (set (reg:SI 122 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 121 [ D.6922 ])
                (const_int 52 [0x34])) [0 _58->pre_quecc_if+0 S4 A32])) preproc.cpp:445 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.6922 ])
        (nil)))
(insn 96 95 97 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.6917 ])
            (const_int 1 [0x1]))) preproc.cpp:445 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ D.6917 ])
        (nil)))
(jump_insn 97 96 98 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) preproc.cpp:445 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 146)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387
(note 98 97 99 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 7 (set (reg/f:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:446 89 {*movdi_internal}
     (nil))
(insn 100 99 101 7 (set (reg:SI 123 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 373)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:446 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 373)
        (nil)))
(insn 101 100 102 7 (set (reg:DI 124 [ D.6918 ])
        (sign_extend:DI (reg:SI 123 [ D.6917 ]))) preproc.cpp:446 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ D.6917 ])
        (nil)))
(insn 102 101 103 7 (parallel [
            (set (reg:DI 125 [ D.6918 ])
                (ashift:DI (reg:DI 124 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:446 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 7 (parallel [
            (set (reg:DI 126 [ D.6919 ])
                (plus:DI (reg:DI 125 [ D.6918 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:446 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 7 (set (reg/f:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:446 89 {*movdi_internal}
     (nil))
(insn 105 104 106 7 (parallel [
            (set (reg/f:DI 127 [ D.6920 ])
                (plus:DI (reg:DI 126 [ D.6919 ])
                    (reg/f:DI 374)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:446 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 374)
        (expr_list:REG_DEAD (reg:DI 126 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 126 [ D.6919 ]))
                    (nil))))))
(insn 106 105 107 7 (set (reg:SF 375)
        (mem:SF (reg/f:DI 127 [ D.6920 ]) [0 *_64+0 S4 A32])) preproc.cpp:446 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.6920 ])
        (nil)))
(insn 107 106 108 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32])
        (reg:SF 375)) preproc.cpp:446 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 375)
        (nil)))
(insn 108 107 109 7 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:447 89 {*movdi_internal}
     (nil))
(insn 109 108 110 7 (set (reg:SI 128 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 376)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:447 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 376)
        (nil)))
(insn 110 109 111 7 (set (reg:DI 129 [ D.6918 ])
        (sign_extend:DI (reg:SI 128 [ D.6917 ]))) preproc.cpp:447 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128 [ D.6917 ])
        (nil)))
(insn 111 110 112 7 (parallel [
            (set (reg:DI 130 [ D.6918 ])
                (ashift:DI (reg:DI 129 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:447 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 7 (set (reg/f:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:447 89 {*movdi_internal}
     (nil))
(insn 113 112 114 7 (parallel [
            (set (reg/f:DI 131 [ D.6920 ])
                (plus:DI (reg:DI 130 [ D.6918 ])
                    (reg/f:DI 377)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:447 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 377)
        (expr_list:REG_DEAD (reg:DI 130 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 130 [ D.6918 ]))
                    (nil))))))
(insn 114 113 115 7 (set (reg:SF 378)
        (mem:SF (reg/f:DI 131 [ D.6920 ]) [0 *_69+0 S4 A32])) preproc.cpp:447 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.6920 ])
        (nil)))
(insn 115 114 116 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])
        (reg:SF 378)) preproc.cpp:447 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 378)
        (nil)))
(insn 116 115 117 7 (set (reg/f:DI 379)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:449 89 {*movdi_internal}
     (nil))
(insn 117 116 118 7 (parallel [
            (set (reg/f:DI 132 [ D.6922 ])
                (plus:DI (reg/f:DI 379)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:449 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 379)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 118 117 119 7 (set (reg:SF 380)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])) preproc.cpp:449 129 {*movsf_internal}
     (nil))
(insn 119 118 120 7 (set (reg:SF 133 [ D.6916 ])
        (div:SF (reg:SF 380)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32]))) preproc.cpp:449 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 380)
        (nil)))
(insn 120 119 121 7 (set (reg:DF 134 [ D.6921 ])
        (float_extend:DF (reg:SF 133 [ D.6916 ]))) preproc.cpp:449 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.6916 ])
        (nil)))
(insn 121 120 122 7 (set (reg:DF 21 xmm0)
        (reg:DF 134 [ D.6921 ])) preproc.cpp:449 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 134 [ D.6921 ])
        (nil)))
(call_insn 122 121 123 7 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7fe499b56d80 log>) [0 __builtin_log S1 A8])
            (const_int 0 [0]))) preproc.cpp:449 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 123 122 124 7 (set (reg:DF 135 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:449 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 124 123 125 7 (set (reg:SF 136 [ D.6916 ])
        (float_truncate:SF (reg:DF 135 [ D.6921 ]))) preproc.cpp:449 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 135 [ D.6921 ])
        (nil)))
(insn 125 124 126 7 (set (reg:DF 137 [ D.6921 ])
        (float_extend:DF (reg:SF 136 [ D.6916 ]))) preproc.cpp:449 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 136 [ D.6916 ])
        (nil)))
(insn 126 125 127 7 (set (reg:V2DF 381)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) preproc.cpp:449 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 127 126 128 7 (parallel [
            (set (reg:DF 138 [ D.6921 ])
                (neg:DF (reg:DF 137 [ D.6921 ])))
            (use (reg:V2DF 381))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:449 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 381)
        (expr_list:REG_DEAD (reg:DF 137 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:DF (reg:DF 137 [ D.6921 ]))
                    (nil))))))
(insn 128 127 129 7 (set (reg/f:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:450 89 {*movdi_internal}
     (nil))
(insn 129 128 130 7 (set (reg:SI 139 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 382)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:450 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 382)
        (nil)))
(insn 130 129 131 7 (parallel [
            (set (reg:SI 140 [ D.6917 ])
                (plus:SI (reg:SI 139 [ D.6917 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:450 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 139 [ D.6917 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 131 130 132 7 (parallel [
            (set (reg:SI 383)
                (lshiftrt:SI (reg:SI 140 [ D.6917 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:450 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 133 7 (parallel [
            (set (reg:SI 384)
                (plus:SI (reg:SI 383)
                    (reg:SI 140 [ D.6917 ])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:450 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 383)
        (expr_list:REG_DEAD (reg:SI 140 [ D.6917 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 133 132 134 7 (parallel [
            (set (reg:SI 385)
                (ashiftrt:SI (reg:SI 384)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:450 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 384)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 7 (set (reg:SI 141 [ D.6917 ])
        (reg:SI 385)) preproc.cpp:450 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 385)
        (nil)))
(insn 135 134 136 7 (set (reg:SF 142 [ D.6916 ])
        (float:SF (reg:SI 141 [ D.6917 ]))) preproc.cpp:450 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 141 [ D.6917 ])
        (nil)))
(insn 136 135 137 7 (set (reg:SF 143 [ D.6916 ])
        (mult:SF (reg:SF 142 [ D.6916 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:450 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 142 [ D.6916 ])
        (nil)))
(insn 137 136 138 7 (set (reg:SF 144 [ D.6916 ])
        (plus:SF (reg:SF 143 [ D.6916 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:450 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 143 [ D.6916 ])
        (nil)))
(insn 138 137 139 7 (set (reg:V4SF 386)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) preproc.cpp:450 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 139 138 140 7 (parallel [
            (set (reg:SF 145 [ D.6916 ])
                (abs:SF (reg:SF 144 [ D.6916 ])))
            (use (reg:V4SF 386))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:450 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 386)
        (expr_list:REG_DEAD (reg:SF 144 [ D.6916 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 144 [ D.6916 ]))
                    (nil))))))
(insn 140 139 141 7 (set (reg:DF 146 [ D.6921 ])
        (float_extend:DF (reg:SF 145 [ D.6916 ]))) preproc.cpp:450 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 145 [ D.6916 ])
        (nil)))
(insn 141 140 142 7 (set (reg:DF 387)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S8 A64])) preproc.cpp:450 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 142 141 143 7 (set (reg:DF 147 [ D.6921 ])
        (mult:DF (reg:DF 146 [ D.6921 ])
            (reg:DF 387))) preproc.cpp:450 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 387)
        (expr_list:REG_DEAD (reg:DF 146 [ D.6921 ])
            (nil))))
(insn 143 142 144 7 (set (reg:DF 148 [ D.6921 ])
        (div:DF (reg:DF 138 [ D.6921 ])
            (reg:DF 147 [ D.6921 ]))) preproc.cpp:449 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 138 [ D.6921 ])
            (nil))))
(insn 144 143 145 7 (set (reg:SF 149 [ D.6916 ])
        (float_truncate:SF (reg:DF 148 [ D.6921 ]))) preproc.cpp:450 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 148 [ D.6921 ])
        (nil)))
(insn 145 144 146 7 (set (mem/j:SF (plus:DI (reg/f:DI 132 [ D.6922 ])
                (const_int 28 [0x1c])) [0 _71->comp_filter+0 S4 A32])
        (reg:SF 149 [ D.6916 ])) preproc.cpp:450 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 149 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 132 [ D.6922 ])
            (nil))))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 150 388 389
(code_label 146 145 147 8 78 "" [2 uses])
(note 147 146 148 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 8 (set (reg/f:DI 388)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:455 89 {*movdi_internal}
     (nil))
(insn 149 148 150 8 (set (reg:SF 150 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 388)
                (const_int 28 [0x1c])) [0 preprocess_21(D)->comp_filter+0 S4 A32])) preproc.cpp:455 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 388)
        (nil)))
(insn 150 149 151 8 (set (reg:SF 389)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:455 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 151 150 152 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 150 [ D.6916 ])
            (reg:SF 389))) preproc.cpp:455 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 389)
        (nil)))
(jump_insn 152 151 543 8 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 549)
            (pc))) preproc.cpp:455 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 549)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags] 390
(note 543 152 153 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 153 543 154 9 (set (reg:SF 390)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:455 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 154 153 155 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 150 [ D.6916 ])
            (reg:SF 390))) preproc.cpp:455 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 390)
        (expr_list:REG_DEAD (reg:SF 150 [ D.6916 ])
            (nil))))
(jump_insn 155 154 549 9 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 336)
            (pc))) preproc.cpp:455 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 336)
;;  succ:       10 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 549 155 159 10 90 "" [1 uses])
(note 159 549 160 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 333 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:457 90 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              17 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 151 391
(code_label 333 160 161 11 83 "" [1 uses])
(note 161 333 162 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 11 (set (reg/f:DI 391)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:457 89 {*movdi_internal}
     (nil))
(insn 163 162 164 11 (set (reg:SI 151 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 391)
                (const_int 300 [0x12c])) [0 procpar_info_15(D)->num_points+0 S4 A32])) preproc.cpp:457 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 391)
        (nil)))
(insn 164 163 165 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 151 [ D.6917 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) preproc.cpp:457 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 151 [ D.6917 ])
        (nil)))
(jump_insn 165 164 166 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) preproc.cpp:457 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 336)
;;  succ:       18
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 152 392
(note 166 165 167 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 12 (set (reg/f:DI 392)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:458 89 {*movdi_internal}
     (nil))
(insn 168 167 169 12 (set (reg:SI 152 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 392)
                (const_int 40 [0x28])) [0 preprocess_21(D)->pre_quecc+0 S4 A32])) preproc.cpp:458 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 392)
        (nil)))
(insn 169 168 170 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.6917 ])
            (const_int 0 [0]))) preproc.cpp:458 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 152 [ D.6917 ])
        (nil)))
(jump_insn 170 169 171 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 251)
            (pc))) preproc.cpp:458 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 251)
;;  succ:       13 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 393
(note 171 170 172 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 13 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:458 89 {*movdi_internal}
     (nil))
(insn 173 172 174 13 (set (reg:SI 153 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 393)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:458 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 393)
        (nil)))
(insn 174 173 175 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 153 [ D.6917 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) preproc.cpp:458 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 153 [ D.6917 ])
        (nil)))
(jump_insn 175 174 176 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 251)
            (pc))) preproc.cpp:458 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 251)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415
(note 176 175 177 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 14 (set (reg:SI 394)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:459 90 {*movsi_internal}
     (nil))
(insn 178 177 179 14 (set (reg:DI 154 [ D.6918 ])
        (sign_extend:DI (reg:SI 394))) preproc.cpp:459 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 394)
        (nil)))
(insn 179 178 180 14 (parallel [
            (set (reg:DI 155 [ D.6918 ])
                (ashift:DI (reg:DI 154 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 14 (set (reg/f:DI 395)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:459 89 {*movdi_internal}
     (nil))
(insn 181 180 182 14 (parallel [
            (set (reg/f:DI 156 [ D.6920 ])
                (plus:DI (reg:DI 155 [ D.6918 ])
                    (reg/f:DI 395)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (expr_list:REG_DEAD (reg:DI 155 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 155 [ D.6918 ]))
                    (nil))))))
(insn 182 181 183 14 (set (reg:SI 396)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:459 90 {*movsi_internal}
     (nil))
(insn 183 182 184 14 (set (reg:DI 157 [ D.6918 ])
        (sign_extend:DI (reg:SI 396))) preproc.cpp:459 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 396)
        (nil)))
(insn 184 183 185 14 (parallel [
            (set (reg:DI 158 [ D.6918 ])
                (ashift:DI (reg:DI 157 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 14 (set (reg/f:DI 397)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:459 89 {*movdi_internal}
     (nil))
(insn 186 185 187 14 (parallel [
            (set (reg/f:DI 159 [ D.6920 ])
                (plus:DI (reg:DI 158 [ D.6918 ])
                    (reg/f:DI 397)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 397)
        (expr_list:REG_DEAD (reg:DI 158 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 158 [ D.6918 ]))
                    (nil))))))
(insn 187 186 188 14 (set (reg:SF 160 [ D.6916 ])
        (mem:SF (reg/f:DI 159 [ D.6920 ]) [0 *_102+0 S4 A32])) preproc.cpp:459 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.6920 ])
        (nil)))
(insn 188 187 189 14 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:459 90 {*movsi_internal}
     (nil))
(insn 189 188 190 14 (parallel [
            (set (reg:SI 399)
                (lshiftrt:SI (reg:SI 398)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 14 (parallel [
            (set (reg:SI 400)
                (plus:SI (reg:SI 399)
                    (reg:SI 398)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 399)
        (expr_list:REG_DEAD (reg:SI 398)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 191 190 192 14 (parallel [
            (set (reg:SI 401)
                (ashiftrt:SI (reg:SI 400)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 400)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 14 (set (reg:SI 161 [ D.6917 ])
        (reg:SI 401)) preproc.cpp:459 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 401)
        (nil)))
(insn 193 192 194 14 (set (reg:DF 162 [ D.6921 ])
        (float:DF (reg:SI 161 [ D.6917 ]))) preproc.cpp:459 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 161 [ D.6917 ])
        (nil)))
(insn 194 193 195 14 (set (reg:DF 163 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:459 152 {*extendsfdf2_sse}
     (nil))
(insn 195 194 196 14 (set (reg:DF 164 [ D.6921 ])
        (mult:DF (reg:DF 162 [ D.6921 ])
            (reg:DF 163 [ D.6921 ]))) preproc.cpp:459 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 163 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 162 [ D.6921 ])
            (nil))))
(insn 196 195 197 14 (set (reg:DF 165 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:459 152 {*extendsfdf2_sse}
     (nil))
(insn 197 196 198 14 (set (reg:DF 166 [ D.6921 ])
        (plus:DF (reg:DF 164 [ D.6921 ])
            (reg:DF 165 [ D.6921 ]))) preproc.cpp:459 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 165 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 164 [ D.6921 ])
            (nil))))
(insn 198 197 199 14 (set (reg:V2DF 402)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:459 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 199 198 200 14 (parallel [
            (set (reg:DF 167 [ D.6921 ])
                (abs:DF (reg:DF 166 [ D.6921 ])))
            (use (reg:V2DF 402))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:459 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 402)
        (expr_list:REG_DEAD (reg:DF 166 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 166 [ D.6921 ]))
                    (nil))))))
(insn 200 199 201 14 (set (reg:DF 403)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:459 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 201 200 202 14 (set (reg:DF 168 [ D.6921 ])
        (mult:DF (reg:DF 167 [ D.6921 ])
            (reg:DF 403))) preproc.cpp:459 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 403)
        (expr_list:REG_DEAD (reg:DF 167 [ D.6921 ])
            (nil))))
(insn 202 201 203 14 (set (reg/f:DI 404)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:459 89 {*movdi_internal}
     (nil))
(insn 203 202 204 14 (set (reg:SF 169 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 404)
                (const_int 28 [0x1c])) [0 preprocess_21(D)->comp_filter+0 S4 A32])) preproc.cpp:459 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 404)
        (nil)))
(insn 204 203 205 14 (set (reg:DF 170 [ D.6921 ])
        (float_extend:DF (reg:SF 169 [ D.6916 ]))) preproc.cpp:459 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 169 [ D.6916 ])
        (nil)))
(insn 205 204 206 14 (set (reg:DF 171 [ D.6921 ])
        (mult:DF (reg:DF 168 [ D.6921 ])
            (reg:DF 170 [ D.6921 ]))) preproc.cpp:459 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 170 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 168 [ D.6921 ])
            (nil))))
(insn 206 205 207 14 (set (reg:DF 21 xmm0)
        (reg:DF 171 [ D.6921 ])) preproc.cpp:459 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 171 [ D.6921 ])
        (nil)))
(call_insn 207 206 208 14 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:459 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 208 207 209 14 (set (reg:DF 172 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:459 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 209 208 210 14 (set (reg:SF 173 [ D.6916 ])
        (float_truncate:SF (reg:DF 172 [ D.6921 ]))) preproc.cpp:459 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 172 [ D.6921 ])
        (nil)))
(insn 210 209 211 14 (set (reg:SF 174 [ D.6916 ])
        (mult:SF (reg:SF 160 [ D.6916 ])
            (reg:SF 173 [ D.6916 ]))) preproc.cpp:459 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 173 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 160 [ D.6916 ])
            (nil))))
(insn 211 210 212 14 (set (mem:SF (reg/f:DI 156 [ D.6920 ]) [0 *_99+0 S4 A32])
        (reg:SF 174 [ D.6916 ])) preproc.cpp:459 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 174 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 156 [ D.6920 ])
            (nil))))
(insn 212 211 213 14 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:460 90 {*movsi_internal}
     (nil))
(insn 213 212 214 14 (set (reg:DI 175 [ D.6919 ])
        (sign_extend:DI (reg:SI 405))) preproc.cpp:460 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 405)
        (nil)))
(insn 214 213 215 14 (parallel [
            (set (reg:DI 176 [ D.6919 ])
                (plus:DI (reg:DI 175 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 175 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 215 214 216 14 (parallel [
            (set (reg:DI 177 [ D.6919 ])
                (ashift:DI (reg:DI 176 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 176 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 14 (set (reg/f:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:460 89 {*movdi_internal}
     (nil))
(insn 217 216 218 14 (parallel [
            (set (reg/f:DI 178 [ D.6920 ])
                (plus:DI (reg:DI 177 [ D.6919 ])
                    (reg/f:DI 406)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 406)
        (expr_list:REG_DEAD (reg:DI 177 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 177 [ D.6919 ]))
                    (nil))))))
(insn 218 217 219 14 (set (reg:SI 407)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:460 90 {*movsi_internal}
     (nil))
(insn 219 218 220 14 (set (reg:DI 179 [ D.6919 ])
        (sign_extend:DI (reg:SI 407))) preproc.cpp:460 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 407)
        (nil)))
(insn 220 219 221 14 (parallel [
            (set (reg:DI 180 [ D.6919 ])
                (plus:DI (reg:DI 179 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 14 (parallel [
            (set (reg:DI 181 [ D.6919 ])
                (ashift:DI (reg:DI 180 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 180 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 222 221 223 14 (set (reg/f:DI 408)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:460 89 {*movdi_internal}
     (nil))
(insn 223 222 224 14 (parallel [
            (set (reg/f:DI 182 [ D.6920 ])
                (plus:DI (reg:DI 181 [ D.6919 ])
                    (reg/f:DI 408)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 408)
        (expr_list:REG_DEAD (reg:DI 181 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 181 [ D.6919 ]))
                    (nil))))))
(insn 224 223 225 14 (set (reg:SF 183 [ D.6916 ])
        (mem:SF (reg/f:DI 182 [ D.6920 ]) [0 *_127+0 S4 A32])) preproc.cpp:460 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ D.6920 ])
        (nil)))
(insn 225 224 226 14 (set (reg:SI 409)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:460 90 {*movsi_internal}
     (nil))
(insn 226 225 227 14 (parallel [
            (set (reg:SI 410)
                (lshiftrt:SI (reg:SI 409)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 227 226 228 14 (parallel [
            (set (reg:SI 411)
                (plus:SI (reg:SI 410)
                    (reg:SI 409)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 410)
        (expr_list:REG_DEAD (reg:SI 409)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 228 227 229 14 (parallel [
            (set (reg:SI 412)
                (ashiftrt:SI (reg:SI 411)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 411)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 229 228 230 14 (set (reg:SI 184 [ D.6917 ])
        (reg:SI 412)) preproc.cpp:460 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 412)
        (nil)))
(insn 230 229 231 14 (set (reg:DF 185 [ D.6921 ])
        (float:DF (reg:SI 184 [ D.6917 ]))) preproc.cpp:460 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 184 [ D.6917 ])
        (nil)))
(insn 231 230 232 14 (set (reg:DF 186 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:460 152 {*extendsfdf2_sse}
     (nil))
(insn 232 231 233 14 (set (reg:DF 187 [ D.6921 ])
        (mult:DF (reg:DF 185 [ D.6921 ])
            (reg:DF 186 [ D.6921 ]))) preproc.cpp:460 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 186 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 185 [ D.6921 ])
            (nil))))
(insn 233 232 234 14 (set (reg:DF 188 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:460 152 {*extendsfdf2_sse}
     (nil))
(insn 234 233 235 14 (set (reg:DF 189 [ D.6921 ])
        (plus:DF (reg:DF 187 [ D.6921 ])
            (reg:DF 188 [ D.6921 ]))) preproc.cpp:460 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 188 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 187 [ D.6921 ])
            (nil))))
(insn 235 234 236 14 (set (reg:V2DF 413)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:460 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 236 235 237 14 (parallel [
            (set (reg:DF 190 [ D.6921 ])
                (abs:DF (reg:DF 189 [ D.6921 ])))
            (use (reg:V2DF 413))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:460 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 413)
        (expr_list:REG_DEAD (reg:DF 189 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 189 [ D.6921 ]))
                    (nil))))))
(insn 237 236 238 14 (set (reg:DF 414)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:460 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 238 237 239 14 (set (reg:DF 191 [ D.6921 ])
        (mult:DF (reg:DF 190 [ D.6921 ])
            (reg:DF 414))) preproc.cpp:460 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 414)
        (expr_list:REG_DEAD (reg:DF 190 [ D.6921 ])
            (nil))))
(insn 239 238 240 14 (set (reg/f:DI 415)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:460 89 {*movdi_internal}
     (nil))
(insn 240 239 241 14 (set (reg:SF 192 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 415)
                (const_int 28 [0x1c])) [0 preprocess_21(D)->comp_filter+0 S4 A32])) preproc.cpp:460 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 415)
        (nil)))
(insn 241 240 242 14 (set (reg:DF 193 [ D.6921 ])
        (float_extend:DF (reg:SF 192 [ D.6916 ]))) preproc.cpp:460 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 192 [ D.6916 ])
        (nil)))
(insn 242 241 243 14 (set (reg:DF 194 [ D.6921 ])
        (mult:DF (reg:DF 191 [ D.6921 ])
            (reg:DF 193 [ D.6921 ]))) preproc.cpp:460 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 193 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 191 [ D.6921 ])
            (nil))))
(insn 243 242 244 14 (set (reg:DF 21 xmm0)
        (reg:DF 194 [ D.6921 ])) preproc.cpp:460 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 194 [ D.6921 ])
        (nil)))
(call_insn 244 243 245 14 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:460 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 245 244 246 14 (set (reg:DF 195 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:460 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 246 245 247 14 (set (reg:SF 196 [ D.6916 ])
        (float_truncate:SF (reg:DF 195 [ D.6921 ]))) preproc.cpp:460 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 195 [ D.6921 ])
        (nil)))
(insn 247 246 248 14 (set (reg:SF 197 [ D.6916 ])
        (mult:SF (reg:SF 183 [ D.6916 ])
            (reg:SF 196 [ D.6916 ]))) preproc.cpp:460 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 196 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 183 [ D.6916 ])
            (nil))))
(insn 248 247 551 14 (set (mem:SF (reg/f:DI 178 [ D.6920 ]) [0 *_123+0 S4 A32])
        (reg:SF 197 [ D.6916 ])) preproc.cpp:460 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 197 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 178 [ D.6920 ])
            (nil))))
(jump_insn 551 248 552 14 (set (pc)
        (label_ref 330)) preproc.cpp:460 654 {jump}
     (nil)
 -> 330)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 552 551 251)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 198 416
(code_label 251 552 252 15 81 "" [2 uses])
(note 252 251 253 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 15 (set (reg/f:DI 416)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:461 89 {*movdi_internal}
     (nil))
(insn 254 253 255 15 (set (reg:SI 198 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 416)
                (const_int 40 [0x28])) [0 preprocess_21(D)->pre_quecc+0 S4 A32])) preproc.cpp:461 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 416)
        (nil)))
(insn 255 254 256 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ D.6917 ])
            (const_int 0 [0]))) preproc.cpp:461 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 198 [ D.6917 ])
        (nil)))
(jump_insn 256 255 257 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) preproc.cpp:461 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 330)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438
(note 257 256 258 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 16 (set (reg:SI 417)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:462 90 {*movsi_internal}
     (nil))
(insn 259 258 260 16 (set (reg:DI 199 [ D.6918 ])
        (sign_extend:DI (reg:SI 417))) preproc.cpp:462 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 417)
        (nil)))
(insn 260 259 261 16 (parallel [
            (set (reg:DI 200 [ D.6918 ])
                (ashift:DI (reg:DI 199 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 199 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 261 260 262 16 (set (reg/f:DI 418)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:462 89 {*movdi_internal}
     (nil))
(insn 262 261 263 16 (parallel [
            (set (reg/f:DI 201 [ D.6920 ])
                (plus:DI (reg:DI 200 [ D.6918 ])
                    (reg/f:DI 418)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 418)
        (expr_list:REG_DEAD (reg:DI 200 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 200 [ D.6918 ]))
                    (nil))))))
(insn 263 262 264 16 (set (reg:SI 419)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:462 90 {*movsi_internal}
     (nil))
(insn 264 263 265 16 (set (reg:DI 202 [ D.6918 ])
        (sign_extend:DI (reg:SI 419))) preproc.cpp:462 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 419)
        (nil)))
(insn 265 264 266 16 (parallel [
            (set (reg:DI 203 [ D.6918 ])
                (ashift:DI (reg:DI 202 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 202 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 266 265 267 16 (set (reg/f:DI 420)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:462 89 {*movdi_internal}
     (nil))
(insn 267 266 268 16 (parallel [
            (set (reg/f:DI 204 [ D.6920 ])
                (plus:DI (reg:DI 203 [ D.6918 ])
                    (reg/f:DI 420)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 420)
        (expr_list:REG_DEAD (reg:DI 203 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 203 [ D.6918 ]))
                    (nil))))))
(insn 268 267 269 16 (set (reg:SF 205 [ D.6916 ])
        (mem:SF (reg/f:DI 204 [ D.6920 ]) [0 *_151+0 S4 A32])) preproc.cpp:462 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 204 [ D.6920 ])
        (nil)))
(insn 269 268 270 16 (set (reg:SI 421)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:462 90 {*movsi_internal}
     (nil))
(insn 270 269 271 16 (parallel [
            (set (reg:SI 422)
                (lshiftrt:SI (reg:SI 421)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 271 270 272 16 (parallel [
            (set (reg:SI 423)
                (plus:SI (reg:SI 422)
                    (reg:SI 421)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 422)
        (expr_list:REG_DEAD (reg:SI 421)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 272 271 273 16 (parallel [
            (set (reg:SI 424)
                (ashiftrt:SI (reg:SI 423)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 423)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 273 272 274 16 (set (reg:SI 206 [ D.6917 ])
        (reg:SI 424)) preproc.cpp:462 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 424)
        (nil)))
(insn 274 273 275 16 (set (reg:DF 207 [ D.6921 ])
        (float:DF (reg:SI 206 [ D.6917 ]))) preproc.cpp:462 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 206 [ D.6917 ])
        (nil)))
(insn 275 274 276 16 (set (reg:DF 208 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:462 152 {*extendsfdf2_sse}
     (nil))
(insn 276 275 277 16 (set (reg:DF 209 [ D.6921 ])
        (mult:DF (reg:DF 207 [ D.6921 ])
            (reg:DF 208 [ D.6921 ]))) preproc.cpp:462 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 208 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 207 [ D.6921 ])
            (nil))))
(insn 277 276 278 16 (set (reg:DF 210 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:462 152 {*extendsfdf2_sse}
     (nil))
(insn 278 277 279 16 (set (reg:DF 211 [ D.6921 ])
        (plus:DF (reg:DF 209 [ D.6921 ])
            (reg:DF 210 [ D.6921 ]))) preproc.cpp:462 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 210 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 209 [ D.6921 ])
            (nil))))
(insn 279 278 280 16 (set (reg:V2DF 425)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:462 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 280 279 281 16 (parallel [
            (set (reg:DF 212 [ D.6921 ])
                (abs:DF (reg:DF 211 [ D.6921 ])))
            (use (reg:V2DF 425))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:462 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 425)
        (expr_list:REG_DEAD (reg:DF 211 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 211 [ D.6921 ]))
                    (nil))))))
(insn 281 280 282 16 (set (reg:DF 426)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 282 281 283 16 (set (reg:DF 213 [ D.6921 ])
        (mult:DF (reg:DF 212 [ D.6921 ])
            (reg:DF 426))) preproc.cpp:462 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 426)
        (expr_list:REG_DEAD (reg:DF 212 [ D.6921 ])
            (nil))))
(insn 283 282 284 16 (set (reg/f:DI 427)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:462 89 {*movdi_internal}
     (nil))
(insn 284 283 285 16 (set (reg:SF 214 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 427)
                (const_int 28 [0x1c])) [0 preprocess_21(D)->comp_filter+0 S4 A32])) preproc.cpp:462 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 427)
        (nil)))
(insn 285 284 286 16 (set (reg:DF 215 [ D.6921 ])
        (float_extend:DF (reg:SF 214 [ D.6916 ]))) preproc.cpp:462 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 214 [ D.6916 ])
        (nil)))
(insn 286 285 287 16 (set (reg:DF 216 [ D.6921 ])
        (mult:DF (reg:DF 213 [ D.6921 ])
            (reg:DF 215 [ D.6921 ]))) preproc.cpp:462 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 215 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 213 [ D.6921 ])
            (nil))))
(insn 287 286 288 16 (set (reg:DF 21 xmm0)
        (reg:DF 216 [ D.6921 ])) preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 216 [ D.6921 ])
        (nil)))
(call_insn 288 287 289 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:462 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 289 288 290 16 (set (reg:DF 217 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 290 289 291 16 (set (reg:SF 218 [ D.6916 ])
        (float_truncate:SF (reg:DF 217 [ D.6921 ]))) preproc.cpp:462 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 217 [ D.6921 ])
        (nil)))
(insn 291 290 292 16 (set (reg:SF 219 [ D.6916 ])
        (mult:SF (reg:SF 205 [ D.6916 ])
            (reg:SF 218 [ D.6916 ]))) preproc.cpp:462 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 218 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 205 [ D.6916 ])
            (nil))))
(insn 292 291 293 16 (set (mem:SF (reg/f:DI 201 [ D.6920 ]) [0 *_148+0 S4 A32])
        (reg:SF 219 [ D.6916 ])) preproc.cpp:462 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 219 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 201 [ D.6920 ])
            (nil))))
(insn 293 292 294 16 (set (reg:SI 428)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:463 90 {*movsi_internal}
     (nil))
(insn 294 293 295 16 (set (reg:DI 220 [ D.6919 ])
        (sign_extend:DI (reg:SI 428))) preproc.cpp:463 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 428)
        (nil)))
(insn 295 294 296 16 (parallel [
            (set (reg:DI 221 [ D.6919 ])
                (plus:DI (reg:DI 220 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 296 295 297 16 (parallel [
            (set (reg:DI 222 [ D.6919 ])
                (ashift:DI (reg:DI 221 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 221 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 297 296 298 16 (set (reg/f:DI 429)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:463 89 {*movdi_internal}
     (nil))
(insn 298 297 299 16 (parallel [
            (set (reg/f:DI 223 [ D.6920 ])
                (plus:DI (reg:DI 222 [ D.6919 ])
                    (reg/f:DI 429)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 429)
        (expr_list:REG_DEAD (reg:DI 222 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 222 [ D.6919 ]))
                    (nil))))))
(insn 299 298 300 16 (set (reg:SI 430)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:463 90 {*movsi_internal}
     (nil))
(insn 300 299 301 16 (set (reg:DI 224 [ D.6919 ])
        (sign_extend:DI (reg:SI 430))) preproc.cpp:463 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 430)
        (nil)))
(insn 301 300 302 16 (parallel [
            (set (reg:DI 225 [ D.6919 ])
                (plus:DI (reg:DI 224 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 224 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 302 301 303 16 (parallel [
            (set (reg:DI 226 [ D.6919 ])
                (ashift:DI (reg:DI 225 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 225 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 303 302 304 16 (set (reg/f:DI 431)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) preproc.cpp:463 89 {*movdi_internal}
     (nil))
(insn 304 303 305 16 (parallel [
            (set (reg/f:DI 227 [ D.6920 ])
                (plus:DI (reg:DI 226 [ D.6919 ])
                    (reg/f:DI 431)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 431)
        (expr_list:REG_DEAD (reg:DI 226 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 226 [ D.6919 ]))
                    (nil))))))
(insn 305 304 306 16 (set (reg:SF 228 [ D.6916 ])
        (mem:SF (reg/f:DI 227 [ D.6920 ]) [0 *_176+0 S4 A32])) preproc.cpp:463 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 227 [ D.6920 ])
        (nil)))
(insn 306 305 307 16 (set (reg:SI 432)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:463 90 {*movsi_internal}
     (nil))
(insn 307 306 308 16 (parallel [
            (set (reg:SI 433)
                (lshiftrt:SI (reg:SI 432)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 308 307 309 16 (parallel [
            (set (reg:SI 434)
                (plus:SI (reg:SI 433)
                    (reg:SI 432)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 433)
        (expr_list:REG_DEAD (reg:SI 432)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 309 308 310 16 (parallel [
            (set (reg:SI 435)
                (ashiftrt:SI (reg:SI 434)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 434)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 310 309 311 16 (set (reg:SI 229 [ D.6917 ])
        (reg:SI 435)) preproc.cpp:463 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 435)
        (nil)))
(insn 311 310 312 16 (set (reg:DF 230 [ D.6921 ])
        (float:DF (reg:SI 229 [ D.6917 ]))) preproc.cpp:463 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 229 [ D.6917 ])
        (nil)))
(insn 312 311 313 16 (set (reg:DF 231 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:463 152 {*extendsfdf2_sse}
     (nil))
(insn 313 312 314 16 (set (reg:DF 232 [ D.6921 ])
        (mult:DF (reg:DF 230 [ D.6921 ])
            (reg:DF 231 [ D.6921 ]))) preproc.cpp:463 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 231 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 230 [ D.6921 ])
            (nil))))
(insn 314 313 315 16 (set (reg:DF 233 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:463 152 {*extendsfdf2_sse}
     (nil))
(insn 315 314 316 16 (set (reg:DF 234 [ D.6921 ])
        (plus:DF (reg:DF 232 [ D.6921 ])
            (reg:DF 233 [ D.6921 ]))) preproc.cpp:463 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 233 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 232 [ D.6921 ])
            (nil))))
(insn 316 315 317 16 (set (reg:V2DF 436)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:463 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 317 316 318 16 (parallel [
            (set (reg:DF 235 [ D.6921 ])
                (abs:DF (reg:DF 234 [ D.6921 ])))
            (use (reg:V2DF 436))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:463 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 436)
        (expr_list:REG_DEAD (reg:DF 234 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 234 [ D.6921 ]))
                    (nil))))))
(insn 318 317 319 16 (set (reg:DF 437)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:463 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 319 318 320 16 (set (reg:DF 236 [ D.6921 ])
        (mult:DF (reg:DF 235 [ D.6921 ])
            (reg:DF 437))) preproc.cpp:463 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 437)
        (expr_list:REG_DEAD (reg:DF 235 [ D.6921 ])
            (nil))))
(insn 320 319 321 16 (set (reg/f:DI 438)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:463 89 {*movdi_internal}
     (nil))
(insn 321 320 322 16 (set (reg:SF 237 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 438)
                (const_int 28 [0x1c])) [0 preprocess_21(D)->comp_filter+0 S4 A32])) preproc.cpp:463 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 438)
        (nil)))
(insn 322 321 323 16 (set (reg:DF 238 [ D.6921 ])
        (float_extend:DF (reg:SF 237 [ D.6916 ]))) preproc.cpp:463 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 237 [ D.6916 ])
        (nil)))
(insn 323 322 324 16 (set (reg:DF 239 [ D.6921 ])
        (mult:DF (reg:DF 236 [ D.6921 ])
            (reg:DF 238 [ D.6921 ]))) preproc.cpp:463 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 238 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 236 [ D.6921 ])
            (nil))))
(insn 324 323 325 16 (set (reg:DF 21 xmm0)
        (reg:DF 239 [ D.6921 ])) preproc.cpp:463 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 239 [ D.6921 ])
        (nil)))
(call_insn 325 324 326 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:463 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 326 325 327 16 (set (reg:DF 240 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:463 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 327 326 328 16 (set (reg:SF 241 [ D.6916 ])
        (float_truncate:SF (reg:DF 240 [ D.6921 ]))) preproc.cpp:463 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 240 [ D.6921 ])
        (nil)))
(insn 328 327 329 16 (set (reg:SF 242 [ D.6916 ])
        (mult:SF (reg:SF 228 [ D.6916 ])
            (reg:SF 241 [ D.6916 ]))) preproc.cpp:463 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 241 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 228 [ D.6916 ])
            (nil))))
(insn 329 328 330 16 (set (mem:SF (reg/f:DI 223 [ D.6920 ]) [0 *_172+0 S4 A32])
        (reg:SF 242 [ D.6916 ])) preproc.cpp:463 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 242 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 223 [ D.6920 ])
            (nil))))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              15
;;              14 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 330 329 331 17 82 "" [2 uses])
(note 331 330 332 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 553 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:457 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 553 332 554 17 (set (pc)
        (label_ref 333)) preproc.cpp:457 654 {jump}
     (nil)
 -> 333)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 554 553 336)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              9
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 243 244 439 440
(code_label 336 554 337 18 79 "" [2 uses])
(note 337 336 338 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 18 (set (reg/f:DI 439)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:469 89 {*movdi_internal}
     (nil))
(insn 339 338 340 18 (parallel [
            (set (reg/f:DI 243 [ D.6922 ])
                (plus:DI (reg/f:DI 439)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:469 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 439)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 340 339 341 18 (set (reg:SF 244 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 243 [ D.6922 ])
                (const_int 28 [0x1c])) [0 _195->comp_filter+0 S4 A32])) preproc.cpp:469 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 243 [ D.6922 ])
        (nil)))
(insn 341 340 342 18 (set (reg:SF 440)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:469 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 342 341 343 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 244 [ D.6916 ])
            (reg:SF 440))) preproc.cpp:469 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 440)
        (nil)))
(jump_insn 343 342 546 18 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 550)
            (pc))) preproc.cpp:469 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 550)
;;  succ:       20
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244
;; lr  def 	 17 [flags] 441
(note 546 343 344 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 344 546 345 19 (set (reg:SF 441)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) preproc.cpp:469 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 345 344 346 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 244 [ D.6916 ])
            (reg:SF 441))) preproc.cpp:469 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 441)
        (expr_list:REG_DEAD (reg:SF 244 [ D.6916 ])
            (nil))))
(jump_insn 346 345 550 19 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 531)
            (pc))) preproc.cpp:469 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 531)
;;  succ:       20 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 550 346 350 20 91 "" [1 uses])
(note 350 550 351 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 528 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:471 90 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              27 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 245 442
(code_label 528 351 352 21 88 "" [1 uses])
(note 352 528 353 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 21 (set (reg/f:DI 442)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) preproc.cpp:471 89 {*movdi_internal}
     (nil))
(insn 354 353 355 21 (set (reg:SI 245 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 442)
                (const_int 300 [0x12c])) [0 procpar_info_15(D)->num_points+0 S4 A32])) preproc.cpp:471 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 442)
        (nil)))
(insn 355 354 356 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 245 [ D.6917 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) preproc.cpp:471 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 245 [ D.6917 ])
        (nil)))
(jump_insn 356 355 357 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 531)
            (pc))) preproc.cpp:471 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 531)
;;  succ:       28
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 246 443
(note 357 356 358 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 22 (set (reg/f:DI 443)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:472 89 {*movdi_internal}
     (nil))
(insn 359 358 360 22 (set (reg:SI 246 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 443)
                (const_int 40 [0x28])) [0 preprocess_21(D)->pre_quecc+0 S4 A32])) preproc.cpp:472 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 443)
        (nil)))
(insn 360 359 361 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 246 [ D.6917 ])
            (const_int 0 [0]))) preproc.cpp:472 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 246 [ D.6917 ])
        (nil)))
(jump_insn 361 360 362 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 444)
            (pc))) preproc.cpp:472 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 444)
;;  succ:       23 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 247 444
(note 362 361 363 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 23 (set (reg/f:DI 444)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:472 89 {*movdi_internal}
     (nil))
(insn 364 363 365 23 (set (reg:SI 247 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 444)
                (const_int 44 [0x2c])) [0 preprocess_21(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:472 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 444)
        (nil)))
(insn 365 364 366 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 247 [ D.6917 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) preproc.cpp:472 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 247 [ D.6917 ])
        (nil)))
(jump_insn 366 365 367 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 444)
            (pc))) preproc.cpp:472 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 444)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466
(note 367 366 368 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 24 (set (reg:SI 445)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:473 90 {*movsi_internal}
     (nil))
(insn 369 368 370 24 (set (reg:DI 248 [ D.6918 ])
        (sign_extend:DI (reg:SI 445))) preproc.cpp:473 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 445)
        (nil)))
(insn 370 369 371 24 (parallel [
            (set (reg:DI 249 [ D.6918 ])
                (ashift:DI (reg:DI 248 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 248 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 371 370 372 24 (set (reg/f:DI 446)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:473 89 {*movdi_internal}
     (nil))
(insn 372 371 373 24 (parallel [
            (set (reg/f:DI 250 [ D.6920 ])
                (plus:DI (reg:DI 249 [ D.6918 ])
                    (reg/f:DI 446)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 446)
        (expr_list:REG_DEAD (reg:DI 249 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 249 [ D.6918 ]))
                    (nil))))))
(insn 373 372 374 24 (set (reg:SI 447)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:473 90 {*movsi_internal}
     (nil))
(insn 374 373 375 24 (set (reg:DI 251 [ D.6918 ])
        (sign_extend:DI (reg:SI 447))) preproc.cpp:473 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 447)
        (nil)))
(insn 375 374 376 24 (parallel [
            (set (reg:DI 252 [ D.6918 ])
                (ashift:DI (reg:DI 251 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 251 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 376 375 377 24 (set (reg/f:DI 448)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:473 89 {*movdi_internal}
     (nil))
(insn 377 376 378 24 (parallel [
            (set (reg/f:DI 253 [ D.6920 ])
                (plus:DI (reg:DI 252 [ D.6918 ])
                    (reg/f:DI 448)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 448)
        (expr_list:REG_DEAD (reg:DI 252 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 252 [ D.6918 ]))
                    (nil))))))
(insn 378 377 379 24 (set (reg:SF 254 [ D.6916 ])
        (mem:SF (reg/f:DI 253 [ D.6920 ]) [0 *_206+0 S4 A32])) preproc.cpp:473 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ D.6920 ])
        (nil)))
(insn 379 378 380 24 (set (reg:SI 449)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:473 90 {*movsi_internal}
     (nil))
(insn 380 379 381 24 (parallel [
            (set (reg:SI 450)
                (lshiftrt:SI (reg:SI 449)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 381 380 382 24 (parallel [
            (set (reg:SI 451)
                (plus:SI (reg:SI 450)
                    (reg:SI 449)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 450)
        (expr_list:REG_DEAD (reg:SI 449)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 382 381 383 24 (parallel [
            (set (reg:SI 452)
                (ashiftrt:SI (reg:SI 451)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 451)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 383 382 384 24 (set (reg:SI 255 [ D.6917 ])
        (reg:SI 452)) preproc.cpp:473 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 452)
        (nil)))
(insn 384 383 385 24 (set (reg:DF 256 [ D.6921 ])
        (float:DF (reg:SI 255 [ D.6917 ]))) preproc.cpp:473 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 255 [ D.6917 ])
        (nil)))
(insn 385 384 386 24 (set (reg:DF 257 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:473 152 {*extendsfdf2_sse}
     (nil))
(insn 386 385 387 24 (set (reg:DF 258 [ D.6921 ])
        (mult:DF (reg:DF 256 [ D.6921 ])
            (reg:DF 257 [ D.6921 ]))) preproc.cpp:473 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 257 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 256 [ D.6921 ])
            (nil))))
(insn 387 386 388 24 (set (reg:DF 259 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:473 152 {*extendsfdf2_sse}
     (nil))
(insn 388 387 389 24 (set (reg:DF 260 [ D.6921 ])
        (plus:DF (reg:DF 258 [ D.6921 ])
            (reg:DF 259 [ D.6921 ]))) preproc.cpp:473 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 259 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 258 [ D.6921 ])
            (nil))))
(insn 389 388 390 24 (set (reg:V2DF 453)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:473 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 390 389 391 24 (parallel [
            (set (reg:DF 261 [ D.6921 ])
                (abs:DF (reg:DF 260 [ D.6921 ])))
            (use (reg:V2DF 453))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 453)
        (expr_list:REG_DEAD (reg:DF 260 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 260 [ D.6921 ]))
                    (nil))))))
(insn 391 390 392 24 (set (reg:DF 454)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:473 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 392 391 393 24 (set (reg:DF 262 [ D.6921 ])
        (mult:DF (reg:DF 261 [ D.6921 ])
            (reg:DF 454))) preproc.cpp:473 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 454)
        (expr_list:REG_DEAD (reg:DF 261 [ D.6921 ])
            (nil))))
(insn 393 392 394 24 (set (reg/f:DI 455)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:473 89 {*movdi_internal}
     (nil))
(insn 394 393 395 24 (parallel [
            (set (reg/f:DI 263 [ D.6922 ])
                (plus:DI (reg/f:DI 455)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:473 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 455)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 395 394 396 24 (set (reg:SF 264 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 263 [ D.6922 ])
                (const_int 28 [0x1c])) [0 _216->comp_filter+0 S4 A32])) preproc.cpp:473 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 263 [ D.6922 ])
        (nil)))
(insn 396 395 397 24 (set (reg:DF 265 [ D.6921 ])
        (float_extend:DF (reg:SF 264 [ D.6916 ]))) preproc.cpp:473 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 264 [ D.6916 ])
        (nil)))
(insn 397 396 398 24 (set (reg:DF 266 [ D.6921 ])
        (mult:DF (reg:DF 262 [ D.6921 ])
            (reg:DF 265 [ D.6921 ]))) preproc.cpp:473 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 265 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 262 [ D.6921 ])
            (nil))))
(insn 398 397 399 24 (set (reg:DF 21 xmm0)
        (reg:DF 266 [ D.6921 ])) preproc.cpp:473 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 266 [ D.6921 ])
        (nil)))
(call_insn 399 398 400 24 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:473 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 400 399 401 24 (set (reg:DF 267 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:473 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 401 400 402 24 (set (reg:SF 268 [ D.6916 ])
        (float_truncate:SF (reg:DF 267 [ D.6921 ]))) preproc.cpp:473 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 267 [ D.6921 ])
        (nil)))
(insn 402 401 403 24 (set (reg:SF 269 [ D.6916 ])
        (mult:SF (reg:SF 254 [ D.6916 ])
            (reg:SF 268 [ D.6916 ]))) preproc.cpp:473 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 268 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 254 [ D.6916 ])
            (nil))))
(insn 403 402 404 24 (set (mem:SF (reg/f:DI 250 [ D.6920 ]) [0 *_203+0 S4 A32])
        (reg:SF 269 [ D.6916 ])) preproc.cpp:473 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 269 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 250 [ D.6920 ])
            (nil))))
(insn 404 403 405 24 (set (reg:SI 456)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:474 90 {*movsi_internal}
     (nil))
(insn 405 404 406 24 (set (reg:DI 270 [ D.6919 ])
        (sign_extend:DI (reg:SI 456))) preproc.cpp:474 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 456)
        (nil)))
(insn 406 405 407 24 (parallel [
            (set (reg:DI 271 [ D.6919 ])
                (plus:DI (reg:DI 270 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 270 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 407 406 408 24 (parallel [
            (set (reg:DI 272 [ D.6919 ])
                (ashift:DI (reg:DI 271 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 271 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 408 407 409 24 (set (reg/f:DI 457)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:474 89 {*movdi_internal}
     (nil))
(insn 409 408 410 24 (parallel [
            (set (reg/f:DI 273 [ D.6920 ])
                (plus:DI (reg:DI 272 [ D.6919 ])
                    (reg/f:DI 457)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 457)
        (expr_list:REG_DEAD (reg:DI 272 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 272 [ D.6919 ]))
                    (nil))))))
(insn 410 409 411 24 (set (reg:SI 458)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:474 90 {*movsi_internal}
     (nil))
(insn 411 410 412 24 (set (reg:DI 274 [ D.6919 ])
        (sign_extend:DI (reg:SI 458))) preproc.cpp:474 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 458)
        (nil)))
(insn 412 411 413 24 (parallel [
            (set (reg:DI 275 [ D.6919 ])
                (plus:DI (reg:DI 274 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 274 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 413 412 414 24 (parallel [
            (set (reg:DI 276 [ D.6919 ])
                (ashift:DI (reg:DI 275 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 275 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 414 413 415 24 (set (reg/f:DI 459)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:474 89 {*movdi_internal}
     (nil))
(insn 415 414 416 24 (parallel [
            (set (reg/f:DI 277 [ D.6920 ])
                (plus:DI (reg:DI 276 [ D.6919 ])
                    (reg/f:DI 459)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 459)
        (expr_list:REG_DEAD (reg:DI 276 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 276 [ D.6919 ]))
                    (nil))))))
(insn 416 415 417 24 (set (reg:SF 278 [ D.6916 ])
        (mem:SF (reg/f:DI 277 [ D.6920 ]) [0 *_232+0 S4 A32])) preproc.cpp:474 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 277 [ D.6920 ])
        (nil)))
(insn 417 416 418 24 (set (reg:SI 460)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:474 90 {*movsi_internal}
     (nil))
(insn 418 417 419 24 (parallel [
            (set (reg:SI 461)
                (lshiftrt:SI (reg:SI 460)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 419 418 420 24 (parallel [
            (set (reg:SI 462)
                (plus:SI (reg:SI 461)
                    (reg:SI 460)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 461)
        (expr_list:REG_DEAD (reg:SI 460)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 420 419 421 24 (parallel [
            (set (reg:SI 463)
                (ashiftrt:SI (reg:SI 462)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 462)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 421 420 422 24 (set (reg:SI 279 [ D.6917 ])
        (reg:SI 463)) preproc.cpp:474 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 463)
        (nil)))
(insn 422 421 423 24 (set (reg:DF 280 [ D.6921 ])
        (float:DF (reg:SI 279 [ D.6917 ]))) preproc.cpp:474 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 279 [ D.6917 ])
        (nil)))
(insn 423 422 424 24 (set (reg:DF 281 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:474 152 {*extendsfdf2_sse}
     (nil))
(insn 424 423 425 24 (set (reg:DF 282 [ D.6921 ])
        (mult:DF (reg:DF 280 [ D.6921 ])
            (reg:DF 281 [ D.6921 ]))) preproc.cpp:474 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 281 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 280 [ D.6921 ])
            (nil))))
(insn 425 424 426 24 (set (reg:DF 283 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:474 152 {*extendsfdf2_sse}
     (nil))
(insn 426 425 427 24 (set (reg:DF 284 [ D.6921 ])
        (plus:DF (reg:DF 282 [ D.6921 ])
            (reg:DF 283 [ D.6921 ]))) preproc.cpp:474 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 283 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 282 [ D.6921 ])
            (nil))))
(insn 427 426 428 24 (set (reg:V2DF 464)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:474 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 428 427 429 24 (parallel [
            (set (reg:DF 285 [ D.6921 ])
                (abs:DF (reg:DF 284 [ D.6921 ])))
            (use (reg:V2DF 464))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 464)
        (expr_list:REG_DEAD (reg:DF 284 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 284 [ D.6921 ]))
                    (nil))))))
(insn 429 428 430 24 (set (reg:DF 465)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:474 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 430 429 431 24 (set (reg:DF 286 [ D.6921 ])
        (mult:DF (reg:DF 285 [ D.6921 ])
            (reg:DF 465))) preproc.cpp:474 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 465)
        (expr_list:REG_DEAD (reg:DF 285 [ D.6921 ])
            (nil))))
(insn 431 430 432 24 (set (reg/f:DI 466)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:474 89 {*movdi_internal}
     (nil))
(insn 432 431 433 24 (parallel [
            (set (reg/f:DI 287 [ D.6922 ])
                (plus:DI (reg/f:DI 466)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:474 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 466)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 433 432 434 24 (set (reg:SF 288 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 287 [ D.6922 ])
                (const_int 28 [0x1c])) [0 _242->comp_filter+0 S4 A32])) preproc.cpp:474 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 287 [ D.6922 ])
        (nil)))
(insn 434 433 435 24 (set (reg:DF 289 [ D.6921 ])
        (float_extend:DF (reg:SF 288 [ D.6916 ]))) preproc.cpp:474 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 288 [ D.6916 ])
        (nil)))
(insn 435 434 436 24 (set (reg:DF 290 [ D.6921 ])
        (mult:DF (reg:DF 286 [ D.6921 ])
            (reg:DF 289 [ D.6921 ]))) preproc.cpp:474 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 289 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 286 [ D.6921 ])
            (nil))))
(insn 436 435 437 24 (set (reg:DF 21 xmm0)
        (reg:DF 290 [ D.6921 ])) preproc.cpp:474 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 290 [ D.6921 ])
        (nil)))
(call_insn 437 436 438 24 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:474 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 438 437 439 24 (set (reg:DF 291 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:474 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 439 438 440 24 (set (reg:SF 292 [ D.6916 ])
        (float_truncate:SF (reg:DF 291 [ D.6921 ]))) preproc.cpp:474 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 291 [ D.6921 ])
        (nil)))
(insn 440 439 441 24 (set (reg:SF 293 [ D.6916 ])
        (mult:SF (reg:SF 278 [ D.6916 ])
            (reg:SF 292 [ D.6916 ]))) preproc.cpp:474 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 292 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 278 [ D.6916 ])
            (nil))))
(insn 441 440 555 24 (set (mem:SF (reg/f:DI 273 [ D.6920 ]) [0 *_228+0 S4 A32])
        (reg:SF 293 [ D.6916 ])) preproc.cpp:474 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 293 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 273 [ D.6920 ])
            (nil))))
(jump_insn 555 441 556 24 (set (pc)
        (label_ref 525)) preproc.cpp:474 654 {jump}
     (nil)
 -> 525)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 556 555 444)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 294 467
(code_label 444 556 445 25 86 "" [2 uses])
(note 445 444 446 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 25 (set (reg/f:DI 467)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:475 89 {*movdi_internal}
     (nil))
(insn 447 446 448 25 (set (reg:SI 294 [ D.6917 ])
        (mem/j:SI (plus:DI (reg/f:DI 467)
                (const_int 40 [0x28])) [0 preprocess_21(D)->pre_quecc+0 S4 A32])) preproc.cpp:475 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 467)
        (nil)))
(insn 448 447 449 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 294 [ D.6917 ])
            (const_int 0 [0]))) preproc.cpp:475 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 294 [ D.6917 ])
        (nil)))
(jump_insn 449 448 450 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 525)
            (pc))) preproc.cpp:475 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 525)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489
(note 450 449 451 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 451 450 452 26 (set (reg:SI 468)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:476 90 {*movsi_internal}
     (nil))
(insn 452 451 453 26 (set (reg:DI 295 [ D.6918 ])
        (sign_extend:DI (reg:SI 468))) preproc.cpp:476 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 468)
        (nil)))
(insn 453 452 454 26 (parallel [
            (set (reg:DI 296 [ D.6918 ])
                (ashift:DI (reg:DI 295 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 295 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 454 453 455 26 (set (reg/f:DI 469)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:476 89 {*movdi_internal}
     (nil))
(insn 455 454 456 26 (parallel [
            (set (reg/f:DI 297 [ D.6920 ])
                (plus:DI (reg:DI 296 [ D.6918 ])
                    (reg/f:DI 469)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 469)
        (expr_list:REG_DEAD (reg:DI 296 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 296 [ D.6918 ]))
                    (nil))))))
(insn 456 455 457 26 (set (reg:SI 470)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:476 90 {*movsi_internal}
     (nil))
(insn 457 456 458 26 (set (reg:DI 298 [ D.6918 ])
        (sign_extend:DI (reg:SI 470))) preproc.cpp:476 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 470)
        (nil)))
(insn 458 457 459 26 (parallel [
            (set (reg:DI 299 [ D.6918 ])
                (ashift:DI (reg:DI 298 [ D.6918 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 298 [ D.6918 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 459 458 460 26 (set (reg/f:DI 471)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:476 89 {*movdi_internal}
     (nil))
(insn 460 459 461 26 (parallel [
            (set (reg/f:DI 300 [ D.6920 ])
                (plus:DI (reg:DI 299 [ D.6918 ])
                    (reg/f:DI 471)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 471)
        (expr_list:REG_DEAD (reg:DI 299 [ D.6918 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 299 [ D.6918 ]))
                    (nil))))))
(insn 461 460 462 26 (set (reg:SF 301 [ D.6916 ])
        (mem:SF (reg/f:DI 300 [ D.6920 ]) [0 *_257+0 S4 A32])) preproc.cpp:476 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 300 [ D.6920 ])
        (nil)))
(insn 462 461 463 26 (set (reg:SI 472)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:476 90 {*movsi_internal}
     (nil))
(insn 463 462 464 26 (parallel [
            (set (reg:SI 473)
                (lshiftrt:SI (reg:SI 472)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 464 463 465 26 (parallel [
            (set (reg:SI 474)
                (plus:SI (reg:SI 473)
                    (reg:SI 472)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 473)
        (expr_list:REG_DEAD (reg:SI 472)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 465 464 466 26 (parallel [
            (set (reg:SI 475)
                (ashiftrt:SI (reg:SI 474)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 474)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 466 465 467 26 (set (reg:SI 302 [ D.6917 ])
        (reg:SI 475)) preproc.cpp:476 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 475)
        (nil)))
(insn 467 466 468 26 (set (reg:DF 303 [ D.6921 ])
        (float:DF (reg:SI 302 [ D.6917 ]))) preproc.cpp:476 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 302 [ D.6917 ])
        (nil)))
(insn 468 467 469 26 (set (reg:DF 304 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:476 152 {*extendsfdf2_sse}
     (nil))
(insn 469 468 470 26 (set (reg:DF 305 [ D.6921 ])
        (mult:DF (reg:DF 303 [ D.6921 ])
            (reg:DF 304 [ D.6921 ]))) preproc.cpp:476 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 304 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 303 [ D.6921 ])
            (nil))))
(insn 470 469 471 26 (set (reg:DF 306 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:476 152 {*extendsfdf2_sse}
     (nil))
(insn 471 470 472 26 (set (reg:DF 307 [ D.6921 ])
        (plus:DF (reg:DF 305 [ D.6921 ])
            (reg:DF 306 [ D.6921 ]))) preproc.cpp:476 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 306 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 305 [ D.6921 ])
            (nil))))
(insn 472 471 473 26 (set (reg:V2DF 476)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:476 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 473 472 474 26 (parallel [
            (set (reg:DF 308 [ D.6921 ])
                (abs:DF (reg:DF 307 [ D.6921 ])))
            (use (reg:V2DF 476))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 476)
        (expr_list:REG_DEAD (reg:DF 307 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 307 [ D.6921 ]))
                    (nil))))))
(insn 474 473 475 26 (set (reg:DF 477)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:476 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 475 474 476 26 (set (reg:DF 309 [ D.6921 ])
        (mult:DF (reg:DF 308 [ D.6921 ])
            (reg:DF 477))) preproc.cpp:476 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 477)
        (expr_list:REG_DEAD (reg:DF 308 [ D.6921 ])
            (nil))))
(insn 476 475 477 26 (set (reg/f:DI 478)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:476 89 {*movdi_internal}
     (nil))
(insn 477 476 478 26 (parallel [
            (set (reg/f:DI 310 [ D.6922 ])
                (plus:DI (reg/f:DI 478)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:476 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 478)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 478 477 479 26 (set (reg:SF 311 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 310 [ D.6922 ])
                (const_int 28 [0x1c])) [0 _267->comp_filter+0 S4 A32])) preproc.cpp:476 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 310 [ D.6922 ])
        (nil)))
(insn 479 478 480 26 (set (reg:DF 312 [ D.6921 ])
        (float_extend:DF (reg:SF 311 [ D.6916 ]))) preproc.cpp:476 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 311 [ D.6916 ])
        (nil)))
(insn 480 479 481 26 (set (reg:DF 313 [ D.6921 ])
        (mult:DF (reg:DF 309 [ D.6921 ])
            (reg:DF 312 [ D.6921 ]))) preproc.cpp:476 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 312 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 309 [ D.6921 ])
            (nil))))
(insn 481 480 482 26 (set (reg:DF 21 xmm0)
        (reg:DF 313 [ D.6921 ])) preproc.cpp:476 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 313 [ D.6921 ])
        (nil)))
(call_insn 482 481 483 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:476 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 483 482 484 26 (set (reg:DF 314 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:476 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 484 483 485 26 (set (reg:SF 315 [ D.6916 ])
        (float_truncate:SF (reg:DF 314 [ D.6921 ]))) preproc.cpp:476 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 314 [ D.6921 ])
        (nil)))
(insn 485 484 486 26 (set (reg:SF 316 [ D.6916 ])
        (mult:SF (reg:SF 301 [ D.6916 ])
            (reg:SF 315 [ D.6916 ]))) preproc.cpp:476 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 315 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 301 [ D.6916 ])
            (nil))))
(insn 486 485 487 26 (set (mem:SF (reg/f:DI 297 [ D.6920 ]) [0 *_254+0 S4 A32])
        (reg:SF 316 [ D.6916 ])) preproc.cpp:476 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 316 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 297 [ D.6920 ])
            (nil))))
(insn 487 486 488 26 (set (reg:SI 479)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:477 90 {*movsi_internal}
     (nil))
(insn 488 487 489 26 (set (reg:DI 317 [ D.6919 ])
        (sign_extend:DI (reg:SI 479))) preproc.cpp:477 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 479)
        (nil)))
(insn 489 488 490 26 (parallel [
            (set (reg:DI 318 [ D.6919 ])
                (plus:DI (reg:DI 317 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 317 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 490 489 491 26 (parallel [
            (set (reg:DI 319 [ D.6919 ])
                (ashift:DI (reg:DI 318 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 318 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 491 490 492 26 (set (reg/f:DI 480)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:477 89 {*movdi_internal}
     (nil))
(insn 492 491 493 26 (parallel [
            (set (reg/f:DI 320 [ D.6920 ])
                (plus:DI (reg:DI 319 [ D.6919 ])
                    (reg/f:DI 480)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 480)
        (expr_list:REG_DEAD (reg:DI 319 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 319 [ D.6919 ]))
                    (nil))))))
(insn 493 492 494 26 (set (reg:SI 481)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:477 90 {*movsi_internal}
     (nil))
(insn 494 493 495 26 (set (reg:DI 321 [ D.6919 ])
        (sign_extend:DI (reg:SI 481))) preproc.cpp:477 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 481)
        (nil)))
(insn 495 494 496 26 (parallel [
            (set (reg:DI 322 [ D.6919 ])
                (plus:DI (reg:DI 321 [ D.6919 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 321 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 496 495 497 26 (parallel [
            (set (reg:DI 323 [ D.6919 ])
                (ashift:DI (reg:DI 322 [ D.6919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 322 [ D.6919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 497 496 498 26 (set (reg/f:DI 482)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) preproc.cpp:477 89 {*movdi_internal}
     (nil))
(insn 498 497 499 26 (parallel [
            (set (reg/f:DI 324 [ D.6920 ])
                (plus:DI (reg:DI 323 [ D.6919 ])
                    (reg/f:DI 482)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 482)
        (expr_list:REG_DEAD (reg:DI 323 [ D.6919 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 323 [ D.6919 ]))
                    (nil))))))
(insn 499 498 500 26 (set (reg:SF 325 [ D.6916 ])
        (mem:SF (reg/f:DI 324 [ D.6920 ]) [0 *_283+0 S4 A32])) preproc.cpp:477 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 324 [ D.6920 ])
        (nil)))
(insn 500 499 501 26 (set (reg:SI 483)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) preproc.cpp:477 90 {*movsi_internal}
     (nil))
(insn 501 500 502 26 (parallel [
            (set (reg:SI 484)
                (lshiftrt:SI (reg:SI 483)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 502 501 503 26 (parallel [
            (set (reg:SI 485)
                (plus:SI (reg:SI 484)
                    (reg:SI 483)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 484)
        (expr_list:REG_DEAD (reg:SI 483)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 503 502 504 26 (parallel [
            (set (reg:SI 486)
                (ashiftrt:SI (reg:SI 485)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 485)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 504 503 505 26 (set (reg:SI 326 [ D.6917 ])
        (reg:SI 486)) preproc.cpp:477 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 486)
        (nil)))
(insn 505 504 506 26 (set (reg:DF 327 [ D.6921 ])
        (float:DF (reg:SI 326 [ D.6917 ]))) preproc.cpp:477 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 326 [ D.6917 ])
        (nil)))
(insn 506 505 507 26 (set (reg:DF 328 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) preproc.cpp:477 152 {*extendsfdf2_sse}
     (nil))
(insn 507 506 508 26 (set (reg:DF 329 [ D.6921 ])
        (mult:DF (reg:DF 327 [ D.6921 ])
            (reg:DF 328 [ D.6921 ]))) preproc.cpp:477 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 328 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 327 [ D.6921 ])
            (nil))))
(insn 508 507 509 26 (set (reg:DF 330 [ D.6921 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) preproc.cpp:477 152 {*extendsfdf2_sse}
     (nil))
(insn 509 508 510 26 (set (reg:DF 331 [ D.6921 ])
        (plus:DF (reg:DF 329 [ D.6921 ])
            (reg:DF 330 [ D.6921 ]))) preproc.cpp:477 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 330 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 329 [ D.6921 ])
            (nil))))
(insn 510 509 511 26 (set (reg:V2DF 487)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) preproc.cpp:477 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 511 510 512 26 (parallel [
            (set (reg:DF 332 [ D.6921 ])
                (abs:DF (reg:DF 331 [ D.6921 ])))
            (use (reg:V2DF 487))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 487)
        (expr_list:REG_DEAD (reg:DF 331 [ D.6921 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 331 [ D.6921 ]))
                    (nil))))))
(insn 512 511 513 26 (set (reg:DF 488)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) preproc.cpp:477 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 513 512 514 26 (set (reg:DF 333 [ D.6921 ])
        (mult:DF (reg:DF 332 [ D.6921 ])
            (reg:DF 488))) preproc.cpp:477 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 488)
        (expr_list:REG_DEAD (reg:DF 332 [ D.6921 ])
            (nil))))
(insn 514 513 515 26 (set (reg/f:DI 489)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) preproc.cpp:477 89 {*movdi_internal}
     (nil))
(insn 515 514 516 26 (parallel [
            (set (reg/f:DI 334 [ D.6922 ])
                (plus:DI (reg/f:DI 489)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 489)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 516 515 517 26 (set (reg:SF 335 [ D.6916 ])
        (mem/j:SF (plus:DI (reg/f:DI 334 [ D.6922 ])
                (const_int 28 [0x1c])) [0 _293->comp_filter+0 S4 A32])) preproc.cpp:477 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 334 [ D.6922 ])
        (nil)))
(insn 517 516 518 26 (set (reg:DF 336 [ D.6921 ])
        (float_extend:DF (reg:SF 335 [ D.6916 ]))) preproc.cpp:477 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 335 [ D.6916 ])
        (nil)))
(insn 518 517 519 26 (set (reg:DF 337 [ D.6921 ])
        (mult:DF (reg:DF 333 [ D.6921 ])
            (reg:DF 336 [ D.6921 ]))) preproc.cpp:477 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 336 [ D.6921 ])
        (expr_list:REG_DEAD (reg:DF 333 [ D.6921 ])
            (nil))))
(insn 519 518 520 26 (set (reg:DF 21 xmm0)
        (reg:DF 337 [ D.6921 ])) preproc.cpp:477 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 337 [ D.6921 ])
        (nil)))
(call_insn 520 519 521 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe499b38d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) preproc.cpp:477 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 521 520 522 26 (set (reg:DF 338 [ D.6921 ])
        (reg:DF 21 xmm0)) preproc.cpp:477 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 522 521 523 26 (set (reg:SF 339 [ D.6916 ])
        (float_truncate:SF (reg:DF 338 [ D.6921 ]))) preproc.cpp:477 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 338 [ D.6921 ])
        (nil)))
(insn 523 522 524 26 (set (reg:SF 340 [ D.6916 ])
        (mult:SF (reg:SF 325 [ D.6916 ])
            (reg:SF 339 [ D.6916 ]))) preproc.cpp:477 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 339 [ D.6916 ])
        (expr_list:REG_DEAD (reg:SF 325 [ D.6916 ])
            (nil))))
(insn 524 523 525 26 (set (mem:SF (reg/f:DI 320 [ D.6920 ]) [0 *_279+0 S4 A32])
        (reg:SF 340 [ D.6916 ])) preproc.cpp:477 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 340 [ D.6916 ])
        (expr_list:REG_DEAD (reg/f:DI 320 [ D.6920 ])
            (nil))))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;;              25
;;              24 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 525 524 526 27 87 "" [2 uses])
(note 526 525 527 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 527 526 557 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:471 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 557 527 558 27 (set (pc)
        (label_ref 528)) preproc.cpp:471 654 {jump}
     (nil)
 -> 528)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 558 557 531)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;;              19
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 341 342
(code_label 531 558 532 28 84 "" [2 uses])
(note 532 531 533 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 536 28 (set (reg:SI 341 [ D.6917 ])
        (const_int 1 [0x1])) preproc.cpp:483 90 {*movsi_internal}
     (nil))
(insn 536 533 540 28 (set (reg:SI 342 [ <retval> ])
        (reg:SI 341 [ D.6917 ])) preproc.cpp:483 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 341 [ D.6917 ])
        (nil)))
(insn 540 536 541 28 (set (reg/i:SI 0 ax)
        (reg:SI 342 [ <retval> ])) preproc.cpp:485 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 342 [ <retval> ])
        (nil)))
(insn 541 540 0 28 (use (reg/i:SI 0 ax)) preproc.cpp:485 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int quecc(float*, float*, float*, Procpar_info*, Preprocess*) (_Z5queccPfS_S_P12Procpar_infoP10Preprocess, funcdef_no=10, decl_uid=5478, cgraph_uid=10, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 18 count 15 (    1)
Building IRA IR
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 247.
verify found no changes in insn with uid = 261.
verify found no changes in insn with uid = 295.
verify found no changes in insn with uid = 309.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 346.
verify found no changes in insn with uid = 359.
verify found no changes in insn with uid = 373.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r354: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a7 (r354,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r351,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a28 (r348,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a39 (r345,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r342,l0) best SSE_REGS, allocno SSE_REGS
    r341: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r341,l0) best SSE_REGS, allocno SSE_REGS
    r340: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r339,l0) best SSE_REGS, allocno SSE_REGS
    r338: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a53 (r338,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a64 (r335,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a72 (r330,l0) best SSE_REGS, allocno SSE_REGS
    r329: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r327,l0) best SSE_REGS, allocno SSE_REGS
    r326: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a80 (r326,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a91 (r323,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a97 (r320,l0) best SSE_REGS, allocno SSE_REGS
    r319: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a96 (r319,l0) best SSE_REGS, allocno SSE_REGS
    r318: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a99 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a98 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a100 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a101 (r315,l0) best SSE_REGS, allocno SSE_REGS
    r314: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a102 (r314,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a118 (r309,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a154 (r299,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a170 (r294,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a204 (r285,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a220 (r280,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a256 (r270,l0) best SSE_REGS, allocno SSE_REGS
    r269: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a257 (r269,l0) best SSE_REGS, allocno SSE_REGS
    r268: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a258 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a259 (r267,l0) best SSE_REGS, allocno SSE_REGS
    r266: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a260 (r266,l0) best SSE_REGS, allocno SSE_REGS
    r265: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a261 (r265,l0) best SSE_REGS, allocno SSE_REGS
    r264: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a262 (r264,l0) best SSE_REGS, allocno SSE_REGS
    r263: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a263 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a264 (r262,l0) best SSE_REGS, allocno SSE_REGS
    r261: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a265 (r261,l0) best SSE_REGS, allocno SSE_REGS
    r260: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a266 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a267 (r259,l0) best SSE_REGS, allocno SSE_REGS
    r258: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r258,l0) best AREG, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r256,l0) best SSE_REGS, allocno SSE_REGS
    r255: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r255,l0) best SSE_REGS, allocno SSE_REGS
    r254: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r254,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r253: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r253,l0) best SSE_REGS, allocno SSE_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r248,l0) best SSE_REGS, allocno SSE_REGS
    r247: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r247,l0) best SSE_REGS, allocno SSE_REGS
    r246: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a17 (r246,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r245: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r245,l0) best SSE_REGS, allocno SSE_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r240,l0) best SSE_REGS, allocno SSE_REGS
    r239: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a27 (r239,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r238: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a38 (r231,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a52 (r224,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a63 (r216,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r215: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a79 (r209,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r208: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a87 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a90 (r201,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r200: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r200,l0) best SSE_REGS, allocno SSE_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a103 (r196,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a105 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a119 (r185,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a131 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a138 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a140 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a139 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a146 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a155 (r159,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r158: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a157 (r158,l0) best SSE_REGS, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a156 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a164 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a171 (r148,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a174 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a176 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a175 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a183 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a190 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a192 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a191 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a198 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a205 (r123,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r122: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a207 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a206 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a214 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a221 (r112,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a222 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a224 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a226 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a225 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a233 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a223 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a240 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a242 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a241 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a248 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r256,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r255,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r253,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r254,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r354,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a8(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r248,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a15(r247,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r245,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r246,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a18(r351,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a19(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r241,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r240,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r238,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r239,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a28(r348,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a29(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a31(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r233,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a36(r232,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r230,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a38(r231,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a39(r345,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a40(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r341,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a45(r342,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a46(r339,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a47(r340,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a48(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r226,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a50(r225,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a51(r223,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a52(r224,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a53(r338,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a54(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a56(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a57(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a60(r218,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a61(r217,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a62(r215,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a63(r216,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a64(r335,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a65(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a67(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r331,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a70(r332,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a71(r329,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a72(r330,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a73(r328,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a74(r327,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a75(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r211,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a77(r210,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a78(r208,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a79(r209,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a80(r326,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a81(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a83(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a84(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a85(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a87(r203,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a88(r202,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a89(r200,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a90(r201,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a91(r323,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a92(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r319,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a97(r320,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a98(r317,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a99(r318,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a100(r316,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a101(r315,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a102(r314,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a103(r196,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a104(r190,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a105(r195,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a106(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a110(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a111(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r189,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a113(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a114(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a116(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r309,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a119(r185,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a120(r184,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a121(r171,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a122(r183,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a123(r177,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r182,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a125(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r176,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a132(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a135(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a136(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a139(r165,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a140(r169,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a141(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r164,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a148(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a150(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a153(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a154(r299,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a155(r159,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a156(r153,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a157(r158,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a158(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a159(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a160(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a161(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a162(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a163(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a164(r152,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a165(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a166(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a167(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a168(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a169(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a170(r294,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a171(r148,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a172(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a173(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a174(r146,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a175(r140,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a176(r145,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a177(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a178(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a180(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a181(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a182(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a183(r139,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a184(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a185(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a186(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a187(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a188(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a189(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r133,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a191(r128,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a192(r132,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a193(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a195(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a196(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a197(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a198(r127,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a199(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a200(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a201(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a202(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a203(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a204(r285,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a205(r123,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a206(r117,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a207(r122,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a208(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a209(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a211(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a212(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a213(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a214(r116,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a215(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a216(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a217(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a218(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a219(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a220(r280,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a221(r112,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a222(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a223(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a224(r110,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a225(r104,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a226(r109,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a227(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a228(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a229(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a230(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a231(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a232(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a233(r103,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a234(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a235(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a236(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a237(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a238(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a239(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a240(r97,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a241(r92,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a242(r96,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a243(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a244(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a245(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a246(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a247(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a248(r91,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a249(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a250(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a251(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a252(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a253(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a254(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a255(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a256(r270,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a257(r269,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a258(r268,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a259(r267,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a260(r266,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a261(r265,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a262(r264,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a263(r263,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a264(r262,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a265(r261,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a266(r260,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a267(r259,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 394(l0): point = 0
   Insn 393(l0): point = 2
   Insn 389(l0): point = 4
   Insn 386(l0): point = 6
   Insn 40(l0): point = 9
   Insn 39(l0): point = 11
   Insn 38(l0): point = 13
   Insn 37(l0): point = 15
   Insn 410(l0): point = 18
   Insn 380(l0): point = 20
   Insn 377(l0): point = 23
   Insn 376(l0): point = 25
   Insn 375(l0): point = 27
   Insn 374(l0): point = 29
   Insn 373(l0): point = 31
   Insn 372(l0): point = 33
   Insn 371(l0): point = 35
   Insn 370(l0): point = 37
   Insn 369(l0): point = 39
   Insn 368(l0): point = 41
   Insn 367(l0): point = 43
   Insn 366(l0): point = 45
   Insn 365(l0): point = 47
   Insn 364(l0): point = 49
   Insn 363(l0): point = 51
   Insn 362(l0): point = 53
   Insn 361(l0): point = 55
   Insn 360(l0): point = 57
   Insn 359(l0): point = 59
   Insn 358(l0): point = 61
   Insn 357(l0): point = 63
   Insn 356(l0): point = 65
   Insn 355(l0): point = 67
   Insn 354(l0): point = 69
   Insn 353(l0): point = 71
   Insn 352(l0): point = 73
   Insn 351(l0): point = 75
   Insn 350(l0): point = 77
   Insn 349(l0): point = 79
   Insn 348(l0): point = 81
   Insn 347(l0): point = 83
   Insn 346(l0): point = 85
   Insn 345(l0): point = 87
   Insn 344(l0): point = 89
   Insn 343(l0): point = 91
   Insn 342(l0): point = 93
   Insn 341(l0): point = 95
   Insn 340(l0): point = 97
   Insn 339(l0): point = 99
   Insn 338(l0): point = 101
   Insn 337(l0): point = 103
   Insn 336(l0): point = 105
   Insn 335(l0): point = 107
   Insn 334(l0): point = 109
   Insn 333(l0): point = 111
   Insn 332(l0): point = 113
   Insn 331(l0): point = 115
   Insn 330(l0): point = 117
   Insn 329(l0): point = 119
   Insn 328(l0): point = 121
   Insn 327(l0): point = 123
   Insn 326(l0): point = 125
   Insn 325(l0): point = 127
   Insn 324(l0): point = 129
   Insn 323(l0): point = 131
   Insn 322(l0): point = 133
   Insn 321(l0): point = 135
   Insn 320(l0): point = 137
   Insn 319(l0): point = 139
   Insn 318(l0): point = 141
   Insn 408(l0): point = 144
   Insn 313(l0): point = 146
   Insn 312(l0): point = 148
   Insn 311(l0): point = 150
   Insn 310(l0): point = 152
   Insn 309(l0): point = 154
   Insn 308(l0): point = 156
   Insn 307(l0): point = 158
   Insn 306(l0): point = 160
   Insn 305(l0): point = 162
   Insn 304(l0): point = 164
   Insn 303(l0): point = 166
   Insn 302(l0): point = 168
   Insn 301(l0): point = 170
   Insn 300(l0): point = 172
   Insn 299(l0): point = 174
   Insn 298(l0): point = 176
   Insn 297(l0): point = 178
   Insn 296(l0): point = 180
   Insn 295(l0): point = 182
   Insn 294(l0): point = 184
   Insn 293(l0): point = 186
   Insn 292(l0): point = 188
   Insn 291(l0): point = 190
   Insn 290(l0): point = 192
   Insn 289(l0): point = 194
   Insn 288(l0): point = 196
   Insn 287(l0): point = 198
   Insn 286(l0): point = 200
   Insn 285(l0): point = 202
   Insn 284(l0): point = 204
   Insn 281(l0): point = 207
   Insn 280(l0): point = 209
   Insn 279(l0): point = 211
   Insn 406(l0): point = 214
   Insn 274(l0): point = 216
   Insn 273(l0): point = 218
   Insn 268(l0): point = 221
   Insn 267(l0): point = 223
   Insn 266(l0): point = 225
   Insn 265(l0): point = 227
   Insn 264(l0): point = 229
   Insn 263(l0): point = 231
   Insn 262(l0): point = 233
   Insn 261(l0): point = 235
   Insn 260(l0): point = 237
   Insn 259(l0): point = 239
   Insn 258(l0): point = 241
   Insn 257(l0): point = 243
   Insn 256(l0): point = 245
   Insn 255(l0): point = 247
   Insn 254(l0): point = 249
   Insn 253(l0): point = 251
   Insn 252(l0): point = 253
   Insn 251(l0): point = 255
   Insn 250(l0): point = 257
   Insn 249(l0): point = 259
   Insn 248(l0): point = 261
   Insn 247(l0): point = 263
   Insn 246(l0): point = 265
   Insn 245(l0): point = 267
   Insn 244(l0): point = 269
   Insn 243(l0): point = 271
   Insn 242(l0): point = 273
   Insn 241(l0): point = 275
   Insn 240(l0): point = 277
   Insn 239(l0): point = 279
   Insn 238(l0): point = 281
   Insn 237(l0): point = 283
   Insn 236(l0): point = 285
   Insn 233(l0): point = 288
   Insn 232(l0): point = 290
   Insn 231(l0): point = 292
   Insn 403(l0): point = 295
   Insn 226(l0): point = 297
   Insn 225(l0): point = 299
   Insn 220(l0): point = 302
   Insn 219(l0): point = 304
   Insn 218(l0): point = 306
   Insn 217(l0): point = 308
   Insn 216(l0): point = 310
   Insn 215(l0): point = 312
   Insn 214(l0): point = 314
   Insn 213(l0): point = 316
   Insn 212(l0): point = 318
   Insn 211(l0): point = 320
   Insn 210(l0): point = 322
   Insn 209(l0): point = 324
   Insn 208(l0): point = 326
   Insn 207(l0): point = 328
   Insn 206(l0): point = 330
   Insn 205(l0): point = 332
   Insn 204(l0): point = 334
   Insn 203(l0): point = 336
   Insn 202(l0): point = 338
   Insn 201(l0): point = 340
   Insn 200(l0): point = 342
   Insn 199(l0): point = 344
   Insn 198(l0): point = 346
   Insn 197(l0): point = 348
   Insn 196(l0): point = 350
   Insn 195(l0): point = 352
   Insn 194(l0): point = 354
   Insn 193(l0): point = 356
   Insn 192(l0): point = 358
   Insn 191(l0): point = 360
   Insn 190(l0): point = 362
   Insn 189(l0): point = 364
   Insn 188(l0): point = 366
   Insn 187(l0): point = 368
   Insn 186(l0): point = 370
   Insn 185(l0): point = 372
   Insn 184(l0): point = 374
   Insn 183(l0): point = 376
   Insn 182(l0): point = 378
   Insn 181(l0): point = 380
   Insn 180(l0): point = 382
   Insn 179(l0): point = 384
   Insn 178(l0): point = 386
   Insn 177(l0): point = 388
   Insn 176(l0): point = 390
   Insn 175(l0): point = 392
   Insn 174(l0): point = 394
   Insn 173(l0): point = 396
   Insn 172(l0): point = 398
   Insn 171(l0): point = 400
   Insn 170(l0): point = 402
   Insn 169(l0): point = 404
   Insn 168(l0): point = 406
   Insn 167(l0): point = 408
   Insn 166(l0): point = 410
   Insn 165(l0): point = 412
   Insn 164(l0): point = 414
   Insn 163(l0): point = 416
   Insn 162(l0): point = 418
   Insn 161(l0): point = 420
   Insn 159(l0): point = 423
   Insn 158(l0): point = 425
   Insn 157(l0): point = 427
   Insn 156(l0): point = 429
   Insn 155(l0): point = 431
   Insn 154(l0): point = 433
   Insn 153(l0): point = 435
   Insn 152(l0): point = 437
   Insn 151(l0): point = 439
   Insn 150(l0): point = 441
   Insn 149(l0): point = 443
   Insn 148(l0): point = 445
   Insn 147(l0): point = 447
   Insn 146(l0): point = 449
   Insn 145(l0): point = 451
   Insn 144(l0): point = 453
   Insn 143(l0): point = 455
   Insn 142(l0): point = 457
   Insn 141(l0): point = 459
   Insn 140(l0): point = 461
   Insn 139(l0): point = 463
   Insn 138(l0): point = 465
   Insn 137(l0): point = 467
   Insn 136(l0): point = 469
   Insn 135(l0): point = 471
   Insn 134(l0): point = 473
   Insn 133(l0): point = 475
   Insn 132(l0): point = 477
   Insn 131(l0): point = 479
   Insn 130(l0): point = 481
   Insn 129(l0): point = 483
   Insn 128(l0): point = 485
   Insn 127(l0): point = 487
   Insn 126(l0): point = 489
   Insn 125(l0): point = 491
   Insn 124(l0): point = 493
   Insn 123(l0): point = 495
   Insn 122(l0): point = 497
   Insn 121(l0): point = 499
   Insn 120(l0): point = 501
   Insn 119(l0): point = 503
   Insn 118(l0): point = 505
   Insn 117(l0): point = 507
   Insn 116(l0): point = 509
   Insn 115(l0): point = 511
   Insn 114(l0): point = 513
   Insn 113(l0): point = 515
   Insn 112(l0): point = 517
   Insn 111(l0): point = 519
   Insn 110(l0): point = 521
   Insn 109(l0): point = 523
   Insn 108(l0): point = 525
   Insn 107(l0): point = 527
   Insn 106(l0): point = 529
   Insn 105(l0): point = 531
   Insn 104(l0): point = 533
   Insn 103(l0): point = 535
   Insn 102(l0): point = 537
   Insn 101(l0): point = 539
   Insn 100(l0): point = 541
   Insn 99(l0): point = 543
   Insn 98(l0): point = 545
   Insn 97(l0): point = 547
   Insn 96(l0): point = 549
   Insn 95(l0): point = 551
   Insn 94(l0): point = 553
   Insn 93(l0): point = 555
   Insn 92(l0): point = 557
   Insn 91(l0): point = 559
   Insn 90(l0): point = 561
   Insn 89(l0): point = 563
   Insn 88(l0): point = 565
   Insn 87(l0): point = 567
   Insn 86(l0): point = 569
   Insn 85(l0): point = 571
   Insn 84(l0): point = 573
   Insn 83(l0): point = 575
   Insn 82(l0): point = 577
   Insn 81(l0): point = 579
   Insn 80(l0): point = 581
   Insn 79(l0): point = 583
   Insn 78(l0): point = 585
   Insn 77(l0): point = 587
   Insn 76(l0): point = 589
   Insn 75(l0): point = 591
   Insn 74(l0): point = 593
   Insn 73(l0): point = 595
   Insn 72(l0): point = 597
   Insn 71(l0): point = 599
   Insn 70(l0): point = 601
   Insn 69(l0): point = 603
   Insn 68(l0): point = 605
   Insn 67(l0): point = 607
   Insn 66(l0): point = 609
   Insn 65(l0): point = 611
   Insn 64(l0): point = 613
   Insn 63(l0): point = 615
   Insn 62(l0): point = 617
   Insn 61(l0): point = 619
   Insn 60(l0): point = 621
   Insn 59(l0): point = 623
   Insn 58(l0): point = 625
   Insn 57(l0): point = 627
   Insn 56(l0): point = 629
   Insn 55(l0): point = 631
   Insn 54(l0): point = 633
   Insn 53(l0): point = 635
   Insn 52(l0): point = 637
   Insn 51(l0): point = 639
   Insn 50(l0): point = 641
   Insn 49(l0): point = 643
   Insn 48(l0): point = 645
   Insn 47(l0): point = 647
   Insn 46(l0): point = 649
   Insn 45(l0): point = 651
   Insn 44(l0): point = 653
   Insn 43(l0): point = 655
   Insn 42(l0): point = 657
   Insn 35(l0): point = 660
   Insn 34(l0): point = 662
   Insn 33(l0): point = 664
   Insn 32(l0): point = 666
   Insn 31(l0): point = 668
   Insn 30(l0): point = 670
   Insn 29(l0): point = 672
   Insn 28(l0): point = 674
   Insn 27(l0): point = 676
   Insn 26(l0): point = 678
   Insn 25(l0): point = 680
   Insn 24(l0): point = 682
   Insn 23(l0): point = 684
   Insn 22(l0): point = 686
   Insn 21(l0): point = 688
   Insn 20(l0): point = 690
   Insn 19(l0): point = 692
   Insn 18(l0): point = 694
   Insn 17(l0): point = 696
   Insn 16(l0): point = 698
   Insn 15(l0): point = 700
   Insn 14(l0): point = 702
   Insn 13(l0): point = 704
   Insn 12(l0): point = 706
   Insn 11(l0): point = 708
   Insn 10(l0): point = 710
   Insn 6(l0): point = 712
   Insn 5(l0): point = 714
   Insn 4(l0): point = 716
   Insn 3(l0): point = 718
   Insn 2(l0): point = 720
 a0(r258): [3..4]
 a1(r257): [5..6]
 a2(r252): [24..39]
 a3(r256): [24..25]
 a4(r255): [26..27]
 a5(r253): [26..37]
 a6(r254): [28..29]
 a7(r354): [34..35]
 a8(r353): [40..41]
 a9(r251): [40..43]
 a10(r250): [44..45]
 a11(r249): [46..47]
 a12(r352): [48..49]
 a13(r244): [52..67]
 a14(r248): [52..53]
 a15(r247): [54..55]
 a16(r245): [54..65]
 a17(r246): [56..57]
 a18(r351): [62..63]
 a19(r350): [68..69]
 a20(r243): [68..71]
 a21(r242): [72..73]
 a22(r349): [74..75]
 a23(r237): [78..93]
 a24(r241): [78..79]
 a25(r240): [80..81]
 a26(r238): [80..91]
 a27(r239): [82..83]
 a28(r348): [88..89]
 a29(r347): [94..95]
 a30(r236): [94..97]
 a31(r235): [98..99]
 a32(r234): [100..101]
 a33(r346): [102..103]
 a34(r229): [106..121]
 a35(r233): [106..107]
 a36(r232): [108..109]
 a37(r230): [108..119]
 a38(r231): [110..111]
 a39(r345): [116..117]
 a40(r344): [122..123]
 a41(r228): [122..125]
 a42(r227): [126..127]
 a43(r343): [128..129]
 a44(r341): [132..133]
 a45(r342): [134..135]
 a46(r339): [138..139]
 a47(r340): [140..141]
 a48(r222): [147..162]
 a49(r226): [147..148]
 a50(r225): [149..150]
 a51(r223): [149..160]
 a52(r224): [151..152]
 a53(r338): [157..158]
 a54(r337): [163..164]
 a55(r221): [163..166]
 a56(r220): [167..168]
 a57(r219): [169..170]
 a58(r336): [171..172]
 a59(r214): [175..190]
 a60(r218): [175..176]
 a61(r217): [177..178]
 a62(r215): [177..188]
 a63(r216): [179..180]
 a64(r335): [185..186]
 a65(r334): [191..192]
 a66(r213): [191..194]
 a67(r212): [195..196]
 a68(r333): [197..198]
 a69(r331): [201..202]
 a70(r332): [203..204]
 a71(r329): [208..209]
 a72(r330): [210..211]
 a73(r328): [217..218]
 a74(r327): [224..225]
 a75(r207): [228..243]
 a76(r211): [228..229]
 a77(r210): [230..231]
 a78(r208): [230..241]
 a79(r209): [232..233]
 a80(r326): [238..239]
 a81(r325): [244..245]
 a82(r206): [244..247]
 a83(r205): [248..249]
 a84(r204): [250..251]
 a85(r324): [252..253]
 a86(r199): [256..271]
 a87(r203): [256..257]
 a88(r202): [258..259]
 a89(r200): [258..269]
 a90(r201): [260..261]
 a91(r323): [266..267]
 a92(r322): [272..273]
 a93(r198): [272..275]
 a94(r197): [276..277]
 a95(r321): [278..279]
 a96(r319): [282..283]
 a97(r320): [284..285]
 a98(r317): [289..290]
 a99(r318): [291..292]
 a100(r316): [298..299]
 a101(r315): [305..306]
 a102(r314): [309..310]
 a103(r196): [315..318]
 a104(r190): [317..334]
 a105(r195): [319..320]
 a106(r194): [321..322]
 a107(r313): [323..324]
 a108(r193): [323..326]
 a109(r192): [327..328]
 a110(r191): [329..330]
 a111(r312): [331..332]
 a112(r189): [335..336]
 a113(r188): [337..338]
 a114(r311): [339..340]
 a115(r187): [339..342]
 a116(r186): [343..344]
 a117(r310): [345..346]
 a118(r309): [349..350]
 a119(r185): [355..356]
 a120(r184): [357..358]
 a121(r171): [357..392]
 a122(r183): [359..360]
 a123(r177): [359..376]
 a124(r182): [361..362]
 a125(r181): [363..364]
 a126(r308): [365..366]
 a127(r180): [365..368]
 a128(r179): [369..370]
 a129(r178): [371..372]
 a130(r307): [373..374]
 a131(r176): [377..378]
 a132(r175): [379..380]
 a133(r306): [381..382]
 a134(r174): [381..384]
 a135(r173): [385..386]
 a136(r172): [387..388]
 a137(r305): [389..390]
 a138(r170): [393..394]
 a139(r165): [393..408]
 a140(r169): [395..396]
 a141(r168): [397..398]
 a142(r304): [399..400]
 a143(r167): [399..402]
 a144(r166): [403..404]
 a145(r303): [405..406]
 a146(r164): [409..410]
 a147(r163): [411..412]
 a148(r302): [413..414]
 a149(r162): [413..416]
 a150(r161): [417..418]
 a151(r301): [419..420]
 a152(r160): [426..427]
 a153(r300): [428..429]
 a154(r299): [432..433]
 a155(r159): [438..441]
 a156(r153): [440..457]
 a157(r158): [442..443]
 a158(r157): [444..445]
 a159(r298): [446..447]
 a160(r156): [446..449]
 a161(r155): [450..451]
 a162(r154): [452..453]
 a163(r297): [454..455]
 a164(r152): [458..459]
 a165(r151): [460..461]
 a166(r296): [462..463]
 a167(r150): [462..465]
 a168(r149): [466..467]
 a169(r295): [468..469]
 a170(r294): [472..473]
 a171(r148): [478..479]
 a172(r147): [480..481]
 a173(r134): [480..515]
 a174(r146): [482..483]
 a175(r140): [482..499]
 a176(r145): [484..485]
 a177(r144): [486..487]
 a178(r293): [488..489]
 a179(r143): [488..491]
 a180(r142): [492..493]
 a181(r141): [494..495]
 a182(r292): [496..497]
 a183(r139): [500..501]
 a184(r138): [502..503]
 a185(r291): [504..505]
 a186(r137): [504..507]
 a187(r136): [508..509]
 a188(r135): [510..511]
 a189(r290): [512..513]
 a190(r133): [516..517]
 a191(r128): [516..531]
 a192(r132): [518..519]
 a193(r131): [520..521]
 a194(r289): [522..523]
 a195(r130): [522..525]
 a196(r129): [526..527]
 a197(r288): [528..529]
 a198(r127): [532..533]
 a199(r126): [534..535]
 a200(r287): [536..537]
 a201(r125): [536..539]
 a202(r124): [540..541]
 a203(r286): [542..543]
 a204(r285): [546..547]
 a205(r123): [552..555]
 a206(r117): [554..571]
 a207(r122): [556..557]
 a208(r121): [558..559]
 a209(r284): [560..561]
 a210(r120): [560..563]
 a211(r119): [564..565]
 a212(r118): [566..567]
 a213(r283): [568..569]
 a214(r116): [572..573]
 a215(r115): [574..575]
 a216(r282): [576..577]
 a217(r114): [576..579]
 a218(r113): [580..581]
 a219(r281): [582..583]
 a220(r280): [586..587]
 a221(r112): [592..593]
 a222(r111): [594..595]
 a223(r98): [594..629]
 a224(r110): [596..597]
 a225(r104): [596..613]
 a226(r109): [598..599]
 a227(r108): [600..601]
 a228(r279): [602..603]
 a229(r107): [602..605]
 a230(r106): [606..607]
 a231(r105): [608..609]
 a232(r278): [610..611]
 a233(r103): [614..615]
 a234(r102): [616..617]
 a235(r277): [618..619]
 a236(r101): [618..621]
 a237(r100): [622..623]
 a238(r99): [624..625]
 a239(r276): [626..627]
 a240(r97): [630..631]
 a241(r92): [630..645]
 a242(r96): [632..633]
 a243(r95): [634..635]
 a244(r275): [636..637]
 a245(r94): [636..639]
 a246(r93): [640..641]
 a247(r274): [642..643]
 a248(r91): [646..647]
 a249(r90): [648..649]
 a250(r273): [650..651]
 a251(r89): [650..653]
 a252(r88): [654..655]
 a253(r272): [656..657]
 a254(r87): [12..13]
 a255(r271): [14..15]
 a256(r270): [663..664]
 a257(r269): [667..668]
 a258(r268): [671..672]
 a259(r267): [675..676]
 a260(r266): [679..680]
 a261(r265): [683..684]
 a262(r264): [687..688]
 a263(r263): [691..692]
 a264(r262): [695..696]
 a265(r261): [699..700]
 a266(r260): [703..704]
 a267(r259): [707..708]
Compressing live ranges: from 723 to 428 - 59%
Ranges after the compression:
 a0(r258): [0..1]
 a1(r257): [2..3]
 a2(r252): [8..15]
 a3(r256): [8..9]
 a4(r255): [10..11]
 a5(r253): [10..15]
 a6(r254): [12..13]
 a7(r354): [14..15]
 a8(r353): [16..17]
 a9(r251): [16..17]
 a10(r250): [18..19]
 a11(r249): [20..21]
 a12(r352): [22..23]
 a13(r244): [24..31]
 a14(r248): [24..25]
 a15(r247): [26..27]
 a16(r245): [26..31]
 a17(r246): [28..29]
 a18(r351): [30..31]
 a19(r350): [32..33]
 a20(r243): [32..33]
 a21(r242): [34..35]
 a22(r349): [36..37]
 a23(r237): [38..45]
 a24(r241): [38..39]
 a25(r240): [40..41]
 a26(r238): [40..45]
 a27(r239): [42..43]
 a28(r348): [44..45]
 a29(r347): [46..47]
 a30(r236): [46..47]
 a31(r235): [48..49]
 a32(r234): [50..51]
 a33(r346): [52..53]
 a34(r229): [54..61]
 a35(r233): [54..55]
 a36(r232): [56..57]
 a37(r230): [56..61]
 a38(r231): [58..59]
 a39(r345): [60..61]
 a40(r344): [62..63]
 a41(r228): [62..63]
 a42(r227): [64..65]
 a43(r343): [66..67]
 a44(r341): [68..69]
 a45(r342): [70..71]
 a46(r339): [72..73]
 a47(r340): [74..75]
 a48(r222): [76..83]
 a49(r226): [76..77]
 a50(r225): [78..79]
 a51(r223): [78..83]
 a52(r224): [80..81]
 a53(r338): [82..83]
 a54(r337): [84..85]
 a55(r221): [84..85]
 a56(r220): [86..87]
 a57(r219): [88..89]
 a58(r336): [90..91]
 a59(r214): [92..99]
 a60(r218): [92..93]
 a61(r217): [94..95]
 a62(r215): [94..99]
 a63(r216): [96..97]
 a64(r335): [98..99]
 a65(r334): [100..101]
 a66(r213): [100..101]
 a67(r212): [102..103]
 a68(r333): [104..105]
 a69(r331): [106..107]
 a70(r332): [108..109]
 a71(r329): [110..111]
 a72(r330): [112..113]
 a73(r328): [114..115]
 a74(r327): [116..117]
 a75(r207): [118..125]
 a76(r211): [118..119]
 a77(r210): [120..121]
 a78(r208): [120..125]
 a79(r209): [122..123]
 a80(r326): [124..125]
 a81(r325): [126..127]
 a82(r206): [126..127]
 a83(r205): [128..129]
 a84(r204): [130..131]
 a85(r324): [132..133]
 a86(r199): [134..141]
 a87(r203): [134..135]
 a88(r202): [136..137]
 a89(r200): [136..141]
 a90(r201): [138..139]
 a91(r323): [140..141]
 a92(r322): [142..143]
 a93(r198): [142..143]
 a94(r197): [144..145]
 a95(r321): [146..147]
 a96(r319): [148..149]
 a97(r320): [150..151]
 a98(r317): [152..153]
 a99(r318): [154..155]
 a100(r316): [156..157]
 a101(r315): [158..159]
 a102(r314): [160..161]
 a103(r196): [162..163]
 a104(r190): [162..175]
 a105(r195): [164..165]
 a106(r194): [166..167]
 a107(r313): [168..169]
 a108(r193): [168..169]
 a109(r192): [170..171]
 a110(r191): [172..173]
 a111(r312): [174..175]
 a112(r189): [176..177]
 a113(r188): [178..179]
 a114(r311): [180..181]
 a115(r187): [180..181]
 a116(r186): [182..183]
 a117(r310): [184..185]
 a118(r309): [186..187]
 a119(r185): [188..189]
 a120(r184): [190..191]
 a121(r171): [190..217]
 a122(r183): [192..193]
 a123(r177): [192..205]
 a124(r182): [194..195]
 a125(r181): [196..197]
 a126(r308): [198..199]
 a127(r180): [198..199]
 a128(r179): [200..201]
 a129(r178): [202..203]
 a130(r307): [204..205]
 a131(r176): [206..207]
 a132(r175): [208..209]
 a133(r306): [210..211]
 a134(r174): [210..211]
 a135(r173): [212..213]
 a136(r172): [214..215]
 a137(r305): [216..217]
 a138(r170): [218..219]
 a139(r165): [218..229]
 a140(r169): [220..221]
 a141(r168): [222..223]
 a142(r304): [224..225]
 a143(r167): [224..225]
 a144(r166): [226..227]
 a145(r303): [228..229]
 a146(r164): [230..231]
 a147(r163): [232..233]
 a148(r302): [234..235]
 a149(r162): [234..235]
 a150(r161): [236..237]
 a151(r301): [238..239]
 a152(r160): [240..241]
 a153(r300): [242..243]
 a154(r299): [244..245]
 a155(r159): [246..247]
 a156(r153): [246..259]
 a157(r158): [248..249]
 a158(r157): [250..251]
 a159(r298): [252..253]
 a160(r156): [252..253]
 a161(r155): [254..255]
 a162(r154): [256..257]
 a163(r297): [258..259]
 a164(r152): [260..261]
 a165(r151): [262..263]
 a166(r296): [264..265]
 a167(r150): [264..265]
 a168(r149): [266..267]
 a169(r295): [268..269]
 a170(r294): [270..271]
 a171(r148): [272..273]
 a172(r147): [274..275]
 a173(r134): [274..301]
 a174(r146): [276..277]
 a175(r140): [276..289]
 a176(r145): [278..279]
 a177(r144): [280..281]
 a178(r293): [282..283]
 a179(r143): [282..283]
 a180(r142): [284..285]
 a181(r141): [286..287]
 a182(r292): [288..289]
 a183(r139): [290..291]
 a184(r138): [292..293]
 a185(r291): [294..295]
 a186(r137): [294..295]
 a187(r136): [296..297]
 a188(r135): [298..299]
 a189(r290): [300..301]
 a190(r133): [302..303]
 a191(r128): [302..313]
 a192(r132): [304..305]
 a193(r131): [306..307]
 a194(r289): [308..309]
 a195(r130): [308..309]
 a196(r129): [310..311]
 a197(r288): [312..313]
 a198(r127): [314..315]
 a199(r126): [316..317]
 a200(r287): [318..319]
 a201(r125): [318..319]
 a202(r124): [320..321]
 a203(r286): [322..323]
 a204(r285): [324..325]
 a205(r123): [326..327]
 a206(r117): [326..339]
 a207(r122): [328..329]
 a208(r121): [330..331]
 a209(r284): [332..333]
 a210(r120): [332..333]
 a211(r119): [334..335]
 a212(r118): [336..337]
 a213(r283): [338..339]
 a214(r116): [340..341]
 a215(r115): [342..343]
 a216(r282): [344..345]
 a217(r114): [344..345]
 a218(r113): [346..347]
 a219(r281): [348..349]
 a220(r280): [350..351]
 a221(r112): [352..353]
 a222(r111): [354..355]
 a223(r98): [354..381]
 a224(r110): [356..357]
 a225(r104): [356..369]
 a226(r109): [358..359]
 a227(r108): [360..361]
 a228(r279): [362..363]
 a229(r107): [362..363]
 a230(r106): [364..365]
 a231(r105): [366..367]
 a232(r278): [368..369]
 a233(r103): [370..371]
 a234(r102): [372..373]
 a235(r277): [374..375]
 a236(r101): [374..375]
 a237(r100): [376..377]
 a238(r99): [378..379]
 a239(r276): [380..381]
 a240(r97): [382..383]
 a241(r92): [382..393]
 a242(r96): [384..385]
 a243(r95): [386..387]
 a244(r275): [388..389]
 a245(r94): [388..389]
 a246(r93): [390..391]
 a247(r274): [392..393]
 a248(r91): [394..395]
 a249(r90): [396..397]
 a250(r273): [398..399]
 a251(r89): [398..399]
 a252(r88): [400..401]
 a253(r272): [402..403]
 a254(r87): [4..5]
 a255(r271): [6..7]
 a256(r270): [404..405]
 a257(r269): [406..407]
 a258(r268): [408..409]
 a259(r267): [410..411]
 a260(r266): [412..413]
 a261(r265): [414..415]
 a262(r264): [416..417]
 a263(r263): [418..419]
 a264(r262): [420..421]
 a265(r261): [422..423]
 a266(r260): [424..425]
 a267(r259): [426..427]
  pref0:a7(r354)<-hr21@1
  pref1:a18(r351)<-hr21@1
  pref2:a28(r348)<-hr21@1
  pref3:a39(r345)<-hr21@1
  pref4:a53(r338)<-hr21@1
  pref5:a64(r335)<-hr21@1
  pref6:a80(r326)<-hr21@1
  pref7:a91(r323)<-hr21@1
  pref8:a102(r314)<-hr21@1
  pref9:a118(r309)<-hr21@1
  pref10:a154(r299)<-hr21@1
  pref11:a170(r294)<-hr21@1
  pref12:a204(r285)<-hr21@1
  pref13:a220(r280)<-hr21@1
  regions=1, blocks=15, points=428
    allocnos=268 (big 0), copies=0, conflicts=0, ranges=268
Disposition:
  254:r87  l0     0  252:r88  l0     0  251:r89  l0     1  249:r90  l0     0
  248:r91  l0    21  241:r92  l0    22  246:r93  l0     0  245:r94  l0     1
  243:r95  l0     0  242:r96  l0    21  240:r97  l0    21  223:r98  l0    22
  238:r99  l0     0  237:r100 l0     0  236:r101 l0     1  234:r102 l0     0
  233:r103 l0    21  225:r104 l0    23  231:r105 l0     0  230:r106 l0     0
  229:r107 l0     1  227:r108 l0     0  226:r109 l0    21  224:r110 l0    21
  222:r111 l0    21  221:r112 l0    21  218:r113 l0     0  217:r114 l0     1
  215:r115 l0     0  214:r116 l0    21  206:r117 l0    22  212:r118 l0     0
  211:r119 l0     0  210:r120 l0     1  208:r121 l0     0  207:r122 l0    21
  205:r123 l0    21  202:r124 l0     0  201:r125 l0     1  199:r126 l0     0
  198:r127 l0    21  191:r128 l0    22  196:r129 l0     0  195:r130 l0     1
  193:r131 l0     0  192:r132 l0    21  190:r133 l0    21  173:r134 l0    22
  188:r135 l0     0  187:r136 l0     0  186:r137 l0     1  184:r138 l0     0
  183:r139 l0    21  175:r140 l0    23  181:r141 l0     0  180:r142 l0     0
  179:r143 l0     1  177:r144 l0     0  176:r145 l0    21  174:r146 l0    21
  172:r147 l0    21  171:r148 l0    21  168:r149 l0     0  167:r150 l0     1
  165:r151 l0     0  164:r152 l0    21  156:r153 l0    22  162:r154 l0     0
  161:r155 l0     0  160:r156 l0     1  158:r157 l0     0  157:r158 l0    21
  155:r159 l0    21  152:r160 l0     0  150:r161 l0     0  149:r162 l0     1
  147:r163 l0     0  146:r164 l0    21  139:r165 l0    22  144:r166 l0     0
  143:r167 l0     1  141:r168 l0     0  140:r169 l0    21  138:r170 l0    21
  121:r171 l0    22  136:r172 l0     0  135:r173 l0     0  134:r174 l0     1
  132:r175 l0     0  131:r176 l0    21  123:r177 l0    23  129:r178 l0     0
  128:r179 l0     0  127:r180 l0     1  125:r181 l0     0  124:r182 l0    21
  122:r183 l0    21  120:r184 l0    21  119:r185 l0    21  116:r186 l0     0
  115:r187 l0     1  113:r188 l0     0  112:r189 l0    21  104:r190 l0    22
  110:r191 l0     0  109:r192 l0     0  108:r193 l0     1  106:r194 l0     0
  105:r195 l0    21  103:r196 l0    21   94:r197 l0     0   93:r198 l0     1
   86:r199 l0     3   89:r200 l0   mem   90:r201 l0    21   88:r202 l0    21
   87:r203 l0    21   84:r204 l0     0   83:r205 l0     0   82:r206 l0     1
   75:r207 l0     3   78:r208 l0   mem   79:r209 l0    21   77:r210 l0    21
   76:r211 l0    21   67:r212 l0     0   66:r213 l0     1   59:r214 l0     3
   62:r215 l0   mem   63:r216 l0    21   61:r217 l0    21   60:r218 l0    21
   57:r219 l0     0   56:r220 l0     0   55:r221 l0     1   48:r222 l0     3
   51:r223 l0   mem   52:r224 l0    21   50:r225 l0    21   49:r226 l0    21
   42:r227 l0     0   41:r228 l0     1   34:r229 l0     3   37:r230 l0   mem
   38:r231 l0    21   36:r232 l0    21   35:r233 l0    21   32:r234 l0     0
   31:r235 l0     0   30:r236 l0     1   23:r237 l0     3   26:r238 l0   mem
   27:r239 l0    21   25:r240 l0    21   24:r241 l0    21   21:r242 l0     0
   20:r243 l0     1   13:r244 l0     3   16:r245 l0   mem   17:r246 l0    21
   15:r247 l0    21   14:r248 l0    21   11:r249 l0     0   10:r250 l0     0
    9:r251 l0     1    2:r252 l0     3    5:r253 l0   mem    6:r254 l0    21
    4:r255 l0    21    3:r256 l0    21    1:r257 l0     0    0:r258 l0     0
  267:r259 l0    21  266:r260 l0    21  265:r261 l0    21  264:r262 l0    21
  263:r263 l0    21  262:r264 l0    21  261:r265 l0    21  260:r266 l0    21
  259:r267 l0    21  258:r268 l0    21  257:r269 l0    21  256:r270 l0    21
  255:r271 l0     0  253:r272 l0     0  250:r273 l0     0  247:r274 l0     0
  244:r275 l0     0  239:r276 l0     0  235:r277 l0     0  232:r278 l0     0
  228:r279 l0     0  220:r280 l0     0  219:r281 l0     0  216:r282 l0     0
  213:r283 l0     0  209:r284 l0     0  204:r285 l0     0  203:r286 l0     0
  200:r287 l0     0  197:r288 l0     0  194:r289 l0     0  189:r290 l0     0
  185:r291 l0     0  182:r292 l0     0  178:r293 l0     0  170:r294 l0     0
  169:r295 l0     0  166:r296 l0     0  163:r297 l0     0  159:r298 l0     0
  154:r299 l0     0  153:r300 l0     0  151:r301 l0     0  148:r302 l0     0
  145:r303 l0     0  142:r304 l0     0  137:r305 l0     0  133:r306 l0     0
  130:r307 l0     0  126:r308 l0     0  118:r309 l0     0  117:r310 l0     0
  114:r311 l0     0  111:r312 l0     0  107:r313 l0     0  102:r314 l0     0
  101:r315 l0    21  100:r316 l0    21   98:r317 l0    21   99:r318 l0    21
   96:r319 l0    21   97:r320 l0    21   95:r321 l0     0   92:r322 l0     0
   91:r323 l0     0   85:r324 l0     0   81:r325 l0     0   80:r326 l0     0
   74:r327 l0    21   73:r328 l0    21   71:r329 l0    21   72:r330 l0    21
   69:r331 l0    21   70:r332 l0    21   68:r333 l0     0   65:r334 l0     0
   64:r335 l0     0   58:r336 l0     0   54:r337 l0     0   53:r338 l0     0
   46:r339 l0    21   47:r340 l0    21   44:r341 l0    21   45:r342 l0    21
   43:r343 l0     0   40:r344 l0     0   39:r345 l0     0   33:r346 l0     0
   29:r347 l0     0   28:r348 l0     0   22:r349 l0     0   19:r350 l0     0
   18:r351 l0     0   12:r352 l0     0    8:r353 l0     0    7:r354 l0     0
+++Costs: overall 91, reg -29, mem 120, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int quecc(float*, float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8]
;;  ref usage 	r0={16d,2u} r1={15d,1u} r2={15d,1u} r4={15d,1u} r5={15d,1u} r6={1d,14u} r7={1d,28u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,13u} r17={84d,4u} r18={14d} r19={14d} r20={1d,135u,26e} r21={29d,28u} r22={18d,3u} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={15d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={15d,1u} r38={15d} r39={14d} r40={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u,1e} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u,1e} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u,1e} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u,1e} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u,1e} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1e} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u,1e} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u,1e} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u,1e} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u,1e} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u,1e} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u,1e} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u,1e} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u,1e} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u,1e} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u,1e} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} 
;;    total ref usage 1935{1383d,500u,52e} in 355{341 regular + 14 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 259 260 261 262 263 264 265 266 267 268 269 270
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) preproc.cpp:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) preproc.cpp:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
        (reg:DI 1 dx [ scratch ])) preproc.cpp:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ scratch ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 procpar_info+0 S8 A64])
        (reg:DI 2 cx [ procpar_info ])) preproc.cpp:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ procpar_info ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 preprocess+0 S8 A64])
        (reg:DI 37 r8 [ preprocess ])) preproc.cpp:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ preprocess ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:490 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DF 259)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:491 128 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 259)) preproc.cpp:491 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 259)
        (nil)))
(insn 13 12 14 2 (set (reg:DF 260)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:491 128 {*movdf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 260)) preproc.cpp:491 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 260)
        (nil)))
(insn 15 14 16 2 (set (reg:DF 261)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:491 128 {*movdf_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 261)) preproc.cpp:491 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 261)
        (nil)))
(insn 17 16 18 2 (set (reg:DF 262)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:491 128 {*movdf_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 262)) preproc.cpp:491 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 262)
        (nil)))
(insn 19 18 20 2 (set (reg:DF 263)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:492 128 {*movdf_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])
        (reg:DF 263)) preproc.cpp:492 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 263)
        (nil)))
(insn 21 20 22 2 (set (reg:DF 264)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:492 128 {*movdf_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 264)) preproc.cpp:492 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 264)
        (nil)))
(insn 23 22 24 2 (set (reg:DF 265)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:492 128 {*movdf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 265)) preproc.cpp:492 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 265)
        (nil)))
(insn 25 24 26 2 (set (reg:DF 266)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:492 128 {*movdf_internal}
     (nil))
(insn 26 25 27 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 266)) preproc.cpp:492 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 266)
        (nil)))
(insn 27 26 28 2 (set (reg:DF 267)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:493 128 {*movdf_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 267)) preproc.cpp:493 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 267)
        (nil)))
(insn 29 28 30 2 (set (reg:DF 268)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:493 128 {*movdf_internal}
     (nil))
(insn 30 29 31 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 268)) preproc.cpp:493 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 268)
        (nil)))
(insn 31 30 32 2 (set (reg:DF 269)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:494 128 {*movdf_internal}
     (nil))
(insn 32 31 33 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 269)) preproc.cpp:494 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 269)
        (nil)))
(insn 33 32 34 2 (set (reg:DF 270)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:494 128 {*movdf_internal}
     (nil))
(insn 34 33 35 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 270)) preproc.cpp:494 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 270)
        (nil)))
(insn 35 34 381 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
        (const_int 0 [0])) preproc.cpp:496 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              13 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 271
(code_label 381 35 36 3 102 "" [1 uses])
(note 36 381 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 3 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 procpar_info+0 S8 A64])) preproc.cpp:496 89 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (set (reg:SI 87 [ D.6923 ])
        (mem/j:SI (plus:DI (reg/f:DI 271)
                (const_int 300 [0x12c])) [0 procpar_info_21(D)->num_points+0 S4 A32])) preproc.cpp:496 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 271)
        (nil)))
(insn 39 38 40 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.6923 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32]))) preproc.cpp:496 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6923 ])
        (nil)))
(jump_insn 40 39 41 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) preproc.cpp:496 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 384)
;;  succ:       14
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:498 90 {*movsi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 88 [ D.6924 ])
        (sign_extend:DI (reg:SI 272))) preproc.cpp:498 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 272)
        (nil)))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 89 [ D.6924 ])
                (ashift:DI (reg:DI 88 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:498 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 4 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:498 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 90 [ D.6925 ])
                (plus:DI (reg:DI 89 [ D.6924 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (expr_list:REG_DEAD (reg:DI 89 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 89 [ D.6924 ]))
                    (nil))))))
(insn 47 46 48 4 (set (reg:SF 91 [ D.6926 ])
        (mem:SF (reg/f:DI 90 [ D.6925 ]) [0 *_26+0 S4 A32])) preproc.cpp:498 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6925 ])
        (nil)))
(insn 48 47 49 4 (set (reg:DF 92 [ D.6927 ])
        (float_extend:DF (reg:SF 91 [ D.6926 ]))) preproc.cpp:498 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 91 [ D.6926 ])
        (nil)))
(insn 49 48 50 4 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:498 90 {*movsi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 93 [ D.6924 ])
        (sign_extend:DI (reg:SI 274))) preproc.cpp:498 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 94 [ D.6924 ])
                (ashift:DI (reg:DI 93 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:498 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 4 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:498 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg/f:DI 95 [ D.6925 ])
                (plus:DI (reg:DI 94 [ D.6924 ])
                    (reg/f:DI 275)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:DI 94 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 94 [ D.6924 ]))
                    (nil))))))
(insn 54 53 55 4 (set (reg:SF 96 [ D.6926 ])
        (mem:SF (reg/f:DI 95 [ D.6925 ]) [0 *_31+0 S4 A32])) preproc.cpp:498 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6925 ])
        (nil)))
(insn 55 54 56 4 (set (reg:DF 97 [ D.6927 ])
        (float_extend:DF (reg:SF 96 [ D.6926 ]))) preproc.cpp:498 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 96 [ D.6926 ])
        (nil)))
(insn 56 55 57 4 (set (reg:DF 98 [ D.6927 ])
        (mult:DF (reg:DF 92 [ D.6927 ])
            (reg:DF 97 [ D.6927 ]))) preproc.cpp:498 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 92 [ D.6927 ])
            (nil))))
(insn 57 56 58 4 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:499 90 {*movsi_internal}
     (nil))
(insn 58 57 59 4 (set (reg:DI 99 [ D.6928 ])
        (sign_extend:DI (reg:SI 276))) preproc.cpp:499 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))
(insn 59 58 60 4 (parallel [
            (set (reg:DI 100 [ D.6928 ])
                (plus:DI (reg:DI 99 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 4 (parallel [
            (set (reg:DI 101 [ D.6928 ])
                (ashift:DI (reg:DI 100 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:499 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 4 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:499 89 {*movdi_internal}
     (nil))
(insn 62 61 63 4 (parallel [
            (set (reg/f:DI 102 [ D.6925 ])
                (plus:DI (reg:DI 101 [ D.6928 ])
                    (reg/f:DI 277)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (expr_list:REG_DEAD (reg:DI 101 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 101 [ D.6928 ]))
                    (nil))))))
(insn 63 62 64 4 (set (reg:SF 103 [ D.6926 ])
        (mem:SF (reg/f:DI 102 [ D.6925 ]) [0 *_38+0 S4 A32])) preproc.cpp:499 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.6925 ])
        (nil)))
(insn 64 63 65 4 (set (reg:DF 104 [ D.6927 ])
        (float_extend:DF (reg:SF 103 [ D.6926 ]))) preproc.cpp:499 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 103 [ D.6926 ])
        (nil)))
(insn 65 64 66 4 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:499 90 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:DI 105 [ D.6928 ])
        (sign_extend:DI (reg:SI 278))) preproc.cpp:499 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(insn 67 66 68 4 (parallel [
            (set (reg:DI 106 [ D.6928 ])
                (plus:DI (reg:DI 105 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 107 [ D.6928 ])
                (ashift:DI (reg:DI 106 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:499 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 4 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:499 89 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (parallel [
            (set (reg/f:DI 108 [ D.6925 ])
                (plus:DI (reg:DI 107 [ D.6928 ])
                    (reg/f:DI 279)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:499 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 279)
        (expr_list:REG_DEAD (reg:DI 107 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 107 [ D.6928 ]))
                    (nil))))))
(insn 71 70 72 4 (set (reg:SF 109 [ D.6926 ])
        (mem:SF (reg/f:DI 108 [ D.6925 ]) [0 *_44+0 S4 A32])) preproc.cpp:499 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.6925 ])
        (nil)))
(insn 72 71 73 4 (set (reg:DF 110 [ D.6927 ])
        (float_extend:DF (reg:SF 109 [ D.6926 ]))) preproc.cpp:499 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 109 [ D.6926 ])
        (nil)))
(insn 73 72 74 4 (set (reg:DF 111 [ D.6927 ])
        (mult:DF (reg:DF 104 [ D.6927 ])
            (reg:DF 110 [ D.6927 ]))) preproc.cpp:499 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 110 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 104 [ D.6927 ])
            (nil))))
(insn 74 73 75 4 (set (reg:DF 112 [ D.6927 ])
        (plus:DF (reg:DF 98 [ D.6927 ])
            (reg:DF 111 [ D.6927 ]))) preproc.cpp:498 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 111 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 98 [ D.6927 ])
            (nil))))
(insn 75 74 76 4 (set (reg:DF 21 xmm0)
        (reg:DF 112 [ D.6927 ])) preproc.cpp:499 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 112 [ D.6927 ])
        (nil)))
(call_insn 76 75 77 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:499 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 77 76 78 4 (set (reg:DF 280)
        (reg:DF 21 xmm0)) preproc.cpp:499 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 78 77 79 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 280)) preproc.cpp:499 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 280)
        (nil)))
(insn 79 78 80 4 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:501 90 {*movsi_internal}
     (nil))
(insn 80 79 81 4 (set (reg:DI 113 [ D.6924 ])
        (sign_extend:DI (reg:SI 281))) preproc.cpp:501 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 281)
        (nil)))
(insn 81 80 82 4 (parallel [
            (set (reg:DI 114 [ D.6924 ])
                (ashift:DI (reg:DI 113 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:501 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 4 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:501 89 {*movdi_internal}
     (nil))
(insn 83 82 84 4 (parallel [
            (set (reg/f:DI 115 [ D.6925 ])
                (plus:DI (reg:DI 114 [ D.6924 ])
                    (reg/f:DI 282)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:501 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 282)
        (expr_list:REG_DEAD (reg:DI 114 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 114 [ D.6924 ]))
                    (nil))))))
(insn 84 83 85 4 (set (reg:SF 116 [ D.6926 ])
        (mem:SF (reg/f:DI 115 [ D.6925 ]) [0 *_53+0 S4 A32])) preproc.cpp:501 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.6925 ])
        (nil)))
(insn 85 84 86 4 (set (reg:DF 117 [ D.6927 ])
        (float_extend:DF (reg:SF 116 [ D.6926 ]))) preproc.cpp:501 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 116 [ D.6926 ])
        (nil)))
(insn 86 85 87 4 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:501 90 {*movsi_internal}
     (nil))
(insn 87 86 88 4 (set (reg:DI 118 [ D.6928 ])
        (sign_extend:DI (reg:SI 283))) preproc.cpp:501 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 283)
        (nil)))
(insn 88 87 89 4 (parallel [
            (set (reg:DI 119 [ D.6928 ])
                (plus:DI (reg:DI 118 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:501 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 4 (parallel [
            (set (reg:DI 120 [ D.6928 ])
                (ashift:DI (reg:DI 119 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:501 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 4 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:501 89 {*movdi_internal}
     (nil))
(insn 91 90 92 4 (parallel [
            (set (reg/f:DI 121 [ D.6925 ])
                (plus:DI (reg:DI 120 [ D.6928 ])
                    (reg/f:DI 284)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:501 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 284)
        (expr_list:REG_DEAD (reg:DI 120 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 120 [ D.6928 ]))
                    (nil))))))
(insn 92 91 93 4 (set (reg:SF 122 [ D.6926 ])
        (mem:SF (reg/f:DI 121 [ D.6925 ]) [0 *_59+0 S4 A32])) preproc.cpp:501 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.6925 ])
        (nil)))
(insn 93 92 94 4 (set (reg:DF 123 [ D.6927 ])
        (float_extend:DF (reg:SF 122 [ D.6926 ]))) preproc.cpp:501 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 122 [ D.6926 ])
        (nil)))
(insn 94 93 95 4 (set (reg:DF 22 xmm1)
        (reg:DF 117 [ D.6927 ])) preproc.cpp:501 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 117 [ D.6927 ])
        (nil)))
(insn 95 94 96 4 (set (reg:DF 21 xmm0)
        (reg:DF 123 [ D.6927 ])) preproc.cpp:501 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 123 [ D.6927 ])
        (nil)))
(call_insn 96 95 97 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:501 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 97 96 98 4 (set (reg:DF 285)
        (reg:DF 21 xmm0)) preproc.cpp:501 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 98 97 99 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])
        (reg:DF 285)) preproc.cpp:501 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 285)
        (nil)))
(insn 99 98 100 4 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:503 90 {*movsi_internal}
     (nil))
(insn 100 99 101 4 (set (reg:DI 124 [ D.6924 ])
        (sign_extend:DI (reg:SI 286))) preproc.cpp:503 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
(insn 101 100 102 4 (parallel [
            (set (reg:DI 125 [ D.6924 ])
                (ashift:DI (reg:DI 124 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:503 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 4 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:503 89 {*movdi_internal}
     (nil))
(insn 103 102 104 4 (parallel [
            (set (reg/f:DI 126 [ D.6925 ])
                (plus:DI (reg:DI 125 [ D.6924 ])
                    (reg/f:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:503 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 287)
        (expr_list:REG_DEAD (reg:DI 125 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 125 [ D.6924 ]))
                    (nil))))))
(insn 104 103 105 4 (set (reg:SF 127 [ D.6926 ])
        (mem:SF (reg/f:DI 126 [ D.6925 ]) [0 *_67+0 S4 A32])) preproc.cpp:503 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.6925 ])
        (nil)))
(insn 105 104 106 4 (set (reg:DF 128 [ D.6927 ])
        (float_extend:DF (reg:SF 127 [ D.6926 ]))) preproc.cpp:503 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 127 [ D.6926 ])
        (nil)))
(insn 106 105 107 4 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:503 90 {*movsi_internal}
     (nil))
(insn 107 106 108 4 (set (reg:DI 129 [ D.6924 ])
        (sign_extend:DI (reg:SI 288))) preproc.cpp:503 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 288)
        (nil)))
(insn 108 107 109 4 (parallel [
            (set (reg:DI 130 [ D.6924 ])
                (ashift:DI (reg:DI 129 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:503 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 4 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:503 89 {*movdi_internal}
     (nil))
(insn 110 109 111 4 (parallel [
            (set (reg/f:DI 131 [ D.6925 ])
                (plus:DI (reg:DI 130 [ D.6924 ])
                    (reg/f:DI 289)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:503 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 289)
        (expr_list:REG_DEAD (reg:DI 130 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 130 [ D.6924 ]))
                    (nil))))))
(insn 111 110 112 4 (set (reg:SF 132 [ D.6926 ])
        (mem:SF (reg/f:DI 131 [ D.6925 ]) [0 *_72+0 S4 A32])) preproc.cpp:503 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.6925 ])
        (nil)))
(insn 112 111 113 4 (set (reg:DF 133 [ D.6927 ])
        (float_extend:DF (reg:SF 132 [ D.6926 ]))) preproc.cpp:503 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 132 [ D.6926 ])
        (nil)))
(insn 113 112 114 4 (set (reg:DF 134 [ D.6927 ])
        (mult:DF (reg:DF 128 [ D.6927 ])
            (reg:DF 133 [ D.6927 ]))) preproc.cpp:503 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 133 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 128 [ D.6927 ])
            (nil))))
(insn 114 113 115 4 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:504 90 {*movsi_internal}
     (nil))
(insn 115 114 116 4 (set (reg:DI 135 [ D.6928 ])
        (sign_extend:DI (reg:SI 290))) preproc.cpp:504 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 116 115 117 4 (parallel [
            (set (reg:DI 136 [ D.6928 ])
                (plus:DI (reg:DI 135 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:504 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 117 116 118 4 (parallel [
            (set (reg:DI 137 [ D.6928 ])
                (ashift:DI (reg:DI 136 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:504 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 118 117 119 4 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:504 89 {*movdi_internal}
     (nil))
(insn 119 118 120 4 (parallel [
            (set (reg/f:DI 138 [ D.6925 ])
                (plus:DI (reg:DI 137 [ D.6928 ])
                    (reg/f:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:504 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (expr_list:REG_DEAD (reg:DI 137 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 137 [ D.6928 ]))
                    (nil))))))
(insn 120 119 121 4 (set (reg:SF 139 [ D.6926 ])
        (mem:SF (reg/f:DI 138 [ D.6925 ]) [0 *_79+0 S4 A32])) preproc.cpp:504 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.6925 ])
        (nil)))
(insn 121 120 122 4 (set (reg:DF 140 [ D.6927 ])
        (float_extend:DF (reg:SF 139 [ D.6926 ]))) preproc.cpp:504 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 139 [ D.6926 ])
        (nil)))
(insn 122 121 123 4 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:504 90 {*movsi_internal}
     (nil))
(insn 123 122 124 4 (set (reg:DI 141 [ D.6928 ])
        (sign_extend:DI (reg:SI 292))) preproc.cpp:504 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 292)
        (nil)))
(insn 124 123 125 4 (parallel [
            (set (reg:DI 142 [ D.6928 ])
                (plus:DI (reg:DI 141 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:504 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 124 126 4 (parallel [
            (set (reg:DI 143 [ D.6928 ])
                (ashift:DI (reg:DI 142 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:504 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 4 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:504 89 {*movdi_internal}
     (nil))
(insn 127 126 128 4 (parallel [
            (set (reg/f:DI 144 [ D.6925 ])
                (plus:DI (reg:DI 143 [ D.6928 ])
                    (reg/f:DI 293)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:504 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 293)
        (expr_list:REG_DEAD (reg:DI 143 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 143 [ D.6928 ]))
                    (nil))))))
(insn 128 127 129 4 (set (reg:SF 145 [ D.6926 ])
        (mem:SF (reg/f:DI 144 [ D.6925 ]) [0 *_85+0 S4 A32])) preproc.cpp:504 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.6925 ])
        (nil)))
(insn 129 128 130 4 (set (reg:DF 146 [ D.6927 ])
        (float_extend:DF (reg:SF 145 [ D.6926 ]))) preproc.cpp:504 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 145 [ D.6926 ])
        (nil)))
(insn 130 129 131 4 (set (reg:DF 147 [ D.6927 ])
        (mult:DF (reg:DF 140 [ D.6927 ])
            (reg:DF 146 [ D.6927 ]))) preproc.cpp:504 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 146 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 140 [ D.6927 ])
            (nil))))
(insn 131 130 132 4 (set (reg:DF 148 [ D.6927 ])
        (plus:DF (reg:DF 134 [ D.6927 ])
            (reg:DF 147 [ D.6927 ]))) preproc.cpp:503 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 134 [ D.6927 ])
            (nil))))
(insn 132 131 133 4 (set (reg:DF 21 xmm0)
        (reg:DF 148 [ D.6927 ])) preproc.cpp:504 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 148 [ D.6927 ])
        (nil)))
(call_insn 133 132 134 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:504 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 134 133 135 4 (set (reg:DF 294)
        (reg:DF 21 xmm0)) preproc.cpp:504 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 135 134 136 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 294)) preproc.cpp:504 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 294)
        (nil)))
(insn 136 135 137 4 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:506 90 {*movsi_internal}
     (nil))
(insn 137 136 138 4 (set (reg:DI 149 [ D.6924 ])
        (sign_extend:DI (reg:SI 295))) preproc.cpp:506 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 295)
        (nil)))
(insn 138 137 139 4 (parallel [
            (set (reg:DI 150 [ D.6924 ])
                (ashift:DI (reg:DI 149 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:506 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 4 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:506 89 {*movdi_internal}
     (nil))
(insn 140 139 141 4 (parallel [
            (set (reg/f:DI 151 [ D.6925 ])
                (plus:DI (reg:DI 150 [ D.6924 ])
                    (reg/f:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (expr_list:REG_DEAD (reg:DI 150 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 150 [ D.6924 ]))
                    (nil))))))
(insn 141 140 142 4 (set (reg:SF 152 [ D.6926 ])
        (mem:SF (reg/f:DI 151 [ D.6925 ]) [0 *_94+0 S4 A32])) preproc.cpp:506 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.6925 ])
        (nil)))
(insn 142 141 143 4 (set (reg:DF 153 [ D.6927 ])
        (float_extend:DF (reg:SF 152 [ D.6926 ]))) preproc.cpp:506 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 152 [ D.6926 ])
        (nil)))
(insn 143 142 144 4 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:506 90 {*movsi_internal}
     (nil))
(insn 144 143 145 4 (set (reg:DI 154 [ D.6928 ])
        (sign_extend:DI (reg:SI 297))) preproc.cpp:506 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 297)
        (nil)))
(insn 145 144 146 4 (parallel [
            (set (reg:DI 155 [ D.6928 ])
                (plus:DI (reg:DI 154 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 146 145 147 4 (parallel [
            (set (reg:DI 156 [ D.6928 ])
                (ashift:DI (reg:DI 155 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:506 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 4 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:506 89 {*movdi_internal}
     (nil))
(insn 148 147 149 4 (parallel [
            (set (reg/f:DI 157 [ D.6925 ])
                (plus:DI (reg:DI 156 [ D.6928 ])
                    (reg/f:DI 298)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:506 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 298)
        (expr_list:REG_DEAD (reg:DI 156 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 156 [ D.6928 ]))
                    (nil))))))
(insn 149 148 150 4 (set (reg:SF 158 [ D.6926 ])
        (mem:SF (reg/f:DI 157 [ D.6925 ]) [0 *_100+0 S4 A32])) preproc.cpp:506 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ D.6925 ])
        (nil)))
(insn 150 149 151 4 (set (reg:DF 159 [ D.6927 ])
        (float_extend:DF (reg:SF 158 [ D.6926 ]))) preproc.cpp:506 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 158 [ D.6926 ])
        (nil)))
(insn 151 150 152 4 (set (reg:DF 22 xmm1)
        (reg:DF 153 [ D.6927 ])) preproc.cpp:506 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 153 [ D.6927 ])
        (nil)))
(insn 152 151 153 4 (set (reg:DF 21 xmm0)
        (reg:DF 159 [ D.6927 ])) preproc.cpp:506 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 159 [ D.6927 ])
        (nil)))
(call_insn 153 152 154 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:506 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 154 153 155 4 (set (reg:DF 299)
        (reg:DF 21 xmm0)) preproc.cpp:506 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 155 154 156 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 299)) preproc.cpp:506 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 299)
        (nil)))
(insn 156 155 157 4 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 preprocess+0 S8 A64])) preproc.cpp:508 89 {*movdi_internal}
     (nil))
(insn 157 156 158 4 (set (reg:SI 160 [ D.6923 ])
        (mem/j:SI (plus:DI (reg/f:DI 300)
                (const_int 44 [0x2c])) [0 preprocess_105(D)->pre_quecc_points+0 S4 A32])) preproc.cpp:508 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (nil)))
(insn 158 157 159 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 160 [ D.6923 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32]))) preproc.cpp:508 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 160 [ D.6923 ])
        (nil)))
(jump_insn 159 158 160 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) preproc.cpp:508 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 316)
;;  succ:       5 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315
(note 160 159 161 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 5 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:510 90 {*movsi_internal}
     (nil))
(insn 162 161 163 5 (set (reg:DI 161 [ D.6924 ])
        (sign_extend:DI (reg:SI 301))) preproc.cpp:510 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 301)
        (nil)))
(insn 163 162 164 5 (parallel [
            (set (reg:DI 162 [ D.6924 ])
                (ashift:DI (reg:DI 161 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:510 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 5 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) preproc.cpp:510 89 {*movdi_internal}
     (nil))
(insn 165 164 166 5 (parallel [
            (set (reg/f:DI 163 [ D.6925 ])
                (plus:DI (reg:DI 162 [ D.6924 ])
                    (reg/f:DI 302)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:510 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 302)
        (expr_list:REG_DEAD (reg:DI 162 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 162 [ D.6924 ]))
                    (nil))))))
(insn 166 165 167 5 (set (reg:SF 164 [ D.6926 ])
        (mem:SF (reg/f:DI 163 [ D.6925 ]) [0 *_110+0 S4 A32])) preproc.cpp:510 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.6925 ])
        (nil)))
(insn 167 166 168 5 (set (reg:DF 165 [ D.6927 ])
        (float_extend:DF (reg:SF 164 [ D.6926 ]))) preproc.cpp:510 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 164 [ D.6926 ])
        (nil)))
(insn 168 167 169 5 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:510 90 {*movsi_internal}
     (nil))
(insn 169 168 170 5 (set (reg:DI 166 [ D.6924 ])
        (sign_extend:DI (reg:SI 303))) preproc.cpp:510 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 303)
        (nil)))
(insn 170 169 171 5 (parallel [
            (set (reg:DI 167 [ D.6924 ])
                (ashift:DI (reg:DI 166 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:510 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 166 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 5 (set (reg/f:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) preproc.cpp:510 89 {*movdi_internal}
     (nil))
(insn 172 171 173 5 (parallel [
            (set (reg/f:DI 168 [ D.6925 ])
                (plus:DI (reg:DI 167 [ D.6924 ])
                    (reg/f:DI 304)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:510 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 304)
        (expr_list:REG_DEAD (reg:DI 167 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 167 [ D.6924 ]))
                    (nil))))))
(insn 173 172 174 5 (set (reg:SF 169 [ D.6926 ])
        (mem:SF (reg/f:DI 168 [ D.6925 ]) [0 *_115+0 S4 A32])) preproc.cpp:510 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.6925 ])
        (nil)))
(insn 174 173 175 5 (set (reg:DF 170 [ D.6927 ])
        (float_extend:DF (reg:SF 169 [ D.6926 ]))) preproc.cpp:510 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 169 [ D.6926 ])
        (nil)))
(insn 175 174 176 5 (set (reg:DF 171 [ D.6927 ])
        (mult:DF (reg:DF 165 [ D.6927 ])
            (reg:DF 170 [ D.6927 ]))) preproc.cpp:510 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 170 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 165 [ D.6927 ])
            (nil))))
(insn 176 175 177 5 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:511 90 {*movsi_internal}
     (nil))
(insn 177 176 178 5 (set (reg:DI 172 [ D.6928 ])
        (sign_extend:DI (reg:SI 305))) preproc.cpp:511 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 305)
        (nil)))
(insn 178 177 179 5 (parallel [
            (set (reg:DI 173 [ D.6928 ])
                (plus:DI (reg:DI 172 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:511 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 172 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 5 (parallel [
            (set (reg:DI 174 [ D.6928 ])
                (ashift:DI (reg:DI 173 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:511 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 5 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) preproc.cpp:511 89 {*movdi_internal}
     (nil))
(insn 181 180 182 5 (parallel [
            (set (reg/f:DI 175 [ D.6925 ])
                (plus:DI (reg:DI 174 [ D.6928 ])
                    (reg/f:DI 306)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:511 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 306)
        (expr_list:REG_DEAD (reg:DI 174 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 174 [ D.6928 ]))
                    (nil))))))
(insn 182 181 183 5 (set (reg:SF 176 [ D.6926 ])
        (mem:SF (reg/f:DI 175 [ D.6925 ]) [0 *_122+0 S4 A32])) preproc.cpp:511 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.6925 ])
        (nil)))
(insn 183 182 184 5 (set (reg:DF 177 [ D.6927 ])
        (float_extend:DF (reg:SF 176 [ D.6926 ]))) preproc.cpp:511 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 176 [ D.6926 ])
        (nil)))
(insn 184 183 185 5 (set (reg:SI 307)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:511 90 {*movsi_internal}
     (nil))
(insn 185 184 186 5 (set (reg:DI 178 [ D.6928 ])
        (sign_extend:DI (reg:SI 307))) preproc.cpp:511 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 307)
        (nil)))
(insn 186 185 187 5 (parallel [
            (set (reg:DI 179 [ D.6928 ])
                (plus:DI (reg:DI 178 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:511 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 5 (parallel [
            (set (reg:DI 180 [ D.6928 ])
                (ashift:DI (reg:DI 179 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:511 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 188 187 189 5 (set (reg/f:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) preproc.cpp:511 89 {*movdi_internal}
     (nil))
(insn 189 188 190 5 (parallel [
            (set (reg/f:DI 181 [ D.6925 ])
                (plus:DI (reg:DI 180 [ D.6928 ])
                    (reg/f:DI 308)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:511 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (expr_list:REG_DEAD (reg:DI 180 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 180 [ D.6928 ]))
                    (nil))))))
(insn 190 189 191 5 (set (reg:SF 182 [ D.6926 ])
        (mem:SF (reg/f:DI 181 [ D.6925 ]) [0 *_128+0 S4 A32])) preproc.cpp:511 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.6925 ])
        (nil)))
(insn 191 190 192 5 (set (reg:DF 183 [ D.6927 ])
        (float_extend:DF (reg:SF 182 [ D.6926 ]))) preproc.cpp:511 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 182 [ D.6926 ])
        (nil)))
(insn 192 191 193 5 (set (reg:DF 184 [ D.6927 ])
        (mult:DF (reg:DF 177 [ D.6927 ])
            (reg:DF 183 [ D.6927 ]))) preproc.cpp:511 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 183 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 177 [ D.6927 ])
            (nil))))
(insn 193 192 194 5 (set (reg:DF 185 [ D.6927 ])
        (plus:DF (reg:DF 171 [ D.6927 ])
            (reg:DF 184 [ D.6927 ]))) preproc.cpp:510 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 184 [ D.6927 ])
        (expr_list:REG_DEAD (reg:DF 171 [ D.6927 ])
            (nil))))
(insn 194 193 195 5 (set (reg:DF 21 xmm0)
        (reg:DF 185 [ D.6927 ])) preproc.cpp:511 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 185 [ D.6927 ])
        (nil)))
(call_insn 195 194 196 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe499b73d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) preproc.cpp:511 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 196 195 197 5 (set (reg:DF 309)
        (reg:DF 21 xmm0)) preproc.cpp:511 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 197 196 198 5 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 309)) preproc.cpp:511 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 309)
        (nil)))
(insn 198 197 199 5 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:513 90 {*movsi_internal}
     (nil))
(insn 199 198 200 5 (set (reg:DI 186 [ D.6924 ])
        (sign_extend:DI (reg:SI 310))) preproc.cpp:513 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 310)
        (nil)))
(insn 200 199 201 5 (parallel [
            (set (reg:DI 187 [ D.6924 ])
                (ashift:DI (reg:DI 186 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:513 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 186 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 201 200 202 5 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) preproc.cpp:513 89 {*movdi_internal}
     (nil))
(insn 202 201 203 5 (parallel [
            (set (reg/f:DI 188 [ D.6925 ])
                (plus:DI (reg:DI 187 [ D.6924 ])
                    (reg/f:DI 311)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:513 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (expr_list:REG_DEAD (reg:DI 187 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 187 [ D.6924 ]))
                    (nil))))))
(insn 203 202 204 5 (set (reg:SF 189 [ D.6926 ])
        (mem:SF (reg/f:DI 188 [ D.6925 ]) [0 *_137+0 S4 A32])) preproc.cpp:513 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 188 [ D.6925 ])
        (nil)))
(insn 204 203 205 5 (set (reg:DF 190 [ D.6927 ])
        (float_extend:DF (reg:SF 189 [ D.6926 ]))) preproc.cpp:513 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 189 [ D.6926 ])
        (nil)))
(insn 205 204 206 5 (set (reg:SI 312)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:513 90 {*movsi_internal}
     (nil))
(insn 206 205 207 5 (set (reg:DI 191 [ D.6928 ])
        (sign_extend:DI (reg:SI 312))) preproc.cpp:513 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 312)
        (nil)))
(insn 207 206 208 5 (parallel [
            (set (reg:DI 192 [ D.6928 ])
                (plus:DI (reg:DI 191 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:513 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 191 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 209 5 (parallel [
            (set (reg:DI 193 [ D.6928 ])
                (ashift:DI (reg:DI 192 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:513 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 192 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 209 208 210 5 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) preproc.cpp:513 89 {*movdi_internal}
     (nil))
(insn 210 209 211 5 (parallel [
            (set (reg/f:DI 194 [ D.6925 ])
                (plus:DI (reg:DI 193 [ D.6928 ])
                    (reg/f:DI 313)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:513 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 313)
        (expr_list:REG_DEAD (reg:DI 193 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 193 [ D.6928 ]))
                    (nil))))))
(insn 211 210 212 5 (set (reg:SF 195 [ D.6926 ])
        (mem:SF (reg/f:DI 194 [ D.6925 ]) [0 *_143+0 S4 A32])) preproc.cpp:513 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 194 [ D.6925 ])
        (nil)))
(insn 212 211 213 5 (set (reg:DF 196 [ D.6927 ])
        (float_extend:DF (reg:SF 195 [ D.6926 ]))) preproc.cpp:513 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 195 [ D.6926 ])
        (nil)))
(insn 213 212 214 5 (set (reg:DF 22 xmm1)
        (reg:DF 190 [ D.6927 ])) preproc.cpp:513 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 190 [ D.6927 ])
        (nil)))
(insn 214 213 215 5 (set (reg:DF 21 xmm0)
        (reg:DF 196 [ D.6927 ])) preproc.cpp:513 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 196 [ D.6927 ])
        (nil)))
(call_insn 215 214 216 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe499b2f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) preproc.cpp:513 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 216 215 217 5 (set (reg:DF 314)
        (reg:DF 21 xmm0)) preproc.cpp:513 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 217 216 218 5 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 314)) preproc.cpp:513 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 314)
        (nil)))
(insn 218 217 219 5 (set (reg:DF 315)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S8 A64])) preproc.cpp:519 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 9.9999999999999995474811182588625868561393872369080782e-7 [0x0.8637bd05af6c68p-19])
        (nil)))
(insn 219 218 220 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 315)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) preproc.cpp:519 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 315)
        (nil)))
(jump_insn 220 219 224 5 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 402)
            (pc))) preproc.cpp:519 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 402)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 316
(note 224 220 225 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 6 (set (reg:DF 316)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:520 128 {*movdf_internal}
     (nil))
(insn 226 225 403 6 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 316)) preproc.cpp:520 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 316)
        (nil)))
(jump_insn 403 226 404 6 (set (pc)
        (label_ref 234)) 654 {jump}
     (nil)
 -> 234)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 404 403 402)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 317 318
(code_label 402 404 230 7 106 "" [1 uses])
(note 230 402 231 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 7 (set (reg:DF 318)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])) preproc.cpp:522 128 {*movdf_internal}
     (nil))
(insn 232 231 233 7 (set (reg:DF 317)
        (div:DF (reg:DF 318)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) preproc.cpp:522 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 318)
        (nil)))
(insn 233 232 234 7 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 317)) preproc.cpp:522 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 317)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 319 320 321 322 323 324 325 326 327
(code_label 234 233 235 8 97 "" [1 uses])
(note 235 234 236 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 8 (set (reg:DF 320)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])) preproc.cpp:525 128 {*movdf_internal}
     (nil))
(insn 237 236 238 8 (set (reg:DF 319)
        (minus:DF (reg:DF 320)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64]))) preproc.cpp:525 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 320)
        (nil)))
(insn 238 237 239 8 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 319)) preproc.cpp:525 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 319)
        (nil)))
(insn 239 238 240 8 (set (reg:SI 321)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:527 90 {*movsi_internal}
     (nil))
(insn 240 239 241 8 (set (reg:DI 197 [ D.6924 ])
        (sign_extend:DI (reg:SI 321))) preproc.cpp:527 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 321)
        (nil)))
(insn 241 240 242 8 (parallel [
            (set (reg:DI 198 [ D.6924 ])
                (ashift:DI (reg:DI 197 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:527 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 197 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 242 241 243 8 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:527 89 {*movdi_internal}
     (nil))
(insn 243 242 244 8 (parallel [
            (set (reg/f:DI 199 [ D.6925 ])
                (plus:DI (reg:DI 198 [ D.6924 ])
                    (reg/f:DI 322)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:527 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 322)
        (expr_list:REG_DEAD (reg:DI 198 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 198 [ D.6924 ]))
                    (nil))))))
(insn 244 243 245 8 (set (reg:SF 200 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64]))) preproc.cpp:527 157 {*truncdfsf_fast_sse}
     (nil))
(insn 245 244 246 8 (set (reg:DF 323)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])) preproc.cpp:527 128 {*movdf_internal}
     (nil))
(insn 246 245 247 8 (set (reg:DF 21 xmm0)
        (reg:DF 323)) preproc.cpp:527 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 323)
        (nil)))
(call_insn/u 247 246 248 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:527 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 248 247 249 8 (set (reg:DF 201 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:527 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 249 248 250 8 (set (reg:SF 202 [ D.6926 ])
        (float_truncate:SF (reg:DF 201 [ D.6927 ]))) preproc.cpp:527 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 201 [ D.6927 ])
        (nil)))
(insn 250 249 251 8 (set (reg:SF 203 [ D.6926 ])
        (mult:SF (reg:SF 200 [ D.6926 ])
            (reg:SF 202 [ D.6926 ]))) preproc.cpp:527 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 202 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 200 [ D.6926 ])
            (nil))))
(insn 251 250 252 8 (set (mem:SF (reg/f:DI 199 [ D.6925 ]) [0 *_153+0 S4 A32])
        (reg:SF 203 [ D.6926 ])) preproc.cpp:527 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 203 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 199 [ D.6925 ])
            (nil))))
(insn 252 251 253 8 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:528 90 {*movsi_internal}
     (nil))
(insn 253 252 254 8 (set (reg:DI 204 [ D.6928 ])
        (sign_extend:DI (reg:SI 324))) preproc.cpp:528 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 324)
        (nil)))
(insn 254 253 255 8 (parallel [
            (set (reg:DI 205 [ D.6928 ])
                (plus:DI (reg:DI 204 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:528 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 204 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 255 254 256 8 (parallel [
            (set (reg:DI 206 [ D.6928 ])
                (ashift:DI (reg:DI 205 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:528 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 256 255 257 8 (set (reg/f:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:528 89 {*movdi_internal}
     (nil))
(insn 257 256 258 8 (parallel [
            (set (reg/f:DI 207 [ D.6925 ])
                (plus:DI (reg:DI 206 [ D.6928 ])
                    (reg/f:DI 325)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:528 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 325)
        (expr_list:REG_DEAD (reg:DI 206 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 206 [ D.6928 ]))
                    (nil))))))
(insn 258 257 259 8 (set (reg:SF 208 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64]))) preproc.cpp:528 157 {*truncdfsf_fast_sse}
     (nil))
(insn 259 258 260 8 (set (reg:DF 326)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])) preproc.cpp:528 128 {*movdf_internal}
     (nil))
(insn 260 259 261 8 (set (reg:DF 21 xmm0)
        (reg:DF 326)) preproc.cpp:528 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 326)
        (nil)))
(call_insn/u 261 260 262 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:528 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 262 261 263 8 (set (reg:DF 209 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:528 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 263 262 264 8 (set (reg:SF 210 [ D.6926 ])
        (float_truncate:SF (reg:DF 209 [ D.6927 ]))) preproc.cpp:528 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 209 [ D.6927 ])
        (nil)))
(insn 264 263 265 8 (set (reg:SF 211 [ D.6926 ])
        (mult:SF (reg:SF 208 [ D.6926 ])
            (reg:SF 210 [ D.6926 ]))) preproc.cpp:528 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 210 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 208 [ D.6926 ])
            (nil))))
(insn 265 264 266 8 (set (mem:SF (reg/f:DI 207 [ D.6925 ]) [0 *_162+0 S4 A32])
        (reg:SF 211 [ D.6926 ])) preproc.cpp:528 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 211 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 207 [ D.6925 ])
            (nil))))
(insn 266 265 267 8 (set (reg:DF 327)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S8 A64])) preproc.cpp:533 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 9.9999999999999995474811182588625868561393872369080782e-7 [0x0.8637bd05af6c68p-19])
        (nil)))
(insn 267 266 268 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 327)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) preproc.cpp:533 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 327)
        (nil)))
(jump_insn 268 267 272 8 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 405)
            (pc))) preproc.cpp:533 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 405)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 328
(note 272 268 273 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 9 (set (reg:DF 328)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) preproc.cpp:534 128 {*movdf_internal}
     (nil))
(insn 274 273 406 9 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 328)) preproc.cpp:534 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 328)
        (nil)))
(jump_insn 406 274 407 9 (set (pc)
        (label_ref 282)) 654 {jump}
     (nil)
 -> 282)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 407 406 405)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 329 330
(code_label 405 407 278 10 107 "" [1 uses])
(note 278 405 279 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 10 (set (reg:DF 330)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])) preproc.cpp:536 128 {*movdf_internal}
     (nil))
(insn 280 279 281 10 (set (reg:DF 329)
        (div:DF (reg:DF 330)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) preproc.cpp:536 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 330)
        (nil)))
(insn 281 280 282 10 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 329)) preproc.cpp:536 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 329)
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 331 332 333 334 335 336 337 338
(code_label 282 281 283 11 100 "" [1 uses])
(note 283 282 284 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 11 (set (reg:DF 332)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])) preproc.cpp:539 128 {*movdf_internal}
     (nil))
(insn 285 284 286 11 (set (reg:DF 331)
        (minus:DF (reg:DF 332)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64]))) preproc.cpp:539 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 332)
        (nil)))
(insn 286 285 287 11 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 331)) preproc.cpp:539 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 331)
        (nil)))
(insn 287 286 288 11 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:541 90 {*movsi_internal}
     (nil))
(insn 288 287 289 11 (set (reg:DI 212 [ D.6924 ])
        (sign_extend:DI (reg:SI 333))) preproc.cpp:541 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 333)
        (nil)))
(insn 289 288 290 11 (parallel [
            (set (reg:DI 213 [ D.6924 ])
                (ashift:DI (reg:DI 212 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:541 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 212 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 290 289 291 11 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:541 89 {*movdi_internal}
     (nil))
(insn 291 290 292 11 (parallel [
            (set (reg/f:DI 214 [ D.6925 ])
                (plus:DI (reg:DI 213 [ D.6924 ])
                    (reg/f:DI 334)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:541 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 334)
        (expr_list:REG_DEAD (reg:DI 213 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 213 [ D.6924 ]))
                    (nil))))))
(insn 292 291 293 11 (set (reg:SF 215 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64]))) preproc.cpp:541 157 {*truncdfsf_fast_sse}
     (nil))
(insn 293 292 294 11 (set (reg:DF 335)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])) preproc.cpp:541 128 {*movdf_internal}
     (nil))
(insn 294 293 295 11 (set (reg:DF 21 xmm0)
        (reg:DF 335)) preproc.cpp:541 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 335)
        (nil)))
(call_insn/u 295 294 296 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:541 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 296 295 297 11 (set (reg:DF 216 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:541 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 297 296 298 11 (set (reg:SF 217 [ D.6926 ])
        (float_truncate:SF (reg:DF 216 [ D.6927 ]))) preproc.cpp:541 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 216 [ D.6927 ])
        (nil)))
(insn 298 297 299 11 (set (reg:SF 218 [ D.6926 ])
        (mult:SF (reg:SF 215 [ D.6926 ])
            (reg:SF 217 [ D.6926 ]))) preproc.cpp:541 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 217 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 215 [ D.6926 ])
            (nil))))
(insn 299 298 300 11 (set (mem:SF (reg/f:DI 214 [ D.6925 ]) [0 *_173+0 S4 A32])
        (reg:SF 218 [ D.6926 ])) preproc.cpp:541 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 218 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 214 [ D.6925 ])
            (nil))))
(insn 300 299 301 11 (set (reg:SI 336)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:542 90 {*movsi_internal}
     (nil))
(insn 301 300 302 11 (set (reg:DI 219 [ D.6928 ])
        (sign_extend:DI (reg:SI 336))) preproc.cpp:542 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 336)
        (nil)))
(insn 302 301 303 11 (parallel [
            (set (reg:DI 220 [ D.6928 ])
                (plus:DI (reg:DI 219 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:542 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 303 302 304 11 (parallel [
            (set (reg:DI 221 [ D.6928 ])
                (ashift:DI (reg:DI 220 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:542 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 304 303 305 11 (set (reg/f:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:542 89 {*movdi_internal}
     (nil))
(insn 305 304 306 11 (parallel [
            (set (reg/f:DI 222 [ D.6925 ])
                (plus:DI (reg:DI 221 [ D.6928 ])
                    (reg/f:DI 337)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:542 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 337)
        (expr_list:REG_DEAD (reg:DI 221 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 221 [ D.6928 ]))
                    (nil))))))
(insn 306 305 307 11 (set (reg:SF 223 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64]))) preproc.cpp:542 157 {*truncdfsf_fast_sse}
     (nil))
(insn 307 306 308 11 (set (reg:DF 338)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])) preproc.cpp:542 128 {*movdf_internal}
     (nil))
(insn 308 307 309 11 (set (reg:DF 21 xmm0)
        (reg:DF 338)) preproc.cpp:542 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 338)
        (nil)))
(call_insn/u 309 308 310 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:542 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 310 309 311 11 (set (reg:DF 224 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:542 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 311 310 312 11 (set (reg:SF 225 [ D.6926 ])
        (float_truncate:SF (reg:DF 224 [ D.6927 ]))) preproc.cpp:542 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 224 [ D.6927 ])
        (nil)))
(insn 312 311 313 11 (set (reg:SF 226 [ D.6926 ])
        (mult:SF (reg:SF 223 [ D.6926 ])
            (reg:SF 225 [ D.6926 ]))) preproc.cpp:542 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 225 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 223 [ D.6926 ])
            (nil))))
(insn 313 312 408 11 (set (mem:SF (reg/f:DI 222 [ D.6925 ]) [0 *_182+0 S4 A32])
        (reg:SF 226 [ D.6926 ])) preproc.cpp:542 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 226 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 222 [ D.6925 ])
            (nil))))
(jump_insn 408 313 409 11 (set (pc)
        (label_ref 378)) 654 {jump}
     (nil)
 -> 378)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 409 408 316)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354
(code_label 316 409 317 12 94 "" [1 uses])
(note 317 316 318 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 12 (set (reg:DF 340)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])) preproc.cpp:545 128 {*movdf_internal}
     (nil))
(insn 319 318 320 12 (set (reg:DF 339)
        (minus:DF (reg:DF 340)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64]))) preproc.cpp:545 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 340)
        (nil)))
(insn 320 319 321 12 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 339)) preproc.cpp:545 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 339)
        (nil)))
(insn 321 320 322 12 (set (reg:DF 342)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])) preproc.cpp:546 128 {*movdf_internal}
     (nil))
(insn 322 321 323 12 (set (reg:DF 341)
        (minus:DF (reg:DF 342)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64]))) preproc.cpp:546 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 342)
        (nil)))
(insn 323 322 324 12 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 341)) preproc.cpp:546 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 341)
        (nil)))
(insn 324 323 325 12 (set (reg:SI 343)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:548 90 {*movsi_internal}
     (nil))
(insn 325 324 326 12 (set (reg:DI 227 [ D.6924 ])
        (sign_extend:DI (reg:SI 343))) preproc.cpp:548 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 343)
        (nil)))
(insn 326 325 327 12 (parallel [
            (set (reg:DI 228 [ D.6924 ])
                (ashift:DI (reg:DI 227 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:548 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 227 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 327 326 328 12 (set (reg/f:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:548 89 {*movdi_internal}
     (nil))
(insn 328 327 329 12 (parallel [
            (set (reg/f:DI 229 [ D.6925 ])
                (plus:DI (reg:DI 228 [ D.6924 ])
                    (reg/f:DI 344)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:548 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 344)
        (expr_list:REG_DEAD (reg:DI 228 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 228 [ D.6924 ]))
                    (nil))))))
(insn 329 328 330 12 (set (reg:SF 230 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64]))) preproc.cpp:548 157 {*truncdfsf_fast_sse}
     (nil))
(insn 330 329 331 12 (set (reg:DF 345)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) preproc.cpp:548 128 {*movdf_internal}
     (nil))
(insn 331 330 332 12 (set (reg:DF 21 xmm0)
        (reg:DF 345)) preproc.cpp:548 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 345)
        (nil)))
(call_insn/u 332 331 333 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:548 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 333 332 334 12 (set (reg:DF 231 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:548 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 334 333 335 12 (set (reg:SF 232 [ D.6926 ])
        (float_truncate:SF (reg:DF 231 [ D.6927 ]))) preproc.cpp:548 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 231 [ D.6927 ])
        (nil)))
(insn 335 334 336 12 (set (reg:SF 233 [ D.6926 ])
        (mult:SF (reg:SF 230 [ D.6926 ])
            (reg:SF 232 [ D.6926 ]))) preproc.cpp:548 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 232 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 230 [ D.6926 ])
            (nil))))
(insn 336 335 337 12 (set (mem:SF (reg/f:DI 229 [ D.6925 ]) [0 *_192+0 S4 A32])
        (reg:SF 233 [ D.6926 ])) preproc.cpp:548 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 233 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 229 [ D.6925 ])
            (nil))))
(insn 337 336 338 12 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:549 90 {*movsi_internal}
     (nil))
(insn 338 337 339 12 (set (reg:DI 234 [ D.6928 ])
        (sign_extend:DI (reg:SI 346))) preproc.cpp:549 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 346)
        (nil)))
(insn 339 338 340 12 (parallel [
            (set (reg:DI 235 [ D.6928 ])
                (plus:DI (reg:DI 234 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:549 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 234 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 340 339 341 12 (parallel [
            (set (reg:DI 236 [ D.6928 ])
                (ashift:DI (reg:DI 235 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:549 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 235 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 341 340 342 12 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) preproc.cpp:549 89 {*movdi_internal}
     (nil))
(insn 342 341 343 12 (parallel [
            (set (reg/f:DI 237 [ D.6925 ])
                (plus:DI (reg:DI 236 [ D.6928 ])
                    (reg/f:DI 347)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:549 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (expr_list:REG_DEAD (reg:DI 236 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 236 [ D.6928 ]))
                    (nil))))))
(insn 343 342 344 12 (set (reg:SF 238 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64]))) preproc.cpp:549 157 {*truncdfsf_fast_sse}
     (nil))
(insn 344 343 345 12 (set (reg:DF 348)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) preproc.cpp:549 128 {*movdf_internal}
     (nil))
(insn 345 344 346 12 (set (reg:DF 21 xmm0)
        (reg:DF 348)) preproc.cpp:549 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 348)
        (nil)))
(call_insn/u 346 345 347 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:549 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 347 346 348 12 (set (reg:DF 239 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:549 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 348 347 349 12 (set (reg:SF 240 [ D.6926 ])
        (float_truncate:SF (reg:DF 239 [ D.6927 ]))) preproc.cpp:549 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 239 [ D.6927 ])
        (nil)))
(insn 349 348 350 12 (set (reg:SF 241 [ D.6926 ])
        (mult:SF (reg:SF 238 [ D.6926 ])
            (reg:SF 240 [ D.6926 ]))) preproc.cpp:549 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 240 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 238 [ D.6926 ])
            (nil))))
(insn 350 349 351 12 (set (mem:SF (reg/f:DI 237 [ D.6925 ]) [0 *_201+0 S4 A32])
        (reg:SF 241 [ D.6926 ])) preproc.cpp:549 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 241 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 237 [ D.6925 ])
            (nil))))
(insn 351 350 352 12 (set (reg:SI 349)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:551 90 {*movsi_internal}
     (nil))
(insn 352 351 353 12 (set (reg:DI 242 [ D.6924 ])
        (sign_extend:DI (reg:SI 349))) preproc.cpp:551 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 349)
        (nil)))
(insn 353 352 354 12 (parallel [
            (set (reg:DI 243 [ D.6924 ])
                (ashift:DI (reg:DI 242 [ D.6924 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:551 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 242 [ D.6924 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 354 353 355 12 (set (reg/f:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:551 89 {*movdi_internal}
     (nil))
(insn 355 354 356 12 (parallel [
            (set (reg/f:DI 244 [ D.6925 ])
                (plus:DI (reg:DI 243 [ D.6924 ])
                    (reg/f:DI 350)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:551 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 350)
        (expr_list:REG_DEAD (reg:DI 243 [ D.6924 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 243 [ D.6924 ]))
                    (nil))))))
(insn 356 355 357 12 (set (reg:SF 245 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64]))) preproc.cpp:551 157 {*truncdfsf_fast_sse}
     (nil))
(insn 357 356 358 12 (set (reg:DF 351)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) preproc.cpp:551 128 {*movdf_internal}
     (nil))
(insn 358 357 359 12 (set (reg:DF 21 xmm0)
        (reg:DF 351)) preproc.cpp:551 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 351)
        (nil)))
(call_insn/u 359 358 360 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe499b345e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) preproc.cpp:551 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 360 359 361 12 (set (reg:DF 246 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:551 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 361 360 362 12 (set (reg:SF 247 [ D.6926 ])
        (float_truncate:SF (reg:DF 246 [ D.6927 ]))) preproc.cpp:551 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 246 [ D.6927 ])
        (nil)))
(insn 362 361 363 12 (set (reg:SF 248 [ D.6926 ])
        (mult:SF (reg:SF 245 [ D.6926 ])
            (reg:SF 247 [ D.6926 ]))) preproc.cpp:551 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 247 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 245 [ D.6926 ])
            (nil))))
(insn 363 362 364 12 (set (mem:SF (reg/f:DI 244 [ D.6925 ]) [0 *_209+0 S4 A32])
        (reg:SF 248 [ D.6926 ])) preproc.cpp:551 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 248 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 244 [ D.6925 ])
            (nil))))
(insn 364 363 365 12 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) preproc.cpp:552 90 {*movsi_internal}
     (nil))
(insn 365 364 366 12 (set (reg:DI 249 [ D.6928 ])
        (sign_extend:DI (reg:SI 352))) preproc.cpp:552 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 352)
        (nil)))
(insn 366 365 367 12 (parallel [
            (set (reg:DI 250 [ D.6928 ])
                (plus:DI (reg:DI 249 [ D.6928 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:552 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 249 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 367 366 368 12 (parallel [
            (set (reg:DI 251 [ D.6928 ])
                (ashift:DI (reg:DI 250 [ D.6928 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:552 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 250 [ D.6928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 368 367 369 12 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) preproc.cpp:552 89 {*movdi_internal}
     (nil))
(insn 369 368 370 12 (parallel [
            (set (reg/f:DI 252 [ D.6925 ])
                (plus:DI (reg:DI 251 [ D.6928 ])
                    (reg/f:DI 353)))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:552 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 353)
        (expr_list:REG_DEAD (reg:DI 251 [ D.6928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 251 [ D.6928 ]))
                    (nil))))))
(insn 370 369 371 12 (set (reg:SF 253 [ D.6926 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64]))) preproc.cpp:552 157 {*truncdfsf_fast_sse}
     (nil))
(insn 371 370 372 12 (set (reg:DF 354)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) preproc.cpp:552 128 {*movdf_internal}
     (nil))
(insn 372 371 373 12 (set (reg:DF 21 xmm0)
        (reg:DF 354)) preproc.cpp:552 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 354)
        (nil)))
(call_insn/u 373 372 374 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe499b715e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) preproc.cpp:552 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 374 373 375 12 (set (reg:DF 254 [ D.6927 ])
        (reg:DF 21 xmm0)) preproc.cpp:552 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 375 374 376 12 (set (reg:SF 255 [ D.6926 ])
        (float_truncate:SF (reg:DF 254 [ D.6927 ]))) preproc.cpp:552 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 254 [ D.6927 ])
        (nil)))
(insn 376 375 377 12 (set (reg:SF 256 [ D.6926 ])
        (mult:SF (reg:SF 253 [ D.6926 ])
            (reg:SF 255 [ D.6926 ]))) preproc.cpp:552 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 255 [ D.6926 ])
        (expr_list:REG_DEAD (reg:SF 253 [ D.6926 ])
            (nil))))
(insn 377 376 378 12 (set (mem:SF (reg/f:DI 252 [ D.6925 ]) [0 *_218+0 S4 A32])
        (reg:SF 256 [ D.6926 ])) preproc.cpp:552 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 256 [ D.6926 ])
        (expr_list:REG_DEAD (reg/f:DI 252 [ D.6925 ])
            (nil))))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 378 377 379 13 101 "" [1 uses])
(note 379 378 380 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 410 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) preproc.cpp:496 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 410 380 411 13 (set (pc)
        (label_ref 381)) preproc.cpp:496 654 {jump}
     (nil)
 -> 381)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 411 410 384)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 257 258
(code_label 384 411 385 14 93 "" [1 uses])
(note 385 384 386 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 389 14 (set (reg:SI 257 [ D.6923 ])
        (const_int 1 [0x1])) preproc.cpp:556 90 {*movsi_internal}
     (nil))
(insn 389 386 393 14 (set (reg:SI 258 [ <retval> ])
        (reg:SI 257 [ D.6923 ])) preproc.cpp:556 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 257 [ D.6923 ])
        (nil)))
(insn 393 389 394 14 (set (reg/i:SI 0 ax)
        (reg:SI 258 [ <retval> ])) preproc.cpp:557 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 258 [ <retval> ])
        (nil)))
(insn 394 393 0 14 (use (reg/i:SI 0 ax)) preproc.cpp:557 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

