
;; Function int read_procpar(Procpar_info*, char*) (_Z12read_procparP12Procpar_infoPc, funcdef_no=2, decl_uid=5386, cgraph_uid=2, symbol_order=2)

int read_procpar(Procpar_info*, char*) (struct Procpar_info * procpar_info, char * procpar_string)
{
  struct FILE * D.5697;
  int i;
  char * token;
  char in_line[50000];
  struct FILE * in_file;
  int D.5695;
  struct _IO_FILE * stdout.20;
  int D.5688;
  bool retval.19;
  float D.5685;
  double D.5684;
  int D.5681;
  bool retval.18;
  int D.5677;
  float D.5675;
  double D.5674;
  int D.5671;
  bool retval.17;
  int D.5667;
  float D.5665;
  double D.5664;
  int D.5661;
  bool retval.16;
  int D.5657;
  float D.5655;
  double D.5654;
  int D.5651;
  bool retval.15;
  int D.5647;
  float D.5645;
  double D.5644;
  int D.5641;
  bool retval.14;
  int D.5637;
  float D.5635;
  double D.5634;
  int D.5631;
  bool retval.13;
  int D.5627;
  float D.5625;
  double D.5624;
  int D.5621;
  bool retval.12;
  int D.5617;
  float D.5615;
  double D.5614;
  int D.5611;
  bool retval.11;
  int D.5607;
  float D.5605;
  double D.5604;
  int D.5601;
  bool retval.10;
  int D.5597;
  float D.5595;
  double D.5594;
  int D.5591;
  bool retval.9;
  int D.5587;
  double D.5585;
  int D.5582;
  bool retval.8;
  int D.5578;
  double D.5576;
  int D.5573;
  bool retval.7;
  int D.5569;
  int D.5567;
  long int D.5566;
  int D.5563;
  bool retval.6;
  int D.5559;
  int D.5557;
  long int D.5556;
  int D.5553;
  bool retval.5;
  int D.5549;
  float D.5547;
  double D.5546;
  int D.5543;
  bool retval.4;
  int D.5539;
  char[30] * D.5537;
  int D.5534;
  bool retval.3;
  int D.5530;
  float D.5528;
  double D.5527;
  int D.5524;
  bool retval.2;
  int D.5520;
  int D.5518;
  bool retval.1;
  int D.5513;
  bool retval.0;
  long unsigned int D.5509;
  long unsigned int _8;
  struct FILE * _14;
  int _18;
  bool retval.0_19;
  int _21;
  bool retval.1_22;
  int _26;
  int _29;
  bool retval.2_30;
  double _36;
  float _37;
  int _42;
  int _45;
  bool retval.3_46;
  char[30] * _51;
  int _55;
  int _58;
  bool retval.4_59;
  double _65;
  float _66;
  int _70;
  int _73;
  bool retval.5_74;
  long int _80;
  int _81;
  int _85;
  int _88;
  bool retval.6_89;
  long int _95;
  int _96;
  int _100;
  int _103;
  bool retval.7_104;
  double _110;
  int _114;
  int _117;
  bool retval.8_118;
  double _124;
  int _128;
  int _131;
  bool retval.9_132;
  double _138;
  float _139;
  int _143;
  int _146;
  bool retval.10_147;
  double _153;
  float _154;
  int _158;
  int _161;
  bool retval.11_162;
  double _168;
  float _169;
  int _173;
  int _176;
  bool retval.12_177;
  double _183;
  float _184;
  int _188;
  int _191;
  bool retval.13_192;
  double _198;
  float _199;
  int _203;
  int _206;
  bool retval.14_207;
  double _213;
  float _214;
  int _218;
  int _221;
  bool retval.15_222;
  double _228;
  float _229;
  int _233;
  int _236;
  bool retval.16_237;
  double _243;
  float _244;
  int _248;
  int _251;
  bool retval.17_252;
  double _258;
  float _259;
  int _263;
  int _266;
  bool retval.18_267;
  double _273;
  float _274;
  int _280;
  bool retval.19_281;
  struct _IO_FILE * stdout.20_285;
  int _288;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  in_file_6 = 0B;
  token_7 = 0B;
  _8 = 5000;
  token_9 = (char *) _8;
  i_10 = 0;
  _14 = fopen (procpar_string_12(D), "rb");
  in_file_15 = _14;
  if (in_file_15 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin_puts (&"Can\'t open procpar file."[0]);
  exit (4);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  fgets (&in_line, 255, in_file_15);
  _18 = ferror (in_file_15);
  retval.0_19 = _18 != 0;
  if (retval.0_19 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 6, loop depth 1
;;    pred:       4
;;                77
  # i_1 = PHI <i_10(4), i_23(77)>
  _21 = feof (in_file_15);
  retval.1_22 = _21 == 0;
  if (retval.1_22 != 0)
    goto <bb 7>;
  else
    goto <bb 78>;
;;    succ:       7
;;                78

;;   basic block 7, loop depth 1
;;    pred:       6
  i_23 = i_1 + 1;
  token_25 = strtok (&in_line, " \t\n");
  _26 = strcmp (token_25, "at");
  if (_26 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8
;;                11

;;   basic block 8, loop depth 1
;;    pred:       7
  fgets (&in_line, 5000, in_file_15);
  _29 = ferror (in_file_15);
  retval.2_30 = _29 != 0;
  if (retval.2_30 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       8
  token_32 = strtok (&in_line, " \n");
  token_34 = strtok (0B, " \n");
  _36 = strtod (token_34, 0B);
  _37 = (float) _36;
  procpar_info_38(D)->acquision_time = _37;
  goto <bb 75>;
;;    succ:       75

;;   basic block 11, loop depth 1
;;    pred:       7
  _42 = strcmp (token_25, "date");
  if (_42 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12
;;                15

;;   basic block 12, loop depth 1
;;    pred:       11
  fgets (&in_line, 255, in_file_15);
  _45 = ferror (in_file_15);
  retval.3_46 = _45 != 0;
  if (retval.3_46 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 14, loop depth 1
;;    pred:       12
  token_48 = strtok (&in_line, " \"");
  token_50 = strtok (0B, "\"");
  _51 = &procpar_info_38(D)->date;
  strcpy (_51, token_50);
  goto <bb 75>;
;;    succ:       75

;;   basic block 15, loop depth 1
;;    pred:       11
  _55 = strcmp (token_25, "filter");
  if (_55 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16
;;                19

;;   basic block 16, loop depth 1
;;    pred:       15
  fgets (&in_line, 255, in_file_15);
  _58 = ferror (in_file_15);
  retval.4_59 = _58 != 0;
  if (retval.4_59 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 18, loop depth 1
;;    pred:       16
  token_61 = strtok (&in_line, " \n");
  token_63 = strtok (0B, " \n");
  _65 = strtod (token_63, 0B);
  _66 = (float) _65;
  procpar_info_38(D)->filter = _66;
  goto <bb 75>;
;;    succ:       75

;;   basic block 19, loop depth 1
;;    pred:       15
  _70 = strcmp (token_25, "nt");
  if (_70 == 0)
    goto <bb 20>;
  else
    goto <bb 23>;
;;    succ:       20
;;                23

;;   basic block 20, loop depth 1
;;    pred:       19
  fgets (&in_line, 255, in_file_15);
  _73 = ferror (in_file_15);
  retval.5_74 = _73 != 0;
  if (retval.5_74 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21
;;                22

;;   basic block 21, loop depth 0
;;    pred:       20
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 22, loop depth 1
;;    pred:       20
  token_76 = strtok (&in_line, " \n");
  token_78 = strtok (0B, " \n");
  _80 = strtol (token_78, 0B, 10);
  _81 = (int) _80;
  procpar_info_38(D)->num_transients = _81;
  goto <bb 75>;
;;    succ:       75

;;   basic block 23, loop depth 1
;;    pred:       19
  _85 = strcmp (token_25, "np");
  if (_85 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24
;;                27

;;   basic block 24, loop depth 1
;;    pred:       23
  fgets (&in_line, 255, in_file_15);
  _88 = ferror (in_file_15);
  retval.6_89 = _88 != 0;
  if (retval.6_89 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 26, loop depth 1
;;    pred:       24
  token_91 = strtok (&in_line, " \n");
  token_93 = strtok (0B, " \n");
  _95 = strtol (token_93, 0B, 10);
  _96 = (int) _95;
  procpar_info_38(D)->num_points = _96;
  goto <bb 75>;
;;    succ:       75

;;   basic block 27, loop depth 1
;;    pred:       23
  _100 = strcmp (token_25, "sfrq");
  if (_100 == 0)
    goto <bb 28>;
  else
    goto <bb 31>;
;;    succ:       28
;;                31

;;   basic block 28, loop depth 1
;;    pred:       27
  fgets (&in_line, 255, in_file_15);
  _103 = ferror (in_file_15);
  retval.7_104 = _103 != 0;
  if (retval.7_104 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       28
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 30, loop depth 1
;;    pred:       28
  token_106 = strtok (&in_line, " \n");
  token_108 = strtok (0B, " \n");
  _110 = strtod (token_108, 0B);
  procpar_info_38(D)->main_frequency = _110;
  goto <bb 75>;
;;    succ:       75

;;   basic block 31, loop depth 1
;;    pred:       27
  _114 = strcmp (token_25, "tof");
  if (_114 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32
;;                35

;;   basic block 32, loop depth 1
;;    pred:       31
  fgets (&in_line, 255, in_file_15);
  _117 = ferror (in_file_15);
  retval.8_118 = _117 != 0;
  if (retval.8_118 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       32
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 34, loop depth 1
;;    pred:       32
  token_120 = strtok (&in_line, " \n");
  token_122 = strtok (0B, " \n");
  _124 = strtod (token_122, 0B);
  procpar_info_38(D)->offset_frequency = _124;
  goto <bb 75>;
;;    succ:       75

;;   basic block 35, loop depth 1
;;    pred:       31
  _128 = strcmp (token_25, "te");
  if (_128 == 0)
    goto <bb 36>;
  else
    goto <bb 39>;
;;    succ:       36
;;                39

;;   basic block 36, loop depth 1
;;    pred:       35
  fgets (&in_line, 255, in_file_15);
  _131 = ferror (in_file_15);
  retval.9_132 = _131 != 0;
  if (retval.9_132 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37
;;                38

;;   basic block 37, loop depth 0
;;    pred:       36
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 38, loop depth 1
;;    pred:       36
  token_134 = strtok (&in_line, " \n");
  token_136 = strtok (0B, " \n");
  _138 = strtod (token_136, 0B);
  _139 = (float) _138;
  procpar_info_38(D)->te = _139;
  goto <bb 75>;
;;    succ:       75

;;   basic block 39, loop depth 1
;;    pred:       35
  _143 = strcmp (token_25, "tm");
  if (_143 == 0)
    goto <bb 40>;
  else
    goto <bb 43>;
;;    succ:       40
;;                43

;;   basic block 40, loop depth 1
;;    pred:       39
  fgets (&in_line, 255, in_file_15);
  _146 = ferror (in_file_15);
  retval.10_147 = _146 != 0;
  if (retval.10_147 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 42, loop depth 1
;;    pred:       40
  token_149 = strtok (&in_line, " \n");
  token_151 = strtok (0B, " \n");
  _153 = strtod (token_151, 0B);
  _154 = (float) _153;
  procpar_info_38(D)->tm = _154;
  goto <bb 75>;
;;    succ:       75

;;   basic block 43, loop depth 1
;;    pred:       39
  _158 = strcmp (token_25, "gain");
  if (_158 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44
;;                47

;;   basic block 44, loop depth 1
;;    pred:       43
  fgets (&in_line, 255, in_file_15);
  _161 = ferror (in_file_15);
  retval.11_162 = _161 != 0;
  if (retval.11_162 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45
;;                46

;;   basic block 45, loop depth 0
;;    pred:       44
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 46, loop depth 1
;;    pred:       44
  token_164 = strtok (&in_line, " \n");
  token_166 = strtok (0B, " \n");
  _168 = strtod (token_166, 0B);
  _169 = (float) _168;
  procpar_info_38(D)->gain = _169;
  goto <bb 75>;
;;    succ:       75

;;   basic block 47, loop depth 1
;;    pred:       43
  _173 = strcmp (token_25, "pos1");
  if (_173 == 0)
    goto <bb 48>;
  else
    goto <bb 51>;
;;    succ:       48
;;                51

;;   basic block 48, loop depth 1
;;    pred:       47
  fgets (&in_line, 255, in_file_15);
  _176 = ferror (in_file_15);
  retval.12_177 = _176 != 0;
  if (retval.12_177 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 50, loop depth 1
;;    pred:       48
  token_179 = strtok (&in_line, " \n");
  token_181 = strtok (0B, " \n");
  _183 = strtod (token_181, 0B);
  _184 = (float) _183;
  procpar_info_38(D)->pos1 = _184;
  goto <bb 75>;
;;    succ:       75

;;   basic block 51, loop depth 1
;;    pred:       47
  _188 = strcmp (token_25, "pos2");
  if (_188 == 0)
    goto <bb 52>;
  else
    goto <bb 55>;
;;    succ:       52
;;                55

;;   basic block 52, loop depth 1
;;    pred:       51
  fgets (&in_line, 255, in_file_15);
  _191 = ferror (in_file_15);
  retval.13_192 = _191 != 0;
  if (retval.13_192 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53
;;                54

;;   basic block 53, loop depth 0
;;    pred:       52
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 54, loop depth 1
;;    pred:       52
  token_194 = strtok (&in_line, " \n");
  token_196 = strtok (0B, " \n");
  _198 = strtod (token_196, 0B);
  _199 = (float) _198;
  procpar_info_38(D)->pos2 = _199;
  goto <bb 75>;
;;    succ:       75

;;   basic block 55, loop depth 1
;;    pred:       51
  _203 = strcmp (token_25, "pos3");
  if (_203 == 0)
    goto <bb 56>;
  else
    goto <bb 59>;
;;    succ:       56
;;                59

;;   basic block 56, loop depth 1
;;    pred:       55
  fgets (&in_line, 255, in_file_15);
  _206 = ferror (in_file_15);
  retval.14_207 = _206 != 0;
  if (retval.14_207 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57
;;                58

;;   basic block 57, loop depth 0
;;    pred:       56
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 58, loop depth 1
;;    pred:       56
  token_209 = strtok (&in_line, " \n");
  token_211 = strtok (0B, " \n");
  _213 = strtod (token_211, 0B);
  _214 = (float) _213;
  procpar_info_38(D)->pos3 = _214;
  goto <bb 75>;
;;    succ:       75

;;   basic block 59, loop depth 1
;;    pred:       55
  _218 = strcmp (token_25, "vox1");
  if (_218 == 0)
    goto <bb 60>;
  else
    goto <bb 63>;
;;    succ:       60
;;                63

;;   basic block 60, loop depth 1
;;    pred:       59
  fgets (&in_line, 255, in_file_15);
  _221 = ferror (in_file_15);
  retval.15_222 = _221 != 0;
  if (retval.15_222 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61
;;                62

;;   basic block 61, loop depth 0
;;    pred:       60
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 62, loop depth 1
;;    pred:       60
  token_224 = strtok (&in_line, " \n");
  token_226 = strtok (0B, " \n");
  _228 = strtod (token_226, 0B);
  _229 = (float) _228;
  procpar_info_38(D)->vox1 = _229;
  goto <bb 75>;
;;    succ:       75

;;   basic block 63, loop depth 1
;;    pred:       59
  _233 = strcmp (token_25, "vox2");
  if (_233 == 0)
    goto <bb 64>;
  else
    goto <bb 67>;
;;    succ:       64
;;                67

;;   basic block 64, loop depth 1
;;    pred:       63
  fgets (&in_line, 255, in_file_15);
  _236 = ferror (in_file_15);
  retval.16_237 = _236 != 0;
  if (retval.16_237 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65
;;                66

;;   basic block 65, loop depth 0
;;    pred:       64
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 66, loop depth 1
;;    pred:       64
  token_239 = strtok (&in_line, " \n");
  token_241 = strtok (0B, " \n");
  _243 = strtod (token_241, 0B);
  _244 = (float) _243;
  procpar_info_38(D)->vox2 = _244;
  goto <bb 75>;
;;    succ:       75

;;   basic block 67, loop depth 1
;;    pred:       63
  _248 = strcmp (token_25, "vox3");
  if (_248 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;
;;    succ:       68
;;                71

;;   basic block 68, loop depth 1
;;    pred:       67
  fgets (&in_line, 255, in_file_15);
  _251 = ferror (in_file_15);
  retval.17_252 = _251 != 0;
  if (retval.17_252 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69
;;                70

;;   basic block 69, loop depth 0
;;    pred:       68
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 70, loop depth 1
;;    pred:       68
  token_254 = strtok (&in_line, " \n");
  token_256 = strtok (0B, " \n");
  _258 = strtod (token_256, 0B);
  _259 = (float) _258;
  procpar_info_38(D)->vox3 = _259;
  goto <bb 75>;
;;    succ:       75

;;   basic block 71, loop depth 1
;;    pred:       67
  _263 = strcmp (token_25, "vtheta");
  if (_263 == 0)
    goto <bb 72>;
  else
    goto <bb 75>;
;;    succ:       72
;;                75

;;   basic block 72, loop depth 1
;;    pred:       71
  fgets (&in_line, 255, in_file_15);
  _266 = ferror (in_file_15);
  retval.18_267 = _266 != 0;
  if (retval.18_267 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;
;;    succ:       73
;;                74

;;   basic block 73, loop depth 0
;;    pred:       72
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 74, loop depth 1
;;    pred:       72
  token_269 = strtok (&in_line, " \n");
  token_271 = strtok (0B, " \n");
  _273 = strtod (token_271, 0B);
  _274 = (float) _273;
  procpar_info_38(D)->vtheta = _274;
;;    succ:       75

;;   basic block 75, loop depth 1
;;    pred:       10
;;                14
;;                18
;;                22
;;                26
;;                30
;;                34
;;                38
;;                42
;;                46
;;                50
;;                54
;;                58
;;                62
;;                66
;;                70
;;                71
;;                74
  fgets (&in_line, 5000, in_file_15);
  _280 = ferror (in_file_15);
  retval.19_281 = _280 != 0;
  if (retval.19_281 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;
;;    succ:       76
;;                77

;;   basic block 76, loop depth 0
;;    pred:       75
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 77, loop depth 1
;;    pred:       75
  goto <bb 6>;
;;    succ:       6

;;   basic block 78, loop depth 0
;;    pred:       6
  if (in_file_15 != 0B)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79
;;                80

;;   basic block 79, loop depth 0
;;    pred:       78
  __builtin_puts (&"okay"[0]);
  stdout.20_285 = stdout;
  fflush (stdout.20_285);
  fclose (in_file_15);
;;    succ:       80

;;   basic block 80, loop depth 0
;;    pred:       78
;;                79
  _288 = 2;
  in_line ={v} {CLOBBER};
;;    succ:       81

;;   basic block 81, loop depth 0
;;    pred:       80
<L98>:
  return _288;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 6 (in_file_6 - 6 )
Partition 7 (token_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (token_9 - 9 )
Partition 10 (i_10 - 10 )
Partition 12 (procpar_string_12(D) - 12 )
Partition 14 (_14 - 14 )
Partition 15 (in_file_15 - 15 )
Partition 18 (_18 - 18 )
Partition 19 (retval.0_19 - 19 )
Partition 21 (_21 - 21 )
Partition 22 (retval.1_22 - 22 )
Partition 23 (i_23 - 23 )
Partition 25 (token_25 - 25 )
Partition 26 (_26 - 26 )
Partition 29 (_29 - 29 )
Partition 30 (retval.2_30 - 30 )
Partition 32 (token_32 - 32 )
Partition 34 (token_34 - 34 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (procpar_info_38(D) - 38 )
Partition 42 (_42 - 42 )
Partition 45 (_45 - 45 )
Partition 46 (retval.3_46 - 46 )
Partition 48 (token_48 - 48 )
Partition 50 (token_50 - 50 )
Partition 51 (_51 - 51 )
Partition 55 (_55 - 55 )
Partition 58 (_58 - 58 )
Partition 59 (retval.4_59 - 59 )
Partition 61 (token_61 - 61 )
Partition 63 (token_63 - 63 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 70 (_70 - 70 )
Partition 73 (_73 - 73 )
Partition 74 (retval.5_74 - 74 )
Partition 76 (token_76 - 76 )
Partition 78 (token_78 - 78 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 85 (_85 - 85 )
Partition 88 (_88 - 88 )
Partition 89 (retval.6_89 - 89 )
Partition 91 (token_91 - 91 )
Partition 93 (token_93 - 93 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 100 (_100 - 100 )
Partition 103 (_103 - 103 )
Partition 104 (retval.7_104 - 104 )
Partition 106 (token_106 - 106 )
Partition 108 (token_108 - 108 )
Partition 110 (_110 - 110 )
Partition 114 (_114 - 114 )
Partition 117 (_117 - 117 )
Partition 118 (retval.8_118 - 118 )
Partition 120 (token_120 - 120 )
Partition 122 (token_122 - 122 )
Partition 124 (_124 - 124 )
Partition 128 (_128 - 128 )
Partition 131 (_131 - 131 )
Partition 132 (retval.9_132 - 132 )
Partition 134 (token_134 - 134 )
Partition 136 (token_136 - 136 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 143 (_143 - 143 )
Partition 146 (_146 - 146 )
Partition 147 (retval.10_147 - 147 )
Partition 149 (token_149 - 149 )
Partition 151 (token_151 - 151 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 158 (_158 - 158 )
Partition 161 (_161 - 161 )
Partition 162 (retval.11_162 - 162 )
Partition 164 (token_164 - 164 )
Partition 166 (token_166 - 166 )
Partition 168 (_168 - 168 )
Partition 169 (_169 - 169 )
Partition 173 (_173 - 173 )
Partition 176 (_176 - 176 )
Partition 177 (retval.12_177 - 177 )
Partition 179 (token_179 - 179 )
Partition 181 (token_181 - 181 )
Partition 183 (_183 - 183 )
Partition 184 (_184 - 184 )
Partition 188 (_188 - 188 )
Partition 191 (_191 - 191 )
Partition 192 (retval.13_192 - 192 )
Partition 194 (token_194 - 194 )
Partition 196 (token_196 - 196 )
Partition 198 (_198 - 198 )
Partition 199 (_199 - 199 )
Partition 203 (_203 - 203 )
Partition 206 (_206 - 206 )
Partition 207 (retval.14_207 - 207 )
Partition 209 (token_209 - 209 )
Partition 211 (token_211 - 211 )
Partition 213 (_213 - 213 )
Partition 214 (_214 - 214 )
Partition 218 (_218 - 218 )
Partition 221 (_221 - 221 )
Partition 222 (retval.15_222 - 222 )
Partition 224 (token_224 - 224 )
Partition 226 (token_226 - 226 )
Partition 228 (_228 - 228 )
Partition 229 (_229 - 229 )
Partition 233 (_233 - 233 )
Partition 236 (_236 - 236 )
Partition 237 (retval.16_237 - 237 )
Partition 239 (token_239 - 239 )
Partition 241 (token_241 - 241 )
Partition 243 (_243 - 243 )
Partition 244 (_244 - 244 )
Partition 248 (_248 - 248 )
Partition 251 (_251 - 251 )
Partition 252 (retval.17_252 - 252 )
Partition 254 (token_254 - 254 )
Partition 256 (token_256 - 256 )
Partition 258 (_258 - 258 )
Partition 259 (_259 - 259 )
Partition 263 (_263 - 263 )
Partition 266 (_266 - 266 )
Partition 267 (retval.18_267 - 267 )
Partition 269 (token_269 - 269 )
Partition 271 (token_271 - 271 )
Partition 273 (_273 - 273 )
Partition 274 (_274 - 274 )
Partition 280 (_280 - 280 )
Partition 281 (retval.19_281 - 281 )
Partition 285 (stdout.20_285 - 285 )
Partition 288 (_288 - 288 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (in_file_6 - 6 )
Partition 2 (token_7 - 7 )
Partition 3 (token_9 - 9 )
Partition 4 (i_10 - 10 )
Partition 5 (procpar_string_12(D) - 12 )
Partition 6 (in_file_15 - 15 )
Partition 7 (i_23 - 23 )
Partition 8 (token_25 - 25 )
Partition 9 (token_32 - 32 )
Partition 10 (token_34 - 34 )
Partition 11 (procpar_info_38(D) - 38 )
Partition 12 (token_48 - 48 )
Partition 13 (token_50 - 50 )
Partition 14 (token_61 - 61 )
Partition 15 (token_63 - 63 )
Partition 16 (token_76 - 76 )
Partition 17 (token_78 - 78 )
Partition 18 (token_91 - 91 )
Partition 19 (token_93 - 93 )
Partition 20 (token_106 - 106 )
Partition 21 (token_108 - 108 )
Partition 22 (token_120 - 120 )
Partition 23 (token_122 - 122 )
Partition 24 (token_134 - 134 )
Partition 25 (token_136 - 136 )
Partition 26 (token_149 - 149 )
Partition 27 (token_151 - 151 )
Partition 28 (token_164 - 164 )
Partition 29 (token_166 - 166 )
Partition 30 (token_179 - 179 )
Partition 31 (token_181 - 181 )
Partition 32 (token_194 - 194 )
Partition 33 (token_196 - 196 )
Partition 34 (token_209 - 209 )
Partition 35 (token_211 - 211 )
Partition 36 (token_224 - 224 )
Partition 37 (token_226 - 226 )
Partition 38 (token_239 - 239 )
Partition 39 (token_241 - 241 )
Partition 40 (token_254 - 254 )
Partition 41 (token_256 - 256 )
Partition 42 (token_269 - 269 )
Partition 43 (token_271 - 271 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_10
(2147483646) i_1 <-> i_23
(2147483646) in_file_6 <-> in_file_15
(2147483646) token_7 <-> token_9
(2147483646) token_7 <-> token_25
(2147483646) token_7 <-> token_32
(2147483646) token_7 <-> token_34
(2147483646) token_7 <-> token_48
(2147483646) token_7 <-> token_50
(2147483646) token_7 <-> token_61
(2147483646) token_7 <-> token_63
(2147483646) token_7 <-> token_76
(2147483646) token_7 <-> token_78
(2147483646) token_7 <-> token_91
(2147483646) token_7 <-> token_93
(2147483646) token_7 <-> token_106
(2147483646) token_7 <-> token_108
(2147483646) token_7 <-> token_120
(2147483646) token_7 <-> token_122
(2147483646) token_7 <-> token_134
(2147483646) token_7 <-> token_136
(2147483646) token_7 <-> token_149
(2147483646) token_7 <-> token_151
(2147483646) token_7 <-> token_164
(2147483646) token_7 <-> token_166
(2147483646) token_7 <-> token_179
(2147483646) token_7 <-> token_181
(2147483646) token_7 <-> token_194
(2147483646) token_7 <-> token_196
(2147483646) token_7 <-> token_209
(2147483646) token_7 <-> token_211
(2147483646) token_7 <-> token_224
(2147483646) token_7 <-> token_226
(2147483646) token_7 <-> token_239
(2147483646) token_7 <-> token_241
(2147483646) token_7 <-> token_254
(2147483646) token_7 <-> token_256
(2147483646) token_7 <-> token_269
(2147483646) token_7 <-> token_271

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (in_file_6 - 6 )
Partition 2 (token_7 - 7 )
Partition 3 (token_9 - 9 )
Partition 4 (i_10 - 10 )
Partition 5 (procpar_string_12(D) - 12 )
Partition 6 (in_file_15 - 15 )
Partition 7 (i_23 - 23 )
Partition 8 (token_25 - 25 )
Partition 9 (token_32 - 32 )
Partition 10 (token_34 - 34 )
Partition 11 (procpar_info_38(D) - 38 )
Partition 12 (token_48 - 48 )
Partition 13 (token_50 - 50 )
Partition 14 (token_61 - 61 )
Partition 15 (token_63 - 63 )
Partition 16 (token_76 - 76 )
Partition 17 (token_78 - 78 )
Partition 18 (token_91 - 91 )
Partition 19 (token_93 - 93 )
Partition 20 (token_106 - 106 )
Partition 21 (token_108 - 108 )
Partition 22 (token_120 - 120 )
Partition 23 (token_122 - 122 )
Partition 24 (token_134 - 134 )
Partition 25 (token_136 - 136 )
Partition 26 (token_149 - 149 )
Partition 27 (token_151 - 151 )
Partition 28 (token_164 - 164 )
Partition 29 (token_166 - 166 )
Partition 30 (token_179 - 179 )
Partition 31 (token_181 - 181 )
Partition 32 (token_194 - 194 )
Partition 33 (token_196 - 196 )
Partition 34 (token_209 - 209 )
Partition 35 (token_211 - 211 )
Partition 36 (token_224 - 224 )
Partition 37 (token_226 - 226 )
Partition 38 (token_239 - 239 )
Partition 39 (token_241 - 241 )
Partition 40 (token_254 - 254 )
Partition 41 (token_256 - 256 )
Partition 42 (token_269 - 269 )
Partition 43 (token_271 - 271 )

Coalesce list: (1)i_1 & (10)i_10 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (23)i_23 [map: 0, 7] : Success -> 0
Coalesce list: (6)in_file_6 & (15)in_file_15 [map: 1, 6] : Success -> 1
Coalesce list: (7)token_7 & (9)token_9 [map: 2, 3] : Success -> 2
Coalesce list: (7)token_7 & (25)token_25 [map: 2, 8] : Success -> 2
Coalesce list: (7)token_7 & (32)token_32 [map: 2, 9] : Success -> 2
Coalesce list: (7)token_7 & (34)token_34 [map: 2, 10] : Success -> 2
Coalesce list: (7)token_7 & (48)token_48 [map: 2, 12] : Success -> 2
Coalesce list: (7)token_7 & (50)token_50 [map: 2, 13] : Success -> 2
Coalesce list: (7)token_7 & (61)token_61 [map: 2, 14] : Success -> 2
Coalesce list: (7)token_7 & (63)token_63 [map: 2, 15] : Success -> 2
Coalesce list: (7)token_7 & (76)token_76 [map: 2, 16] : Success -> 2
Coalesce list: (7)token_7 & (78)token_78 [map: 2, 17] : Success -> 2
Coalesce list: (7)token_7 & (91)token_91 [map: 2, 18] : Success -> 2
Coalesce list: (7)token_7 & (93)token_93 [map: 2, 19] : Success -> 2
Coalesce list: (7)token_7 & (106)token_106 [map: 2, 20] : Success -> 2
Coalesce list: (7)token_7 & (108)token_108 [map: 2, 21] : Success -> 2
Coalesce list: (7)token_7 & (120)token_120 [map: 2, 22] : Success -> 2
Coalesce list: (7)token_7 & (122)token_122 [map: 2, 23] : Success -> 2
Coalesce list: (7)token_7 & (134)token_134 [map: 2, 24] : Success -> 2
Coalesce list: (7)token_7 & (136)token_136 [map: 2, 25] : Success -> 2
Coalesce list: (7)token_7 & (149)token_149 [map: 2, 26] : Success -> 2
Coalesce list: (7)token_7 & (151)token_151 [map: 2, 27] : Success -> 2
Coalesce list: (7)token_7 & (164)token_164 [map: 2, 28] : Success -> 2
Coalesce list: (7)token_7 & (166)token_166 [map: 2, 29] : Success -> 2
Coalesce list: (7)token_7 & (179)token_179 [map: 2, 30] : Success -> 2
Coalesce list: (7)token_7 & (181)token_181 [map: 2, 31] : Success -> 2
Coalesce list: (7)token_7 & (194)token_194 [map: 2, 32] : Success -> 2
Coalesce list: (7)token_7 & (196)token_196 [map: 2, 33] : Success -> 2
Coalesce list: (7)token_7 & (209)token_209 [map: 2, 34] : Success -> 2
Coalesce list: (7)token_7 & (211)token_211 [map: 2, 35] : Success -> 2
Coalesce list: (7)token_7 & (224)token_224 [map: 2, 36] : Success -> 2
Coalesce list: (7)token_7 & (226)token_226 [map: 2, 37] : Success -> 2
Coalesce list: (7)token_7 & (239)token_239 [map: 2, 38] : Success -> 2
Coalesce list: (7)token_7 & (241)token_241 [map: 2, 39] : Success -> 2
Coalesce list: (7)token_7 & (254)token_254 [map: 2, 40] : Success -> 2
Coalesce list: (7)token_7 & (256)token_256 [map: 2, 41] : Success -> 2
Coalesce list: (7)token_7 & (269)token_269 [map: 2, 42] : Success -> 2
Coalesce list: (7)token_7 & (271)token_271 [map: 2, 43] : Success -> 2
Coalesce list: (1)i_1 & (23)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 10 23 )
Partition 1 (in_file_6 - 6 15 )
Partition 2 (token_7 - 7 9 25 32 34 48 50 61 63 76 78 91 93 106 108 120 122 134 136 149 151 164 166 179 181 194 196 209 211 224 226 239 241 254 256 269 271 )
Partition 3 (_8 - 8 )
Partition 4 (procpar_string_12(D) - 12 )
Partition 5 (_14 - 14 )
Partition 6 (_18 - 18 )
Partition 7 (retval.0_19 - 19 )
Partition 8 (_21 - 21 )
Partition 9 (retval.1_22 - 22 )
Partition 10 (_26 - 26 )
Partition 11 (_29 - 29 )
Partition 12 (retval.2_30 - 30 )
Partition 13 (_36 - 36 )
Partition 14 (_37 - 37 )
Partition 15 (procpar_info_38(D) - 38 )
Partition 16 (_42 - 42 )
Partition 17 (_45 - 45 )
Partition 18 (retval.3_46 - 46 )
Partition 19 (_51 - 51 )
Partition 20 (_55 - 55 )
Partition 21 (_58 - 58 )
Partition 22 (retval.4_59 - 59 )
Partition 23 (_65 - 65 )
Partition 24 (_66 - 66 )
Partition 25 (_70 - 70 )
Partition 26 (_73 - 73 )
Partition 27 (retval.5_74 - 74 )
Partition 28 (_80 - 80 )
Partition 29 (_81 - 81 )
Partition 30 (_85 - 85 )
Partition 31 (_88 - 88 )
Partition 32 (retval.6_89 - 89 )
Partition 33 (_95 - 95 )
Partition 34 (_96 - 96 )
Partition 35 (_100 - 100 )
Partition 36 (_103 - 103 )
Partition 37 (retval.7_104 - 104 )
Partition 38 (_110 - 110 )
Partition 39 (_114 - 114 )
Partition 40 (_117 - 117 )
Partition 41 (retval.8_118 - 118 )
Partition 42 (_124 - 124 )
Partition 43 (_128 - 128 )
Partition 44 (_131 - 131 )
Partition 45 (retval.9_132 - 132 )
Partition 46 (_138 - 138 )
Partition 47 (_139 - 139 )
Partition 48 (_143 - 143 )
Partition 49 (_146 - 146 )
Partition 50 (retval.10_147 - 147 )
Partition 51 (_153 - 153 )
Partition 52 (_154 - 154 )
Partition 53 (_158 - 158 )
Partition 54 (_161 - 161 )
Partition 55 (retval.11_162 - 162 )
Partition 56 (_168 - 168 )
Partition 57 (_169 - 169 )
Partition 58 (_173 - 173 )
Partition 59 (_176 - 176 )
Partition 60 (retval.12_177 - 177 )
Partition 61 (_183 - 183 )
Partition 62 (_184 - 184 )
Partition 63 (_188 - 188 )
Partition 64 (_191 - 191 )
Partition 65 (retval.13_192 - 192 )
Partition 66 (_198 - 198 )
Partition 67 (_199 - 199 )
Partition 68 (_203 - 203 )
Partition 69 (_206 - 206 )
Partition 70 (retval.14_207 - 207 )
Partition 71 (_213 - 213 )
Partition 72 (_214 - 214 )
Partition 73 (_218 - 218 )
Partition 74 (_221 - 221 )
Partition 75 (retval.15_222 - 222 )
Partition 76 (_228 - 228 )
Partition 77 (_229 - 229 )
Partition 78 (_233 - 233 )
Partition 79 (_236 - 236 )
Partition 80 (retval.16_237 - 237 )
Partition 81 (_243 - 243 )
Partition 82 (_244 - 244 )
Partition 83 (_248 - 248 )
Partition 84 (_251 - 251 )
Partition 85 (retval.17_252 - 252 )
Partition 86 (_258 - 258 )
Partition 87 (_259 - 259 )
Partition 88 (_263 - 263 )
Partition 89 (_266 - 266 )
Partition 90 (retval.18_267 - 267 )
Partition 91 (_273 - 273 )
Partition 92 (_274 - 274 )
Partition 93 (_280 - 280 )
Partition 94 (retval.19_281 - 281 )
Partition 95 (stdout.20_285 - 285 )
Partition 96 (_288 - 288 )

int read_procpar(Procpar_info*, char*) (struct Procpar_info * procpar_info, char * procpar_string)
{
  struct FILE * D.5697;
  int i;
  char * token;
  char in_line[50000];
  struct FILE * in_file;
  int D.5695;
  struct _IO_FILE * stdout.20;
  int D.5688;
  bool retval.19;
  float D.5685;
  double D.5684;
  int D.5681;
  bool retval.18;
  int D.5677;
  float D.5675;
  double D.5674;
  int D.5671;
  bool retval.17;
  int D.5667;
  float D.5665;
  double D.5664;
  int D.5661;
  bool retval.16;
  int D.5657;
  float D.5655;
  double D.5654;
  int D.5651;
  bool retval.15;
  int D.5647;
  float D.5645;
  double D.5644;
  int D.5641;
  bool retval.14;
  int D.5637;
  float D.5635;
  double D.5634;
  int D.5631;
  bool retval.13;
  int D.5627;
  float D.5625;
  double D.5624;
  int D.5621;
  bool retval.12;
  int D.5617;
  float D.5615;
  double D.5614;
  int D.5611;
  bool retval.11;
  int D.5607;
  float D.5605;
  double D.5604;
  int D.5601;
  bool retval.10;
  int D.5597;
  float D.5595;
  double D.5594;
  int D.5591;
  bool retval.9;
  int D.5587;
  double D.5585;
  int D.5582;
  bool retval.8;
  int D.5578;
  double D.5576;
  int D.5573;
  bool retval.7;
  int D.5569;
  int D.5567;
  long int D.5566;
  int D.5563;
  bool retval.6;
  int D.5559;
  int D.5557;
  long int D.5556;
  int D.5553;
  bool retval.5;
  int D.5549;
  float D.5547;
  double D.5546;
  int D.5543;
  bool retval.4;
  int D.5539;
  char[30] * D.5537;
  int D.5534;
  bool retval.3;
  int D.5530;
  float D.5528;
  double D.5527;
  int D.5524;
  bool retval.2;
  int D.5520;
  int D.5518;
  bool retval.1;
  int D.5513;
  bool retval.0;
  long unsigned int D.5509;
  long unsigned int _8;
  struct FILE * _14;
  int _18;
  bool retval.0_19;
  int _21;
  bool retval.1_22;
  int _26;
  int _29;
  bool retval.2_30;
  double _36;
  float _37;
  int _42;
  int _45;
  bool retval.3_46;
  char[30] * _51;
  int _55;
  int _58;
  bool retval.4_59;
  double _65;
  float _66;
  int _70;
  int _73;
  bool retval.5_74;
  long int _80;
  int _81;
  int _85;
  int _88;
  bool retval.6_89;
  long int _95;
  int _96;
  int _100;
  int _103;
  bool retval.7_104;
  double _110;
  int _114;
  int _117;
  bool retval.8_118;
  double _124;
  int _128;
  int _131;
  bool retval.9_132;
  double _138;
  float _139;
  int _143;
  int _146;
  bool retval.10_147;
  double _153;
  float _154;
  int _158;
  int _161;
  bool retval.11_162;
  double _168;
  float _169;
  int _173;
  int _176;
  bool retval.12_177;
  double _183;
  float _184;
  int _188;
  int _191;
  bool retval.13_192;
  double _198;
  float _199;
  int _203;
  int _206;
  bool retval.14_207;
  double _213;
  float _214;
  int _218;
  int _221;
  bool retval.15_222;
  double _228;
  float _229;
  int _233;
  int _236;
  bool retval.16_237;
  double _243;
  float _244;
  int _248;
  int _251;
  bool retval.17_252;
  double _258;
  float _259;
  int _263;
  int _266;
  bool retval.18_267;
  double _273;
  float _274;
  int _280;
  bool retval.19_281;
  struct _IO_FILE * stdout.20_285;
  int _288;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  in_file_6 = 0B;
  token_7 = 0B;
  _8 = 5000;
  token_9 = (char *) _8;
  i_10 = 0;
  _14 = fopen (procpar_string_12(D), "rb");
  in_file_15 = _14;
  if (in_file_15 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin_puts (&"Can\'t open procpar file."[0]);
  exit (4);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  fgets (&in_line, 255, in_file_15);
  _18 = ferror (in_file_15);
  retval.0_19 = _18 != 0;
  if (retval.0_19 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 6, loop depth 1
;;    pred:       4
;;                77
  # i_1 = PHI <i_10(4), i_23(77)>
  _21 = feof (in_file_15);
  retval.1_22 = _21 == 0;
  if (retval.1_22 != 0)
    goto <bb 7>;
  else
    goto <bb 78>;
;;    succ:       7
;;                78

;;   basic block 7, loop depth 1
;;    pred:       6
  i_23 = i_1 + 1;
  token_25 = strtok (&in_line, " \t\n");
  _26 = strcmp (token_25, "at");
  if (_26 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8
;;                11

;;   basic block 8, loop depth 1
;;    pred:       7
  fgets (&in_line, 5000, in_file_15);
  _29 = ferror (in_file_15);
  retval.2_30 = _29 != 0;
  if (retval.2_30 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       8
  token_32 = strtok (&in_line, " \n");
  token_34 = strtok (0B, " \n");
  _36 = strtod (token_34, 0B);
  _37 = (float) _36;
  procpar_info_38(D)->acquision_time = _37;
  goto <bb 75>;
;;    succ:       75

;;   basic block 11, loop depth 1
;;    pred:       7
  _42 = strcmp (token_25, "date");
  if (_42 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12
;;                15

;;   basic block 12, loop depth 1
;;    pred:       11
  fgets (&in_line, 255, in_file_15);
  _45 = ferror (in_file_15);
  retval.3_46 = _45 != 0;
  if (retval.3_46 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 14, loop depth 1
;;    pred:       12
  token_48 = strtok (&in_line, " \"");
  token_50 = strtok (0B, "\"");
  _51 = &procpar_info_38(D)->date;
  strcpy (_51, token_50);
  goto <bb 75>;
;;    succ:       75

;;   basic block 15, loop depth 1
;;    pred:       11
  _55 = strcmp (token_25, "filter");
  if (_55 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16
;;                19

;;   basic block 16, loop depth 1
;;    pred:       15
  fgets (&in_line, 255, in_file_15);
  _58 = ferror (in_file_15);
  retval.4_59 = _58 != 0;
  if (retval.4_59 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 18, loop depth 1
;;    pred:       16
  token_61 = strtok (&in_line, " \n");
  token_63 = strtok (0B, " \n");
  _65 = strtod (token_63, 0B);
  _66 = (float) _65;
  procpar_info_38(D)->filter = _66;
  goto <bb 75>;
;;    succ:       75

;;   basic block 19, loop depth 1
;;    pred:       15
  _70 = strcmp (token_25, "nt");
  if (_70 == 0)
    goto <bb 20>;
  else
    goto <bb 23>;
;;    succ:       20
;;                23

;;   basic block 20, loop depth 1
;;    pred:       19
  fgets (&in_line, 255, in_file_15);
  _73 = ferror (in_file_15);
  retval.5_74 = _73 != 0;
  if (retval.5_74 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21
;;                22

;;   basic block 21, loop depth 0
;;    pred:       20
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 22, loop depth 1
;;    pred:       20
  token_76 = strtok (&in_line, " \n");
  token_78 = strtok (0B, " \n");
  _80 = strtol (token_78, 0B, 10);
  _81 = (int) _80;
  procpar_info_38(D)->num_transients = _81;
  goto <bb 75>;
;;    succ:       75

;;   basic block 23, loop depth 1
;;    pred:       19
  _85 = strcmp (token_25, "np");
  if (_85 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24
;;                27

;;   basic block 24, loop depth 1
;;    pred:       23
  fgets (&in_line, 255, in_file_15);
  _88 = ferror (in_file_15);
  retval.6_89 = _88 != 0;
  if (retval.6_89 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 26, loop depth 1
;;    pred:       24
  token_91 = strtok (&in_line, " \n");
  token_93 = strtok (0B, " \n");
  _95 = strtol (token_93, 0B, 10);
  _96 = (int) _95;
  procpar_info_38(D)->num_points = _96;
  goto <bb 75>;
;;    succ:       75

;;   basic block 27, loop depth 1
;;    pred:       23
  _100 = strcmp (token_25, "sfrq");
  if (_100 == 0)
    goto <bb 28>;
  else
    goto <bb 31>;
;;    succ:       28
;;                31

;;   basic block 28, loop depth 1
;;    pred:       27
  fgets (&in_line, 255, in_file_15);
  _103 = ferror (in_file_15);
  retval.7_104 = _103 != 0;
  if (retval.7_104 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       28
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 30, loop depth 1
;;    pred:       28
  token_106 = strtok (&in_line, " \n");
  token_108 = strtok (0B, " \n");
  _110 = strtod (token_108, 0B);
  procpar_info_38(D)->main_frequency = _110;
  goto <bb 75>;
;;    succ:       75

;;   basic block 31, loop depth 1
;;    pred:       27
  _114 = strcmp (token_25, "tof");
  if (_114 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32
;;                35

;;   basic block 32, loop depth 1
;;    pred:       31
  fgets (&in_line, 255, in_file_15);
  _117 = ferror (in_file_15);
  retval.8_118 = _117 != 0;
  if (retval.8_118 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       32
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 34, loop depth 1
;;    pred:       32
  token_120 = strtok (&in_line, " \n");
  token_122 = strtok (0B, " \n");
  _124 = strtod (token_122, 0B);
  procpar_info_38(D)->offset_frequency = _124;
  goto <bb 75>;
;;    succ:       75

;;   basic block 35, loop depth 1
;;    pred:       31
  _128 = strcmp (token_25, "te");
  if (_128 == 0)
    goto <bb 36>;
  else
    goto <bb 39>;
;;    succ:       36
;;                39

;;   basic block 36, loop depth 1
;;    pred:       35
  fgets (&in_line, 255, in_file_15);
  _131 = ferror (in_file_15);
  retval.9_132 = _131 != 0;
  if (retval.9_132 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37
;;                38

;;   basic block 37, loop depth 0
;;    pred:       36
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 38, loop depth 1
;;    pred:       36
  token_134 = strtok (&in_line, " \n");
  token_136 = strtok (0B, " \n");
  _138 = strtod (token_136, 0B);
  _139 = (float) _138;
  procpar_info_38(D)->te = _139;
  goto <bb 75>;
;;    succ:       75

;;   basic block 39, loop depth 1
;;    pred:       35
  _143 = strcmp (token_25, "tm");
  if (_143 == 0)
    goto <bb 40>;
  else
    goto <bb 43>;
;;    succ:       40
;;                43

;;   basic block 40, loop depth 1
;;    pred:       39
  fgets (&in_line, 255, in_file_15);
  _146 = ferror (in_file_15);
  retval.10_147 = _146 != 0;
  if (retval.10_147 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 42, loop depth 1
;;    pred:       40
  token_149 = strtok (&in_line, " \n");
  token_151 = strtok (0B, " \n");
  _153 = strtod (token_151, 0B);
  _154 = (float) _153;
  procpar_info_38(D)->tm = _154;
  goto <bb 75>;
;;    succ:       75

;;   basic block 43, loop depth 1
;;    pred:       39
  _158 = strcmp (token_25, "gain");
  if (_158 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44
;;                47

;;   basic block 44, loop depth 1
;;    pred:       43
  fgets (&in_line, 255, in_file_15);
  _161 = ferror (in_file_15);
  retval.11_162 = _161 != 0;
  if (retval.11_162 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45
;;                46

;;   basic block 45, loop depth 0
;;    pred:       44
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 46, loop depth 1
;;    pred:       44
  token_164 = strtok (&in_line, " \n");
  token_166 = strtok (0B, " \n");
  _168 = strtod (token_166, 0B);
  _169 = (float) _168;
  procpar_info_38(D)->gain = _169;
  goto <bb 75>;
;;    succ:       75

;;   basic block 47, loop depth 1
;;    pred:       43
  _173 = strcmp (token_25, "pos1");
  if (_173 == 0)
    goto <bb 48>;
  else
    goto <bb 51>;
;;    succ:       48
;;                51

;;   basic block 48, loop depth 1
;;    pred:       47
  fgets (&in_line, 255, in_file_15);
  _176 = ferror (in_file_15);
  retval.12_177 = _176 != 0;
  if (retval.12_177 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 50, loop depth 1
;;    pred:       48
  token_179 = strtok (&in_line, " \n");
  token_181 = strtok (0B, " \n");
  _183 = strtod (token_181, 0B);
  _184 = (float) _183;
  procpar_info_38(D)->pos1 = _184;
  goto <bb 75>;
;;    succ:       75

;;   basic block 51, loop depth 1
;;    pred:       47
  _188 = strcmp (token_25, "pos2");
  if (_188 == 0)
    goto <bb 52>;
  else
    goto <bb 55>;
;;    succ:       52
;;                55

;;   basic block 52, loop depth 1
;;    pred:       51
  fgets (&in_line, 255, in_file_15);
  _191 = ferror (in_file_15);
  retval.13_192 = _191 != 0;
  if (retval.13_192 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53
;;                54

;;   basic block 53, loop depth 0
;;    pred:       52
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 54, loop depth 1
;;    pred:       52
  token_194 = strtok (&in_line, " \n");
  token_196 = strtok (0B, " \n");
  _198 = strtod (token_196, 0B);
  _199 = (float) _198;
  procpar_info_38(D)->pos2 = _199;
  goto <bb 75>;
;;    succ:       75

;;   basic block 55, loop depth 1
;;    pred:       51
  _203 = strcmp (token_25, "pos3");
  if (_203 == 0)
    goto <bb 56>;
  else
    goto <bb 59>;
;;    succ:       56
;;                59

;;   basic block 56, loop depth 1
;;    pred:       55
  fgets (&in_line, 255, in_file_15);
  _206 = ferror (in_file_15);
  retval.14_207 = _206 != 0;
  if (retval.14_207 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57
;;                58

;;   basic block 57, loop depth 0
;;    pred:       56
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 58, loop depth 1
;;    pred:       56
  token_209 = strtok (&in_line, " \n");
  token_211 = strtok (0B, " \n");
  _213 = strtod (token_211, 0B);
  _214 = (float) _213;
  procpar_info_38(D)->pos3 = _214;
  goto <bb 75>;
;;    succ:       75

;;   basic block 59, loop depth 1
;;    pred:       55
  _218 = strcmp (token_25, "vox1");
  if (_218 == 0)
    goto <bb 60>;
  else
    goto <bb 63>;
;;    succ:       60
;;                63

;;   basic block 60, loop depth 1
;;    pred:       59
  fgets (&in_line, 255, in_file_15);
  _221 = ferror (in_file_15);
  retval.15_222 = _221 != 0;
  if (retval.15_222 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61
;;                62

;;   basic block 61, loop depth 0
;;    pred:       60
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 62, loop depth 1
;;    pred:       60
  token_224 = strtok (&in_line, " \n");
  token_226 = strtok (0B, " \n");
  _228 = strtod (token_226, 0B);
  _229 = (float) _228;
  procpar_info_38(D)->vox1 = _229;
  goto <bb 75>;
;;    succ:       75

;;   basic block 63, loop depth 1
;;    pred:       59
  _233 = strcmp (token_25, "vox2");
  if (_233 == 0)
    goto <bb 64>;
  else
    goto <bb 67>;
;;    succ:       64
;;                67

;;   basic block 64, loop depth 1
;;    pred:       63
  fgets (&in_line, 255, in_file_15);
  _236 = ferror (in_file_15);
  retval.16_237 = _236 != 0;
  if (retval.16_237 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65
;;                66

;;   basic block 65, loop depth 0
;;    pred:       64
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 66, loop depth 1
;;    pred:       64
  token_239 = strtok (&in_line, " \n");
  token_241 = strtok (0B, " \n");
  _243 = strtod (token_241, 0B);
  _244 = (float) _243;
  procpar_info_38(D)->vox2 = _244;
  goto <bb 75>;
;;    succ:       75

;;   basic block 67, loop depth 1
;;    pred:       63
  _248 = strcmp (token_25, "vox3");
  if (_248 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;
;;    succ:       68
;;                71

;;   basic block 68, loop depth 1
;;    pred:       67
  fgets (&in_line, 255, in_file_15);
  _251 = ferror (in_file_15);
  retval.17_252 = _251 != 0;
  if (retval.17_252 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69
;;                70

;;   basic block 69, loop depth 0
;;    pred:       68
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 70, loop depth 1
;;    pred:       68
  token_254 = strtok (&in_line, " \n");
  token_256 = strtok (0B, " \n");
  _258 = strtod (token_256, 0B);
  _259 = (float) _258;
  procpar_info_38(D)->vox3 = _259;
  goto <bb 75>;
;;    succ:       75

;;   basic block 71, loop depth 1
;;    pred:       67
  _263 = strcmp (token_25, "vtheta");
  if (_263 == 0)
    goto <bb 72>;
  else
    goto <bb 75>;
;;    succ:       72
;;                75

;;   basic block 72, loop depth 1
;;    pred:       71
  fgets (&in_line, 255, in_file_15);
  _266 = ferror (in_file_15);
  retval.18_267 = _266 != 0;
  if (retval.18_267 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;
;;    succ:       73
;;                74

;;   basic block 73, loop depth 0
;;    pred:       72
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 74, loop depth 1
;;    pred:       72
  token_269 = strtok (&in_line, " \n");
  token_271 = strtok (0B, " \n");
  _273 = strtod (token_271, 0B);
  _274 = (float) _273;
  procpar_info_38(D)->vtheta = _274;
;;    succ:       75

;;   basic block 75, loop depth 1
;;    pred:       10
;;                14
;;                18
;;                22
;;                26
;;                30
;;                34
;;                38
;;                42
;;                46
;;                50
;;                54
;;                58
;;                62
;;                66
;;                70
;;                71
;;                74
  fgets (&in_line, 5000, in_file_15);
  _280 = ferror (in_file_15);
  retval.19_281 = _280 != 0;
  if (retval.19_281 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;
;;    succ:       76
;;                77

;;   basic block 76, loop depth 0
;;    pred:       75
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 77, loop depth 1
;;    pred:       75
  goto <bb 6>;
;;    succ:       6

;;   basic block 78, loop depth 0
;;    pred:       6
  if (in_file_15 != 0B)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79
;;                80

;;   basic block 79, loop depth 0
;;    pred:       78
  __builtin_puts (&"okay"[0]);
  stdout.20_285 = stdout;
  fflush (stdout.20_285);
  fclose (in_file_15);
;;    succ:       80

;;   basic block 80, loop depth 0
;;    pred:       78
;;                79
  _288 = 2;
  in_line ={v} {CLOBBER};
;;    succ:       81

;;   basic block 81, loop depth 0
;;    pred:       80
<L98>:
  return _288;
;;    succ:       EXIT

}


Partition 3: size 50000 align 16
	in_line
Partition 2: size 8 align 8
	token_7
Partition 1: size 8 align 8
	in_file_6
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; in_file_6 = 0B;

(insn 8 7 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 -1
     (nil))

;; token_7 = 0B;

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 -1
     (nil))

;; _8 = 5000;

(insn 10 9 0 (set (reg:DI 87 [ D.5702 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 -1
     (nil))

;; token_9 = (char *) _8;

(insn 11 10 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 87 [ D.5702 ])) read_procpar.cpp:28 -1
     (nil))

;; i_10 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 -1
     (nil))

;; _14 = fopen (procpar_string_12(D), "rb");

(insn 13 12 14 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 -1
     (nil))

(insn 14 13 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f52d1bd5360 *.LC0>)) read_procpar.cpp:34 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:34 -1
     (nil))

(call_insn 16 15 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f52d1e43510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 17 16 0 (set (reg/f:DI 88 [ D.5703 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 -1
     (nil))

;; in_file_15 = _14;

(insn 18 17 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 88 [ D.5703 ])) read_procpar.cpp:34 -1
     (nil))

;; if (in_file_15 == 0B)

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:35 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin_puts (&"Can\'t open procpar file."[0]);

(insn 22 21 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f52d1bd53f0 *.LC1>)) read_procpar.cpp:36 -1
     (nil))

(call_insn 23 22 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 24 23 25 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 -1
     (nil))

(call_insn 25 24 26 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 26 25 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 27 26 28 2 "" [0 uses])

(note 28 27 0 NOTE_INSN_BASIC_BLOCK)

;; fgets (&in_line, 255, in_file_15);

(insn 29 28 30 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 -1
     (nil))

(insn 31 30 32 (set (reg:DI 1 dx)
        (reg:DI 181)) read_procpar.cpp:41 -1
     (nil))

(insn 32 31 33 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:41 -1
     (nil))

(call_insn 34 33 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _18 = ferror (in_file_15);

(insn 35 34 36 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 -1
     (nil))

(insn 36 35 37 (set (reg:DI 5 di)
        (reg:DI 183)) read_procpar.cpp:42 -1
     (nil))

(call_insn 37 36 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 38 37 0 (set (reg:SI 89 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 -1
     (nil))

;; _19 = _18 != 0;

(insn 39 38 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))

(insn 40 39 0 (set (reg:QI 90 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))

;; if (_19 != 0)

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:42 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin_puts (&"Error reading file."[0]);

(insn 44 43 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:43 -1
     (nil))

(call_insn 45 44 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 46 45 47 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 -1
     (nil))

(call_insn 47 46 48 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 48 47 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 49 48 50 3 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = feof (in_file_15);

(insn 51 50 52 (set (reg:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 -1
     (nil))

(insn 52 51 53 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:51 -1
     (nil))

(call_insn 53 52 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f52d1e55510 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 54 53 0 (set (reg:SI 91 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 -1
     (nil))

;; _22 = _21 == 0;

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))

(insn 56 55 0 (set (reg:QI 92 [ D.5705 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))

;; if (_22 != 0)

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:51 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; i_23 = i_1 + 1;

(insn 60 59 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 -1
     (nil))

;; token_25 = strtok (&in_line, " \t\n");

(insn 61 60 62 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 -1
     (nil))

(insn 62 61 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f52d1bd5510 *.LC3>)) read_procpar.cpp:65 -1
     (nil))

(insn 63 62 64 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:65 -1
     (nil))

(call_insn 64 63 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 65 64 66 (set (reg:DI 186)
        (reg:DI 0 ax)) read_procpar.cpp:65 -1
     (nil))

(insn 66 65 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 186)) read_procpar.cpp:65 -1
     (nil))

;; _26 = strcmp (token_25, "at");

(insn 67 66 68 (set (reg:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 -1
     (nil))

(insn 68 67 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f52d1bd55a0 *.LC4>)) read_procpar.cpp:80 -1
     (nil))

(insn 69 68 70 (set (reg:DI 5 di)
        (reg:DI 187)) read_procpar.cpp:80 -1
     (nil))

(call_insn/i 70 69 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 71 70 0 (set (reg:SI 93 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 -1
     (nil))

;; if (_26 == 0)

(insn 72 71 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:80 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; fgets (&in_line, 5000, in_file_15);

(insn 75 74 76 (set (reg:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 -1
     (nil))

(insn 76 75 77 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 -1
     (nil))

(insn 77 76 78 (set (reg:DI 1 dx)
        (reg:DI 188)) read_procpar.cpp:90 -1
     (nil))

(insn 78 77 79 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 -1
     (nil))

(insn 79 78 80 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:90 -1
     (nil))

(call_insn 80 79 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _29 = ferror (in_file_15);

(insn 81 80 82 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 -1
     (nil))

(insn 82 81 83 (set (reg:DI 5 di)
        (reg:DI 190)) read_procpar.cpp:92 -1
     (nil))

(call_insn 83 82 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 84 83 0 (set (reg:SI 94 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 -1
     (nil))

;; _30 = _29 != 0;

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))

(insn 86 85 0 (set (reg:QI 95 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))

;; if (_30 != 0)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:92 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; __builtin_puts (&"Error reading file."[0]);

(insn 90 89 91 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:93 -1
     (nil))

(call_insn 91 90 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 92 91 93 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 -1
     (nil))

(call_insn 93 92 94 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 94 93 0)

;; Generating RTL for gimple basic block 10

;; 

(code_label 95 94 96 6 "" [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; token_32 = strtok (&in_line, " \n");

(insn 97 96 98 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 -1
     (nil))

(insn 98 97 99 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:106 -1
     (nil))

(insn 99 98 100 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:106 -1
     (nil))

(call_insn 100 99 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 101 100 102 (set (reg:DI 192)
        (reg:DI 0 ax)) read_procpar.cpp:106 -1
     (nil))

(insn 102 101 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 192)) read_procpar.cpp:106 -1
     (nil))

;; token_34 = strtok (0B, " \n");

(insn 103 102 104 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:110 -1
     (nil))

(insn 104 103 105 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 -1
     (nil))

(call_insn 105 104 106 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 106 105 107 (set (reg:DI 193)
        (reg:DI 0 ax)) read_procpar.cpp:110 -1
     (nil))

(insn 107 106 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 193)) read_procpar.cpp:110 -1
     (nil))

;; _36 = strtod (token_34, 0B);

(insn 108 107 109 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))

(insn 109 108 110 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 -1
     (nil))

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:115 -1
     (nil))

(call_insn 111 110 112 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 112 111 0 (set (reg:DF 96 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 -1
     (nil))

;; _37 = (float) _36;

(insn 113 112 0 (set (reg:SF 97 [ D.5707 ])
        (float_truncate:SF (reg:DF 96 [ D.5706 ]))) read_procpar.cpp:115 -1
     (nil))

;; procpar_info_38(D)->acquision_time = _37;

(insn 114 113 115 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))

(insn 115 114 0 (set (mem/j:SF (reg/f:DI 195) [0 procpar_info_38(D)->acquision_time+0 S4 A64])
        (reg:SF 97 [ D.5707 ])) read_procpar.cpp:115 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 118 117 119 5 "" [0 uses])

(note 119 118 0 NOTE_INSN_BASIC_BLOCK)

;; _42 = strcmp (token_25, "date");

(insn 120 119 121 (set (reg:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 -1
     (nil))

(insn 121 120 122 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f52d1bd56c0 *.LC6>)) read_procpar.cpp:122 -1
     (nil))

(insn 122 121 123 (set (reg:DI 5 di)
        (reg:DI 196)) read_procpar.cpp:122 -1
     (nil))

(call_insn/i 123 122 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 124 123 0 (set (reg:SI 98 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 -1
     (nil))

;; if (_42 == 0)

(insn 125 124 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (nil))

(jump_insn 126 125 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:122 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; fgets (&in_line, 255, in_file_15);

(insn 128 127 129 (set (reg:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 -1
     (nil))

(insn 129 128 130 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 -1
     (nil))

(insn 130 129 131 (set (reg:DI 1 dx)
        (reg:DI 197)) read_procpar.cpp:125 -1
     (nil))

(insn 131 130 132 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 -1
     (nil))

(insn 132 131 133 (set (reg:DI 5 di)
        (reg:DI 198)) read_procpar.cpp:125 -1
     (nil))

(call_insn 133 132 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _45 = ferror (in_file_15);

(insn 134 133 135 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 -1
     (nil))

(insn 135 134 136 (set (reg:DI 5 di)
        (reg:DI 199)) read_procpar.cpp:126 -1
     (nil))

(call_insn 136 135 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 137 136 0 (set (reg:SI 99 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 -1
     (nil))

;; _46 = _45 != 0;

(insn 138 137 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))

(insn 139 138 0 (set (reg:QI 100 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))

;; if (_46 != 0)

(insn 140 139 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))

(jump_insn 141 140 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:126 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; __builtin_puts (&"Error reading file."[0]);

(insn 143 142 144 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:127 -1
     (nil))

(call_insn 144 143 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 145 144 146 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 -1
     (nil))

(call_insn 146 145 147 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 147 146 0)

;; Generating RTL for gimple basic block 14

;; 

(code_label 148 147 149 9 "" [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)

;; token_48 = strtok (&in_line, " \"");

(insn 150 149 151 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 -1
     (nil))

(insn 151 150 152 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f52d1bd5750 *.LC7>)) read_procpar.cpp:132 -1
     (nil))

(insn 152 151 153 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:132 -1
     (nil))

(call_insn 153 152 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 154 153 155 (set (reg:DI 201)
        (reg:DI 0 ax)) read_procpar.cpp:132 -1
     (nil))

(insn 155 154 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 201)) read_procpar.cpp:132 -1
     (nil))

;; token_50 = strtok (0B, "\"");

(insn 156 155 157 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f52d1bd57e0 *.LC8>)) read_procpar.cpp:133 -1
     (nil))

(insn 157 156 158 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 -1
     (nil))

(call_insn 158 157 159 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 159 158 160 (set (reg:DI 202)
        (reg:DI 0 ax)) read_procpar.cpp:133 -1
     (nil))

(insn 160 159 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 202)) read_procpar.cpp:133 -1
     (nil))

;; _51 = &procpar_info_38(D)->date;

(insn 161 160 162 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))

(insn 162 161 0 (parallel [
            (set (reg/f:DI 101 [ D.5708 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))

;; strcpy (_51, token_50);

(insn 163 162 164 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))

(insn 164 163 165 (set (reg:DI 4 si)
        (reg:DI 204)) read_procpar.cpp:134 -1
     (nil))

(insn 165 164 166 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.5708 ])) read_procpar.cpp:134 -1
     (nil))

(call_insn 166 165 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f52d207a5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 15

;; 

(code_label 169 168 170 8 "" [0 uses])

(note 170 169 0 NOTE_INSN_BASIC_BLOCK)

;; _55 = strcmp (token_25, "filter");

(insn 171 170 172 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 -1
     (nil))

(insn 172 171 173 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f52d1bd5870 *.LC9>)) read_procpar.cpp:136 -1
     (nil))

(insn 173 172 174 (set (reg:DI 5 di)
        (reg:DI 205)) read_procpar.cpp:136 -1
     (nil))

(call_insn/i 174 173 175 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 175 174 0 (set (reg:SI 102 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 -1
     (nil))

;; if (_55 == 0)

(insn 176 175 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (nil))

(jump_insn 177 176 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:136 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; fgets (&in_line, 255, in_file_15);

(insn 179 178 180 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 -1
     (nil))

(insn 180 179 181 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 -1
     (nil))

(insn 181 180 182 (set (reg:DI 1 dx)
        (reg:DI 206)) read_procpar.cpp:138 -1
     (nil))

(insn 182 181 183 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 -1
     (nil))

(insn 183 182 184 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:138 -1
     (nil))

(call_insn 184 183 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _58 = ferror (in_file_15);

(insn 185 184 186 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 -1
     (nil))

(insn 186 185 187 (set (reg:DI 5 di)
        (reg:DI 208)) read_procpar.cpp:139 -1
     (nil))

(call_insn 187 186 188 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 188 187 0 (set (reg:SI 103 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 -1
     (nil))

;; _59 = _58 != 0;

(insn 189 188 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))

(insn 190 189 0 (set (reg:QI 104 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))

;; if (_59 != 0)

(insn 191 190 192 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))

(jump_insn 192 191 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:139 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; __builtin_puts (&"Error reading file."[0]);

(insn 194 193 195 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:140 -1
     (nil))

(call_insn 195 194 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 196 195 197 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 -1
     (nil))

(call_insn 197 196 198 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 198 197 0)

;; Generating RTL for gimple basic block 18

;; 

(code_label 199 198 200 11 "" [0 uses])

(note 200 199 0 NOTE_INSN_BASIC_BLOCK)

;; token_61 = strtok (&in_line, " \n");

(insn 201 200 202 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 -1
     (nil))

(insn 202 201 203 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:145 -1
     (nil))

(insn 203 202 204 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:145 -1
     (nil))

(call_insn 204 203 205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 205 204 206 (set (reg:DI 210)
        (reg:DI 0 ax)) read_procpar.cpp:145 -1
     (nil))

(insn 206 205 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 210)) read_procpar.cpp:145 -1
     (nil))

;; token_63 = strtok (0B, " \n");

(insn 207 206 208 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:146 -1
     (nil))

(insn 208 207 209 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 -1
     (nil))

(call_insn 209 208 210 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 210 209 211 (set (reg:DI 211)
        (reg:DI 0 ax)) read_procpar.cpp:146 -1
     (nil))

(insn 211 210 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 211)) read_procpar.cpp:146 -1
     (nil))

;; _65 = strtod (token_63, 0B);

(insn 212 211 213 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))

(insn 213 212 214 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 -1
     (nil))

(insn 214 213 215 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:147 -1
     (nil))

(call_insn 215 214 216 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 216 215 0 (set (reg:DF 105 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 -1
     (nil))

;; _66 = (float) _65;

(insn 217 216 0 (set (reg:SF 106 [ D.5707 ])
        (float_truncate:SF (reg:DF 105 [ D.5706 ]))) read_procpar.cpp:147 -1
     (nil))

;; procpar_info_38(D)->filter = _66;

(insn 218 217 219 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))

(insn 219 218 0 (set (mem/j:SF (plus:DI (reg/f:DI 213)
                (const_int 292 [0x124])) [0 procpar_info_38(D)->filter+0 S4 A32])
        (reg:SF 106 [ D.5707 ])) read_procpar.cpp:147 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 222 221 223 10 "" [0 uses])

(note 223 222 0 NOTE_INSN_BASIC_BLOCK)

;; _70 = strcmp (token_25, "nt");

(insn 224 223 225 (set (reg:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 -1
     (nil))

(insn 225 224 226 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f52d1bd5900 *.LC10>)) read_procpar.cpp:149 -1
     (nil))

(insn 226 225 227 (set (reg:DI 5 di)
        (reg:DI 214)) read_procpar.cpp:149 -1
     (nil))

(call_insn/i 227 226 228 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 228 227 0 (set (reg:SI 107 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 -1
     (nil))

;; if (_70 == 0)

(insn 229 228 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (nil))

(jump_insn 230 229 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:149 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; fgets (&in_line, 255, in_file_15);

(insn 232 231 233 (set (reg:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 -1
     (nil))

(insn 233 232 234 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 -1
     (nil))

(insn 234 233 235 (set (reg:DI 1 dx)
        (reg:DI 215)) read_procpar.cpp:151 -1
     (nil))

(insn 235 234 236 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 -1
     (nil))

(insn 236 235 237 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:151 -1
     (nil))

(call_insn 237 236 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _73 = ferror (in_file_15);

(insn 238 237 239 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 -1
     (nil))

(insn 239 238 240 (set (reg:DI 5 di)
        (reg:DI 217)) read_procpar.cpp:152 -1
     (nil))

(call_insn 240 239 241 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 241 240 0 (set (reg:SI 108 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 -1
     (nil))

;; _74 = _73 != 0;

(insn 242 241 243 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))

(insn 243 242 0 (set (reg:QI 109 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))

;; if (_74 != 0)

(insn 244 243 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))

(jump_insn 245 244 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:152 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; __builtin_puts (&"Error reading file."[0]);

(insn 247 246 248 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:153 -1
     (nil))

(call_insn 248 247 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 249 248 250 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 -1
     (nil))

(call_insn 250 249 251 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 251 250 0)

;; Generating RTL for gimple basic block 22

;; 

(code_label 252 251 253 13 "" [0 uses])

(note 253 252 0 NOTE_INSN_BASIC_BLOCK)

;; token_76 = strtok (&in_line, " \n");

(insn 254 253 255 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 -1
     (nil))

(insn 255 254 256 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:158 -1
     (nil))

(insn 256 255 257 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:158 -1
     (nil))

(call_insn 257 256 258 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 258 257 259 (set (reg:DI 219)
        (reg:DI 0 ax)) read_procpar.cpp:158 -1
     (nil))

(insn 259 258 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 219)) read_procpar.cpp:158 -1
     (nil))

;; token_78 = strtok (0B, " \n");

(insn 260 259 261 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:159 -1
     (nil))

(insn 261 260 262 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 -1
     (nil))

(call_insn 262 261 263 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 263 262 264 (set (reg:DI 220)
        (reg:DI 0 ax)) read_procpar.cpp:159 -1
     (nil))

(insn 264 263 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 220)) read_procpar.cpp:159 -1
     (nil))

;; _80 = strtol (token_78, 0B, 10);

(insn 265 264 266 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))

(insn 266 265 267 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 -1
     (nil))

(insn 267 266 268 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 -1
     (nil))

(insn 268 267 269 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:160 -1
     (nil))

(call_insn 269 268 270 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f52d1f101b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 270 269 0 (set (reg:DI 110 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 -1
     (nil))

;; _81 = (int) _80;

(insn 271 270 0 (set (reg:SI 111 [ D.5704 ])
        (subreg:SI (reg:DI 110 [ D.5709 ]) 0)) read_procpar.cpp:160 -1
     (nil))

;; procpar_info_38(D)->num_transients = _81;

(insn 272 271 273 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))

(insn 273 272 0 (set (mem/j:SI (plus:DI (reg/f:DI 222)
                (const_int 296 [0x128])) [0 procpar_info_38(D)->num_transients+0 S4 A64])
        (reg:SI 111 [ D.5704 ])) read_procpar.cpp:160 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 276 275 277 12 "" [0 uses])

(note 277 276 0 NOTE_INSN_BASIC_BLOCK)

;; _85 = strcmp (token_25, "np");

(insn 278 277 279 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 -1
     (nil))

(insn 279 278 280 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f52d1bd5990 *.LC11>)) read_procpar.cpp:162 -1
     (nil))

(insn 280 279 281 (set (reg:DI 5 di)
        (reg:DI 223)) read_procpar.cpp:162 -1
     (nil))

(call_insn/i 281 280 282 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 282 281 0 (set (reg:SI 112 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 -1
     (nil))

;; if (_85 == 0)

(insn 283 282 284 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (nil))

(jump_insn 284 283 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:162 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; fgets (&in_line, 255, in_file_15);

(insn 286 285 287 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 -1
     (nil))

(insn 287 286 288 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 -1
     (nil))

(insn 288 287 289 (set (reg:DI 1 dx)
        (reg:DI 224)) read_procpar.cpp:164 -1
     (nil))

(insn 289 288 290 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 -1
     (nil))

(insn 290 289 291 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:164 -1
     (nil))

(call_insn 291 290 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _88 = ferror (in_file_15);

(insn 292 291 293 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 -1
     (nil))

(insn 293 292 294 (set (reg:DI 5 di)
        (reg:DI 226)) read_procpar.cpp:165 -1
     (nil))

(call_insn 294 293 295 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 295 294 0 (set (reg:SI 113 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 -1
     (nil))

;; _89 = _88 != 0;

(insn 296 295 297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))

(insn 297 296 0 (set (reg:QI 114 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))

;; if (_89 != 0)

(insn 298 297 299 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))

(jump_insn 299 298 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:165 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; __builtin_puts (&"Error reading file."[0]);

(insn 301 300 302 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:166 -1
     (nil))

(call_insn 302 301 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 303 302 304 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 -1
     (nil))

(call_insn 304 303 305 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 305 304 0)

;; Generating RTL for gimple basic block 26

;; 

(code_label 306 305 307 15 "" [0 uses])

(note 307 306 0 NOTE_INSN_BASIC_BLOCK)

;; token_91 = strtok (&in_line, " \n");

(insn 308 307 309 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 -1
     (nil))

(insn 309 308 310 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:171 -1
     (nil))

(insn 310 309 311 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:171 -1
     (nil))

(call_insn 311 310 312 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 312 311 313 (set (reg:DI 228)
        (reg:DI 0 ax)) read_procpar.cpp:171 -1
     (nil))

(insn 313 312 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 228)) read_procpar.cpp:171 -1
     (nil))

;; token_93 = strtok (0B, " \n");

(insn 314 313 315 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:172 -1
     (nil))

(insn 315 314 316 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 -1
     (nil))

(call_insn 316 315 317 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 317 316 318 (set (reg:DI 229)
        (reg:DI 0 ax)) read_procpar.cpp:172 -1
     (nil))

(insn 318 317 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 229)) read_procpar.cpp:172 -1
     (nil))

;; _95 = strtol (token_93, 0B, 10);

(insn 319 318 320 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))

(insn 320 319 321 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 -1
     (nil))

(insn 321 320 322 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 -1
     (nil))

(insn 322 321 323 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:173 -1
     (nil))

(call_insn 323 322 324 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f52d1f101b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 324 323 0 (set (reg:DI 115 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 -1
     (nil))

;; _96 = (int) _95;

(insn 325 324 0 (set (reg:SI 116 [ D.5704 ])
        (subreg:SI (reg:DI 115 [ D.5709 ]) 0)) read_procpar.cpp:173 -1
     (nil))

;; procpar_info_38(D)->num_points = _96;

(insn 326 325 327 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))

(insn 327 326 0 (set (mem/j:SI (plus:DI (reg/f:DI 231)
                (const_int 300 [0x12c])) [0 procpar_info_38(D)->num_points+0 S4 A32])
        (reg:SI 116 [ D.5704 ])) read_procpar.cpp:173 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 330 329 331 14 "" [0 uses])

(note 331 330 0 NOTE_INSN_BASIC_BLOCK)

;; _100 = strcmp (token_25, "sfrq");

(insn 332 331 333 (set (reg:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 -1
     (nil))

(insn 333 332 334 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f52d1bd5a20 *.LC12>)) read_procpar.cpp:175 -1
     (nil))

(insn 334 333 335 (set (reg:DI 5 di)
        (reg:DI 232)) read_procpar.cpp:175 -1
     (nil))

(call_insn/i 335 334 336 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 336 335 0 (set (reg:SI 117 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 -1
     (nil))

;; if (_100 == 0)

(insn 337 336 338 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (nil))

(jump_insn 338 337 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:175 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; fgets (&in_line, 255, in_file_15);

(insn 340 339 341 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 -1
     (nil))

(insn 341 340 342 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 -1
     (nil))

(insn 342 341 343 (set (reg:DI 1 dx)
        (reg:DI 233)) read_procpar.cpp:177 -1
     (nil))

(insn 343 342 344 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 -1
     (nil))

(insn 344 343 345 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:177 -1
     (nil))

(call_insn 345 344 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _103 = ferror (in_file_15);

(insn 346 345 347 (set (reg:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 -1
     (nil))

(insn 347 346 348 (set (reg:DI 5 di)
        (reg:DI 235)) read_procpar.cpp:178 -1
     (nil))

(call_insn 348 347 349 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 349 348 0 (set (reg:SI 118 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 -1
     (nil))

;; _104 = _103 != 0;

(insn 350 349 351 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))

(insn 351 350 0 (set (reg:QI 119 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))

;; if (_104 != 0)

(insn 352 351 353 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))

(jump_insn 353 352 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:178 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; __builtin_puts (&"Error reading file."[0]);

(insn 355 354 356 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:179 -1
     (nil))

(call_insn 356 355 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 357 356 358 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 -1
     (nil))

(call_insn 358 357 359 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 359 358 0)

;; Generating RTL for gimple basic block 30

;; 

(code_label 360 359 361 17 "" [0 uses])

(note 361 360 0 NOTE_INSN_BASIC_BLOCK)

;; token_106 = strtok (&in_line, " \n");

(insn 362 361 363 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 -1
     (nil))

(insn 363 362 364 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:184 -1
     (nil))

(insn 364 363 365 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:184 -1
     (nil))

(call_insn 365 364 366 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 366 365 367 (set (reg:DI 237)
        (reg:DI 0 ax)) read_procpar.cpp:184 -1
     (nil))

(insn 367 366 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 237)) read_procpar.cpp:184 -1
     (nil))

;; token_108 = strtok (0B, " \n");

(insn 368 367 369 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:185 -1
     (nil))

(insn 369 368 370 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 -1
     (nil))

(call_insn 370 369 371 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 371 370 372 (set (reg:DI 238)
        (reg:DI 0 ax)) read_procpar.cpp:185 -1
     (nil))

(insn 372 371 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 238)) read_procpar.cpp:185 -1
     (nil))

;; _110 = strtod (token_108, 0B);

(insn 373 372 374 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))

(insn 374 373 375 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 -1
     (nil))

(insn 375 374 376 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:186 -1
     (nil))

(call_insn 376 375 377 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 377 376 0 (set (reg:DF 120 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 -1
     (nil))

;; procpar_info_38(D)->main_frequency = _110;

(insn 378 377 379 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))

(insn 379 378 0 (set (mem/j:DF (plus:DI (reg/f:DI 240)
                (const_int 304 [0x130])) [0 procpar_info_38(D)->main_frequency+0 S8 A64])
        (reg:DF 120 [ D.5706 ])) read_procpar.cpp:186 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 382 381 383 16 "" [0 uses])

(note 383 382 0 NOTE_INSN_BASIC_BLOCK)

;; _114 = strcmp (token_25, "tof");

(insn 384 383 385 (set (reg:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 -1
     (nil))

(insn 385 384 386 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f52d1bd5ab0 *.LC13>)) read_procpar.cpp:188 -1
     (nil))

(insn 386 385 387 (set (reg:DI 5 di)
        (reg:DI 241)) read_procpar.cpp:188 -1
     (nil))

(call_insn/i 387 386 388 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 388 387 0 (set (reg:SI 121 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 -1
     (nil))

;; if (_114 == 0)

(insn 389 388 390 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (nil))

(jump_insn 390 389 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:188 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; fgets (&in_line, 255, in_file_15);

(insn 392 391 393 (set (reg:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 -1
     (nil))

(insn 393 392 394 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 -1
     (nil))

(insn 394 393 395 (set (reg:DI 1 dx)
        (reg:DI 242)) read_procpar.cpp:190 -1
     (nil))

(insn 395 394 396 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 -1
     (nil))

(insn 396 395 397 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:190 -1
     (nil))

(call_insn 397 396 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _117 = ferror (in_file_15);

(insn 398 397 399 (set (reg:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 -1
     (nil))

(insn 399 398 400 (set (reg:DI 5 di)
        (reg:DI 244)) read_procpar.cpp:191 -1
     (nil))

(call_insn 400 399 401 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 401 400 0 (set (reg:SI 122 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 -1
     (nil))

;; _118 = _117 != 0;

(insn 402 401 403 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))

(insn 403 402 0 (set (reg:QI 123 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))

;; if (_118 != 0)

(insn 404 403 405 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))

(jump_insn 405 404 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:191 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; __builtin_puts (&"Error reading file."[0]);

(insn 407 406 408 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:192 -1
     (nil))

(call_insn 408 407 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 409 408 410 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 -1
     (nil))

(call_insn 410 409 411 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 411 410 0)

;; Generating RTL for gimple basic block 34

;; 

(code_label 412 411 413 19 "" [0 uses])

(note 413 412 0 NOTE_INSN_BASIC_BLOCK)

;; token_120 = strtok (&in_line, " \n");

(insn 414 413 415 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 -1
     (nil))

(insn 415 414 416 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:197 -1
     (nil))

(insn 416 415 417 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:197 -1
     (nil))

(call_insn 417 416 418 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 418 417 419 (set (reg:DI 246)
        (reg:DI 0 ax)) read_procpar.cpp:197 -1
     (nil))

(insn 419 418 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 246)) read_procpar.cpp:197 -1
     (nil))

;; token_122 = strtok (0B, " \n");

(insn 420 419 421 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:198 -1
     (nil))

(insn 421 420 422 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 -1
     (nil))

(call_insn 422 421 423 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 423 422 424 (set (reg:DI 247)
        (reg:DI 0 ax)) read_procpar.cpp:198 -1
     (nil))

(insn 424 423 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 247)) read_procpar.cpp:198 -1
     (nil))

;; _124 = strtod (token_122, 0B);

(insn 425 424 426 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))

(insn 426 425 427 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 -1
     (nil))

(insn 427 426 428 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:199 -1
     (nil))

(call_insn 428 427 429 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 429 428 0 (set (reg:DF 124 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 -1
     (nil))

;; procpar_info_38(D)->offset_frequency = _124;

(insn 430 429 431 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))

(insn 431 430 0 (set (mem/j:DF (plus:DI (reg/f:DI 249)
                (const_int 312 [0x138])) [0 procpar_info_38(D)->offset_frequency+0 S8 A64])
        (reg:DF 124 [ D.5706 ])) read_procpar.cpp:199 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 434 433 435 18 "" [0 uses])

(note 435 434 0 NOTE_INSN_BASIC_BLOCK)

;; _128 = strcmp (token_25, "te");

(insn 436 435 437 (set (reg:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 -1
     (nil))

(insn 437 436 438 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f52d1bd5b40 *.LC14>)) read_procpar.cpp:201 -1
     (nil))

(insn 438 437 439 (set (reg:DI 5 di)
        (reg:DI 250)) read_procpar.cpp:201 -1
     (nil))

(call_insn/i 439 438 440 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 440 439 0 (set (reg:SI 125 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 -1
     (nil))

;; if (_128 == 0)

(insn 441 440 442 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (nil))

(jump_insn 442 441 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:201 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; fgets (&in_line, 255, in_file_15);

(insn 444 443 445 (set (reg:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 -1
     (nil))

(insn 445 444 446 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 -1
     (nil))

(insn 446 445 447 (set (reg:DI 1 dx)
        (reg:DI 251)) read_procpar.cpp:203 -1
     (nil))

(insn 447 446 448 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 -1
     (nil))

(insn 448 447 449 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:203 -1
     (nil))

(call_insn 449 448 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _131 = ferror (in_file_15);

(insn 450 449 451 (set (reg:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 -1
     (nil))

(insn 451 450 452 (set (reg:DI 5 di)
        (reg:DI 253)) read_procpar.cpp:204 -1
     (nil))

(call_insn 452 451 453 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 453 452 0 (set (reg:SI 126 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 -1
     (nil))

;; _132 = _131 != 0;

(insn 454 453 455 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))

(insn 455 454 0 (set (reg:QI 127 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))

;; if (_132 != 0)

(insn 456 455 457 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))

(jump_insn 457 456 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:204 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; __builtin_puts (&"Error reading file."[0]);

(insn 459 458 460 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:205 -1
     (nil))

(call_insn 460 459 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 461 460 462 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 -1
     (nil))

(call_insn 462 461 463 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 463 462 0)

;; Generating RTL for gimple basic block 38

;; 

(code_label 464 463 465 21 "" [0 uses])

(note 465 464 0 NOTE_INSN_BASIC_BLOCK)

;; token_134 = strtok (&in_line, " \n");

(insn 466 465 467 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 -1
     (nil))

(insn 467 466 468 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:210 -1
     (nil))

(insn 468 467 469 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:210 -1
     (nil))

(call_insn 469 468 470 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 470 469 471 (set (reg:DI 255)
        (reg:DI 0 ax)) read_procpar.cpp:210 -1
     (nil))

(insn 471 470 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 255)) read_procpar.cpp:210 -1
     (nil))

;; token_136 = strtok (0B, " \n");

(insn 472 471 473 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:211 -1
     (nil))

(insn 473 472 474 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 -1
     (nil))

(call_insn 474 473 475 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 475 474 476 (set (reg:DI 256)
        (reg:DI 0 ax)) read_procpar.cpp:211 -1
     (nil))

(insn 476 475 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 256)) read_procpar.cpp:211 -1
     (nil))

;; _138 = strtod (token_136, 0B);

(insn 477 476 478 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))

(insn 478 477 479 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 -1
     (nil))

(insn 479 478 480 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:212 -1
     (nil))

(call_insn 480 479 481 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 481 480 0 (set (reg:DF 128 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 -1
     (nil))

;; _139 = (float) _138;

(insn 482 481 0 (set (reg:SF 129 [ D.5707 ])
        (float_truncate:SF (reg:DF 128 [ D.5706 ]))) read_procpar.cpp:212 -1
     (nil))

;; procpar_info_38(D)->te = _139;

(insn 483 482 484 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))

(insn 484 483 0 (set (mem/j:SF (plus:DI (reg/f:DI 258)
                (const_int 320 [0x140])) [0 procpar_info_38(D)->te+0 S4 A64])
        (reg:SF 129 [ D.5707 ])) read_procpar.cpp:212 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; 

(code_label 487 486 488 20 "" [0 uses])

(note 488 487 0 NOTE_INSN_BASIC_BLOCK)

;; _143 = strcmp (token_25, "tm");

(insn 489 488 490 (set (reg:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 -1
     (nil))

(insn 490 489 491 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f52d1bd5bd0 *.LC15>)) read_procpar.cpp:214 -1
     (nil))

(insn 491 490 492 (set (reg:DI 5 di)
        (reg:DI 259)) read_procpar.cpp:214 -1
     (nil))

(call_insn/i 492 491 493 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 493 492 0 (set (reg:SI 130 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 -1
     (nil))

;; if (_143 == 0)

(insn 494 493 495 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (nil))

(jump_insn 495 494 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:214 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; fgets (&in_line, 255, in_file_15);

(insn 497 496 498 (set (reg:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 -1
     (nil))

(insn 498 497 499 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 -1
     (nil))

(insn 499 498 500 (set (reg:DI 1 dx)
        (reg:DI 260)) read_procpar.cpp:216 -1
     (nil))

(insn 500 499 501 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 -1
     (nil))

(insn 501 500 502 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:216 -1
     (nil))

(call_insn 502 501 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _146 = ferror (in_file_15);

(insn 503 502 504 (set (reg:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 -1
     (nil))

(insn 504 503 505 (set (reg:DI 5 di)
        (reg:DI 262)) read_procpar.cpp:217 -1
     (nil))

(call_insn 505 504 506 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 506 505 0 (set (reg:SI 131 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 -1
     (nil))

;; _147 = _146 != 0;

(insn 507 506 508 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))

(insn 508 507 0 (set (reg:QI 132 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))

;; if (_147 != 0)

(insn 509 508 510 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))

(jump_insn 510 509 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:217 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; __builtin_puts (&"Error reading file."[0]);

(insn 512 511 513 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:218 -1
     (nil))

(call_insn 513 512 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 514 513 515 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 -1
     (nil))

(call_insn 515 514 516 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 516 515 0)

;; Generating RTL for gimple basic block 42

;; 

(code_label 517 516 518 23 "" [0 uses])

(note 518 517 0 NOTE_INSN_BASIC_BLOCK)

;; token_149 = strtok (&in_line, " \n");

(insn 519 518 520 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 -1
     (nil))

(insn 520 519 521 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:223 -1
     (nil))

(insn 521 520 522 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:223 -1
     (nil))

(call_insn 522 521 523 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 523 522 524 (set (reg:DI 264)
        (reg:DI 0 ax)) read_procpar.cpp:223 -1
     (nil))

(insn 524 523 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 264)) read_procpar.cpp:223 -1
     (nil))

;; token_151 = strtok (0B, " \n");

(insn 525 524 526 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:224 -1
     (nil))

(insn 526 525 527 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 -1
     (nil))

(call_insn 527 526 528 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 528 527 529 (set (reg:DI 265)
        (reg:DI 0 ax)) read_procpar.cpp:224 -1
     (nil))

(insn 529 528 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 265)) read_procpar.cpp:224 -1
     (nil))

;; _153 = strtod (token_151, 0B);

(insn 530 529 531 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))

(insn 531 530 532 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 -1
     (nil))

(insn 532 531 533 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:225 -1
     (nil))

(call_insn 533 532 534 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 534 533 0 (set (reg:DF 133 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 -1
     (nil))

;; _154 = (float) _153;

(insn 535 534 0 (set (reg:SF 134 [ D.5707 ])
        (float_truncate:SF (reg:DF 133 [ D.5706 ]))) read_procpar.cpp:225 -1
     (nil))

;; procpar_info_38(D)->tm = _154;

(insn 536 535 537 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))

(insn 537 536 0 (set (mem/j:SF (plus:DI (reg/f:DI 267)
                (const_int 324 [0x144])) [0 procpar_info_38(D)->tm+0 S4 A32])
        (reg:SF 134 [ D.5707 ])) read_procpar.cpp:225 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; 

(code_label 540 539 541 22 "" [0 uses])

(note 541 540 0 NOTE_INSN_BASIC_BLOCK)

;; _158 = strcmp (token_25, "gain");

(insn 542 541 543 (set (reg:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 -1
     (nil))

(insn 543 542 544 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f52d1bd5c60 *.LC16>)) read_procpar.cpp:227 -1
     (nil))

(insn 544 543 545 (set (reg:DI 5 di)
        (reg:DI 268)) read_procpar.cpp:227 -1
     (nil))

(call_insn/i 545 544 546 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 546 545 0 (set (reg:SI 135 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 -1
     (nil))

;; if (_158 == 0)

(insn 547 546 548 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (nil))

(jump_insn 548 547 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:227 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; fgets (&in_line, 255, in_file_15);

(insn 550 549 551 (set (reg:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 -1
     (nil))

(insn 551 550 552 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 -1
     (nil))

(insn 552 551 553 (set (reg:DI 1 dx)
        (reg:DI 269)) read_procpar.cpp:229 -1
     (nil))

(insn 553 552 554 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 -1
     (nil))

(insn 554 553 555 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:229 -1
     (nil))

(call_insn 555 554 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _161 = ferror (in_file_15);

(insn 556 555 557 (set (reg:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 -1
     (nil))

(insn 557 556 558 (set (reg:DI 5 di)
        (reg:DI 271)) read_procpar.cpp:230 -1
     (nil))

(call_insn 558 557 559 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 559 558 0 (set (reg:SI 136 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 -1
     (nil))

;; _162 = _161 != 0;

(insn 560 559 561 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))

(insn 561 560 0 (set (reg:QI 137 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))

;; if (_162 != 0)

(insn 562 561 563 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))

(jump_insn 563 562 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:230 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; __builtin_puts (&"Error reading file."[0]);

(insn 565 564 566 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:231 -1
     (nil))

(call_insn 566 565 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 567 566 568 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 -1
     (nil))

(call_insn 568 567 569 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 569 568 0)

;; Generating RTL for gimple basic block 46

;; 

(code_label 570 569 571 25 "" [0 uses])

(note 571 570 0 NOTE_INSN_BASIC_BLOCK)

;; token_164 = strtok (&in_line, " \n");

(insn 572 571 573 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 -1
     (nil))

(insn 573 572 574 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:236 -1
     (nil))

(insn 574 573 575 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:236 -1
     (nil))

(call_insn 575 574 576 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 576 575 577 (set (reg:DI 273)
        (reg:DI 0 ax)) read_procpar.cpp:236 -1
     (nil))

(insn 577 576 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 273)) read_procpar.cpp:236 -1
     (nil))

;; token_166 = strtok (0B, " \n");

(insn 578 577 579 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:237 -1
     (nil))

(insn 579 578 580 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 -1
     (nil))

(call_insn 580 579 581 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 581 580 582 (set (reg:DI 274)
        (reg:DI 0 ax)) read_procpar.cpp:237 -1
     (nil))

(insn 582 581 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 274)) read_procpar.cpp:237 -1
     (nil))

;; _168 = strtod (token_166, 0B);

(insn 583 582 584 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))

(insn 584 583 585 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 -1
     (nil))

(insn 585 584 586 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:238 -1
     (nil))

(call_insn 586 585 587 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 587 586 0 (set (reg:DF 138 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 -1
     (nil))

;; _169 = (float) _168;

(insn 588 587 0 (set (reg:SF 139 [ D.5707 ])
        (float_truncate:SF (reg:DF 138 [ D.5706 ]))) read_procpar.cpp:238 -1
     (nil))

;; procpar_info_38(D)->gain = _169;

(insn 589 588 590 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))

(insn 590 589 0 (set (mem/j:SF (plus:DI (reg/f:DI 276)
                (const_int 328 [0x148])) [0 procpar_info_38(D)->gain+0 S4 A64])
        (reg:SF 139 [ D.5707 ])) read_procpar.cpp:238 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; 

(code_label 593 592 594 24 "" [0 uses])

(note 594 593 0 NOTE_INSN_BASIC_BLOCK)

;; _173 = strcmp (token_25, "pos1");

(insn 595 594 596 (set (reg:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 -1
     (nil))

(insn 596 595 597 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f52d1bd5cf0 *.LC17>)) read_procpar.cpp:240 -1
     (nil))

(insn 597 596 598 (set (reg:DI 5 di)
        (reg:DI 277)) read_procpar.cpp:240 -1
     (nil))

(call_insn/i 598 597 599 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 599 598 0 (set (reg:SI 140 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 -1
     (nil))

;; if (_173 == 0)

(insn 600 599 601 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (nil))

(jump_insn 601 600 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:240 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; fgets (&in_line, 255, in_file_15);

(insn 603 602 604 (set (reg:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 -1
     (nil))

(insn 604 603 605 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 -1
     (nil))

(insn 605 604 606 (set (reg:DI 1 dx)
        (reg:DI 278)) read_procpar.cpp:242 -1
     (nil))

(insn 606 605 607 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 -1
     (nil))

(insn 607 606 608 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:242 -1
     (nil))

(call_insn 608 607 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _176 = ferror (in_file_15);

(insn 609 608 610 (set (reg:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 -1
     (nil))

(insn 610 609 611 (set (reg:DI 5 di)
        (reg:DI 280)) read_procpar.cpp:243 -1
     (nil))

(call_insn 611 610 612 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 612 611 0 (set (reg:SI 141 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 -1
     (nil))

;; _177 = _176 != 0;

(insn 613 612 614 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))

(insn 614 613 0 (set (reg:QI 142 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))

;; if (_177 != 0)

(insn 615 614 616 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))

(jump_insn 616 615 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:243 -1
     (nil))

;; Generating RTL for gimple basic block 49

;; __builtin_puts (&"Error reading file."[0]);

(insn 618 617 619 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:244 -1
     (nil))

(call_insn 619 618 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 620 619 621 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 -1
     (nil))

(call_insn 621 620 622 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 622 621 0)

;; Generating RTL for gimple basic block 50

;; 

(code_label 623 622 624 27 "" [0 uses])

(note 624 623 0 NOTE_INSN_BASIC_BLOCK)

;; token_179 = strtok (&in_line, " \n");

(insn 625 624 626 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 -1
     (nil))

(insn 626 625 627 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:249 -1
     (nil))

(insn 627 626 628 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:249 -1
     (nil))

(call_insn 628 627 629 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 629 628 630 (set (reg:DI 282)
        (reg:DI 0 ax)) read_procpar.cpp:249 -1
     (nil))

(insn 630 629 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 282)) read_procpar.cpp:249 -1
     (nil))

;; token_181 = strtok (0B, " \n");

(insn 631 630 632 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:250 -1
     (nil))

(insn 632 631 633 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 -1
     (nil))

(call_insn 633 632 634 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 634 633 635 (set (reg:DI 283)
        (reg:DI 0 ax)) read_procpar.cpp:250 -1
     (nil))

(insn 635 634 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 283)) read_procpar.cpp:250 -1
     (nil))

;; _183 = strtod (token_181, 0B);

(insn 636 635 637 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))

(insn 637 636 638 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 -1
     (nil))

(insn 638 637 639 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:251 -1
     (nil))

(call_insn 639 638 640 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 640 639 0 (set (reg:DF 143 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 -1
     (nil))

;; _184 = (float) _183;

(insn 641 640 0 (set (reg:SF 144 [ D.5707 ])
        (float_truncate:SF (reg:DF 143 [ D.5706 ]))) read_procpar.cpp:251 -1
     (nil))

;; procpar_info_38(D)->pos1 = _184;

(insn 642 641 643 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))

(insn 643 642 0 (set (mem/j:SF (plus:DI (reg/f:DI 285)
                (const_int 332 [0x14c])) [0 procpar_info_38(D)->pos1+0 S4 A32])
        (reg:SF 144 [ D.5707 ])) read_procpar.cpp:251 -1
     (nil))

;; Generating RTL for gimple basic block 51

;; 

(code_label 646 645 647 26 "" [0 uses])

(note 647 646 0 NOTE_INSN_BASIC_BLOCK)

;; _188 = strcmp (token_25, "pos2");

(insn 648 647 649 (set (reg:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 -1
     (nil))

(insn 649 648 650 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f52d1bd5d80 *.LC18>)) read_procpar.cpp:253 -1
     (nil))

(insn 650 649 651 (set (reg:DI 5 di)
        (reg:DI 286)) read_procpar.cpp:253 -1
     (nil))

(call_insn/i 651 650 652 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 652 651 0 (set (reg:SI 145 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 -1
     (nil))

;; if (_188 == 0)

(insn 653 652 654 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (nil))

(jump_insn 654 653 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:253 -1
     (nil))

;; Generating RTL for gimple basic block 52

;; fgets (&in_line, 255, in_file_15);

(insn 656 655 657 (set (reg:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 -1
     (nil))

(insn 657 656 658 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 -1
     (nil))

(insn 658 657 659 (set (reg:DI 1 dx)
        (reg:DI 287)) read_procpar.cpp:255 -1
     (nil))

(insn 659 658 660 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 -1
     (nil))

(insn 660 659 661 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:255 -1
     (nil))

(call_insn 661 660 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _191 = ferror (in_file_15);

(insn 662 661 663 (set (reg:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 -1
     (nil))

(insn 663 662 664 (set (reg:DI 5 di)
        (reg:DI 289)) read_procpar.cpp:256 -1
     (nil))

(call_insn 664 663 665 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 665 664 0 (set (reg:SI 146 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 -1
     (nil))

;; _192 = _191 != 0;

(insn 666 665 667 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))

(insn 667 666 0 (set (reg:QI 147 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))

;; if (_192 != 0)

(insn 668 667 669 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))

(jump_insn 669 668 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:256 -1
     (nil))

;; Generating RTL for gimple basic block 53

;; __builtin_puts (&"Error reading file."[0]);

(insn 671 670 672 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:257 -1
     (nil))

(call_insn 672 671 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 673 672 674 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 -1
     (nil))

(call_insn 674 673 675 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 675 674 0)

;; Generating RTL for gimple basic block 54

;; 

(code_label 676 675 677 29 "" [0 uses])

(note 677 676 0 NOTE_INSN_BASIC_BLOCK)

;; token_194 = strtok (&in_line, " \n");

(insn 678 677 679 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 -1
     (nil))

(insn 679 678 680 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:262 -1
     (nil))

(insn 680 679 681 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:262 -1
     (nil))

(call_insn 681 680 682 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 682 681 683 (set (reg:DI 291)
        (reg:DI 0 ax)) read_procpar.cpp:262 -1
     (nil))

(insn 683 682 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 291)) read_procpar.cpp:262 -1
     (nil))

;; token_196 = strtok (0B, " \n");

(insn 684 683 685 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:263 -1
     (nil))

(insn 685 684 686 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 -1
     (nil))

(call_insn 686 685 687 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 687 686 688 (set (reg:DI 292)
        (reg:DI 0 ax)) read_procpar.cpp:263 -1
     (nil))

(insn 688 687 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 292)) read_procpar.cpp:263 -1
     (nil))

;; _198 = strtod (token_196, 0B);

(insn 689 688 690 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))

(insn 690 689 691 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 -1
     (nil))

(insn 691 690 692 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:264 -1
     (nil))

(call_insn 692 691 693 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 693 692 0 (set (reg:DF 148 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 -1
     (nil))

;; _199 = (float) _198;

(insn 694 693 0 (set (reg:SF 149 [ D.5707 ])
        (float_truncate:SF (reg:DF 148 [ D.5706 ]))) read_procpar.cpp:264 -1
     (nil))

;; procpar_info_38(D)->pos2 = _199;

(insn 695 694 696 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))

(insn 696 695 0 (set (mem/j:SF (plus:DI (reg/f:DI 294)
                (const_int 336 [0x150])) [0 procpar_info_38(D)->pos2+0 S4 A64])
        (reg:SF 149 [ D.5707 ])) read_procpar.cpp:264 -1
     (nil))

;; Generating RTL for gimple basic block 55

;; 

(code_label 699 698 700 28 "" [0 uses])

(note 700 699 0 NOTE_INSN_BASIC_BLOCK)

;; _203 = strcmp (token_25, "pos3");

(insn 701 700 702 (set (reg:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 -1
     (nil))

(insn 702 701 703 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f52d1bd5e10 *.LC19>)) read_procpar.cpp:266 -1
     (nil))

(insn 703 702 704 (set (reg:DI 5 di)
        (reg:DI 295)) read_procpar.cpp:266 -1
     (nil))

(call_insn/i 704 703 705 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 705 704 0 (set (reg:SI 150 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 -1
     (nil))

;; if (_203 == 0)

(insn 706 705 707 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (nil))

(jump_insn 707 706 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:266 -1
     (nil))

;; Generating RTL for gimple basic block 56

;; fgets (&in_line, 255, in_file_15);

(insn 709 708 710 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 -1
     (nil))

(insn 710 709 711 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 -1
     (nil))

(insn 711 710 712 (set (reg:DI 1 dx)
        (reg:DI 296)) read_procpar.cpp:268 -1
     (nil))

(insn 712 711 713 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 -1
     (nil))

(insn 713 712 714 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:268 -1
     (nil))

(call_insn 714 713 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _206 = ferror (in_file_15);

(insn 715 714 716 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 -1
     (nil))

(insn 716 715 717 (set (reg:DI 5 di)
        (reg:DI 298)) read_procpar.cpp:269 -1
     (nil))

(call_insn 717 716 718 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 718 717 0 (set (reg:SI 151 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 -1
     (nil))

;; _207 = _206 != 0;

(insn 719 718 720 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))

(insn 720 719 0 (set (reg:QI 152 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))

;; if (_207 != 0)

(insn 721 720 722 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 152 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))

(jump_insn 722 721 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:269 -1
     (nil))

;; Generating RTL for gimple basic block 57

;; __builtin_puts (&"Error reading file."[0]);

(insn 724 723 725 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:270 -1
     (nil))

(call_insn 725 724 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 726 725 727 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 -1
     (nil))

(call_insn 727 726 728 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 728 727 0)

;; Generating RTL for gimple basic block 58

;; 

(code_label 729 728 730 31 "" [0 uses])

(note 730 729 0 NOTE_INSN_BASIC_BLOCK)

;; token_209 = strtok (&in_line, " \n");

(insn 731 730 732 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 -1
     (nil))

(insn 732 731 733 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:275 -1
     (nil))

(insn 733 732 734 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:275 -1
     (nil))

(call_insn 734 733 735 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 735 734 736 (set (reg:DI 300)
        (reg:DI 0 ax)) read_procpar.cpp:275 -1
     (nil))

(insn 736 735 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 300)) read_procpar.cpp:275 -1
     (nil))

;; token_211 = strtok (0B, " \n");

(insn 737 736 738 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:276 -1
     (nil))

(insn 738 737 739 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 -1
     (nil))

(call_insn 739 738 740 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 740 739 741 (set (reg:DI 301)
        (reg:DI 0 ax)) read_procpar.cpp:276 -1
     (nil))

(insn 741 740 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 301)) read_procpar.cpp:276 -1
     (nil))

;; _213 = strtod (token_211, 0B);

(insn 742 741 743 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))

(insn 743 742 744 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 -1
     (nil))

(insn 744 743 745 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:277 -1
     (nil))

(call_insn 745 744 746 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 746 745 0 (set (reg:DF 153 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 -1
     (nil))

;; _214 = (float) _213;

(insn 747 746 0 (set (reg:SF 154 [ D.5707 ])
        (float_truncate:SF (reg:DF 153 [ D.5706 ]))) read_procpar.cpp:277 -1
     (nil))

;; procpar_info_38(D)->pos3 = _214;

(insn 748 747 749 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))

(insn 749 748 0 (set (mem/j:SF (plus:DI (reg/f:DI 303)
                (const_int 340 [0x154])) [0 procpar_info_38(D)->pos3+0 S4 A32])
        (reg:SF 154 [ D.5707 ])) read_procpar.cpp:277 -1
     (nil))

;; Generating RTL for gimple basic block 59

;; 

(code_label 752 751 753 30 "" [0 uses])

(note 753 752 0 NOTE_INSN_BASIC_BLOCK)

;; _218 = strcmp (token_25, "vox1");

(insn 754 753 755 (set (reg:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 -1
     (nil))

(insn 755 754 756 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f52d1bd5ea0 *.LC20>)) read_procpar.cpp:279 -1
     (nil))

(insn 756 755 757 (set (reg:DI 5 di)
        (reg:DI 304)) read_procpar.cpp:279 -1
     (nil))

(call_insn/i 757 756 758 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 758 757 0 (set (reg:SI 155 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 -1
     (nil))

;; if (_218 == 0)

(insn 759 758 760 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (nil))

(jump_insn 760 759 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:279 -1
     (nil))

;; Generating RTL for gimple basic block 60

;; fgets (&in_line, 255, in_file_15);

(insn 762 761 763 (set (reg:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 -1
     (nil))

(insn 763 762 764 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 -1
     (nil))

(insn 764 763 765 (set (reg:DI 1 dx)
        (reg:DI 305)) read_procpar.cpp:281 -1
     (nil))

(insn 765 764 766 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 -1
     (nil))

(insn 766 765 767 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:281 -1
     (nil))

(call_insn 767 766 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _221 = ferror (in_file_15);

(insn 768 767 769 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 -1
     (nil))

(insn 769 768 770 (set (reg:DI 5 di)
        (reg:DI 307)) read_procpar.cpp:282 -1
     (nil))

(call_insn 770 769 771 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 771 770 0 (set (reg:SI 156 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 -1
     (nil))

;; _222 = _221 != 0;

(insn 772 771 773 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))

(insn 773 772 0 (set (reg:QI 157 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))

;; if (_222 != 0)

(insn 774 773 775 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))

(jump_insn 775 774 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:282 -1
     (nil))

;; Generating RTL for gimple basic block 61

;; __builtin_puts (&"Error reading file."[0]);

(insn 777 776 778 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:283 -1
     (nil))

(call_insn 778 777 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 779 778 780 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 -1
     (nil))

(call_insn 780 779 781 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 781 780 0)

;; Generating RTL for gimple basic block 62

;; 

(code_label 782 781 783 33 "" [0 uses])

(note 783 782 0 NOTE_INSN_BASIC_BLOCK)

;; token_224 = strtok (&in_line, " \n");

(insn 784 783 785 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 -1
     (nil))

(insn 785 784 786 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:288 -1
     (nil))

(insn 786 785 787 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:288 -1
     (nil))

(call_insn 787 786 788 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 788 787 789 (set (reg:DI 309)
        (reg:DI 0 ax)) read_procpar.cpp:288 -1
     (nil))

(insn 789 788 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 309)) read_procpar.cpp:288 -1
     (nil))

;; token_226 = strtok (0B, " \n");

(insn 790 789 791 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:289 -1
     (nil))

(insn 791 790 792 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 -1
     (nil))

(call_insn 792 791 793 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 793 792 794 (set (reg:DI 310)
        (reg:DI 0 ax)) read_procpar.cpp:289 -1
     (nil))

(insn 794 793 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 310)) read_procpar.cpp:289 -1
     (nil))

;; _228 = strtod (token_226, 0B);

(insn 795 794 796 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))

(insn 796 795 797 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 -1
     (nil))

(insn 797 796 798 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:290 -1
     (nil))

(call_insn 798 797 799 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 799 798 0 (set (reg:DF 158 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 -1
     (nil))

;; _229 = (float) _228;

(insn 800 799 0 (set (reg:SF 159 [ D.5707 ])
        (float_truncate:SF (reg:DF 158 [ D.5706 ]))) read_procpar.cpp:290 -1
     (nil))

;; procpar_info_38(D)->vox1 = _229;

(insn 801 800 802 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))

(insn 802 801 0 (set (mem/j:SF (plus:DI (reg/f:DI 312)
                (const_int 344 [0x158])) [0 procpar_info_38(D)->vox1+0 S4 A64])
        (reg:SF 159 [ D.5707 ])) read_procpar.cpp:290 -1
     (nil))

;; Generating RTL for gimple basic block 63

;; 

(code_label 805 804 806 32 "" [0 uses])

(note 806 805 0 NOTE_INSN_BASIC_BLOCK)

;; _233 = strcmp (token_25, "vox2");

(insn 807 806 808 (set (reg:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 -1
     (nil))

(insn 808 807 809 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f52d1bd5f30 *.LC21>)) read_procpar.cpp:292 -1
     (nil))

(insn 809 808 810 (set (reg:DI 5 di)
        (reg:DI 313)) read_procpar.cpp:292 -1
     (nil))

(call_insn/i 810 809 811 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 811 810 0 (set (reg:SI 160 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 -1
     (nil))

;; if (_233 == 0)

(insn 812 811 813 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (nil))

(jump_insn 813 812 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:292 -1
     (nil))

;; Generating RTL for gimple basic block 64

;; fgets (&in_line, 255, in_file_15);

(insn 815 814 816 (set (reg:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 -1
     (nil))

(insn 816 815 817 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 -1
     (nil))

(insn 817 816 818 (set (reg:DI 1 dx)
        (reg:DI 314)) read_procpar.cpp:294 -1
     (nil))

(insn 818 817 819 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 -1
     (nil))

(insn 819 818 820 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:294 -1
     (nil))

(call_insn 820 819 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _236 = ferror (in_file_15);

(insn 821 820 822 (set (reg:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 -1
     (nil))

(insn 822 821 823 (set (reg:DI 5 di)
        (reg:DI 316)) read_procpar.cpp:295 -1
     (nil))

(call_insn 823 822 824 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 824 823 0 (set (reg:SI 161 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 -1
     (nil))

;; _237 = _236 != 0;

(insn 825 824 826 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))

(insn 826 825 0 (set (reg:QI 162 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))

;; if (_237 != 0)

(insn 827 826 828 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))

(jump_insn 828 827 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:295 -1
     (nil))

;; Generating RTL for gimple basic block 65

;; __builtin_puts (&"Error reading file."[0]);

(insn 830 829 831 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:296 -1
     (nil))

(call_insn 831 830 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 832 831 833 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 -1
     (nil))

(call_insn 833 832 834 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 834 833 0)

;; Generating RTL for gimple basic block 66

;; 

(code_label 835 834 836 35 "" [0 uses])

(note 836 835 0 NOTE_INSN_BASIC_BLOCK)

;; token_239 = strtok (&in_line, " \n");

(insn 837 836 838 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 -1
     (nil))

(insn 838 837 839 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:301 -1
     (nil))

(insn 839 838 840 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:301 -1
     (nil))

(call_insn 840 839 841 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 841 840 842 (set (reg:DI 318)
        (reg:DI 0 ax)) read_procpar.cpp:301 -1
     (nil))

(insn 842 841 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 318)) read_procpar.cpp:301 -1
     (nil))

;; token_241 = strtok (0B, " \n");

(insn 843 842 844 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:302 -1
     (nil))

(insn 844 843 845 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 -1
     (nil))

(call_insn 845 844 846 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 846 845 847 (set (reg:DI 319)
        (reg:DI 0 ax)) read_procpar.cpp:302 -1
     (nil))

(insn 847 846 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 319)) read_procpar.cpp:302 -1
     (nil))

;; _243 = strtod (token_241, 0B);

(insn 848 847 849 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))

(insn 849 848 850 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 -1
     (nil))

(insn 850 849 851 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:303 -1
     (nil))

(call_insn 851 850 852 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 852 851 0 (set (reg:DF 163 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 -1
     (nil))

;; _244 = (float) _243;

(insn 853 852 0 (set (reg:SF 164 [ D.5707 ])
        (float_truncate:SF (reg:DF 163 [ D.5706 ]))) read_procpar.cpp:303 -1
     (nil))

;; procpar_info_38(D)->vox2 = _244;

(insn 854 853 855 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))

(insn 855 854 0 (set (mem/j:SF (plus:DI (reg/f:DI 321)
                (const_int 348 [0x15c])) [0 procpar_info_38(D)->vox2+0 S4 A32])
        (reg:SF 164 [ D.5707 ])) read_procpar.cpp:303 -1
     (nil))

;; Generating RTL for gimple basic block 67

;; 

(code_label 858 857 859 34 "" [0 uses])

(note 859 858 0 NOTE_INSN_BASIC_BLOCK)

;; _248 = strcmp (token_25, "vox3");

(insn 860 859 861 (set (reg:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 -1
     (nil))

(insn 861 860 862 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f52d1bfb000 *.LC22>)) read_procpar.cpp:305 -1
     (nil))

(insn 862 861 863 (set (reg:DI 5 di)
        (reg:DI 322)) read_procpar.cpp:305 -1
     (nil))

(call_insn/i 863 862 864 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 864 863 0 (set (reg:SI 165 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 -1
     (nil))

;; if (_248 == 0)

(insn 865 864 866 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (nil))

(jump_insn 866 865 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:305 -1
     (nil))

;; Generating RTL for gimple basic block 68

;; fgets (&in_line, 255, in_file_15);

(insn 868 867 869 (set (reg:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 -1
     (nil))

(insn 869 868 870 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 -1
     (nil))

(insn 870 869 871 (set (reg:DI 1 dx)
        (reg:DI 323)) read_procpar.cpp:307 -1
     (nil))

(insn 871 870 872 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 -1
     (nil))

(insn 872 871 873 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:307 -1
     (nil))

(call_insn 873 872 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _251 = ferror (in_file_15);

(insn 874 873 875 (set (reg:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 -1
     (nil))

(insn 875 874 876 (set (reg:DI 5 di)
        (reg:DI 325)) read_procpar.cpp:308 -1
     (nil))

(call_insn 876 875 877 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 877 876 0 (set (reg:SI 166 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 -1
     (nil))

;; _252 = _251 != 0;

(insn 878 877 879 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))

(insn 879 878 0 (set (reg:QI 167 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))

;; if (_252 != 0)

(insn 880 879 881 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))

(jump_insn 881 880 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:308 -1
     (nil))

;; Generating RTL for gimple basic block 69

;; __builtin_puts (&"Error reading file."[0]);

(insn 883 882 884 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:309 -1
     (nil))

(call_insn 884 883 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 885 884 886 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 -1
     (nil))

(call_insn 886 885 887 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 887 886 0)

;; Generating RTL for gimple basic block 70

;; 

(code_label 888 887 889 37 "" [0 uses])

(note 889 888 0 NOTE_INSN_BASIC_BLOCK)

;; token_254 = strtok (&in_line, " \n");

(insn 890 889 891 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 -1
     (nil))

(insn 891 890 892 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:314 -1
     (nil))

(insn 892 891 893 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:314 -1
     (nil))

(call_insn 893 892 894 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 894 893 895 (set (reg:DI 327)
        (reg:DI 0 ax)) read_procpar.cpp:314 -1
     (nil))

(insn 895 894 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 327)) read_procpar.cpp:314 -1
     (nil))

;; token_256 = strtok (0B, " \n");

(insn 896 895 897 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:315 -1
     (nil))

(insn 897 896 898 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 -1
     (nil))

(call_insn 898 897 899 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 899 898 900 (set (reg:DI 328)
        (reg:DI 0 ax)) read_procpar.cpp:315 -1
     (nil))

(insn 900 899 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 328)) read_procpar.cpp:315 -1
     (nil))

;; _258 = strtod (token_256, 0B);

(insn 901 900 902 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))

(insn 902 901 903 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 -1
     (nil))

(insn 903 902 904 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:316 -1
     (nil))

(call_insn 904 903 905 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 905 904 0 (set (reg:DF 168 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 -1
     (nil))

;; _259 = (float) _258;

(insn 906 905 0 (set (reg:SF 169 [ D.5707 ])
        (float_truncate:SF (reg:DF 168 [ D.5706 ]))) read_procpar.cpp:316 -1
     (nil))

;; procpar_info_38(D)->vox3 = _259;

(insn 907 906 908 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))

(insn 908 907 0 (set (mem/j:SF (plus:DI (reg/f:DI 330)
                (const_int 352 [0x160])) [0 procpar_info_38(D)->vox3+0 S4 A64])
        (reg:SF 169 [ D.5707 ])) read_procpar.cpp:316 -1
     (nil))

;; Generating RTL for gimple basic block 71

;; 

(code_label 911 910 912 36 "" [0 uses])

(note 912 911 0 NOTE_INSN_BASIC_BLOCK)

;; _263 = strcmp (token_25, "vtheta");

(insn 913 912 914 (set (reg:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 -1
     (nil))

(insn 914 913 915 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f52d1bfb090 *.LC23>)) read_procpar.cpp:318 -1
     (nil))

(insn 915 914 916 (set (reg:DI 5 di)
        (reg:DI 331)) read_procpar.cpp:318 -1
     (nil))

(call_insn/i 916 915 917 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 917 916 0 (set (reg:SI 170 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 -1
     (nil))

;; if (_263 == 0)

(insn 918 917 919 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (nil))

(jump_insn 919 918 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:318 -1
     (nil))

;; Generating RTL for gimple basic block 72

;; fgets (&in_line, 255, in_file_15);

(insn 921 920 922 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 -1
     (nil))

(insn 922 921 923 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 -1
     (nil))

(insn 923 922 924 (set (reg:DI 1 dx)
        (reg:DI 332)) read_procpar.cpp:320 -1
     (nil))

(insn 924 923 925 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 -1
     (nil))

(insn 925 924 926 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:320 -1
     (nil))

(call_insn 926 925 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _266 = ferror (in_file_15);

(insn 927 926 928 (set (reg:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 -1
     (nil))

(insn 928 927 929 (set (reg:DI 5 di)
        (reg:DI 334)) read_procpar.cpp:321 -1
     (nil))

(call_insn 929 928 930 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 930 929 0 (set (reg:SI 171 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 -1
     (nil))

;; _267 = _266 != 0;

(insn 931 930 932 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))

(insn 932 931 0 (set (reg:QI 172 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))

;; if (_267 != 0)

(insn 933 932 934 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))

(jump_insn 934 933 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:321 -1
     (nil))

;; Generating RTL for gimple basic block 73

;; __builtin_puts (&"Error reading file."[0]);

(insn 936 935 937 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:322 -1
     (nil))

(call_insn 937 936 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 938 937 939 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 -1
     (nil))

(call_insn 939 938 940 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 940 939 0)

;; Generating RTL for gimple basic block 74

;; 

(code_label 941 940 942 38 "" [0 uses])

(note 942 941 0 NOTE_INSN_BASIC_BLOCK)

;; token_269 = strtok (&in_line, " \n");

(insn 943 942 944 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 -1
     (nil))

(insn 944 943 945 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:327 -1
     (nil))

(insn 945 944 946 (set (reg:DI 5 di)
        (reg:DI 335)) read_procpar.cpp:327 -1
     (nil))

(call_insn 946 945 947 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 947 946 948 (set (reg:DI 336)
        (reg:DI 0 ax)) read_procpar.cpp:327 -1
     (nil))

(insn 948 947 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 336)) read_procpar.cpp:327 -1
     (nil))

;; token_271 = strtok (0B, " \n");

(insn 949 948 950 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:328 -1
     (nil))

(insn 950 949 951 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 -1
     (nil))

(call_insn 951 950 952 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 952 951 953 (set (reg:DI 337)
        (reg:DI 0 ax)) read_procpar.cpp:328 -1
     (nil))

(insn 953 952 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 337)) read_procpar.cpp:328 -1
     (nil))

;; _273 = strtod (token_271, 0B);

(insn 954 953 955 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))

(insn 955 954 956 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 -1
     (nil))

(insn 956 955 957 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:329 -1
     (nil))

(call_insn 957 956 958 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 958 957 0 (set (reg:DF 173 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 -1
     (nil))

;; _274 = (float) _273;

(insn 959 958 0 (set (reg:SF 174 [ D.5707 ])
        (float_truncate:SF (reg:DF 173 [ D.5706 ]))) read_procpar.cpp:329 -1
     (nil))

;; procpar_info_38(D)->vtheta = _274;

(insn 960 959 961 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))

(insn 961 960 0 (set (mem/j:SF (plus:DI (reg/f:DI 339)
                (const_int 368 [0x170])) [0 procpar_info_38(D)->vtheta+0 S4 A64])
        (reg:SF 174 [ D.5707 ])) read_procpar.cpp:329 -1
     (nil))

;; Generating RTL for gimple basic block 75

;; 

(code_label 962 961 963 7 "" [0 uses])

(note 963 962 0 NOTE_INSN_BASIC_BLOCK)

;; fgets (&in_line, 5000, in_file_15);

(insn 964 963 965 (set (reg:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 -1
     (nil))

(insn 965 964 966 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 -1
     (nil))

(insn 966 965 967 (set (reg:DI 1 dx)
        (reg:DI 340)) read_procpar.cpp:339 -1
     (nil))

(insn 967 966 968 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 -1
     (nil))

(insn 968 967 969 (set (reg:DI 5 di)
        (reg:DI 341)) read_procpar.cpp:339 -1
     (nil))

(call_insn 969 968 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _280 = ferror (in_file_15);

(insn 970 969 971 (set (reg:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 -1
     (nil))

(insn 971 970 972 (set (reg:DI 5 di)
        (reg:DI 342)) read_procpar.cpp:341 -1
     (nil))

(call_insn 972 971 973 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 973 972 0 (set (reg:SI 175 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 -1
     (nil))

;; _281 = _280 != 0;

(insn 974 973 975 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))

(insn 975 974 0 (set (reg:QI 176 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))

;; if (_281 != 0)

(insn 976 975 977 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))

(jump_insn 977 976 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:341 -1
     (nil))

;; Generating RTL for gimple basic block 76

;; __builtin_puts (&"Error reading file."[0]);

(insn 979 978 980 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:342 -1
     (nil))

(call_insn 980 979 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 981 980 982 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 -1
     (nil))

(call_insn 982 981 983 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 983 982 0)

;; Generating RTL for gimple basic block 77

;; 

(code_label 984 983 985 39 "" [0 uses])

(note 985 984 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 78

;; 

(code_label 988 987 989 4 "" [0 uses])

(note 989 988 0 NOTE_INSN_BASIC_BLOCK)

;; if (in_file_15 != 0B)

(insn 990 989 991 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 -1
     (nil))

(jump_insn 991 990 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:354 -1
     (nil))

;; Generating RTL for gimple basic block 79

;; __builtin_puts (&"okay"[0]);

(insn 993 992 994 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f52d1bfb120 *.LC24>)) read_procpar.cpp:356 -1
     (nil))

(call_insn 994 993 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _285 = stdout;

(insn 995 994 0 (set (reg/f:DI 177 [ D.5710 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f52d1e41000 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 -1
     (nil))

;; fflush (_285);

(insn 996 995 997 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.5710 ])) read_procpar.cpp:357 -1
     (nil))

(call_insn 997 996 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x7f52d1e43288 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; fclose (in_file_15);

(insn 998 997 999 (set (reg:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 -1
     (nil))

(insn 999 998 1000 (set (reg:DI 5 di)
        (reg:DI 343)) read_procpar.cpp:358 -1
     (nil))

(call_insn 1000 999 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f52d1e431b0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 80

;; 

(code_label 1001 1000 1002 40 "" [0 uses])

(note 1002 1001 0 NOTE_INSN_BASIC_BLOCK)

;; _288 = 2;

(insn 1003 1002 0 (set (reg:SI 178 [ D.5704 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 -1
     (nil))

;; in_line ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 81

;; <L98>:

(code_label 1004 1003 1005 41 "" [0 uses])

(note 1005 1004 0 NOTE_INSN_BASIC_BLOCK)

;; return _288;

(insn 1006 1005 1007 (set (reg:SI 179 [ <retval> ])
        (reg:SI 178 [ D.5704 ])) read_procpar.cpp:364 -1
     (nil))

(jump_insn 1007 1006 1008 (set (pc)
        (label_ref 0)) read_procpar.cpp:364 -1
     (nil))

(barrier 1008 1007 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 82 into block 81...
Merged blocks 81 and 82.
Merged 81 and 82 without moving.
Removing jump 1007.
Merging block 83 into block 81...
Merged blocks 81 and 83.
Merged 81 and 83 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) read_procpar.cpp:20 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) read_procpar.cpp:20 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5711+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:20 -1
     (nil))
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 87 [ D.5702 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 87 [ D.5702 ])) read_procpar.cpp:28 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f52d1bd5360 *.LC0>)) read_procpar.cpp:34 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:34 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f52d1e43510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 88 [ D.5703 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 88 [ D.5703 ])) read_procpar.cpp:34 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) read_procpar.cpp:35 -1
     (nil)
 -> 27)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f52d1bd53f0 *.LC1>)) read_procpar.cpp:36 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 4 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 -1
     (nil))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 26 25 27)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 27 26 28 5 2 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 1 dx)
        (reg:DI 181)) read_procpar.cpp:41 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:41 -1
     (nil))
(call_insn 34 33 35 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 5 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg:DI 183)) read_procpar.cpp:42 -1
     (nil))
(call_insn 37 36 38 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 5 (set (reg:SI 89 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))
(insn 40 39 41 5 (set (reg:QI 90 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) read_procpar.cpp:42 -1
     (nil)
 -> 49)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:43 -1
     (nil))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 6 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 -1
     (nil))
(call_insn 47 46 48 6 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 48 47 49)
;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              78 (DFS_BACK)
(code_label 49 48 50 7 3 "" [2 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:51 -1
     (nil))
(call_insn 53 52 54 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f52d1e55510 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 7 (set (reg:SI 91 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 -1
     (nil))
(insn 55 54 56 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))
(insn 56 55 57 7 (set (reg:QI 92 [ D.5705 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))
(insn 57 56 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) read_procpar.cpp:51 -1
     (nil)
 -> 988)
;;  succ:       8 (FALLTHRU)
;;              79

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 -1
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 -1
     (nil))
(insn 62 61 63 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f52d1bd5510 *.LC3>)) read_procpar.cpp:65 -1
     (nil))
(insn 63 62 64 8 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:65 -1
     (nil))
(call_insn 64 63 65 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 66 8 (set (reg:DI 186)
        (reg:DI 0 ax)) read_procpar.cpp:65 -1
     (nil))
(insn 66 65 67 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 186)) read_procpar.cpp:65 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 -1
     (nil))
(insn 68 67 69 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f52d1bd55a0 *.LC4>)) read_procpar.cpp:80 -1
     (nil))
(insn 69 68 70 8 (set (reg:DI 5 di)
        (reg:DI 187)) read_procpar.cpp:80 -1
     (nil))
(call_insn/i 70 69 71 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 8 (set (reg:SI 93 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 -1
     (nil))
(insn 72 71 73 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (nil))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) read_procpar.cpp:80 -1
     (nil)
 -> 118)
;;  succ:       9 (FALLTHRU)
;;              12

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 -1
     (nil))
(insn 76 75 77 9 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 -1
     (nil))
(insn 77 76 78 9 (set (reg:DI 1 dx)
        (reg:DI 188)) read_procpar.cpp:90 -1
     (nil))
(insn 78 77 79 9 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 -1
     (nil))
(insn 79 78 80 9 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:90 -1
     (nil))
(call_insn 80 79 81 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 81 80 82 9 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 5 di)
        (reg:DI 190)) read_procpar.cpp:92 -1
     (nil))
(call_insn 83 82 84 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 9 (set (reg:SI 94 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 -1
     (nil))
(insn 85 84 86 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))
(insn 86 85 87 9 (set (reg:QI 95 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))
(insn 87 86 88 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))
(jump_insn 88 87 89 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) read_procpar.cpp:92 -1
     (nil)
 -> 95)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:93 -1
     (nil))
(call_insn 91 90 92 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 10 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 -1
     (nil))
(call_insn 93 92 94 10 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 94 93 95)
;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 95 94 96 11 6 "" [1 uses])
(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 11 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 -1
     (nil))
(insn 98 97 99 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:106 -1
     (nil))
(insn 99 98 100 11 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:106 -1
     (nil))
(call_insn 100 99 101 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 101 100 102 11 (set (reg:DI 192)
        (reg:DI 0 ax)) read_procpar.cpp:106 -1
     (nil))
(insn 102 101 103 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 192)) read_procpar.cpp:106 -1
     (nil))
(insn 103 102 104 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:110 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 -1
     (nil))
(call_insn 105 104 106 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 11 (set (reg:DI 193)
        (reg:DI 0 ax)) read_procpar.cpp:110 -1
     (nil))
(insn 107 106 108 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 193)) read_procpar.cpp:110 -1
     (nil))
(insn 108 107 109 11 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))
(insn 109 108 110 11 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:115 -1
     (nil))
(call_insn 111 110 112 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 112 111 113 11 (set (reg:DF 96 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 -1
     (nil))
(insn 113 112 114 11 (set (reg:SF 97 [ D.5707 ])
        (float_truncate:SF (reg:DF 96 [ D.5706 ]))) read_procpar.cpp:115 -1
     (nil))
(insn 114 113 115 11 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))
(insn 115 114 116 11 (set (mem/j:SF (reg/f:DI 195) [0 procpar_info_38(D)->acquision_time+0 S4 A64])
        (reg:SF 97 [ D.5707 ])) read_procpar.cpp:115 -1
     (nil))
(jump_insn 116 115 117 11 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 117 116 118)
;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 118 117 119 12 5 "" [1 uses])
(note 119 118 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 12 (set (reg:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 -1
     (nil))
(insn 121 120 122 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f52d1bd56c0 *.LC6>)) read_procpar.cpp:122 -1
     (nil))
(insn 122 121 123 12 (set (reg:DI 5 di)
        (reg:DI 196)) read_procpar.cpp:122 -1
     (nil))
(call_insn/i 123 122 124 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 124 123 125 12 (set (reg:SI 98 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 -1
     (nil))
(insn 125 124 126 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (nil))
(jump_insn 126 125 127 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) read_procpar.cpp:122 -1
     (nil)
 -> 169)
;;  succ:       13 (FALLTHRU)
;;              16

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 127 126 128 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 13 (set (reg:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 -1
     (nil))
(insn 129 128 130 13 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 -1
     (nil))
(insn 130 129 131 13 (set (reg:DI 1 dx)
        (reg:DI 197)) read_procpar.cpp:125 -1
     (nil))
(insn 131 130 132 13 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 -1
     (nil))
(insn 132 131 133 13 (set (reg:DI 5 di)
        (reg:DI 198)) read_procpar.cpp:125 -1
     (nil))
(call_insn 133 132 134 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 134 133 135 13 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 -1
     (nil))
(insn 135 134 136 13 (set (reg:DI 5 di)
        (reg:DI 199)) read_procpar.cpp:126 -1
     (nil))
(call_insn 136 135 137 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 13 (set (reg:SI 99 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 -1
     (nil))
(insn 138 137 139 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))
(insn 139 138 140 13 (set (reg:QI 100 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))
(insn 140 139 141 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))
(jump_insn 141 140 142 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) read_procpar.cpp:126 -1
     (nil)
 -> 148)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 142 141 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:127 -1
     (nil))
(call_insn 144 143 145 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 145 144 146 14 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 -1
     (nil))
(call_insn 146 145 147 14 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 147 146 148)
;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 148 147 149 15 9 "" [1 uses])
(note 149 148 150 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 15 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 -1
     (nil))
(insn 151 150 152 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f52d1bd5750 *.LC7>)) read_procpar.cpp:132 -1
     (nil))
(insn 152 151 153 15 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:132 -1
     (nil))
(call_insn 153 152 154 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 15 (set (reg:DI 201)
        (reg:DI 0 ax)) read_procpar.cpp:132 -1
     (nil))
(insn 155 154 156 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 201)) read_procpar.cpp:132 -1
     (nil))
(insn 156 155 157 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f52d1bd57e0 *.LC8>)) read_procpar.cpp:133 -1
     (nil))
(insn 157 156 158 15 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 -1
     (nil))
(call_insn 158 157 159 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 159 158 160 15 (set (reg:DI 202)
        (reg:DI 0 ax)) read_procpar.cpp:133 -1
     (nil))
(insn 160 159 161 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 202)) read_procpar.cpp:133 -1
     (nil))
(insn 161 160 162 15 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))
(insn 162 161 163 15 (parallel [
            (set (reg/f:DI 101 [ D.5708 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 163 162 164 15 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))
(insn 164 163 165 15 (set (reg:DI 4 si)
        (reg:DI 204)) read_procpar.cpp:134 -1
     (nil))
(insn 165 164 166 15 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.5708 ])) read_procpar.cpp:134 -1
     (nil))
(call_insn 166 165 167 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f52d207a5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 167 166 168 15 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 168 167 169)
;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 169 168 170 16 8 "" [1 uses])
(note 170 169 171 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 16 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 -1
     (nil))
(insn 172 171 173 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f52d1bd5870 *.LC9>)) read_procpar.cpp:136 -1
     (nil))
(insn 173 172 174 16 (set (reg:DI 5 di)
        (reg:DI 205)) read_procpar.cpp:136 -1
     (nil))
(call_insn/i 174 173 175 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 16 (set (reg:SI 102 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 -1
     (nil))
(insn 176 175 177 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (nil))
(jump_insn 177 176 178 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) read_procpar.cpp:136 -1
     (nil)
 -> 222)
;;  succ:       17 (FALLTHRU)
;;              20

;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 178 177 179 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 17 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 -1
     (nil))
(insn 180 179 181 17 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 -1
     (nil))
(insn 181 180 182 17 (set (reg:DI 1 dx)
        (reg:DI 206)) read_procpar.cpp:138 -1
     (nil))
(insn 182 181 183 17 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 -1
     (nil))
(insn 183 182 184 17 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:138 -1
     (nil))
(call_insn 184 183 185 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 185 184 186 17 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 -1
     (nil))
(insn 186 185 187 17 (set (reg:DI 5 di)
        (reg:DI 208)) read_procpar.cpp:139 -1
     (nil))
(call_insn 187 186 188 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 17 (set (reg:SI 103 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 -1
     (nil))
(insn 189 188 190 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))
(insn 190 189 191 17 (set (reg:QI 104 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))
(insn 191 190 192 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))
(jump_insn 192 191 193 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) read_procpar.cpp:139 -1
     (nil)
 -> 199)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 193 192 194 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:140 -1
     (nil))
(call_insn 195 194 196 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 18 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 -1
     (nil))
(call_insn 197 196 198 18 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 198 197 199)
;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 199 198 200 19 11 "" [1 uses])
(note 200 199 201 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 19 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 -1
     (nil))
(insn 202 201 203 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:145 -1
     (nil))
(insn 203 202 204 19 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:145 -1
     (nil))
(call_insn 204 203 205 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 205 204 206 19 (set (reg:DI 210)
        (reg:DI 0 ax)) read_procpar.cpp:145 -1
     (nil))
(insn 206 205 207 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 210)) read_procpar.cpp:145 -1
     (nil))
(insn 207 206 208 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:146 -1
     (nil))
(insn 208 207 209 19 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 -1
     (nil))
(call_insn 209 208 210 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 19 (set (reg:DI 211)
        (reg:DI 0 ax)) read_procpar.cpp:146 -1
     (nil))
(insn 211 210 212 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 211)) read_procpar.cpp:146 -1
     (nil))
(insn 212 211 213 19 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))
(insn 213 212 214 19 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 -1
     (nil))
(insn 214 213 215 19 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:147 -1
     (nil))
(call_insn 215 214 216 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 216 215 217 19 (set (reg:DF 105 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 -1
     (nil))
(insn 217 216 218 19 (set (reg:SF 106 [ D.5707 ])
        (float_truncate:SF (reg:DF 105 [ D.5706 ]))) read_procpar.cpp:147 -1
     (nil))
(insn 218 217 219 19 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))
(insn 219 218 220 19 (set (mem/j:SF (plus:DI (reg/f:DI 213)
                (const_int 292 [0x124])) [0 procpar_info_38(D)->filter+0 S4 A32])
        (reg:SF 106 [ D.5707 ])) read_procpar.cpp:147 -1
     (nil))
(jump_insn 220 219 221 19 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 221 220 222)
;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 222 221 223 20 10 "" [1 uses])
(note 223 222 224 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 20 (set (reg:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 -1
     (nil))
(insn 225 224 226 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f52d1bd5900 *.LC10>)) read_procpar.cpp:149 -1
     (nil))
(insn 226 225 227 20 (set (reg:DI 5 di)
        (reg:DI 214)) read_procpar.cpp:149 -1
     (nil))
(call_insn/i 227 226 228 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 228 227 229 20 (set (reg:SI 107 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 -1
     (nil))
(insn 229 228 230 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (nil))
(jump_insn 230 229 231 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) read_procpar.cpp:149 -1
     (nil)
 -> 276)
;;  succ:       21 (FALLTHRU)
;;              24

;; basic block 21, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 231 230 232 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 21 (set (reg:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 -1
     (nil))
(insn 233 232 234 21 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 -1
     (nil))
(insn 234 233 235 21 (set (reg:DI 1 dx)
        (reg:DI 215)) read_procpar.cpp:151 -1
     (nil))
(insn 235 234 236 21 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 -1
     (nil))
(insn 236 235 237 21 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:151 -1
     (nil))
(call_insn 237 236 238 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 238 237 239 21 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 -1
     (nil))
(insn 239 238 240 21 (set (reg:DI 5 di)
        (reg:DI 217)) read_procpar.cpp:152 -1
     (nil))
(call_insn 240 239 241 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 241 240 242 21 (set (reg:SI 108 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 -1
     (nil))
(insn 242 241 243 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))
(insn 243 242 244 21 (set (reg:QI 109 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))
(insn 244 243 245 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))
(jump_insn 245 244 246 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) read_procpar.cpp:152 -1
     (nil)
 -> 252)
;;  succ:       22 (FALLTHRU)
;;              23

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 246 245 247 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:153 -1
     (nil))
(call_insn 248 247 249 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 249 248 250 22 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 -1
     (nil))
(call_insn 250 249 251 22 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 251 250 252)
;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 252 251 253 23 13 "" [1 uses])
(note 253 252 254 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 23 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 -1
     (nil))
(insn 255 254 256 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:158 -1
     (nil))
(insn 256 255 257 23 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:158 -1
     (nil))
(call_insn 257 256 258 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 258 257 259 23 (set (reg:DI 219)
        (reg:DI 0 ax)) read_procpar.cpp:158 -1
     (nil))
(insn 259 258 260 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 219)) read_procpar.cpp:158 -1
     (nil))
(insn 260 259 261 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:159 -1
     (nil))
(insn 261 260 262 23 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 -1
     (nil))
(call_insn 262 261 263 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 263 262 264 23 (set (reg:DI 220)
        (reg:DI 0 ax)) read_procpar.cpp:159 -1
     (nil))
(insn 264 263 265 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 220)) read_procpar.cpp:159 -1
     (nil))
(insn 265 264 266 23 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))
(insn 266 265 267 23 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 -1
     (nil))
(insn 267 266 268 23 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 -1
     (nil))
(insn 268 267 269 23 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:160 -1
     (nil))
(call_insn 269 268 270 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f52d1f101b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 270 269 271 23 (set (reg:DI 110 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 -1
     (nil))
(insn 271 270 272 23 (set (reg:SI 111 [ D.5704 ])
        (subreg:SI (reg:DI 110 [ D.5709 ]) 0)) read_procpar.cpp:160 -1
     (nil))
(insn 272 271 273 23 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))
(insn 273 272 274 23 (set (mem/j:SI (plus:DI (reg/f:DI 222)
                (const_int 296 [0x128])) [0 procpar_info_38(D)->num_transients+0 S4 A64])
        (reg:SI 111 [ D.5704 ])) read_procpar.cpp:160 -1
     (nil))
(jump_insn 274 273 275 23 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 275 274 276)
;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 276 275 277 24 12 "" [1 uses])
(note 277 276 278 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 24 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 -1
     (nil))
(insn 279 278 280 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f52d1bd5990 *.LC11>)) read_procpar.cpp:162 -1
     (nil))
(insn 280 279 281 24 (set (reg:DI 5 di)
        (reg:DI 223)) read_procpar.cpp:162 -1
     (nil))
(call_insn/i 281 280 282 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 282 281 283 24 (set (reg:SI 112 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 -1
     (nil))
(insn 283 282 284 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (nil))
(jump_insn 284 283 285 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) read_procpar.cpp:162 -1
     (nil)
 -> 330)
;;  succ:       25 (FALLTHRU)
;;              28

;; basic block 25, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 285 284 286 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 25 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 -1
     (nil))
(insn 287 286 288 25 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 -1
     (nil))
(insn 288 287 289 25 (set (reg:DI 1 dx)
        (reg:DI 224)) read_procpar.cpp:164 -1
     (nil))
(insn 289 288 290 25 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 -1
     (nil))
(insn 290 289 291 25 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:164 -1
     (nil))
(call_insn 291 290 292 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 292 291 293 25 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 -1
     (nil))
(insn 293 292 294 25 (set (reg:DI 5 di)
        (reg:DI 226)) read_procpar.cpp:165 -1
     (nil))
(call_insn 294 293 295 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 295 294 296 25 (set (reg:SI 113 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 -1
     (nil))
(insn 296 295 297 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))
(insn 297 296 298 25 (set (reg:QI 114 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))
(insn 298 297 299 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))
(jump_insn 299 298 300 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) read_procpar.cpp:165 -1
     (nil)
 -> 306)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 300 299 301 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:166 -1
     (nil))
(call_insn 302 301 303 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 303 302 304 26 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 -1
     (nil))
(call_insn 304 303 305 26 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 305 304 306)
;; basic block 27, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
(code_label 306 305 307 27 15 "" [1 uses])
(note 307 306 308 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 27 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 -1
     (nil))
(insn 309 308 310 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:171 -1
     (nil))
(insn 310 309 311 27 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:171 -1
     (nil))
(call_insn 311 310 312 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 312 311 313 27 (set (reg:DI 228)
        (reg:DI 0 ax)) read_procpar.cpp:171 -1
     (nil))
(insn 313 312 314 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 228)) read_procpar.cpp:171 -1
     (nil))
(insn 314 313 315 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:172 -1
     (nil))
(insn 315 314 316 27 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 -1
     (nil))
(call_insn 316 315 317 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 317 316 318 27 (set (reg:DI 229)
        (reg:DI 0 ax)) read_procpar.cpp:172 -1
     (nil))
(insn 318 317 319 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 229)) read_procpar.cpp:172 -1
     (nil))
(insn 319 318 320 27 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))
(insn 320 319 321 27 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 -1
     (nil))
(insn 321 320 322 27 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 -1
     (nil))
(insn 322 321 323 27 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:173 -1
     (nil))
(call_insn 323 322 324 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f52d1f101b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 324 323 325 27 (set (reg:DI 115 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 -1
     (nil))
(insn 325 324 326 27 (set (reg:SI 116 [ D.5704 ])
        (subreg:SI (reg:DI 115 [ D.5709 ]) 0)) read_procpar.cpp:173 -1
     (nil))
(insn 326 325 327 27 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))
(insn 327 326 328 27 (set (mem/j:SI (plus:DI (reg/f:DI 231)
                (const_int 300 [0x12c])) [0 procpar_info_38(D)->num_points+0 S4 A32])
        (reg:SI 116 [ D.5704 ])) read_procpar.cpp:173 -1
     (nil))
(jump_insn 328 327 329 27 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 329 328 330)
;; basic block 28, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 330 329 331 28 14 "" [1 uses])
(note 331 330 332 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 28 (set (reg:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 -1
     (nil))
(insn 333 332 334 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f52d1bd5a20 *.LC12>)) read_procpar.cpp:175 -1
     (nil))
(insn 334 333 335 28 (set (reg:DI 5 di)
        (reg:DI 232)) read_procpar.cpp:175 -1
     (nil))
(call_insn/i 335 334 336 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 336 335 337 28 (set (reg:SI 117 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 -1
     (nil))
(insn 337 336 338 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (nil))
(jump_insn 338 337 339 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) read_procpar.cpp:175 -1
     (nil)
 -> 382)
;;  succ:       29 (FALLTHRU)
;;              32

;; basic block 29, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 339 338 340 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 29 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 -1
     (nil))
(insn 341 340 342 29 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 -1
     (nil))
(insn 342 341 343 29 (set (reg:DI 1 dx)
        (reg:DI 233)) read_procpar.cpp:177 -1
     (nil))
(insn 343 342 344 29 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 -1
     (nil))
(insn 344 343 345 29 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:177 -1
     (nil))
(call_insn 345 344 346 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 346 345 347 29 (set (reg:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 -1
     (nil))
(insn 347 346 348 29 (set (reg:DI 5 di)
        (reg:DI 235)) read_procpar.cpp:178 -1
     (nil))
(call_insn 348 347 349 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 349 348 350 29 (set (reg:SI 118 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 -1
     (nil))
(insn 350 349 351 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))
(insn 351 350 352 29 (set (reg:QI 119 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))
(insn 352 351 353 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))
(jump_insn 353 352 354 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 360)
            (pc))) read_procpar.cpp:178 -1
     (nil)
 -> 360)
;;  succ:       30 (FALLTHRU)
;;              31

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 354 353 355 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:179 -1
     (nil))
(call_insn 356 355 357 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 357 356 358 30 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 -1
     (nil))
(call_insn 358 357 359 30 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 359 358 360)
;; basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29
(code_label 360 359 361 31 17 "" [1 uses])
(note 361 360 362 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 31 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 -1
     (nil))
(insn 363 362 364 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:184 -1
     (nil))
(insn 364 363 365 31 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:184 -1
     (nil))
(call_insn 365 364 366 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 366 365 367 31 (set (reg:DI 237)
        (reg:DI 0 ax)) read_procpar.cpp:184 -1
     (nil))
(insn 367 366 368 31 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 237)) read_procpar.cpp:184 -1
     (nil))
(insn 368 367 369 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:185 -1
     (nil))
(insn 369 368 370 31 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 -1
     (nil))
(call_insn 370 369 371 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 31 (set (reg:DI 238)
        (reg:DI 0 ax)) read_procpar.cpp:185 -1
     (nil))
(insn 372 371 373 31 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 238)) read_procpar.cpp:185 -1
     (nil))
(insn 373 372 374 31 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))
(insn 374 373 375 31 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 -1
     (nil))
(insn 375 374 376 31 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:186 -1
     (nil))
(call_insn 376 375 377 31 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 377 376 378 31 (set (reg:DF 120 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 -1
     (nil))
(insn 378 377 379 31 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))
(insn 379 378 380 31 (set (mem/j:DF (plus:DI (reg/f:DI 240)
                (const_int 304 [0x130])) [0 procpar_info_38(D)->main_frequency+0 S8 A64])
        (reg:DF 120 [ D.5706 ])) read_procpar.cpp:186 -1
     (nil))
(jump_insn 380 379 381 31 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 381 380 382)
;; basic block 32, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
(code_label 382 381 383 32 16 "" [1 uses])
(note 383 382 384 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 32 (set (reg:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 -1
     (nil))
(insn 385 384 386 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f52d1bd5ab0 *.LC13>)) read_procpar.cpp:188 -1
     (nil))
(insn 386 385 387 32 (set (reg:DI 5 di)
        (reg:DI 241)) read_procpar.cpp:188 -1
     (nil))
(call_insn/i 387 386 388 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 388 387 389 32 (set (reg:SI 121 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 -1
     (nil))
(insn 389 388 390 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (nil))
(jump_insn 390 389 391 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) read_procpar.cpp:188 -1
     (nil)
 -> 434)
;;  succ:       33 (FALLTHRU)
;;              36

;; basic block 33, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 391 390 392 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 33 (set (reg:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 -1
     (nil))
(insn 393 392 394 33 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 -1
     (nil))
(insn 394 393 395 33 (set (reg:DI 1 dx)
        (reg:DI 242)) read_procpar.cpp:190 -1
     (nil))
(insn 395 394 396 33 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 -1
     (nil))
(insn 396 395 397 33 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:190 -1
     (nil))
(call_insn 397 396 398 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 398 397 399 33 (set (reg:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 -1
     (nil))
(insn 399 398 400 33 (set (reg:DI 5 di)
        (reg:DI 244)) read_procpar.cpp:191 -1
     (nil))
(call_insn 400 399 401 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 401 400 402 33 (set (reg:SI 122 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 -1
     (nil))
(insn 402 401 403 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))
(insn 403 402 404 33 (set (reg:QI 123 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))
(insn 404 403 405 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))
(jump_insn 405 404 406 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 412)
            (pc))) read_procpar.cpp:191 -1
     (nil)
 -> 412)
;;  succ:       34 (FALLTHRU)
;;              35

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 406 405 407 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:192 -1
     (nil))
(call_insn 408 407 409 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 34 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 -1
     (nil))
(call_insn 410 409 411 34 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 411 410 412)
;; basic block 35, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
(code_label 412 411 413 35 19 "" [1 uses])
(note 413 412 414 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 35 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 -1
     (nil))
(insn 415 414 416 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:197 -1
     (nil))
(insn 416 415 417 35 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:197 -1
     (nil))
(call_insn 417 416 418 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 418 417 419 35 (set (reg:DI 246)
        (reg:DI 0 ax)) read_procpar.cpp:197 -1
     (nil))
(insn 419 418 420 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 246)) read_procpar.cpp:197 -1
     (nil))
(insn 420 419 421 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:198 -1
     (nil))
(insn 421 420 422 35 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 -1
     (nil))
(call_insn 422 421 423 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 423 422 424 35 (set (reg:DI 247)
        (reg:DI 0 ax)) read_procpar.cpp:198 -1
     (nil))
(insn 424 423 425 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 247)) read_procpar.cpp:198 -1
     (nil))
(insn 425 424 426 35 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))
(insn 426 425 427 35 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 -1
     (nil))
(insn 427 426 428 35 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:199 -1
     (nil))
(call_insn 428 427 429 35 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 429 428 430 35 (set (reg:DF 124 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 -1
     (nil))
(insn 430 429 431 35 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))
(insn 431 430 432 35 (set (mem/j:DF (plus:DI (reg/f:DI 249)
                (const_int 312 [0x138])) [0 procpar_info_38(D)->offset_frequency+0 S8 A64])
        (reg:DF 124 [ D.5706 ])) read_procpar.cpp:199 -1
     (nil))
(jump_insn 432 431 433 35 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 433 432 434)
;; basic block 36, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
(code_label 434 433 435 36 18 "" [1 uses])
(note 435 434 436 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 437 36 (set (reg:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 -1
     (nil))
(insn 437 436 438 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f52d1bd5b40 *.LC14>)) read_procpar.cpp:201 -1
     (nil))
(insn 438 437 439 36 (set (reg:DI 5 di)
        (reg:DI 250)) read_procpar.cpp:201 -1
     (nil))
(call_insn/i 439 438 440 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 440 439 441 36 (set (reg:SI 125 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 -1
     (nil))
(insn 441 440 442 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (nil))
(jump_insn 442 441 443 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) read_procpar.cpp:201 -1
     (nil)
 -> 487)
;;  succ:       37 (FALLTHRU)
;;              40

;; basic block 37, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 443 442 444 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 37 (set (reg:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 -1
     (nil))
(insn 445 444 446 37 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 -1
     (nil))
(insn 446 445 447 37 (set (reg:DI 1 dx)
        (reg:DI 251)) read_procpar.cpp:203 -1
     (nil))
(insn 447 446 448 37 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 -1
     (nil))
(insn 448 447 449 37 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:203 -1
     (nil))
(call_insn 449 448 450 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 450 449 451 37 (set (reg:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 -1
     (nil))
(insn 451 450 452 37 (set (reg:DI 5 di)
        (reg:DI 253)) read_procpar.cpp:204 -1
     (nil))
(call_insn 452 451 453 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 453 452 454 37 (set (reg:SI 126 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 -1
     (nil))
(insn 454 453 455 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))
(insn 455 454 456 37 (set (reg:QI 127 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))
(insn 456 455 457 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))
(jump_insn 457 456 458 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) read_procpar.cpp:204 -1
     (nil)
 -> 464)
;;  succ:       38 (FALLTHRU)
;;              39

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 (FALLTHRU)
(note 458 457 459 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 38 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:205 -1
     (nil))
(call_insn 460 459 461 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 461 460 462 38 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 -1
     (nil))
(call_insn 462 461 463 38 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 463 462 464)
;; basic block 39, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 464 463 465 39 21 "" [1 uses])
(note 465 464 466 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 39 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 -1
     (nil))
(insn 467 466 468 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:210 -1
     (nil))
(insn 468 467 469 39 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:210 -1
     (nil))
(call_insn 469 468 470 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 470 469 471 39 (set (reg:DI 255)
        (reg:DI 0 ax)) read_procpar.cpp:210 -1
     (nil))
(insn 471 470 472 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 255)) read_procpar.cpp:210 -1
     (nil))
(insn 472 471 473 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:211 -1
     (nil))
(insn 473 472 474 39 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 -1
     (nil))
(call_insn 474 473 475 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 475 474 476 39 (set (reg:DI 256)
        (reg:DI 0 ax)) read_procpar.cpp:211 -1
     (nil))
(insn 476 475 477 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 256)) read_procpar.cpp:211 -1
     (nil))
(insn 477 476 478 39 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))
(insn 478 477 479 39 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 -1
     (nil))
(insn 479 478 480 39 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:212 -1
     (nil))
(call_insn 480 479 481 39 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 481 480 482 39 (set (reg:DF 128 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 -1
     (nil))
(insn 482 481 483 39 (set (reg:SF 129 [ D.5707 ])
        (float_truncate:SF (reg:DF 128 [ D.5706 ]))) read_procpar.cpp:212 -1
     (nil))
(insn 483 482 484 39 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))
(insn 484 483 485 39 (set (mem/j:SF (plus:DI (reg/f:DI 258)
                (const_int 320 [0x140])) [0 procpar_info_38(D)->te+0 S4 A64])
        (reg:SF 129 [ D.5707 ])) read_procpar.cpp:212 -1
     (nil))
(jump_insn 485 484 486 39 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 486 485 487)
;; basic block 40, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
(code_label 487 486 488 40 20 "" [1 uses])
(note 488 487 489 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 40 (set (reg:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 -1
     (nil))
(insn 490 489 491 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f52d1bd5bd0 *.LC15>)) read_procpar.cpp:214 -1
     (nil))
(insn 491 490 492 40 (set (reg:DI 5 di)
        (reg:DI 259)) read_procpar.cpp:214 -1
     (nil))
(call_insn/i 492 491 493 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 493 492 494 40 (set (reg:SI 130 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 -1
     (nil))
(insn 494 493 495 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (nil))
(jump_insn 495 494 496 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) read_procpar.cpp:214 -1
     (nil)
 -> 540)
;;  succ:       41 (FALLTHRU)
;;              44

;; basic block 41, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 496 495 497 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 41 (set (reg:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 -1
     (nil))
(insn 498 497 499 41 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 -1
     (nil))
(insn 499 498 500 41 (set (reg:DI 1 dx)
        (reg:DI 260)) read_procpar.cpp:216 -1
     (nil))
(insn 500 499 501 41 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 -1
     (nil))
(insn 501 500 502 41 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:216 -1
     (nil))
(call_insn 502 501 503 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 503 502 504 41 (set (reg:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 -1
     (nil))
(insn 504 503 505 41 (set (reg:DI 5 di)
        (reg:DI 262)) read_procpar.cpp:217 -1
     (nil))
(call_insn 505 504 506 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 506 505 507 41 (set (reg:SI 131 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 -1
     (nil))
(insn 507 506 508 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))
(insn 508 507 509 41 (set (reg:QI 132 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))
(insn 509 508 510 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))
(jump_insn 510 509 511 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 517)
            (pc))) read_procpar.cpp:217 -1
     (nil)
 -> 517)
;;  succ:       42 (FALLTHRU)
;;              43

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       41 (FALLTHRU)
(note 511 510 512 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:218 -1
     (nil))
(call_insn 513 512 514 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 514 513 515 42 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 -1
     (nil))
(call_insn 515 514 516 42 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 516 515 517)
;; basic block 43, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       41
(code_label 517 516 518 43 23 "" [1 uses])
(note 518 517 519 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 43 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 -1
     (nil))
(insn 520 519 521 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:223 -1
     (nil))
(insn 521 520 522 43 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:223 -1
     (nil))
(call_insn 522 521 523 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 523 522 524 43 (set (reg:DI 264)
        (reg:DI 0 ax)) read_procpar.cpp:223 -1
     (nil))
(insn 524 523 525 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 264)) read_procpar.cpp:223 -1
     (nil))
(insn 525 524 526 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:224 -1
     (nil))
(insn 526 525 527 43 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 -1
     (nil))
(call_insn 527 526 528 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 528 527 529 43 (set (reg:DI 265)
        (reg:DI 0 ax)) read_procpar.cpp:224 -1
     (nil))
(insn 529 528 530 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 265)) read_procpar.cpp:224 -1
     (nil))
(insn 530 529 531 43 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))
(insn 531 530 532 43 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 -1
     (nil))
(insn 532 531 533 43 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:225 -1
     (nil))
(call_insn 533 532 534 43 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 534 533 535 43 (set (reg:DF 133 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 -1
     (nil))
(insn 535 534 536 43 (set (reg:SF 134 [ D.5707 ])
        (float_truncate:SF (reg:DF 133 [ D.5706 ]))) read_procpar.cpp:225 -1
     (nil))
(insn 536 535 537 43 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))
(insn 537 536 538 43 (set (mem/j:SF (plus:DI (reg/f:DI 267)
                (const_int 324 [0x144])) [0 procpar_info_38(D)->tm+0 S4 A32])
        (reg:SF 134 [ D.5707 ])) read_procpar.cpp:225 -1
     (nil))
(jump_insn 538 537 539 43 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 539 538 540)
;; basic block 44, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
(code_label 540 539 541 44 22 "" [1 uses])
(note 541 540 542 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 44 (set (reg:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 -1
     (nil))
(insn 543 542 544 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f52d1bd5c60 *.LC16>)) read_procpar.cpp:227 -1
     (nil))
(insn 544 543 545 44 (set (reg:DI 5 di)
        (reg:DI 268)) read_procpar.cpp:227 -1
     (nil))
(call_insn/i 545 544 546 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 546 545 547 44 (set (reg:SI 135 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 -1
     (nil))
(insn 547 546 548 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (nil))
(jump_insn 548 547 549 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) read_procpar.cpp:227 -1
     (nil)
 -> 593)
;;  succ:       45 (FALLTHRU)
;;              48

;; basic block 45, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 549 548 550 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 551 45 (set (reg:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 -1
     (nil))
(insn 551 550 552 45 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 -1
     (nil))
(insn 552 551 553 45 (set (reg:DI 1 dx)
        (reg:DI 269)) read_procpar.cpp:229 -1
     (nil))
(insn 553 552 554 45 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 -1
     (nil))
(insn 554 553 555 45 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:229 -1
     (nil))
(call_insn 555 554 556 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 556 555 557 45 (set (reg:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 -1
     (nil))
(insn 557 556 558 45 (set (reg:DI 5 di)
        (reg:DI 271)) read_procpar.cpp:230 -1
     (nil))
(call_insn 558 557 559 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 559 558 560 45 (set (reg:SI 136 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 -1
     (nil))
(insn 560 559 561 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))
(insn 561 560 562 45 (set (reg:QI 137 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))
(insn 562 561 563 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))
(jump_insn 563 562 564 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 570)
            (pc))) read_procpar.cpp:230 -1
     (nil)
 -> 570)
;;  succ:       46 (FALLTHRU)
;;              47

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       45 (FALLTHRU)
(note 564 563 565 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:231 -1
     (nil))
(call_insn 566 565 567 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 567 566 568 46 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 -1
     (nil))
(call_insn 568 567 569 46 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 569 568 570)
;; basic block 47, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       45
(code_label 570 569 571 47 25 "" [1 uses])
(note 571 570 572 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 47 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 -1
     (nil))
(insn 573 572 574 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:236 -1
     (nil))
(insn 574 573 575 47 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:236 -1
     (nil))
(call_insn 575 574 576 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 576 575 577 47 (set (reg:DI 273)
        (reg:DI 0 ax)) read_procpar.cpp:236 -1
     (nil))
(insn 577 576 578 47 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 273)) read_procpar.cpp:236 -1
     (nil))
(insn 578 577 579 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:237 -1
     (nil))
(insn 579 578 580 47 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 -1
     (nil))
(call_insn 580 579 581 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 581 580 582 47 (set (reg:DI 274)
        (reg:DI 0 ax)) read_procpar.cpp:237 -1
     (nil))
(insn 582 581 583 47 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 274)) read_procpar.cpp:237 -1
     (nil))
(insn 583 582 584 47 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))
(insn 584 583 585 47 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 -1
     (nil))
(insn 585 584 586 47 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:238 -1
     (nil))
(call_insn 586 585 587 47 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 587 586 588 47 (set (reg:DF 138 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 -1
     (nil))
(insn 588 587 589 47 (set (reg:SF 139 [ D.5707 ])
        (float_truncate:SF (reg:DF 138 [ D.5706 ]))) read_procpar.cpp:238 -1
     (nil))
(insn 589 588 590 47 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))
(insn 590 589 591 47 (set (mem/j:SF (plus:DI (reg/f:DI 276)
                (const_int 328 [0x148])) [0 procpar_info_38(D)->gain+0 S4 A64])
        (reg:SF 139 [ D.5707 ])) read_procpar.cpp:238 -1
     (nil))
(jump_insn 591 590 592 47 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 592 591 593)
;; basic block 48, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
(code_label 593 592 594 48 24 "" [1 uses])
(note 594 593 595 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 48 (set (reg:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 -1
     (nil))
(insn 596 595 597 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f52d1bd5cf0 *.LC17>)) read_procpar.cpp:240 -1
     (nil))
(insn 597 596 598 48 (set (reg:DI 5 di)
        (reg:DI 277)) read_procpar.cpp:240 -1
     (nil))
(call_insn/i 598 597 599 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 599 598 600 48 (set (reg:SI 140 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 -1
     (nil))
(insn 600 599 601 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (nil))
(jump_insn 601 600 602 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 646)
            (pc))) read_procpar.cpp:240 -1
     (nil)
 -> 646)
;;  succ:       49 (FALLTHRU)
;;              52

;; basic block 49, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 602 601 603 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 49 (set (reg:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 -1
     (nil))
(insn 604 603 605 49 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 -1
     (nil))
(insn 605 604 606 49 (set (reg:DI 1 dx)
        (reg:DI 278)) read_procpar.cpp:242 -1
     (nil))
(insn 606 605 607 49 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 -1
     (nil))
(insn 607 606 608 49 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:242 -1
     (nil))
(call_insn 608 607 609 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 609 608 610 49 (set (reg:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 -1
     (nil))
(insn 610 609 611 49 (set (reg:DI 5 di)
        (reg:DI 280)) read_procpar.cpp:243 -1
     (nil))
(call_insn 611 610 612 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 612 611 613 49 (set (reg:SI 141 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 -1
     (nil))
(insn 613 612 614 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))
(insn 614 613 615 49 (set (reg:QI 142 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))
(insn 615 614 616 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))
(jump_insn 616 615 617 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) read_procpar.cpp:243 -1
     (nil)
 -> 623)
;;  succ:       50 (FALLTHRU)
;;              51

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 (FALLTHRU)
(note 617 616 618 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:244 -1
     (nil))
(call_insn 619 618 620 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 620 619 621 50 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 -1
     (nil))
(call_insn 621 620 622 50 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 622 621 623)
;; basic block 51, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       49
(code_label 623 622 624 51 27 "" [1 uses])
(note 624 623 625 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 51 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 -1
     (nil))
(insn 626 625 627 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:249 -1
     (nil))
(insn 627 626 628 51 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:249 -1
     (nil))
(call_insn 628 627 629 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 629 628 630 51 (set (reg:DI 282)
        (reg:DI 0 ax)) read_procpar.cpp:249 -1
     (nil))
(insn 630 629 631 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 282)) read_procpar.cpp:249 -1
     (nil))
(insn 631 630 632 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:250 -1
     (nil))
(insn 632 631 633 51 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 -1
     (nil))
(call_insn 633 632 634 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 634 633 635 51 (set (reg:DI 283)
        (reg:DI 0 ax)) read_procpar.cpp:250 -1
     (nil))
(insn 635 634 636 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 283)) read_procpar.cpp:250 -1
     (nil))
(insn 636 635 637 51 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))
(insn 637 636 638 51 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 -1
     (nil))
(insn 638 637 639 51 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:251 -1
     (nil))
(call_insn 639 638 640 51 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 640 639 641 51 (set (reg:DF 143 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 -1
     (nil))
(insn 641 640 642 51 (set (reg:SF 144 [ D.5707 ])
        (float_truncate:SF (reg:DF 143 [ D.5706 ]))) read_procpar.cpp:251 -1
     (nil))
(insn 642 641 643 51 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))
(insn 643 642 644 51 (set (mem/j:SF (plus:DI (reg/f:DI 285)
                (const_int 332 [0x14c])) [0 procpar_info_38(D)->pos1+0 S4 A32])
        (reg:SF 144 [ D.5707 ])) read_procpar.cpp:251 -1
     (nil))
(jump_insn 644 643 645 51 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 645 644 646)
;; basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 646 645 647 52 26 "" [1 uses])
(note 647 646 648 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 52 (set (reg:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 -1
     (nil))
(insn 649 648 650 52 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f52d1bd5d80 *.LC18>)) read_procpar.cpp:253 -1
     (nil))
(insn 650 649 651 52 (set (reg:DI 5 di)
        (reg:DI 286)) read_procpar.cpp:253 -1
     (nil))
(call_insn/i 651 650 652 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 652 651 653 52 (set (reg:SI 145 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 -1
     (nil))
(insn 653 652 654 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (nil))
(jump_insn 654 653 655 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) read_procpar.cpp:253 -1
     (nil)
 -> 699)
;;  succ:       53 (FALLTHRU)
;;              56

;; basic block 53, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       52 (FALLTHRU)
(note 655 654 656 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 53 (set (reg:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 -1
     (nil))
(insn 657 656 658 53 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 -1
     (nil))
(insn 658 657 659 53 (set (reg:DI 1 dx)
        (reg:DI 287)) read_procpar.cpp:255 -1
     (nil))
(insn 659 658 660 53 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 -1
     (nil))
(insn 660 659 661 53 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:255 -1
     (nil))
(call_insn 661 660 662 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 662 661 663 53 (set (reg:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 -1
     (nil))
(insn 663 662 664 53 (set (reg:DI 5 di)
        (reg:DI 289)) read_procpar.cpp:256 -1
     (nil))
(call_insn 664 663 665 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 665 664 666 53 (set (reg:SI 146 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 -1
     (nil))
(insn 666 665 667 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))
(insn 667 666 668 53 (set (reg:QI 147 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))
(insn 668 667 669 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))
(jump_insn 669 668 670 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 676)
            (pc))) read_procpar.cpp:256 -1
     (nil)
 -> 676)
;;  succ:       54 (FALLTHRU)
;;              55

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL)
;;  pred:       53 (FALLTHRU)
(note 670 669 671 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:257 -1
     (nil))
(call_insn 672 671 673 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 673 672 674 54 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 -1
     (nil))
(call_insn 674 673 675 54 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 675 674 676)
;; basic block 55, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       53
(code_label 676 675 677 55 29 "" [1 uses])
(note 677 676 678 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 679 55 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 -1
     (nil))
(insn 679 678 680 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:262 -1
     (nil))
(insn 680 679 681 55 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:262 -1
     (nil))
(call_insn 681 680 682 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 682 681 683 55 (set (reg:DI 291)
        (reg:DI 0 ax)) read_procpar.cpp:262 -1
     (nil))
(insn 683 682 684 55 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 291)) read_procpar.cpp:262 -1
     (nil))
(insn 684 683 685 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:263 -1
     (nil))
(insn 685 684 686 55 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 -1
     (nil))
(call_insn 686 685 687 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 687 686 688 55 (set (reg:DI 292)
        (reg:DI 0 ax)) read_procpar.cpp:263 -1
     (nil))
(insn 688 687 689 55 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 292)) read_procpar.cpp:263 -1
     (nil))
(insn 689 688 690 55 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))
(insn 690 689 691 55 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 -1
     (nil))
(insn 691 690 692 55 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:264 -1
     (nil))
(call_insn 692 691 693 55 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 693 692 694 55 (set (reg:DF 148 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 -1
     (nil))
(insn 694 693 695 55 (set (reg:SF 149 [ D.5707 ])
        (float_truncate:SF (reg:DF 148 [ D.5706 ]))) read_procpar.cpp:264 -1
     (nil))
(insn 695 694 696 55 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))
(insn 696 695 697 55 (set (mem/j:SF (plus:DI (reg/f:DI 294)
                (const_int 336 [0x150])) [0 procpar_info_38(D)->pos2+0 S4 A64])
        (reg:SF 149 [ D.5707 ])) read_procpar.cpp:264 -1
     (nil))
(jump_insn 697 696 698 55 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 698 697 699)
;; basic block 56, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       52
(code_label 699 698 700 56 28 "" [1 uses])
(note 700 699 701 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 56 (set (reg:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 -1
     (nil))
(insn 702 701 703 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f52d1bd5e10 *.LC19>)) read_procpar.cpp:266 -1
     (nil))
(insn 703 702 704 56 (set (reg:DI 5 di)
        (reg:DI 295)) read_procpar.cpp:266 -1
     (nil))
(call_insn/i 704 703 705 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 705 704 706 56 (set (reg:SI 150 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 -1
     (nil))
(insn 706 705 707 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (nil))
(jump_insn 707 706 708 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) read_procpar.cpp:266 -1
     (nil)
 -> 752)
;;  succ:       57 (FALLTHRU)
;;              60

;; basic block 57, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       56 (FALLTHRU)
(note 708 707 709 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 57 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 -1
     (nil))
(insn 710 709 711 57 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 -1
     (nil))
(insn 711 710 712 57 (set (reg:DI 1 dx)
        (reg:DI 296)) read_procpar.cpp:268 -1
     (nil))
(insn 712 711 713 57 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 -1
     (nil))
(insn 713 712 714 57 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:268 -1
     (nil))
(call_insn 714 713 715 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 715 714 716 57 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 -1
     (nil))
(insn 716 715 717 57 (set (reg:DI 5 di)
        (reg:DI 298)) read_procpar.cpp:269 -1
     (nil))
(call_insn 717 716 718 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 718 717 719 57 (set (reg:SI 151 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 -1
     (nil))
(insn 719 718 720 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))
(insn 720 719 721 57 (set (reg:QI 152 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))
(insn 721 720 722 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 152 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))
(jump_insn 722 721 723 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 729)
            (pc))) read_procpar.cpp:269 -1
     (nil)
 -> 729)
;;  succ:       58 (FALLTHRU)
;;              59

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       57 (FALLTHRU)
(note 723 722 724 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 724 723 725 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:270 -1
     (nil))
(call_insn 725 724 726 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 726 725 727 58 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 -1
     (nil))
(call_insn 727 726 728 58 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 728 727 729)
;; basic block 59, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       57
(code_label 729 728 730 59 31 "" [1 uses])
(note 730 729 731 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 59 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 -1
     (nil))
(insn 732 731 733 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:275 -1
     (nil))
(insn 733 732 734 59 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:275 -1
     (nil))
(call_insn 734 733 735 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 735 734 736 59 (set (reg:DI 300)
        (reg:DI 0 ax)) read_procpar.cpp:275 -1
     (nil))
(insn 736 735 737 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 300)) read_procpar.cpp:275 -1
     (nil))
(insn 737 736 738 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:276 -1
     (nil))
(insn 738 737 739 59 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 -1
     (nil))
(call_insn 739 738 740 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 740 739 741 59 (set (reg:DI 301)
        (reg:DI 0 ax)) read_procpar.cpp:276 -1
     (nil))
(insn 741 740 742 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 301)) read_procpar.cpp:276 -1
     (nil))
(insn 742 741 743 59 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))
(insn 743 742 744 59 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 -1
     (nil))
(insn 744 743 745 59 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:277 -1
     (nil))
(call_insn 745 744 746 59 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 746 745 747 59 (set (reg:DF 153 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 -1
     (nil))
(insn 747 746 748 59 (set (reg:SF 154 [ D.5707 ])
        (float_truncate:SF (reg:DF 153 [ D.5706 ]))) read_procpar.cpp:277 -1
     (nil))
(insn 748 747 749 59 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))
(insn 749 748 750 59 (set (mem/j:SF (plus:DI (reg/f:DI 303)
                (const_int 340 [0x154])) [0 procpar_info_38(D)->pos3+0 S4 A32])
        (reg:SF 154 [ D.5707 ])) read_procpar.cpp:277 -1
     (nil))
(jump_insn 750 749 751 59 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 751 750 752)
;; basic block 60, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       56
(code_label 752 751 753 60 30 "" [1 uses])
(note 753 752 754 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 755 60 (set (reg:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 -1
     (nil))
(insn 755 754 756 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f52d1bd5ea0 *.LC20>)) read_procpar.cpp:279 -1
     (nil))
(insn 756 755 757 60 (set (reg:DI 5 di)
        (reg:DI 304)) read_procpar.cpp:279 -1
     (nil))
(call_insn/i 757 756 758 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 758 757 759 60 (set (reg:SI 155 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 -1
     (nil))
(insn 759 758 760 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (nil))
(jump_insn 760 759 761 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 805)
            (pc))) read_procpar.cpp:279 -1
     (nil)
 -> 805)
;;  succ:       61 (FALLTHRU)
;;              64

;; basic block 61, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 (FALLTHRU)
(note 761 760 762 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 762 761 763 61 (set (reg:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 -1
     (nil))
(insn 763 762 764 61 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 -1
     (nil))
(insn 764 763 765 61 (set (reg:DI 1 dx)
        (reg:DI 305)) read_procpar.cpp:281 -1
     (nil))
(insn 765 764 766 61 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 -1
     (nil))
(insn 766 765 767 61 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:281 -1
     (nil))
(call_insn 767 766 768 61 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 768 767 769 61 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 -1
     (nil))
(insn 769 768 770 61 (set (reg:DI 5 di)
        (reg:DI 307)) read_procpar.cpp:282 -1
     (nil))
(call_insn 770 769 771 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 771 770 772 61 (set (reg:SI 156 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 -1
     (nil))
(insn 772 771 773 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))
(insn 773 772 774 61 (set (reg:QI 157 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))
(insn 774 773 775 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))
(jump_insn 775 774 776 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) read_procpar.cpp:282 -1
     (nil)
 -> 782)
;;  succ:       62 (FALLTHRU)
;;              63

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL)
;;  pred:       61 (FALLTHRU)
(note 776 775 777 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:283 -1
     (nil))
(call_insn 778 777 779 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 779 778 780 62 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 -1
     (nil))
(call_insn 780 779 781 62 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 781 780 782)
;; basic block 63, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       61
(code_label 782 781 783 63 33 "" [1 uses])
(note 783 782 784 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 63 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 -1
     (nil))
(insn 785 784 786 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:288 -1
     (nil))
(insn 786 785 787 63 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:288 -1
     (nil))
(call_insn 787 786 788 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 788 787 789 63 (set (reg:DI 309)
        (reg:DI 0 ax)) read_procpar.cpp:288 -1
     (nil))
(insn 789 788 790 63 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 309)) read_procpar.cpp:288 -1
     (nil))
(insn 790 789 791 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:289 -1
     (nil))
(insn 791 790 792 63 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 -1
     (nil))
(call_insn 792 791 793 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 793 792 794 63 (set (reg:DI 310)
        (reg:DI 0 ax)) read_procpar.cpp:289 -1
     (nil))
(insn 794 793 795 63 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 310)) read_procpar.cpp:289 -1
     (nil))
(insn 795 794 796 63 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))
(insn 796 795 797 63 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 -1
     (nil))
(insn 797 796 798 63 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:290 -1
     (nil))
(call_insn 798 797 799 63 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 799 798 800 63 (set (reg:DF 158 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 -1
     (nil))
(insn 800 799 801 63 (set (reg:SF 159 [ D.5707 ])
        (float_truncate:SF (reg:DF 158 [ D.5706 ]))) read_procpar.cpp:290 -1
     (nil))
(insn 801 800 802 63 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))
(insn 802 801 803 63 (set (mem/j:SF (plus:DI (reg/f:DI 312)
                (const_int 344 [0x158])) [0 procpar_info_38(D)->vox1+0 S4 A64])
        (reg:SF 159 [ D.5707 ])) read_procpar.cpp:290 -1
     (nil))
(jump_insn 803 802 804 63 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 804 803 805)
;; basic block 64, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       60
(code_label 805 804 806 64 32 "" [1 uses])
(note 806 805 807 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 64 (set (reg:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 -1
     (nil))
(insn 808 807 809 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f52d1bd5f30 *.LC21>)) read_procpar.cpp:292 -1
     (nil))
(insn 809 808 810 64 (set (reg:DI 5 di)
        (reg:DI 313)) read_procpar.cpp:292 -1
     (nil))
(call_insn/i 810 809 811 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 811 810 812 64 (set (reg:SI 160 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 -1
     (nil))
(insn 812 811 813 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (nil))
(jump_insn 813 812 814 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 858)
            (pc))) read_procpar.cpp:292 -1
     (nil)
 -> 858)
;;  succ:       65 (FALLTHRU)
;;              68

;; basic block 65, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 (FALLTHRU)
(note 814 813 815 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 815 814 816 65 (set (reg:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 -1
     (nil))
(insn 816 815 817 65 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 -1
     (nil))
(insn 817 816 818 65 (set (reg:DI 1 dx)
        (reg:DI 314)) read_procpar.cpp:294 -1
     (nil))
(insn 818 817 819 65 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 -1
     (nil))
(insn 819 818 820 65 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:294 -1
     (nil))
(call_insn 820 819 821 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 821 820 822 65 (set (reg:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 -1
     (nil))
(insn 822 821 823 65 (set (reg:DI 5 di)
        (reg:DI 316)) read_procpar.cpp:295 -1
     (nil))
(call_insn 823 822 824 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 824 823 825 65 (set (reg:SI 161 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 -1
     (nil))
(insn 825 824 826 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))
(insn 826 825 827 65 (set (reg:QI 162 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))
(insn 827 826 828 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))
(jump_insn 828 827 829 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 835)
            (pc))) read_procpar.cpp:295 -1
     (nil)
 -> 835)
;;  succ:       66 (FALLTHRU)
;;              67

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       65 (FALLTHRU)
(note 829 828 830 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 830 829 831 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:296 -1
     (nil))
(call_insn 831 830 832 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 832 831 833 66 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 -1
     (nil))
(call_insn 833 832 834 66 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 834 833 835)
;; basic block 67, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       65
(code_label 835 834 836 67 35 "" [1 uses])
(note 836 835 837 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 67 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 -1
     (nil))
(insn 838 837 839 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:301 -1
     (nil))
(insn 839 838 840 67 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:301 -1
     (nil))
(call_insn 840 839 841 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 841 840 842 67 (set (reg:DI 318)
        (reg:DI 0 ax)) read_procpar.cpp:301 -1
     (nil))
(insn 842 841 843 67 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 318)) read_procpar.cpp:301 -1
     (nil))
(insn 843 842 844 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:302 -1
     (nil))
(insn 844 843 845 67 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 -1
     (nil))
(call_insn 845 844 846 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 846 845 847 67 (set (reg:DI 319)
        (reg:DI 0 ax)) read_procpar.cpp:302 -1
     (nil))
(insn 847 846 848 67 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 319)) read_procpar.cpp:302 -1
     (nil))
(insn 848 847 849 67 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))
(insn 849 848 850 67 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 -1
     (nil))
(insn 850 849 851 67 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:303 -1
     (nil))
(call_insn 851 850 852 67 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 852 851 853 67 (set (reg:DF 163 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 -1
     (nil))
(insn 853 852 854 67 (set (reg:SF 164 [ D.5707 ])
        (float_truncate:SF (reg:DF 163 [ D.5706 ]))) read_procpar.cpp:303 -1
     (nil))
(insn 854 853 855 67 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))
(insn 855 854 856 67 (set (mem/j:SF (plus:DI (reg/f:DI 321)
                (const_int 348 [0x15c])) [0 procpar_info_38(D)->vox2+0 S4 A32])
        (reg:SF 164 [ D.5707 ])) read_procpar.cpp:303 -1
     (nil))
(jump_insn 856 855 857 67 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 857 856 858)
;; basic block 68, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       64
(code_label 858 857 859 68 34 "" [1 uses])
(note 859 858 860 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 68 (set (reg:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 -1
     (nil))
(insn 861 860 862 68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f52d1bfb000 *.LC22>)) read_procpar.cpp:305 -1
     (nil))
(insn 862 861 863 68 (set (reg:DI 5 di)
        (reg:DI 322)) read_procpar.cpp:305 -1
     (nil))
(call_insn/i 863 862 864 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 864 863 865 68 (set (reg:SI 165 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 -1
     (nil))
(insn 865 864 866 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (nil))
(jump_insn 866 865 867 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 911)
            (pc))) read_procpar.cpp:305 -1
     (nil)
 -> 911)
;;  succ:       69 (FALLTHRU)
;;              72

;; basic block 69, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 (FALLTHRU)
(note 867 866 868 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 868 867 869 69 (set (reg:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 -1
     (nil))
(insn 869 868 870 69 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 -1
     (nil))
(insn 870 869 871 69 (set (reg:DI 1 dx)
        (reg:DI 323)) read_procpar.cpp:307 -1
     (nil))
(insn 871 870 872 69 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 -1
     (nil))
(insn 872 871 873 69 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:307 -1
     (nil))
(call_insn 873 872 874 69 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 874 873 875 69 (set (reg:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 -1
     (nil))
(insn 875 874 876 69 (set (reg:DI 5 di)
        (reg:DI 325)) read_procpar.cpp:308 -1
     (nil))
(call_insn 876 875 877 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 877 876 878 69 (set (reg:SI 166 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 -1
     (nil))
(insn 878 877 879 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))
(insn 879 878 880 69 (set (reg:QI 167 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))
(insn 880 879 881 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))
(jump_insn 881 880 882 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 888)
            (pc))) read_procpar.cpp:308 -1
     (nil)
 -> 888)
;;  succ:       70 (FALLTHRU)
;;              71

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 (FALLTHRU)
(note 882 881 883 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:309 -1
     (nil))
(call_insn 884 883 885 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 885 884 886 70 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 -1
     (nil))
(call_insn 886 885 887 70 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 887 886 888)
;; basic block 71, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       69
(code_label 888 887 889 71 37 "" [1 uses])
(note 889 888 890 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 71 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 -1
     (nil))
(insn 891 890 892 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:314 -1
     (nil))
(insn 892 891 893 71 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:314 -1
     (nil))
(call_insn 893 892 894 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 894 893 895 71 (set (reg:DI 327)
        (reg:DI 0 ax)) read_procpar.cpp:314 -1
     (nil))
(insn 895 894 896 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 327)) read_procpar.cpp:314 -1
     (nil))
(insn 896 895 897 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:315 -1
     (nil))
(insn 897 896 898 71 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 -1
     (nil))
(call_insn 898 897 899 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 899 898 900 71 (set (reg:DI 328)
        (reg:DI 0 ax)) read_procpar.cpp:315 -1
     (nil))
(insn 900 899 901 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 328)) read_procpar.cpp:315 -1
     (nil))
(insn 901 900 902 71 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))
(insn 902 901 903 71 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 -1
     (nil))
(insn 903 902 904 71 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:316 -1
     (nil))
(call_insn 904 903 905 71 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 905 904 906 71 (set (reg:DF 168 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 -1
     (nil))
(insn 906 905 907 71 (set (reg:SF 169 [ D.5707 ])
        (float_truncate:SF (reg:DF 168 [ D.5706 ]))) read_procpar.cpp:316 -1
     (nil))
(insn 907 906 908 71 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))
(insn 908 907 909 71 (set (mem/j:SF (plus:DI (reg/f:DI 330)
                (const_int 352 [0x160])) [0 procpar_info_38(D)->vox3+0 S4 A64])
        (reg:SF 169 [ D.5707 ])) read_procpar.cpp:316 -1
     (nil))
(jump_insn 909 908 910 71 (set (pc)
        (label_ref 962)) -1
     (nil)
 -> 962)
;;  succ:       76

(barrier 910 909 911)
;; basic block 72, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       68
(code_label 911 910 912 72 36 "" [1 uses])
(note 912 911 913 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 913 912 914 72 (set (reg:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 -1
     (nil))
(insn 914 913 915 72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f52d1bfb090 *.LC23>)) read_procpar.cpp:318 -1
     (nil))
(insn 915 914 916 72 (set (reg:DI 5 di)
        (reg:DI 331)) read_procpar.cpp:318 -1
     (nil))
(call_insn/i 916 915 917 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f52d207a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 917 916 918 72 (set (reg:SI 170 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 -1
     (nil))
(insn 918 917 919 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (nil))
(jump_insn 919 918 920 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) read_procpar.cpp:318 -1
     (nil)
 -> 962)
;;  succ:       73 (FALLTHRU)
;;              76

;; basic block 73, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       72 (FALLTHRU)
(note 920 919 921 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 73 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 -1
     (nil))
(insn 922 921 923 73 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 -1
     (nil))
(insn 923 922 924 73 (set (reg:DI 1 dx)
        (reg:DI 332)) read_procpar.cpp:320 -1
     (nil))
(insn 924 923 925 73 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 -1
     (nil))
(insn 925 924 926 73 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:320 -1
     (nil))
(call_insn 926 925 927 73 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 927 926 928 73 (set (reg:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 -1
     (nil))
(insn 928 927 929 73 (set (reg:DI 5 di)
        (reg:DI 334)) read_procpar.cpp:321 -1
     (nil))
(call_insn 929 928 930 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 930 929 931 73 (set (reg:SI 171 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 -1
     (nil))
(insn 931 930 932 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))
(insn 932 931 933 73 (set (reg:QI 172 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))
(insn 933 932 934 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))
(jump_insn 934 933 935 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 941)
            (pc))) read_procpar.cpp:321 -1
     (nil)
 -> 941)
;;  succ:       74 (FALLTHRU)
;;              75

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       73 (FALLTHRU)
(note 935 934 936 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:322 -1
     (nil))
(call_insn 937 936 938 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 938 937 939 74 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 -1
     (nil))
(call_insn 939 938 940 74 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 940 939 941)
;; basic block 75, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       73
(code_label 941 940 942 75 38 "" [1 uses])
(note 942 941 943 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 943 942 944 75 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 -1
     (nil))
(insn 944 943 945 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:327 -1
     (nil))
(insn 945 944 946 75 (set (reg:DI 5 di)
        (reg:DI 335)) read_procpar.cpp:327 -1
     (nil))
(call_insn 946 945 947 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 947 946 948 75 (set (reg:DI 336)
        (reg:DI 0 ax)) read_procpar.cpp:327 -1
     (nil))
(insn 948 947 949 75 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 336)) read_procpar.cpp:327 -1
     (nil))
(insn 949 948 950 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f52d1bd5630 *.LC5>)) read_procpar.cpp:328 -1
     (nil))
(insn 950 949 951 75 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 -1
     (nil))
(call_insn 951 950 952 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f52d1eb7510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 952 951 953 75 (set (reg:DI 337)
        (reg:DI 0 ax)) read_procpar.cpp:328 -1
     (nil))
(insn 953 952 954 75 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 337)) read_procpar.cpp:328 -1
     (nil))
(insn 954 953 955 75 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))
(insn 955 954 956 75 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 -1
     (nil))
(insn 956 955 957 75 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:329 -1
     (nil))
(call_insn 957 956 958 75 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f52d1f03e58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 958 957 959 75 (set (reg:DF 173 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 -1
     (nil))
(insn 959 958 960 75 (set (reg:SF 174 [ D.5707 ])
        (float_truncate:SF (reg:DF 173 [ D.5706 ]))) read_procpar.cpp:329 -1
     (nil))
(insn 960 959 961 75 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))
(insn 961 960 962 75 (set (mem/j:SF (plus:DI (reg/f:DI 339)
                (const_int 368 [0x170])) [0 procpar_info_38(D)->vtheta+0 S4 A64])
        (reg:SF 174 [ D.5707 ])) read_procpar.cpp:329 -1
     (nil))
;;  succ:       76 (FALLTHRU)

;; basic block 76, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              15
;;              19
;;              23
;;              27
;;              31
;;              35
;;              39
;;              43
;;              47
;;              51
;;              55
;;              59
;;              63
;;              67
;;              71
;;              72
;;              75 (FALLTHRU)
(code_label 962 961 963 76 7 "" [17 uses])
(note 963 962 964 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 76 (set (reg:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 -1
     (nil))
(insn 965 964 966 76 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 -1
     (nil))
(insn 966 965 967 76 (set (reg:DI 1 dx)
        (reg:DI 340)) read_procpar.cpp:339 -1
     (nil))
(insn 967 966 968 76 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 -1
     (nil))
(insn 968 967 969 76 (set (reg:DI 5 di)
        (reg:DI 341)) read_procpar.cpp:339 -1
     (nil))
(call_insn 969 968 970 76 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f52d1e49af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 970 969 971 76 (set (reg:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 -1
     (nil))
(insn 971 970 972 76 (set (reg:DI 5 di)
        (reg:DI 342)) read_procpar.cpp:341 -1
     (nil))
(call_insn 972 971 973 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f52d1e556c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 973 972 974 76 (set (reg:SI 175 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 -1
     (nil))
(insn 974 973 975 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))
(insn 975 974 976 76 (set (reg:QI 176 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))
(insn 976 975 977 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))
(jump_insn 977 976 978 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 984)
            (pc))) read_procpar.cpp:341 -1
     (nil)
 -> 984)
;;  succ:       77 (FALLTHRU)
;;              78

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL)
;;  pred:       76 (FALLTHRU)
(note 978 977 979 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 979 978 980 77 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f52d1bd5480 *.LC2>)) read_procpar.cpp:342 -1
     (nil))
(call_insn 980 979 981 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 981 980 982 77 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 -1
     (nil))
(call_insn 982 981 983 77 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f52d20a1ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 983 982 984)
;; basic block 78, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL)
;;  pred:       76
(code_label 984 983 985 78 39 "" [1 uses])
(note 985 984 986 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(jump_insn 986 985 987 78 (set (pc)
        (label_ref 49)) read_procpar.cpp:51 -1
     (nil)
 -> 49)
;;  succ:       7 (DFS_BACK)

(barrier 987 986 988)
;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 988 987 989 79 4 "" [1 uses])
(note 989 988 990 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 990 989 991 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 -1
     (nil))
(jump_insn 991 990 992 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1001)
            (pc))) read_procpar.cpp:354 -1
     (nil)
 -> 1001)
;;  succ:       80 (FALLTHRU)
;;              81

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL)
;;  pred:       79 (FALLTHRU)
(note 992 991 993 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f52d1bfb120 *.LC24>)) read_procpar.cpp:356 -1
     (nil))
(call_insn 994 993 995 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f52d2086000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 995 994 996 80 (set (reg/f:DI 177 [ D.5710 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f52d1e41000 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 -1
     (nil))
(insn 996 995 997 80 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.5710 ])) read_procpar.cpp:357 -1
     (nil))
(call_insn 997 996 998 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x7f52d1e43288 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 998 997 999 80 (set (reg:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 -1
     (nil))
(insn 999 998 1000 80 (set (reg:DI 5 di)
        (reg:DI 343)) read_procpar.cpp:358 -1
     (nil))
(call_insn 1000 999 1001 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f52d1e431b0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       81 (FALLTHRU)

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              80 (FALLTHRU)
(code_label 1001 1000 1002 81 40 "" [1 uses])
(note 1002 1001 1003 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1003 1002 1006 81 (set (reg:SI 178 [ D.5704 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 -1
     (nil))
(insn 1006 1003 1010 81 (set (reg:SI 179 [ <retval> ])
        (reg:SI 178 [ D.5704 ])) read_procpar.cpp:364 -1
     (nil))
(insn 1010 1006 1011 81 (set (reg/i:SI 0 ax)
        (reg:SI 179 [ <retval> ])) read_procpar.cpp:365 -1
     (nil))
(insn 1011 1010 1012 81 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5711+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_procpar.cpp:365 -1
     (nil))
(jump_insn 1012 1011 1018 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1015)
            (pc))) read_procpar.cpp:365 -1
     (nil)
 -> 1015)
;;  succ:       85
;;              84 (FALLTHRU)

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
(note 1018 1012 1013 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(call_insn 1013 1018 1014 84 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f52d1f81bd0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_procpar.cpp:365 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 1014 1013 1015)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       81
(code_label 1015 1014 1019 85 42 "" [1 uses])
(note 1019 1015 1016 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1019 0 85 (use (reg/i:SI 0 ax)) read_procpar.cpp:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

