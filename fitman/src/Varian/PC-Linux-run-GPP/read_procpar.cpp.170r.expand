
;; Function int read_procpar(Procpar_info*, char*) (_Z12read_procparP12Procpar_infoPc, funcdef_no=2, decl_uid=5284, symbol_order=2)

int read_procpar(Procpar_info*, char*) (struct Procpar_info * procpar_info, char * procpar_string)
{
  struct FILE * D.5594;
  int i;
  char * token;
  char in_line[50000];
  struct FILE * in_file;
  int D.5592;
  struct _IO_FILE * stdout.20;
  int D.5587;
  bool retval.19;
  int D.5583;
  bool retval.18;
  float D.5580;
  double D.5579;
  int D.5576;
  bool retval.17;
  int D.5572;
  float D.5570;
  double D.5569;
  int D.5566;
  bool retval.16;
  int D.5562;
  float D.5560;
  double D.5559;
  int D.5556;
  bool retval.15;
  int D.5552;
  float D.5550;
  double D.5549;
  int D.5546;
  bool retval.14;
  int D.5542;
  float D.5540;
  double D.5539;
  int D.5536;
  bool retval.13;
  int D.5532;
  float D.5530;
  double D.5529;
  int D.5526;
  bool retval.12;
  int D.5522;
  float D.5520;
  double D.5519;
  int D.5516;
  bool retval.11;
  int D.5512;
  float D.5510;
  double D.5509;
  int D.5506;
  bool retval.10;
  int D.5502;
  float D.5500;
  double D.5499;
  int D.5496;
  bool retval.9;
  int D.5492;
  float D.5490;
  double D.5489;
  int D.5486;
  bool retval.8;
  int D.5482;
  double D.5480;
  int D.5477;
  bool retval.7;
  int D.5473;
  double D.5471;
  int D.5468;
  bool retval.6;
  int D.5464;
  int D.5462;
  long int D.5461;
  int D.5458;
  bool retval.5;
  int D.5454;
  int D.5452;
  long int D.5451;
  int D.5448;
  bool retval.4;
  int D.5444;
  float D.5442;
  double D.5441;
  int D.5438;
  bool retval.3;
  int D.5434;
  char[30] * D.5432;
  int D.5429;
  bool retval.2;
  int D.5425;
  float D.5423;
  double D.5422;
  int D.5419;
  bool retval.1;
  int D.5415;
  int D.5412;
  bool retval.0;
  long unsigned int D.5408;
  long unsigned int _4;
  struct FILE * _8;
  int _10;
  bool retval.0_11;
  int _12;
  bool retval.19_13;
  int _16;
  int _17;
  bool retval.1_18;
  double _21;
  float _22;
  int _24;
  int _25;
  bool retval.2_26;
  char[30] * _29;
  int _30;
  int _31;
  bool retval.3_32;
  double _35;
  float _36;
  int _37;
  int _38;
  bool retval.4_39;
  long int _42;
  int _43;
  int _44;
  int _45;
  bool retval.5_46;
  long int _49;
  int _50;
  int _51;
  int _52;
  bool retval.6_53;
  double _56;
  int _57;
  int _58;
  bool retval.7_59;
  double _62;
  int _63;
  int _64;
  bool retval.8_65;
  double _68;
  float _69;
  int _70;
  int _71;
  bool retval.9_72;
  double _75;
  float _76;
  int _77;
  int _78;
  bool retval.10_79;
  double _82;
  float _83;
  int _84;
  int _85;
  bool retval.11_86;
  double _89;
  float _90;
  int _91;
  int _92;
  bool retval.12_93;
  double _96;
  float _97;
  int _98;
  int _99;
  bool retval.13_100;
  double _103;
  float _104;
  int _105;
  int _106;
  bool retval.14_107;
  double _110;
  float _111;
  int _112;
  int _113;
  bool retval.15_114;
  double _117;
  float _118;
  int _119;
  int _120;
  bool retval.16_121;
  double _124;
  float _125;
  int _126;
  int _127;
  bool retval.17_128;
  double _131;
  float _132;
  int _133;
  bool retval.18_134;
  struct _IO_FILE * stdout.20_135;
  int _136;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  in_file_2 = 0B;
  token_3 = 0B;
  _4 = 5000;
  token_5 = (char *) _4;
  i_6 = 0;
  _8 = fopen (procpar_string_7(D), "rb");
  in_file_9 = _8;
  if (in_file_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin_puts (&"Can\'t open procpar file."[0]);
  exit (4);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  fgets (&in_line, 255, in_file_9);
  _10 = ferror (in_file_9);
  retval.0_11 = _10 != 0;
  if (retval.0_11 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  goto <bb 78>;
;;    succ:       78

;;   basic block 7, loop depth 1
;;    pred:       78
  i_14 = i_1 + 1;
  token_15 = strtok (&in_line, " \t\n");
  _16 = strcmp (token_15, "at");
  if (_16 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8
;;                11

;;   basic block 8, loop depth 1
;;    pred:       7
  fgets (&in_line, 5000, in_file_9);
  _17 = ferror (in_file_9);
  retval.1_18 = _17 != 0;
  if (retval.1_18 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       8
  token_19 = strtok (&in_line, " \n");
  token_20 = strtok (0B, " \n");
  _21 = strtod (token_20, 0B);
  _22 = (float) _21;
  procpar_info_23(D)->acquision_time = _22;
  goto <bb 75>;
;;    succ:       75

;;   basic block 11, loop depth 1
;;    pred:       7
  _24 = strcmp (token_15, "date");
  if (_24 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12
;;                15

;;   basic block 12, loop depth 1
;;    pred:       11
  fgets (&in_line, 255, in_file_9);
  _25 = ferror (in_file_9);
  retval.2_26 = _25 != 0;
  if (retval.2_26 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 14, loop depth 1
;;    pred:       12
  token_27 = strtok (&in_line, " \"");
  token_28 = strtok (0B, "\"");
  _29 = &procpar_info_23(D)->date;
  strcpy (_29, token_28);
  goto <bb 75>;
;;    succ:       75

;;   basic block 15, loop depth 1
;;    pred:       11
  _30 = strcmp (token_15, "filter");
  if (_30 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16
;;                19

;;   basic block 16, loop depth 1
;;    pred:       15
  fgets (&in_line, 255, in_file_9);
  _31 = ferror (in_file_9);
  retval.3_32 = _31 != 0;
  if (retval.3_32 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 18, loop depth 1
;;    pred:       16
  token_33 = strtok (&in_line, " \n");
  token_34 = strtok (0B, " \n");
  _35 = strtod (token_34, 0B);
  _36 = (float) _35;
  procpar_info_23(D)->filter = _36;
  goto <bb 75>;
;;    succ:       75

;;   basic block 19, loop depth 1
;;    pred:       15
  _37 = strcmp (token_15, "nt");
  if (_37 == 0)
    goto <bb 20>;
  else
    goto <bb 23>;
;;    succ:       20
;;                23

;;   basic block 20, loop depth 1
;;    pred:       19
  fgets (&in_line, 255, in_file_9);
  _38 = ferror (in_file_9);
  retval.4_39 = _38 != 0;
  if (retval.4_39 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21
;;                22

;;   basic block 21, loop depth 0
;;    pred:       20
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 22, loop depth 1
;;    pred:       20
  token_40 = strtok (&in_line, " \n");
  token_41 = strtok (0B, " \n");
  _42 = strtol (token_41, 0B, 10);
  _43 = (int) _42;
  procpar_info_23(D)->num_transients = _43;
  goto <bb 75>;
;;    succ:       75

;;   basic block 23, loop depth 1
;;    pred:       19
  _44 = strcmp (token_15, "np");
  if (_44 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24
;;                27

;;   basic block 24, loop depth 1
;;    pred:       23
  fgets (&in_line, 255, in_file_9);
  _45 = ferror (in_file_9);
  retval.5_46 = _45 != 0;
  if (retval.5_46 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 26, loop depth 1
;;    pred:       24
  token_47 = strtok (&in_line, " \n");
  token_48 = strtok (0B, " \n");
  _49 = strtol (token_48, 0B, 10);
  _50 = (int) _49;
  procpar_info_23(D)->num_points = _50;
  goto <bb 75>;
;;    succ:       75

;;   basic block 27, loop depth 1
;;    pred:       23
  _51 = strcmp (token_15, "sfrq");
  if (_51 == 0)
    goto <bb 28>;
  else
    goto <bb 31>;
;;    succ:       28
;;                31

;;   basic block 28, loop depth 1
;;    pred:       27
  fgets (&in_line, 255, in_file_9);
  _52 = ferror (in_file_9);
  retval.6_53 = _52 != 0;
  if (retval.6_53 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       28
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 30, loop depth 1
;;    pred:       28
  token_54 = strtok (&in_line, " \n");
  token_55 = strtok (0B, " \n");
  _56 = strtod (token_55, 0B);
  procpar_info_23(D)->main_frequency = _56;
  goto <bb 75>;
;;    succ:       75

;;   basic block 31, loop depth 1
;;    pred:       27
  _57 = strcmp (token_15, "tof");
  if (_57 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32
;;                35

;;   basic block 32, loop depth 1
;;    pred:       31
  fgets (&in_line, 255, in_file_9);
  _58 = ferror (in_file_9);
  retval.7_59 = _58 != 0;
  if (retval.7_59 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       32
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 34, loop depth 1
;;    pred:       32
  token_60 = strtok (&in_line, " \n");
  token_61 = strtok (0B, " \n");
  _62 = strtod (token_61, 0B);
  procpar_info_23(D)->offset_frequency = _62;
  goto <bb 75>;
;;    succ:       75

;;   basic block 35, loop depth 1
;;    pred:       31
  _63 = strcmp (token_15, "te");
  if (_63 == 0)
    goto <bb 36>;
  else
    goto <bb 39>;
;;    succ:       36
;;                39

;;   basic block 36, loop depth 1
;;    pred:       35
  fgets (&in_line, 255, in_file_9);
  _64 = ferror (in_file_9);
  retval.8_65 = _64 != 0;
  if (retval.8_65 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37
;;                38

;;   basic block 37, loop depth 0
;;    pred:       36
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 38, loop depth 1
;;    pred:       36
  token_66 = strtok (&in_line, " \n");
  token_67 = strtok (0B, " \n");
  _68 = strtod (token_67, 0B);
  _69 = (float) _68;
  procpar_info_23(D)->te = _69;
  goto <bb 75>;
;;    succ:       75

;;   basic block 39, loop depth 1
;;    pred:       35
  _70 = strcmp (token_15, "tm");
  if (_70 == 0)
    goto <bb 40>;
  else
    goto <bb 43>;
;;    succ:       40
;;                43

;;   basic block 40, loop depth 1
;;    pred:       39
  fgets (&in_line, 255, in_file_9);
  _71 = ferror (in_file_9);
  retval.9_72 = _71 != 0;
  if (retval.9_72 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 42, loop depth 1
;;    pred:       40
  token_73 = strtok (&in_line, " \n");
  token_74 = strtok (0B, " \n");
  _75 = strtod (token_74, 0B);
  _76 = (float) _75;
  procpar_info_23(D)->tm = _76;
  goto <bb 75>;
;;    succ:       75

;;   basic block 43, loop depth 1
;;    pred:       39
  _77 = strcmp (token_15, "gain");
  if (_77 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44
;;                47

;;   basic block 44, loop depth 1
;;    pred:       43
  fgets (&in_line, 255, in_file_9);
  _78 = ferror (in_file_9);
  retval.10_79 = _78 != 0;
  if (retval.10_79 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45
;;                46

;;   basic block 45, loop depth 0
;;    pred:       44
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 46, loop depth 1
;;    pred:       44
  token_80 = strtok (&in_line, " \n");
  token_81 = strtok (0B, " \n");
  _82 = strtod (token_81, 0B);
  _83 = (float) _82;
  procpar_info_23(D)->gain = _83;
  goto <bb 75>;
;;    succ:       75

;;   basic block 47, loop depth 1
;;    pred:       43
  _84 = strcmp (token_15, "pos1");
  if (_84 == 0)
    goto <bb 48>;
  else
    goto <bb 51>;
;;    succ:       48
;;                51

;;   basic block 48, loop depth 1
;;    pred:       47
  fgets (&in_line, 255, in_file_9);
  _85 = ferror (in_file_9);
  retval.11_86 = _85 != 0;
  if (retval.11_86 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 50, loop depth 1
;;    pred:       48
  token_87 = strtok (&in_line, " \n");
  token_88 = strtok (0B, " \n");
  _89 = strtod (token_88, 0B);
  _90 = (float) _89;
  procpar_info_23(D)->pos1 = _90;
  goto <bb 75>;
;;    succ:       75

;;   basic block 51, loop depth 1
;;    pred:       47
  _91 = strcmp (token_15, "pos2");
  if (_91 == 0)
    goto <bb 52>;
  else
    goto <bb 55>;
;;    succ:       52
;;                55

;;   basic block 52, loop depth 1
;;    pred:       51
  fgets (&in_line, 255, in_file_9);
  _92 = ferror (in_file_9);
  retval.12_93 = _92 != 0;
  if (retval.12_93 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53
;;                54

;;   basic block 53, loop depth 0
;;    pred:       52
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 54, loop depth 1
;;    pred:       52
  token_94 = strtok (&in_line, " \n");
  token_95 = strtok (0B, " \n");
  _96 = strtod (token_95, 0B);
  _97 = (float) _96;
  procpar_info_23(D)->pos2 = _97;
  goto <bb 75>;
;;    succ:       75

;;   basic block 55, loop depth 1
;;    pred:       51
  _98 = strcmp (token_15, "pos3");
  if (_98 == 0)
    goto <bb 56>;
  else
    goto <bb 59>;
;;    succ:       56
;;                59

;;   basic block 56, loop depth 1
;;    pred:       55
  fgets (&in_line, 255, in_file_9);
  _99 = ferror (in_file_9);
  retval.13_100 = _99 != 0;
  if (retval.13_100 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57
;;                58

;;   basic block 57, loop depth 0
;;    pred:       56
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 58, loop depth 1
;;    pred:       56
  token_101 = strtok (&in_line, " \n");
  token_102 = strtok (0B, " \n");
  _103 = strtod (token_102, 0B);
  _104 = (float) _103;
  procpar_info_23(D)->pos3 = _104;
  goto <bb 75>;
;;    succ:       75

;;   basic block 59, loop depth 1
;;    pred:       55
  _105 = strcmp (token_15, "vox1");
  if (_105 == 0)
    goto <bb 60>;
  else
    goto <bb 63>;
;;    succ:       60
;;                63

;;   basic block 60, loop depth 1
;;    pred:       59
  fgets (&in_line, 255, in_file_9);
  _106 = ferror (in_file_9);
  retval.14_107 = _106 != 0;
  if (retval.14_107 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61
;;                62

;;   basic block 61, loop depth 0
;;    pred:       60
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 62, loop depth 1
;;    pred:       60
  token_108 = strtok (&in_line, " \n");
  token_109 = strtok (0B, " \n");
  _110 = strtod (token_109, 0B);
  _111 = (float) _110;
  procpar_info_23(D)->vox1 = _111;
  goto <bb 75>;
;;    succ:       75

;;   basic block 63, loop depth 1
;;    pred:       59
  _112 = strcmp (token_15, "vox2");
  if (_112 == 0)
    goto <bb 64>;
  else
    goto <bb 67>;
;;    succ:       64
;;                67

;;   basic block 64, loop depth 1
;;    pred:       63
  fgets (&in_line, 255, in_file_9);
  _113 = ferror (in_file_9);
  retval.15_114 = _113 != 0;
  if (retval.15_114 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65
;;                66

;;   basic block 65, loop depth 0
;;    pred:       64
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 66, loop depth 1
;;    pred:       64
  token_115 = strtok (&in_line, " \n");
  token_116 = strtok (0B, " \n");
  _117 = strtod (token_116, 0B);
  _118 = (float) _117;
  procpar_info_23(D)->vox2 = _118;
  goto <bb 75>;
;;    succ:       75

;;   basic block 67, loop depth 1
;;    pred:       63
  _119 = strcmp (token_15, "vox3");
  if (_119 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;
;;    succ:       68
;;                71

;;   basic block 68, loop depth 1
;;    pred:       67
  fgets (&in_line, 255, in_file_9);
  _120 = ferror (in_file_9);
  retval.16_121 = _120 != 0;
  if (retval.16_121 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69
;;                70

;;   basic block 69, loop depth 0
;;    pred:       68
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 70, loop depth 1
;;    pred:       68
  token_122 = strtok (&in_line, " \n");
  token_123 = strtok (0B, " \n");
  _124 = strtod (token_123, 0B);
  _125 = (float) _124;
  procpar_info_23(D)->vox3 = _125;
  goto <bb 75>;
;;    succ:       75

;;   basic block 71, loop depth 1
;;    pred:       67
  _126 = strcmp (token_15, "vtheta");
  if (_126 == 0)
    goto <bb 72>;
  else
    goto <bb 75>;
;;    succ:       72
;;                75

;;   basic block 72, loop depth 1
;;    pred:       71
  fgets (&in_line, 255, in_file_9);
  _127 = ferror (in_file_9);
  retval.17_128 = _127 != 0;
  if (retval.17_128 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;
;;    succ:       73
;;                74

;;   basic block 73, loop depth 0
;;    pred:       72
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 74, loop depth 1
;;    pred:       72
  token_129 = strtok (&in_line, " \n");
  token_130 = strtok (0B, " \n");
  _131 = strtod (token_130, 0B);
  _132 = (float) _131;
  procpar_info_23(D)->vtheta = _132;
;;    succ:       75

;;   basic block 75, loop depth 1
;;    pred:       10
;;                14
;;                18
;;                22
;;                26
;;                30
;;                34
;;                38
;;                42
;;                46
;;                50
;;                54
;;                58
;;                62
;;                66
;;                70
;;                71
;;                74
  fgets (&in_line, 5000, in_file_9);
;;    succ:       76

;;   basic block 76, loop depth 1
;;    pred:       75
  _133 = ferror (in_file_9);
  retval.18_134 = _133 != 0;
  if (retval.18_134 != 0)
    goto <bb 77>;
  else
    goto <bb 78>;
;;    succ:       77
;;                78

;;   basic block 77, loop depth 0
;;    pred:       76
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 78, loop depth 1
;;    pred:       6
;;                76
  # i_1 = PHI <i_6(6), i_14(76)>
  _12 = feof (in_file_9);
  retval.19_13 = _12 == 0;
  if (retval.19_13 != 0)
    goto <bb 7>;
  else
    goto <bb 79>;
;;    succ:       7
;;                79

;;   basic block 79, loop depth 0
;;    pred:       78
  if (in_file_9 != 0B)
    goto <bb 80>;
  else
    goto <bb 81>;
;;    succ:       80
;;                81

;;   basic block 80, loop depth 0
;;    pred:       79
  __builtin_puts (&"okay"[0]);
  stdout.20_135 = stdout;
  fflush (stdout.20_135);
  fclose (in_file_9);
;;    succ:       81

;;   basic block 81, loop depth 0
;;    pred:       79
;;                80
  _136 = 2;
  in_line ={v} {CLOBBER};
;;    succ:       82

;;   basic block 82, loop depth 0
;;    pred:       81
<L98>:
  return _136;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (in_file_2 - 2 )
Partition 3 (token_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (token_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (procpar_string_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (in_file_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (retval.0_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (retval.19_13 - 13 )
Partition 14 (i_14 - 14 )
Partition 15 (token_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (retval.1_18 - 18 )
Partition 19 (token_19 - 19 )
Partition 20 (token_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (procpar_info_23(D) - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (retval.2_26 - 26 )
Partition 27 (token_27 - 27 )
Partition 28 (token_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (retval.3_32 - 32 )
Partition 33 (token_33 - 33 )
Partition 34 (token_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (retval.4_39 - 39 )
Partition 40 (token_40 - 40 )
Partition 41 (token_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (retval.5_46 - 46 )
Partition 47 (token_47 - 47 )
Partition 48 (token_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (retval.6_53 - 53 )
Partition 54 (token_54 - 54 )
Partition 55 (token_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (retval.7_59 - 59 )
Partition 60 (token_60 - 60 )
Partition 61 (token_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (retval.8_65 - 65 )
Partition 66 (token_66 - 66 )
Partition 67 (token_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (retval.9_72 - 72 )
Partition 73 (token_73 - 73 )
Partition 74 (token_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (retval.10_79 - 79 )
Partition 80 (token_80 - 80 )
Partition 81 (token_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (retval.11_86 - 86 )
Partition 87 (token_87 - 87 )
Partition 88 (token_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (retval.12_93 - 93 )
Partition 94 (token_94 - 94 )
Partition 95 (token_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (retval.13_100 - 100 )
Partition 101 (token_101 - 101 )
Partition 102 (token_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (retval.14_107 - 107 )
Partition 108 (token_108 - 108 )
Partition 109 (token_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (retval.15_114 - 114 )
Partition 115 (token_115 - 115 )
Partition 116 (token_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (retval.16_121 - 121 )
Partition 122 (token_122 - 122 )
Partition 123 (token_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (retval.17_128 - 128 )
Partition 129 (token_129 - 129 )
Partition 130 (token_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (retval.18_134 - 134 )
Partition 135 (stdout.20_135 - 135 )
Partition 136 (_136 - 136 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (in_file_2 - 2 )
Partition 2 (token_3 - 3 )
Partition 3 (token_5 - 5 )
Partition 4 (i_6 - 6 )
Partition 5 (procpar_string_7(D) - 7 )
Partition 6 (in_file_9 - 9 )
Partition 7 (i_14 - 14 )
Partition 8 (token_15 - 15 )
Partition 9 (token_19 - 19 )
Partition 10 (token_20 - 20 )
Partition 11 (procpar_info_23(D) - 23 )
Partition 12 (token_27 - 27 )
Partition 13 (token_28 - 28 )
Partition 14 (token_33 - 33 )
Partition 15 (token_34 - 34 )
Partition 16 (token_40 - 40 )
Partition 17 (token_41 - 41 )
Partition 18 (token_47 - 47 )
Partition 19 (token_48 - 48 )
Partition 20 (token_54 - 54 )
Partition 21 (token_55 - 55 )
Partition 22 (token_60 - 60 )
Partition 23 (token_61 - 61 )
Partition 24 (token_66 - 66 )
Partition 25 (token_67 - 67 )
Partition 26 (token_73 - 73 )
Partition 27 (token_74 - 74 )
Partition 28 (token_80 - 80 )
Partition 29 (token_81 - 81 )
Partition 30 (token_87 - 87 )
Partition 31 (token_88 - 88 )
Partition 32 (token_94 - 94 )
Partition 33 (token_95 - 95 )
Partition 34 (token_101 - 101 )
Partition 35 (token_102 - 102 )
Partition 36 (token_108 - 108 )
Partition 37 (token_109 - 109 )
Partition 38 (token_115 - 115 )
Partition 39 (token_116 - 116 )
Partition 40 (token_122 - 122 )
Partition 41 (token_123 - 123 )
Partition 42 (token_129 - 129 )
Partition 43 (token_130 - 130 )


Live on entry to BB2 : procpar_string_7(D)  procpar_info_23(D)  

Live on entry to BB3 : 

Live on entry to BB4 : i_6  in_file_9  procpar_info_23(D)  

Live on entry to BB5 : 

Live on entry to BB6 : i_6  in_file_9  procpar_info_23(D)  

Live on entry to BB7 : i_1  in_file_9  procpar_info_23(D)  

Live on entry to BB8 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB9 : 

Live on entry to BB10 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB11 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB12 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB13 : 

Live on entry to BB14 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB15 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB16 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB17 : 

Live on entry to BB18 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB19 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB20 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB21 : 

Live on entry to BB22 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB23 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB24 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB25 : 

Live on entry to BB26 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB27 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB28 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB29 : 

Live on entry to BB30 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB31 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB32 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB33 : 

Live on entry to BB34 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB35 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB36 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB37 : 

Live on entry to BB38 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB39 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB40 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB41 : 

Live on entry to BB42 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB43 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB44 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB45 : 

Live on entry to BB46 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB47 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB48 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB49 : 

Live on entry to BB50 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB51 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB52 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB53 : 

Live on entry to BB54 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB55 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB56 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB57 : 

Live on entry to BB58 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB59 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB60 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB61 : 

Live on entry to BB62 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB63 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB64 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB65 : 

Live on entry to BB66 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB67 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB68 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB69 : 

Live on entry to BB70 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB71 : in_file_9  i_14  token_15  procpar_info_23(D)  

Live on entry to BB72 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB73 : 

Live on entry to BB74 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB75 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB76 : in_file_9  i_14  procpar_info_23(D)  

Live on entry to BB77 : 

Live on entry to BB78 : in_file_9  procpar_info_23(D)  

Live on entry to BB79 : in_file_9  

Live on entry to BB80 : in_file_9  

Live on entry to BB81 : 

Live on entry to BB82 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_14
(2147483646) in_file_2 <-> in_file_9
(2147483646) token_3 <-> token_5
(2147483646) token_3 <-> token_15
(2147483646) token_3 <-> token_19
(2147483646) token_3 <-> token_20
(2147483646) token_3 <-> token_27
(2147483646) token_3 <-> token_28
(2147483646) token_3 <-> token_33
(2147483646) token_3 <-> token_34
(2147483646) token_3 <-> token_40
(2147483646) token_3 <-> token_41
(2147483646) token_3 <-> token_47
(2147483646) token_3 <-> token_48
(2147483646) token_3 <-> token_54
(2147483646) token_3 <-> token_55
(2147483646) token_3 <-> token_60
(2147483646) token_3 <-> token_61
(2147483646) token_3 <-> token_66
(2147483646) token_3 <-> token_67
(2147483646) token_3 <-> token_73
(2147483646) token_3 <-> token_74
(2147483646) token_3 <-> token_80
(2147483646) token_3 <-> token_81
(2147483646) token_3 <-> token_87
(2147483646) token_3 <-> token_88
(2147483646) token_3 <-> token_94
(2147483646) token_3 <-> token_95
(2147483646) token_3 <-> token_101
(2147483646) token_3 <-> token_102
(2147483646) token_3 <-> token_108
(2147483646) token_3 <-> token_109
(2147483646) token_3 <-> token_115
(2147483646) token_3 <-> token_116
(2147483646) token_3 <-> token_122
(2147483646) token_3 <-> token_123
(2147483646) token_3 <-> token_129
(2147483646) token_3 <-> token_130

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (in_file_2 - 2 )
Partition 2 (token_3 - 3 )
Partition 3 (token_5 - 5 )
Partition 4 (i_6 - 6 )
Partition 5 (procpar_string_7(D) - 7 )
Partition 6 (in_file_9 - 9 )
Partition 7 (i_14 - 14 )
Partition 8 (token_15 - 15 )
Partition 9 (token_19 - 19 )
Partition 10 (token_20 - 20 )
Partition 11 (procpar_info_23(D) - 23 )
Partition 12 (token_27 - 27 )
Partition 13 (token_28 - 28 )
Partition 14 (token_33 - 33 )
Partition 15 (token_34 - 34 )
Partition 16 (token_40 - 40 )
Partition 17 (token_41 - 41 )
Partition 18 (token_47 - 47 )
Partition 19 (token_48 - 48 )
Partition 20 (token_54 - 54 )
Partition 21 (token_55 - 55 )
Partition 22 (token_60 - 60 )
Partition 23 (token_61 - 61 )
Partition 24 (token_66 - 66 )
Partition 25 (token_67 - 67 )
Partition 26 (token_73 - 73 )
Partition 27 (token_74 - 74 )
Partition 28 (token_80 - 80 )
Partition 29 (token_81 - 81 )
Partition 30 (token_87 - 87 )
Partition 31 (token_88 - 88 )
Partition 32 (token_94 - 94 )
Partition 33 (token_95 - 95 )
Partition 34 (token_101 - 101 )
Partition 35 (token_102 - 102 )
Partition 36 (token_108 - 108 )
Partition 37 (token_109 - 109 )
Partition 38 (token_115 - 115 )
Partition 39 (token_116 - 116 )
Partition 40 (token_122 - 122 )
Partition 41 (token_123 - 123 )
Partition 42 (token_129 - 129 )
Partition 43 (token_130 - 130 )

Coalesce list: (1)i_1 & (6)i_6 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (14)i_14 [map: 0, 7] : Success -> 0
Coalesce list: (2)in_file_2 & (9)in_file_9 [map: 1, 6] : Success -> 1
Coalesce list: (3)token_3 & (5)token_5 [map: 2, 3] : Success -> 2
Coalesce list: (3)token_3 & (15)token_15 [map: 2, 8] : Success -> 2
Coalesce list: (3)token_3 & (19)token_19 [map: 2, 9] : Success -> 2
Coalesce list: (3)token_3 & (20)token_20 [map: 2, 10] : Success -> 2
Coalesce list: (3)token_3 & (27)token_27 [map: 2, 12] : Success -> 2
Coalesce list: (3)token_3 & (28)token_28 [map: 2, 13] : Success -> 2
Coalesce list: (3)token_3 & (33)token_33 [map: 2, 14] : Success -> 2
Coalesce list: (3)token_3 & (34)token_34 [map: 2, 15] : Success -> 2
Coalesce list: (3)token_3 & (40)token_40 [map: 2, 16] : Success -> 2
Coalesce list: (3)token_3 & (41)token_41 [map: 2, 17] : Success -> 2
Coalesce list: (3)token_3 & (47)token_47 [map: 2, 18] : Success -> 2
Coalesce list: (3)token_3 & (48)token_48 [map: 2, 19] : Success -> 2
Coalesce list: (3)token_3 & (54)token_54 [map: 2, 20] : Success -> 2
Coalesce list: (3)token_3 & (55)token_55 [map: 2, 21] : Success -> 2
Coalesce list: (3)token_3 & (60)token_60 [map: 2, 22] : Success -> 2
Coalesce list: (3)token_3 & (61)token_61 [map: 2, 23] : Success -> 2
Coalesce list: (3)token_3 & (66)token_66 [map: 2, 24] : Success -> 2
Coalesce list: (3)token_3 & (67)token_67 [map: 2, 25] : Success -> 2
Coalesce list: (3)token_3 & (73)token_73 [map: 2, 26] : Success -> 2
Coalesce list: (3)token_3 & (74)token_74 [map: 2, 27] : Success -> 2
Coalesce list: (3)token_3 & (80)token_80 [map: 2, 28] : Success -> 2
Coalesce list: (3)token_3 & (81)token_81 [map: 2, 29] : Success -> 2
Coalesce list: (3)token_3 & (87)token_87 [map: 2, 30] : Success -> 2
Coalesce list: (3)token_3 & (88)token_88 [map: 2, 31] : Success -> 2
Coalesce list: (3)token_3 & (94)token_94 [map: 2, 32] : Success -> 2
Coalesce list: (3)token_3 & (95)token_95 [map: 2, 33] : Success -> 2
Coalesce list: (3)token_3 & (101)token_101 [map: 2, 34] : Success -> 2
Coalesce list: (3)token_3 & (102)token_102 [map: 2, 35] : Success -> 2
Coalesce list: (3)token_3 & (108)token_108 [map: 2, 36] : Success -> 2
Coalesce list: (3)token_3 & (109)token_109 [map: 2, 37] : Success -> 2
Coalesce list: (3)token_3 & (115)token_115 [map: 2, 38] : Success -> 2
Coalesce list: (3)token_3 & (116)token_116 [map: 2, 39] : Success -> 2
Coalesce list: (3)token_3 & (122)token_122 [map: 2, 40] : Success -> 2
Coalesce list: (3)token_3 & (123)token_123 [map: 2, 41] : Success -> 2
Coalesce list: (3)token_3 & (129)token_129 [map: 2, 42] : Success -> 2
Coalesce list: (3)token_3 & (130)token_130 [map: 2, 43] : Success -> 2
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 6 14 )
Partition 1 (in_file_2 - 2 9 )
Partition 2 (token_3 - 3 5 15 19 20 27 28 33 34 40 41 47 48 54 55 60 61 66 67 73 74 80 81 87 88 94 95 101 102 108 109 115 116 122 123 129 130 )
Partition 3 (_4 - 4 )
Partition 4 (procpar_string_7(D) - 7 )
Partition 5 (_8 - 8 )
Partition 6 (_10 - 10 )
Partition 7 (retval.0_11 - 11 )
Partition 8 (_12 - 12 )
Partition 9 (retval.19_13 - 13 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (retval.1_18 - 18 )
Partition 13 (_21 - 21 )
Partition 14 (_22 - 22 )
Partition 15 (procpar_info_23(D) - 23 )
Partition 16 (_24 - 24 )
Partition 17 (_25 - 25 )
Partition 18 (retval.2_26 - 26 )
Partition 19 (_29 - 29 )
Partition 20 (_30 - 30 )
Partition 21 (_31 - 31 )
Partition 22 (retval.3_32 - 32 )
Partition 23 (_35 - 35 )
Partition 24 (_36 - 36 )
Partition 25 (_37 - 37 )
Partition 26 (_38 - 38 )
Partition 27 (retval.4_39 - 39 )
Partition 28 (_42 - 42 )
Partition 29 (_43 - 43 )
Partition 30 (_44 - 44 )
Partition 31 (_45 - 45 )
Partition 32 (retval.5_46 - 46 )
Partition 33 (_49 - 49 )
Partition 34 (_50 - 50 )
Partition 35 (_51 - 51 )
Partition 36 (_52 - 52 )
Partition 37 (retval.6_53 - 53 )
Partition 38 (_56 - 56 )
Partition 39 (_57 - 57 )
Partition 40 (_58 - 58 )
Partition 41 (retval.7_59 - 59 )
Partition 42 (_62 - 62 )
Partition 43 (_63 - 63 )
Partition 44 (_64 - 64 )
Partition 45 (retval.8_65 - 65 )
Partition 46 (_68 - 68 )
Partition 47 (_69 - 69 )
Partition 48 (_70 - 70 )
Partition 49 (_71 - 71 )
Partition 50 (retval.9_72 - 72 )
Partition 51 (_75 - 75 )
Partition 52 (_76 - 76 )
Partition 53 (_77 - 77 )
Partition 54 (_78 - 78 )
Partition 55 (retval.10_79 - 79 )
Partition 56 (_82 - 82 )
Partition 57 (_83 - 83 )
Partition 58 (_84 - 84 )
Partition 59 (_85 - 85 )
Partition 60 (retval.11_86 - 86 )
Partition 61 (_89 - 89 )
Partition 62 (_90 - 90 )
Partition 63 (_91 - 91 )
Partition 64 (_92 - 92 )
Partition 65 (retval.12_93 - 93 )
Partition 66 (_96 - 96 )
Partition 67 (_97 - 97 )
Partition 68 (_98 - 98 )
Partition 69 (_99 - 99 )
Partition 70 (retval.13_100 - 100 )
Partition 71 (_103 - 103 )
Partition 72 (_104 - 104 )
Partition 73 (_105 - 105 )
Partition 74 (_106 - 106 )
Partition 75 (retval.14_107 - 107 )
Partition 76 (_110 - 110 )
Partition 77 (_111 - 111 )
Partition 78 (_112 - 112 )
Partition 79 (_113 - 113 )
Partition 80 (retval.15_114 - 114 )
Partition 81 (_117 - 117 )
Partition 82 (_118 - 118 )
Partition 83 (_119 - 119 )
Partition 84 (_120 - 120 )
Partition 85 (retval.16_121 - 121 )
Partition 86 (_124 - 124 )
Partition 87 (_125 - 125 )
Partition 88 (_126 - 126 )
Partition 89 (_127 - 127 )
Partition 90 (retval.17_128 - 128 )
Partition 91 (_131 - 131 )
Partition 92 (_132 - 132 )
Partition 93 (_133 - 133 )
Partition 94 (retval.18_134 - 134 )
Partition 95 (stdout.20_135 - 135 )
Partition 96 (_136 - 136 )

int read_procpar(Procpar_info*, char*) (struct Procpar_info * procpar_info, char * procpar_string)
{
  struct FILE * D.5594;
  int i;
  char * token;
  char in_line[50000];
  struct FILE * in_file;
  int D.5592;
  struct _IO_FILE * stdout.20;
  int D.5587;
  bool retval.19;
  int D.5583;
  bool retval.18;
  float D.5580;
  double D.5579;
  int D.5576;
  bool retval.17;
  int D.5572;
  float D.5570;
  double D.5569;
  int D.5566;
  bool retval.16;
  int D.5562;
  float D.5560;
  double D.5559;
  int D.5556;
  bool retval.15;
  int D.5552;
  float D.5550;
  double D.5549;
  int D.5546;
  bool retval.14;
  int D.5542;
  float D.5540;
  double D.5539;
  int D.5536;
  bool retval.13;
  int D.5532;
  float D.5530;
  double D.5529;
  int D.5526;
  bool retval.12;
  int D.5522;
  float D.5520;
  double D.5519;
  int D.5516;
  bool retval.11;
  int D.5512;
  float D.5510;
  double D.5509;
  int D.5506;
  bool retval.10;
  int D.5502;
  float D.5500;
  double D.5499;
  int D.5496;
  bool retval.9;
  int D.5492;
  float D.5490;
  double D.5489;
  int D.5486;
  bool retval.8;
  int D.5482;
  double D.5480;
  int D.5477;
  bool retval.7;
  int D.5473;
  double D.5471;
  int D.5468;
  bool retval.6;
  int D.5464;
  int D.5462;
  long int D.5461;
  int D.5458;
  bool retval.5;
  int D.5454;
  int D.5452;
  long int D.5451;
  int D.5448;
  bool retval.4;
  int D.5444;
  float D.5442;
  double D.5441;
  int D.5438;
  bool retval.3;
  int D.5434;
  char[30] * D.5432;
  int D.5429;
  bool retval.2;
  int D.5425;
  float D.5423;
  double D.5422;
  int D.5419;
  bool retval.1;
  int D.5415;
  int D.5412;
  bool retval.0;
  long unsigned int D.5408;
  long unsigned int _4;
  struct FILE * _8;
  int _10;
  bool retval.0_11;
  int _12;
  bool retval.19_13;
  int _16;
  int _17;
  bool retval.1_18;
  double _21;
  float _22;
  int _24;
  int _25;
  bool retval.2_26;
  char[30] * _29;
  int _30;
  int _31;
  bool retval.3_32;
  double _35;
  float _36;
  int _37;
  int _38;
  bool retval.4_39;
  long int _42;
  int _43;
  int _44;
  int _45;
  bool retval.5_46;
  long int _49;
  int _50;
  int _51;
  int _52;
  bool retval.6_53;
  double _56;
  int _57;
  int _58;
  bool retval.7_59;
  double _62;
  int _63;
  int _64;
  bool retval.8_65;
  double _68;
  float _69;
  int _70;
  int _71;
  bool retval.9_72;
  double _75;
  float _76;
  int _77;
  int _78;
  bool retval.10_79;
  double _82;
  float _83;
  int _84;
  int _85;
  bool retval.11_86;
  double _89;
  float _90;
  int _91;
  int _92;
  bool retval.12_93;
  double _96;
  float _97;
  int _98;
  int _99;
  bool retval.13_100;
  double _103;
  float _104;
  int _105;
  int _106;
  bool retval.14_107;
  double _110;
  float _111;
  int _112;
  int _113;
  bool retval.15_114;
  double _117;
  float _118;
  int _119;
  int _120;
  bool retval.16_121;
  double _124;
  float _125;
  int _126;
  int _127;
  bool retval.17_128;
  double _131;
  float _132;
  int _133;
  bool retval.18_134;
  struct _IO_FILE * stdout.20_135;
  int _136;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  in_file_2 = 0B;
  token_3 = 0B;
  _4 = 5000;
  token_5 = (char *) _4;
  i_6 = 0;
  _8 = fopen (procpar_string_7(D), "rb");
  in_file_9 = _8;
  if (in_file_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin_puts (&"Can\'t open procpar file."[0]);
  exit (4);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  fgets (&in_line, 255, in_file_9);
  _10 = ferror (in_file_9);
  retval.0_11 = _10 != 0;
  if (retval.0_11 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  goto <bb 78>;
;;    succ:       78

;;   basic block 7, loop depth 1
;;    pred:       78
  i_14 = i_1 + 1;
  token_15 = strtok (&in_line, " \t\n");
  _16 = strcmp (token_15, "at");
  if (_16 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8
;;                11

;;   basic block 8, loop depth 1
;;    pred:       7
  fgets (&in_line, 5000, in_file_9);
  _17 = ferror (in_file_9);
  retval.1_18 = _17 != 0;
  if (retval.1_18 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       8
  token_19 = strtok (&in_line, " \n");
  token_20 = strtok (0B, " \n");
  _21 = strtod (token_20, 0B);
  _22 = (float) _21;
  procpar_info_23(D)->acquision_time = _22;
  goto <bb 75>;
;;    succ:       75

;;   basic block 11, loop depth 1
;;    pred:       7
  _24 = strcmp (token_15, "date");
  if (_24 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12
;;                15

;;   basic block 12, loop depth 1
;;    pred:       11
  fgets (&in_line, 255, in_file_9);
  _25 = ferror (in_file_9);
  retval.2_26 = _25 != 0;
  if (retval.2_26 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 14, loop depth 1
;;    pred:       12
  token_27 = strtok (&in_line, " \"");
  token_28 = strtok (0B, "\"");
  _29 = &procpar_info_23(D)->date;
  strcpy (_29, token_28);
  goto <bb 75>;
;;    succ:       75

;;   basic block 15, loop depth 1
;;    pred:       11
  _30 = strcmp (token_15, "filter");
  if (_30 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16
;;                19

;;   basic block 16, loop depth 1
;;    pred:       15
  fgets (&in_line, 255, in_file_9);
  _31 = ferror (in_file_9);
  retval.3_32 = _31 != 0;
  if (retval.3_32 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 18, loop depth 1
;;    pred:       16
  token_33 = strtok (&in_line, " \n");
  token_34 = strtok (0B, " \n");
  _35 = strtod (token_34, 0B);
  _36 = (float) _35;
  procpar_info_23(D)->filter = _36;
  goto <bb 75>;
;;    succ:       75

;;   basic block 19, loop depth 1
;;    pred:       15
  _37 = strcmp (token_15, "nt");
  if (_37 == 0)
    goto <bb 20>;
  else
    goto <bb 23>;
;;    succ:       20
;;                23

;;   basic block 20, loop depth 1
;;    pred:       19
  fgets (&in_line, 255, in_file_9);
  _38 = ferror (in_file_9);
  retval.4_39 = _38 != 0;
  if (retval.4_39 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21
;;                22

;;   basic block 21, loop depth 0
;;    pred:       20
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 22, loop depth 1
;;    pred:       20
  token_40 = strtok (&in_line, " \n");
  token_41 = strtok (0B, " \n");
  _42 = strtol (token_41, 0B, 10);
  _43 = (int) _42;
  procpar_info_23(D)->num_transients = _43;
  goto <bb 75>;
;;    succ:       75

;;   basic block 23, loop depth 1
;;    pred:       19
  _44 = strcmp (token_15, "np");
  if (_44 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24
;;                27

;;   basic block 24, loop depth 1
;;    pred:       23
  fgets (&in_line, 255, in_file_9);
  _45 = ferror (in_file_9);
  retval.5_46 = _45 != 0;
  if (retval.5_46 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 26, loop depth 1
;;    pred:       24
  token_47 = strtok (&in_line, " \n");
  token_48 = strtok (0B, " \n");
  _49 = strtol (token_48, 0B, 10);
  _50 = (int) _49;
  procpar_info_23(D)->num_points = _50;
  goto <bb 75>;
;;    succ:       75

;;   basic block 27, loop depth 1
;;    pred:       23
  _51 = strcmp (token_15, "sfrq");
  if (_51 == 0)
    goto <bb 28>;
  else
    goto <bb 31>;
;;    succ:       28
;;                31

;;   basic block 28, loop depth 1
;;    pred:       27
  fgets (&in_line, 255, in_file_9);
  _52 = ferror (in_file_9);
  retval.6_53 = _52 != 0;
  if (retval.6_53 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       28
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 30, loop depth 1
;;    pred:       28
  token_54 = strtok (&in_line, " \n");
  token_55 = strtok (0B, " \n");
  _56 = strtod (token_55, 0B);
  procpar_info_23(D)->main_frequency = _56;
  goto <bb 75>;
;;    succ:       75

;;   basic block 31, loop depth 1
;;    pred:       27
  _57 = strcmp (token_15, "tof");
  if (_57 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32
;;                35

;;   basic block 32, loop depth 1
;;    pred:       31
  fgets (&in_line, 255, in_file_9);
  _58 = ferror (in_file_9);
  retval.7_59 = _58 != 0;
  if (retval.7_59 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       32
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 34, loop depth 1
;;    pred:       32
  token_60 = strtok (&in_line, " \n");
  token_61 = strtok (0B, " \n");
  _62 = strtod (token_61, 0B);
  procpar_info_23(D)->offset_frequency = _62;
  goto <bb 75>;
;;    succ:       75

;;   basic block 35, loop depth 1
;;    pred:       31
  _63 = strcmp (token_15, "te");
  if (_63 == 0)
    goto <bb 36>;
  else
    goto <bb 39>;
;;    succ:       36
;;                39

;;   basic block 36, loop depth 1
;;    pred:       35
  fgets (&in_line, 255, in_file_9);
  _64 = ferror (in_file_9);
  retval.8_65 = _64 != 0;
  if (retval.8_65 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37
;;                38

;;   basic block 37, loop depth 0
;;    pred:       36
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 38, loop depth 1
;;    pred:       36
  token_66 = strtok (&in_line, " \n");
  token_67 = strtok (0B, " \n");
  _68 = strtod (token_67, 0B);
  _69 = (float) _68;
  procpar_info_23(D)->te = _69;
  goto <bb 75>;
;;    succ:       75

;;   basic block 39, loop depth 1
;;    pred:       35
  _70 = strcmp (token_15, "tm");
  if (_70 == 0)
    goto <bb 40>;
  else
    goto <bb 43>;
;;    succ:       40
;;                43

;;   basic block 40, loop depth 1
;;    pred:       39
  fgets (&in_line, 255, in_file_9);
  _71 = ferror (in_file_9);
  retval.9_72 = _71 != 0;
  if (retval.9_72 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 42, loop depth 1
;;    pred:       40
  token_73 = strtok (&in_line, " \n");
  token_74 = strtok (0B, " \n");
  _75 = strtod (token_74, 0B);
  _76 = (float) _75;
  procpar_info_23(D)->tm = _76;
  goto <bb 75>;
;;    succ:       75

;;   basic block 43, loop depth 1
;;    pred:       39
  _77 = strcmp (token_15, "gain");
  if (_77 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44
;;                47

;;   basic block 44, loop depth 1
;;    pred:       43
  fgets (&in_line, 255, in_file_9);
  _78 = ferror (in_file_9);
  retval.10_79 = _78 != 0;
  if (retval.10_79 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45
;;                46

;;   basic block 45, loop depth 0
;;    pred:       44
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 46, loop depth 1
;;    pred:       44
  token_80 = strtok (&in_line, " \n");
  token_81 = strtok (0B, " \n");
  _82 = strtod (token_81, 0B);
  _83 = (float) _82;
  procpar_info_23(D)->gain = _83;
  goto <bb 75>;
;;    succ:       75

;;   basic block 47, loop depth 1
;;    pred:       43
  _84 = strcmp (token_15, "pos1");
  if (_84 == 0)
    goto <bb 48>;
  else
    goto <bb 51>;
;;    succ:       48
;;                51

;;   basic block 48, loop depth 1
;;    pred:       47
  fgets (&in_line, 255, in_file_9);
  _85 = ferror (in_file_9);
  retval.11_86 = _85 != 0;
  if (retval.11_86 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 50, loop depth 1
;;    pred:       48
  token_87 = strtok (&in_line, " \n");
  token_88 = strtok (0B, " \n");
  _89 = strtod (token_88, 0B);
  _90 = (float) _89;
  procpar_info_23(D)->pos1 = _90;
  goto <bb 75>;
;;    succ:       75

;;   basic block 51, loop depth 1
;;    pred:       47
  _91 = strcmp (token_15, "pos2");
  if (_91 == 0)
    goto <bb 52>;
  else
    goto <bb 55>;
;;    succ:       52
;;                55

;;   basic block 52, loop depth 1
;;    pred:       51
  fgets (&in_line, 255, in_file_9);
  _92 = ferror (in_file_9);
  retval.12_93 = _92 != 0;
  if (retval.12_93 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53
;;                54

;;   basic block 53, loop depth 0
;;    pred:       52
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 54, loop depth 1
;;    pred:       52
  token_94 = strtok (&in_line, " \n");
  token_95 = strtok (0B, " \n");
  _96 = strtod (token_95, 0B);
  _97 = (float) _96;
  procpar_info_23(D)->pos2 = _97;
  goto <bb 75>;
;;    succ:       75

;;   basic block 55, loop depth 1
;;    pred:       51
  _98 = strcmp (token_15, "pos3");
  if (_98 == 0)
    goto <bb 56>;
  else
    goto <bb 59>;
;;    succ:       56
;;                59

;;   basic block 56, loop depth 1
;;    pred:       55
  fgets (&in_line, 255, in_file_9);
  _99 = ferror (in_file_9);
  retval.13_100 = _99 != 0;
  if (retval.13_100 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57
;;                58

;;   basic block 57, loop depth 0
;;    pred:       56
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 58, loop depth 1
;;    pred:       56
  token_101 = strtok (&in_line, " \n");
  token_102 = strtok (0B, " \n");
  _103 = strtod (token_102, 0B);
  _104 = (float) _103;
  procpar_info_23(D)->pos3 = _104;
  goto <bb 75>;
;;    succ:       75

;;   basic block 59, loop depth 1
;;    pred:       55
  _105 = strcmp (token_15, "vox1");
  if (_105 == 0)
    goto <bb 60>;
  else
    goto <bb 63>;
;;    succ:       60
;;                63

;;   basic block 60, loop depth 1
;;    pred:       59
  fgets (&in_line, 255, in_file_9);
  _106 = ferror (in_file_9);
  retval.14_107 = _106 != 0;
  if (retval.14_107 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61
;;                62

;;   basic block 61, loop depth 0
;;    pred:       60
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 62, loop depth 1
;;    pred:       60
  token_108 = strtok (&in_line, " \n");
  token_109 = strtok (0B, " \n");
  _110 = strtod (token_109, 0B);
  _111 = (float) _110;
  procpar_info_23(D)->vox1 = _111;
  goto <bb 75>;
;;    succ:       75

;;   basic block 63, loop depth 1
;;    pred:       59
  _112 = strcmp (token_15, "vox2");
  if (_112 == 0)
    goto <bb 64>;
  else
    goto <bb 67>;
;;    succ:       64
;;                67

;;   basic block 64, loop depth 1
;;    pred:       63
  fgets (&in_line, 255, in_file_9);
  _113 = ferror (in_file_9);
  retval.15_114 = _113 != 0;
  if (retval.15_114 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65
;;                66

;;   basic block 65, loop depth 0
;;    pred:       64
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 66, loop depth 1
;;    pred:       64
  token_115 = strtok (&in_line, " \n");
  token_116 = strtok (0B, " \n");
  _117 = strtod (token_116, 0B);
  _118 = (float) _117;
  procpar_info_23(D)->vox2 = _118;
  goto <bb 75>;
;;    succ:       75

;;   basic block 67, loop depth 1
;;    pred:       63
  _119 = strcmp (token_15, "vox3");
  if (_119 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;
;;    succ:       68
;;                71

;;   basic block 68, loop depth 1
;;    pred:       67
  fgets (&in_line, 255, in_file_9);
  _120 = ferror (in_file_9);
  retval.16_121 = _120 != 0;
  if (retval.16_121 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69
;;                70

;;   basic block 69, loop depth 0
;;    pred:       68
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 70, loop depth 1
;;    pred:       68
  token_122 = strtok (&in_line, " \n");
  token_123 = strtok (0B, " \n");
  _124 = strtod (token_123, 0B);
  _125 = (float) _124;
  procpar_info_23(D)->vox3 = _125;
  goto <bb 75>;
;;    succ:       75

;;   basic block 71, loop depth 1
;;    pred:       67
  _126 = strcmp (token_15, "vtheta");
  if (_126 == 0)
    goto <bb 72>;
  else
    goto <bb 75>;
;;    succ:       72
;;                75

;;   basic block 72, loop depth 1
;;    pred:       71
  fgets (&in_line, 255, in_file_9);
  _127 = ferror (in_file_9);
  retval.17_128 = _127 != 0;
  if (retval.17_128 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;
;;    succ:       73
;;                74

;;   basic block 73, loop depth 0
;;    pred:       72
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 74, loop depth 1
;;    pred:       72
  token_129 = strtok (&in_line, " \n");
  token_130 = strtok (0B, " \n");
  _131 = strtod (token_130, 0B);
  _132 = (float) _131;
  procpar_info_23(D)->vtheta = _132;
;;    succ:       75

;;   basic block 75, loop depth 1
;;    pred:       10
;;                14
;;                18
;;                22
;;                26
;;                30
;;                34
;;                38
;;                42
;;                46
;;                50
;;                54
;;                58
;;                62
;;                66
;;                70
;;                71
;;                74
  fgets (&in_line, 5000, in_file_9);
;;    succ:       76

;;   basic block 76, loop depth 1
;;    pred:       75
  _133 = ferror (in_file_9);
  retval.18_134 = _133 != 0;
  if (retval.18_134 != 0)
    goto <bb 77>;
  else
    goto <bb 78>;
;;    succ:       77
;;                78

;;   basic block 77, loop depth 0
;;    pred:       76
  __builtin_puts (&"Error reading file."[0]);
  exit (4);
;;    succ:      

;;   basic block 78, loop depth 1
;;    pred:       6
;;                76
  # i_1 = PHI <i_6(6), i_14(76)>
  _12 = feof (in_file_9);
  retval.19_13 = _12 == 0;
  if (retval.19_13 != 0)
    goto <bb 7>;
  else
    goto <bb 79>;
;;    succ:       7
;;                79

;;   basic block 79, loop depth 0
;;    pred:       78
  if (in_file_9 != 0B)
    goto <bb 80>;
  else
    goto <bb 81>;
;;    succ:       80
;;                81

;;   basic block 80, loop depth 0
;;    pred:       79
  __builtin_puts (&"okay"[0]);
  stdout.20_135 = stdout;
  fflush (stdout.20_135);
  fclose (in_file_9);
;;    succ:       81

;;   basic block 81, loop depth 0
;;    pred:       79
;;                80
  _136 = 2;
  in_line ={v} {CLOBBER};
;;    succ:       82

;;   basic block 82, loop depth 0
;;    pred:       81
<L98>:
  return _136;
;;    succ:       EXIT

}


Partition 3: size 50000 align 16
	in_line
Partition 2: size 8 align 8
	token_3
Partition 1: size 8 align 8
	in_file_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; in_file_2 = 0B;

(insn 8 7 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 -1
     (nil))

;; token_3 = 0B;

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 -1
     (nil))

;; _4 = 5000;

(insn 10 9 0 (set (reg:DI 83 [ D.5599 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 -1
     (nil))

;; token_5 = (char *) _4;

(insn 11 10 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 83 [ D.5599 ])) read_procpar.cpp:28 -1
     (nil))

;; i_6 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 -1
     (nil))

;; _8 = fopen (procpar_string_7(D), "rb");

(insn 13 12 14 (set (reg:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 -1
     (nil))

(insn 14 13 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b04d640a5f0 *.LC0>)) read_procpar.cpp:34 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg:DI 176)) read_procpar.cpp:34 -1
     (nil))

(call_insn 16 15 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b04d627bd00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 17 16 0 (set (reg/f:DI 84 [ D.5600 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 -1
     (nil))

;; in_file_9 = _8;

(insn 18 17 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 84 [ D.5600 ])) read_procpar.cpp:34 -1
     (nil))

;; if (in_file_9 == 0B)

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:35 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin_puts (&"Can\'t open procpar file."[0]);

(insn 22 21 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b04d640a688 *.LC1>)) read_procpar.cpp:36 -1
     (nil))

(call_insn 23 22 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 24 23 25 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 -1
     (nil))

(call_insn 25 24 26 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 26 25 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 27 26 28 2 "" [0 uses])

(note 28 27 0 NOTE_INSN_BASIC_BLOCK)

;; fgets (&in_line, 255, in_file_9);

(insn 29 28 30 (set (reg:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 -1
     (nil))

(insn 31 30 32 (set (reg:DI 1 dx)
        (reg:DI 177)) read_procpar.cpp:41 -1
     (nil))

(insn 32 31 33 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 178)) read_procpar.cpp:41 -1
     (nil))

(call_insn 34 33 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _10 = ferror (in_file_9);

(insn 35 34 36 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 -1
     (nil))

(insn 36 35 37 (set (reg:DI 5 di)
        (reg:DI 179)) read_procpar.cpp:42 -1
     (nil))

(call_insn 37 36 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 38 37 0 (set (reg:SI 85 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 -1
     (nil))

;; _11 = _10 != 0;

(insn 39 38 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))

(insn 40 39 0 (set (reg:QI 86 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))

;; if (_11 != 0)

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:42 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin_puts (&"Error reading file."[0]);

(insn 44 43 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:43 -1
     (nil))

(call_insn 45 44 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 46 45 47 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 -1
     (nil))

(call_insn 47 46 48 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 48 47 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 49 48 50 3 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 7

;; i_14 = i_1 + 1;

(insn 54 53 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 -1
     (nil))

;; token_15 = strtok (&in_line, " \t\n");

(insn 55 54 56 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 -1
     (nil))

(insn 56 55 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b04d640a7b8 *.LC3>)) read_procpar.cpp:65 -1
     (nil))

(insn 57 56 58 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:65 -1
     (nil))

(call_insn 58 57 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 59 58 60 (set (reg:DI 181)
        (reg:DI 0 ax)) read_procpar.cpp:65 -1
     (nil))

(insn 60 59 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 181)) read_procpar.cpp:65 -1
     (nil))

;; _16 = strcmp (token_15, "at");

(insn 61 60 62 (set (reg:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 -1
     (nil))

(insn 62 61 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b04d640a850 *.LC4>)) read_procpar.cpp:80 -1
     (nil))

(insn 63 62 64 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:80 -1
     (nil))

(call_insn/i 64 63 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 65 64 0 (set (reg:SI 89 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 -1
     (nil))

;; if (_16 == 0)

(insn 66 65 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (nil))

(jump_insn 67 66 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:80 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; fgets (&in_line, 5000, in_file_9);

(insn 69 68 70 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 -1
     (nil))

(insn 70 69 71 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 -1
     (nil))

(insn 71 70 72 (set (reg:DI 1 dx)
        (reg:DI 183)) read_procpar.cpp:90 -1
     (nil))

(insn 72 71 73 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 -1
     (nil))

(insn 73 72 74 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:90 -1
     (nil))

(call_insn 74 73 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _17 = ferror (in_file_9);

(insn 75 74 76 (set (reg:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 -1
     (nil))

(insn 76 75 77 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:92 -1
     (nil))

(call_insn 77 76 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 78 77 0 (set (reg:SI 90 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 -1
     (nil))

;; _18 = _17 != 0;

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))

(insn 80 79 0 (set (reg:QI 91 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))

;; if (_18 != 0)

(insn 81 80 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))

(jump_insn 82 81 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:92 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; __builtin_puts (&"Error reading file."[0]);

(insn 84 83 85 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:93 -1
     (nil))

(call_insn 85 84 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 86 85 87 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 -1
     (nil))

(call_insn 87 86 88 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 88 87 0)

;; Generating RTL for gimple basic block 10

;; 

(code_label 89 88 90 6 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; token_19 = strtok (&in_line, " \n");

(insn 91 90 92 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 -1
     (nil))

(insn 92 91 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:106 -1
     (nil))

(insn 93 92 94 (set (reg:DI 5 di)
        (reg:DI 186)) read_procpar.cpp:106 -1
     (nil))

(call_insn 94 93 95 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 95 94 96 (set (reg:DI 187)
        (reg:DI 0 ax)) read_procpar.cpp:106 -1
     (nil))

(insn 96 95 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 187)) read_procpar.cpp:106 -1
     (nil))

;; token_20 = strtok (0B, " \n");

(insn 97 96 98 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:110 -1
     (nil))

(insn 98 97 99 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 -1
     (nil))

(call_insn 99 98 100 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 100 99 101 (set (reg:DI 188)
        (reg:DI 0 ax)) read_procpar.cpp:110 -1
     (nil))

(insn 101 100 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 188)) read_procpar.cpp:110 -1
     (nil))

;; _21 = strtod (token_20, 0B);

(insn 102 101 103 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))

(insn 103 102 104 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 -1
     (nil))

(insn 104 103 105 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:115 -1
     (nil))

(call_insn 105 104 106 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 106 105 0 (set (reg:DF 92 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 -1
     (nil))

;; _22 = (float) _21;

(insn 107 106 0 (set (reg:SF 93 [ D.5604 ])
        (float_truncate:SF (reg:DF 92 [ D.5603 ]))) read_procpar.cpp:115 -1
     (nil))

;; procpar_info_23(D)->acquision_time = _22;

(insn 108 107 109 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))

(insn 109 108 0 (set (mem/j:SF (reg/f:DI 190) [0 procpar_info_23(D)->acquision_time+0 S4 A64])
        (reg:SF 93 [ D.5604 ])) read_procpar.cpp:115 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 112 111 113 5 "" [0 uses])

(note 113 112 0 NOTE_INSN_BASIC_BLOCK)

;; _24 = strcmp (token_15, "date");

(insn 114 113 115 (set (reg:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 -1
     (nil))

(insn 115 114 116 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b04d640a980 *.LC6>)) read_procpar.cpp:122 -1
     (nil))

(insn 116 115 117 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:122 -1
     (nil))

(call_insn/i 117 116 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 118 117 0 (set (reg:SI 94 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 -1
     (nil))

;; if (_24 == 0)

(insn 119 118 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (nil))

(jump_insn 120 119 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:122 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; fgets (&in_line, 255, in_file_9);

(insn 122 121 123 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 -1
     (nil))

(insn 123 122 124 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 -1
     (nil))

(insn 124 123 125 (set (reg:DI 1 dx)
        (reg:DI 192)) read_procpar.cpp:125 -1
     (nil))

(insn 125 124 126 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 -1
     (nil))

(insn 126 125 127 (set (reg:DI 5 di)
        (reg:DI 193)) read_procpar.cpp:125 -1
     (nil))

(call_insn 127 126 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _25 = ferror (in_file_9);

(insn 128 127 129 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 -1
     (nil))

(insn 129 128 130 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:126 -1
     (nil))

(call_insn 130 129 131 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 131 130 0 (set (reg:SI 95 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 -1
     (nil))

;; _26 = _25 != 0;

(insn 132 131 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))

(insn 133 132 0 (set (reg:QI 96 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))

;; if (_26 != 0)

(insn 134 133 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))

(jump_insn 135 134 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:126 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; __builtin_puts (&"Error reading file."[0]);

(insn 137 136 138 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:127 -1
     (nil))

(call_insn 138 137 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 139 138 140 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 -1
     (nil))

(call_insn 140 139 141 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 141 140 0)

;; Generating RTL for gimple basic block 14

;; 

(code_label 142 141 143 9 "" [0 uses])

(note 143 142 0 NOTE_INSN_BASIC_BLOCK)

;; token_27 = strtok (&in_line, " \"");

(insn 144 143 145 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 -1
     (nil))

(insn 145 144 146 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b04d640aa18 *.LC7>)) read_procpar.cpp:132 -1
     (nil))

(insn 146 145 147 (set (reg:DI 5 di)
        (reg:DI 195)) read_procpar.cpp:132 -1
     (nil))

(call_insn 147 146 148 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 148 147 149 (set (reg:DI 196)
        (reg:DI 0 ax)) read_procpar.cpp:132 -1
     (nil))

(insn 149 148 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 196)) read_procpar.cpp:132 -1
     (nil))

;; token_28 = strtok (0B, "\"");

(insn 150 149 151 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b04d640aab0 *.LC8>)) read_procpar.cpp:133 -1
     (nil))

(insn 151 150 152 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 -1
     (nil))

(call_insn 152 151 153 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 153 152 154 (set (reg:DI 197)
        (reg:DI 0 ax)) read_procpar.cpp:133 -1
     (nil))

(insn 154 153 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 197)) read_procpar.cpp:133 -1
     (nil))

;; _29 = &procpar_info_23(D)->date;

(insn 155 154 156 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))

(insn 156 155 0 (parallel [
            (set (reg/f:DI 97 [ D.5605 ])
                (plus:DI (reg/f:DI 198)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))

;; strcpy (_29, token_28);

(insn 157 156 158 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))

(insn 158 157 159 (set (reg:DI 4 si)
        (reg:DI 199)) read_procpar.cpp:134 -1
     (nil))

(insn 159 158 160 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.5605 ])) read_procpar.cpp:134 -1
     (nil))

(call_insn 160 159 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b04d60bd600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 15

;; 

(code_label 163 162 164 8 "" [0 uses])

(note 164 163 0 NOTE_INSN_BASIC_BLOCK)

;; _30 = strcmp (token_15, "filter");

(insn 165 164 166 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 -1
     (nil))

(insn 166 165 167 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b04d640ab48 *.LC9>)) read_procpar.cpp:136 -1
     (nil))

(insn 167 166 168 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:136 -1
     (nil))

(call_insn/i 168 167 169 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 169 168 0 (set (reg:SI 98 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 -1
     (nil))

;; if (_30 == 0)

(insn 170 169 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (nil))

(jump_insn 171 170 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:136 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; fgets (&in_line, 255, in_file_9);

(insn 173 172 174 (set (reg:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 -1
     (nil))

(insn 174 173 175 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 -1
     (nil))

(insn 175 174 176 (set (reg:DI 1 dx)
        (reg:DI 201)) read_procpar.cpp:138 -1
     (nil))

(insn 176 175 177 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 -1
     (nil))

(insn 177 176 178 (set (reg:DI 5 di)
        (reg:DI 202)) read_procpar.cpp:138 -1
     (nil))

(call_insn 178 177 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _31 = ferror (in_file_9);

(insn 179 178 180 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 -1
     (nil))

(insn 180 179 181 (set (reg:DI 5 di)
        (reg:DI 203)) read_procpar.cpp:139 -1
     (nil))

(call_insn 181 180 182 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 182 181 0 (set (reg:SI 99 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 -1
     (nil))

;; _32 = _31 != 0;

(insn 183 182 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))

(insn 184 183 0 (set (reg:QI 100 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))

;; if (_32 != 0)

(insn 185 184 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))

(jump_insn 186 185 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:139 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; __builtin_puts (&"Error reading file."[0]);

(insn 188 187 189 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:140 -1
     (nil))

(call_insn 189 188 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 190 189 191 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 -1
     (nil))

(call_insn 191 190 192 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 192 191 0)

;; Generating RTL for gimple basic block 18

;; 

(code_label 193 192 194 11 "" [0 uses])

(note 194 193 0 NOTE_INSN_BASIC_BLOCK)

;; token_33 = strtok (&in_line, " \n");

(insn 195 194 196 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 -1
     (nil))

(insn 196 195 197 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:145 -1
     (nil))

(insn 197 196 198 (set (reg:DI 5 di)
        (reg:DI 204)) read_procpar.cpp:145 -1
     (nil))

(call_insn 198 197 199 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 199 198 200 (set (reg:DI 205)
        (reg:DI 0 ax)) read_procpar.cpp:145 -1
     (nil))

(insn 200 199 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 205)) read_procpar.cpp:145 -1
     (nil))

;; token_34 = strtok (0B, " \n");

(insn 201 200 202 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:146 -1
     (nil))

(insn 202 201 203 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 -1
     (nil))

(call_insn 203 202 204 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 204 203 205 (set (reg:DI 206)
        (reg:DI 0 ax)) read_procpar.cpp:146 -1
     (nil))

(insn 205 204 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 206)) read_procpar.cpp:146 -1
     (nil))

;; _35 = strtod (token_34, 0B);

(insn 206 205 207 (set (reg:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))

(insn 207 206 208 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 -1
     (nil))

(insn 208 207 209 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:147 -1
     (nil))

(call_insn 209 208 210 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 210 209 0 (set (reg:DF 101 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 -1
     (nil))

;; _36 = (float) _35;

(insn 211 210 0 (set (reg:SF 102 [ D.5604 ])
        (float_truncate:SF (reg:DF 101 [ D.5603 ]))) read_procpar.cpp:147 -1
     (nil))

;; procpar_info_23(D)->filter = _36;

(insn 212 211 213 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))

(insn 213 212 0 (set (mem/j:SF (plus:DI (reg/f:DI 208)
                (const_int 292 [0x124])) [0 procpar_info_23(D)->filter+0 S4 A32])
        (reg:SF 102 [ D.5604 ])) read_procpar.cpp:147 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 216 215 217 10 "" [0 uses])

(note 217 216 0 NOTE_INSN_BASIC_BLOCK)

;; _37 = strcmp (token_15, "nt");

(insn 218 217 219 (set (reg:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 -1
     (nil))

(insn 219 218 220 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b04d640abe0 *.LC10>)) read_procpar.cpp:149 -1
     (nil))

(insn 220 219 221 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:149 -1
     (nil))

(call_insn/i 221 220 222 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 222 221 0 (set (reg:SI 103 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 -1
     (nil))

;; if (_37 == 0)

(insn 223 222 224 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (nil))

(jump_insn 224 223 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:149 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; fgets (&in_line, 255, in_file_9);

(insn 226 225 227 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 -1
     (nil))

(insn 227 226 228 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 -1
     (nil))

(insn 228 227 229 (set (reg:DI 1 dx)
        (reg:DI 210)) read_procpar.cpp:151 -1
     (nil))

(insn 229 228 230 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 -1
     (nil))

(insn 230 229 231 (set (reg:DI 5 di)
        (reg:DI 211)) read_procpar.cpp:151 -1
     (nil))

(call_insn 231 230 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _38 = ferror (in_file_9);

(insn 232 231 233 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 -1
     (nil))

(insn 233 232 234 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:152 -1
     (nil))

(call_insn 234 233 235 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 235 234 0 (set (reg:SI 104 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 -1
     (nil))

;; _39 = _38 != 0;

(insn 236 235 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))

(insn 237 236 0 (set (reg:QI 105 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))

;; if (_39 != 0)

(insn 238 237 239 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))

(jump_insn 239 238 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:152 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; __builtin_puts (&"Error reading file."[0]);

(insn 241 240 242 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:153 -1
     (nil))

(call_insn 242 241 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 243 242 244 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 -1
     (nil))

(call_insn 244 243 245 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 245 244 0)

;; Generating RTL for gimple basic block 22

;; 

(code_label 246 245 247 13 "" [0 uses])

(note 247 246 0 NOTE_INSN_BASIC_BLOCK)

;; token_40 = strtok (&in_line, " \n");

(insn 248 247 249 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 -1
     (nil))

(insn 249 248 250 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:158 -1
     (nil))

(insn 250 249 251 (set (reg:DI 5 di)
        (reg:DI 213)) read_procpar.cpp:158 -1
     (nil))

(call_insn 251 250 252 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 252 251 253 (set (reg:DI 214)
        (reg:DI 0 ax)) read_procpar.cpp:158 -1
     (nil))

(insn 253 252 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 214)) read_procpar.cpp:158 -1
     (nil))

;; token_41 = strtok (0B, " \n");

(insn 254 253 255 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:159 -1
     (nil))

(insn 255 254 256 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 -1
     (nil))

(call_insn 256 255 257 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 257 256 258 (set (reg:DI 215)
        (reg:DI 0 ax)) read_procpar.cpp:159 -1
     (nil))

(insn 258 257 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 215)) read_procpar.cpp:159 -1
     (nil))

;; _42 = strtol (token_41, 0B, 10);

(insn 259 258 260 (set (reg:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))

(insn 260 259 261 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 -1
     (nil))

(insn 261 260 262 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 -1
     (nil))

(insn 262 261 263 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:160 -1
     (nil))

(call_insn 263 262 264 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b04d634d300 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 264 263 0 (set (reg:DI 106 [ D.5606 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 -1
     (nil))

;; _43 = (int) _42;

(insn 265 264 0 (set (reg:SI 107 [ D.5601 ])
        (subreg:SI (reg:DI 106 [ D.5606 ]) 0)) read_procpar.cpp:160 -1
     (nil))

;; procpar_info_23(D)->num_transients = _43;

(insn 266 265 267 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))

(insn 267 266 0 (set (mem/j:SI (plus:DI (reg/f:DI 217)
                (const_int 296 [0x128])) [0 procpar_info_23(D)->num_transients+0 S4 A64])
        (reg:SI 107 [ D.5601 ])) read_procpar.cpp:160 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 270 269 271 12 "" [0 uses])

(note 271 270 0 NOTE_INSN_BASIC_BLOCK)

;; _44 = strcmp (token_15, "np");

(insn 272 271 273 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 -1
     (nil))

(insn 273 272 274 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b04d640ac78 *.LC11>)) read_procpar.cpp:162 -1
     (nil))

(insn 274 273 275 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:162 -1
     (nil))

(call_insn/i 275 274 276 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 276 275 0 (set (reg:SI 108 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 -1
     (nil))

;; if (_44 == 0)

(insn 277 276 278 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (nil))

(jump_insn 278 277 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:162 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; fgets (&in_line, 255, in_file_9);

(insn 280 279 281 (set (reg:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 -1
     (nil))

(insn 281 280 282 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 -1
     (nil))

(insn 282 281 283 (set (reg:DI 1 dx)
        (reg:DI 219)) read_procpar.cpp:164 -1
     (nil))

(insn 283 282 284 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 -1
     (nil))

(insn 284 283 285 (set (reg:DI 5 di)
        (reg:DI 220)) read_procpar.cpp:164 -1
     (nil))

(call_insn 285 284 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _45 = ferror (in_file_9);

(insn 286 285 287 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 -1
     (nil))

(insn 287 286 288 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:165 -1
     (nil))

(call_insn 288 287 289 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 289 288 0 (set (reg:SI 109 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 -1
     (nil))

;; _46 = _45 != 0;

(insn 290 289 291 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))

(insn 291 290 0 (set (reg:QI 110 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))

;; if (_46 != 0)

(insn 292 291 293 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))

(jump_insn 293 292 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:165 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; __builtin_puts (&"Error reading file."[0]);

(insn 295 294 296 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:166 -1
     (nil))

(call_insn 296 295 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 297 296 298 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 -1
     (nil))

(call_insn 298 297 299 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 299 298 0)

;; Generating RTL for gimple basic block 26

;; 

(code_label 300 299 301 15 "" [0 uses])

(note 301 300 0 NOTE_INSN_BASIC_BLOCK)

;; token_47 = strtok (&in_line, " \n");

(insn 302 301 303 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 -1
     (nil))

(insn 303 302 304 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:171 -1
     (nil))

(insn 304 303 305 (set (reg:DI 5 di)
        (reg:DI 222)) read_procpar.cpp:171 -1
     (nil))

(call_insn 305 304 306 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 306 305 307 (set (reg:DI 223)
        (reg:DI 0 ax)) read_procpar.cpp:171 -1
     (nil))

(insn 307 306 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 223)) read_procpar.cpp:171 -1
     (nil))

;; token_48 = strtok (0B, " \n");

(insn 308 307 309 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:172 -1
     (nil))

(insn 309 308 310 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 -1
     (nil))

(call_insn 310 309 311 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 311 310 312 (set (reg:DI 224)
        (reg:DI 0 ax)) read_procpar.cpp:172 -1
     (nil))

(insn 312 311 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 224)) read_procpar.cpp:172 -1
     (nil))

;; _49 = strtol (token_48, 0B, 10);

(insn 313 312 314 (set (reg:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))

(insn 314 313 315 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 -1
     (nil))

(insn 315 314 316 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 -1
     (nil))

(insn 316 315 317 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:173 -1
     (nil))

(call_insn 317 316 318 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b04d634d300 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 318 317 0 (set (reg:DI 111 [ D.5606 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 -1
     (nil))

;; _50 = (int) _49;

(insn 319 318 0 (set (reg:SI 112 [ D.5601 ])
        (subreg:SI (reg:DI 111 [ D.5606 ]) 0)) read_procpar.cpp:173 -1
     (nil))

;; procpar_info_23(D)->num_points = _50;

(insn 320 319 321 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))

(insn 321 320 0 (set (mem/j:SI (plus:DI (reg/f:DI 226)
                (const_int 300 [0x12c])) [0 procpar_info_23(D)->num_points+0 S4 A32])
        (reg:SI 112 [ D.5601 ])) read_procpar.cpp:173 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 324 323 325 14 "" [0 uses])

(note 325 324 0 NOTE_INSN_BASIC_BLOCK)

;; _51 = strcmp (token_15, "sfrq");

(insn 326 325 327 (set (reg:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 -1
     (nil))

(insn 327 326 328 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2b04d640ad10 *.LC12>)) read_procpar.cpp:175 -1
     (nil))

(insn 328 327 329 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:175 -1
     (nil))

(call_insn/i 329 328 330 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 330 329 0 (set (reg:SI 113 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 -1
     (nil))

;; if (_51 == 0)

(insn 331 330 332 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (nil))

(jump_insn 332 331 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:175 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; fgets (&in_line, 255, in_file_9);

(insn 334 333 335 (set (reg:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 -1
     (nil))

(insn 335 334 336 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 -1
     (nil))

(insn 336 335 337 (set (reg:DI 1 dx)
        (reg:DI 228)) read_procpar.cpp:177 -1
     (nil))

(insn 337 336 338 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 -1
     (nil))

(insn 338 337 339 (set (reg:DI 5 di)
        (reg:DI 229)) read_procpar.cpp:177 -1
     (nil))

(call_insn 339 338 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _52 = ferror (in_file_9);

(insn 340 339 341 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 -1
     (nil))

(insn 341 340 342 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:178 -1
     (nil))

(call_insn 342 341 343 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 343 342 0 (set (reg:SI 114 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 -1
     (nil))

;; _53 = _52 != 0;

(insn 344 343 345 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))

(insn 345 344 0 (set (reg:QI 115 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))

;; if (_53 != 0)

(insn 346 345 347 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))

(jump_insn 347 346 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:178 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; __builtin_puts (&"Error reading file."[0]);

(insn 349 348 350 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:179 -1
     (nil))

(call_insn 350 349 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 351 350 352 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 -1
     (nil))

(call_insn 352 351 353 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 353 352 0)

;; Generating RTL for gimple basic block 30

;; 

(code_label 354 353 355 17 "" [0 uses])

(note 355 354 0 NOTE_INSN_BASIC_BLOCK)

;; token_54 = strtok (&in_line, " \n");

(insn 356 355 357 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 -1
     (nil))

(insn 357 356 358 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:184 -1
     (nil))

(insn 358 357 359 (set (reg:DI 5 di)
        (reg:DI 231)) read_procpar.cpp:184 -1
     (nil))

(call_insn 359 358 360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 360 359 361 (set (reg:DI 232)
        (reg:DI 0 ax)) read_procpar.cpp:184 -1
     (nil))

(insn 361 360 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 232)) read_procpar.cpp:184 -1
     (nil))

;; token_55 = strtok (0B, " \n");

(insn 362 361 363 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:185 -1
     (nil))

(insn 363 362 364 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 -1
     (nil))

(call_insn 364 363 365 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 365 364 366 (set (reg:DI 233)
        (reg:DI 0 ax)) read_procpar.cpp:185 -1
     (nil))

(insn 366 365 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 233)) read_procpar.cpp:185 -1
     (nil))

;; _56 = strtod (token_55, 0B);

(insn 367 366 368 (set (reg:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))

(insn 368 367 369 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 -1
     (nil))

(insn 369 368 370 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:186 -1
     (nil))

(call_insn 370 369 371 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 371 370 0 (set (reg:DF 116 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 -1
     (nil))

;; procpar_info_23(D)->main_frequency = _56;

(insn 372 371 373 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))

(insn 373 372 0 (set (mem/j:DF (plus:DI (reg/f:DI 235)
                (const_int 304 [0x130])) [0 procpar_info_23(D)->main_frequency+0 S8 A64])
        (reg:DF 116 [ D.5603 ])) read_procpar.cpp:186 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 376 375 377 16 "" [0 uses])

(note 377 376 0 NOTE_INSN_BASIC_BLOCK)

;; _57 = strcmp (token_15, "tof");

(insn 378 377 379 (set (reg:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 -1
     (nil))

(insn 379 378 380 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b04d640ada8 *.LC13>)) read_procpar.cpp:188 -1
     (nil))

(insn 380 379 381 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:188 -1
     (nil))

(call_insn/i 381 380 382 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 382 381 0 (set (reg:SI 117 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 -1
     (nil))

;; if (_57 == 0)

(insn 383 382 384 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (nil))

(jump_insn 384 383 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:188 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; fgets (&in_line, 255, in_file_9);

(insn 386 385 387 (set (reg:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 -1
     (nil))

(insn 387 386 388 (parallel [
            (set (reg:DI 238)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 -1
     (nil))

(insn 388 387 389 (set (reg:DI 1 dx)
        (reg:DI 237)) read_procpar.cpp:190 -1
     (nil))

(insn 389 388 390 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 -1
     (nil))

(insn 390 389 391 (set (reg:DI 5 di)
        (reg:DI 238)) read_procpar.cpp:190 -1
     (nil))

(call_insn 391 390 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _58 = ferror (in_file_9);

(insn 392 391 393 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 -1
     (nil))

(insn 393 392 394 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:191 -1
     (nil))

(call_insn 394 393 395 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 395 394 0 (set (reg:SI 118 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 -1
     (nil))

;; _59 = _58 != 0;

(insn 396 395 397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))

(insn 397 396 0 (set (reg:QI 119 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))

;; if (_59 != 0)

(insn 398 397 399 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))

(jump_insn 399 398 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:191 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; __builtin_puts (&"Error reading file."[0]);

(insn 401 400 402 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:192 -1
     (nil))

(call_insn 402 401 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 403 402 404 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 -1
     (nil))

(call_insn 404 403 405 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 405 404 0)

;; Generating RTL for gimple basic block 34

;; 

(code_label 406 405 407 19 "" [0 uses])

(note 407 406 0 NOTE_INSN_BASIC_BLOCK)

;; token_60 = strtok (&in_line, " \n");

(insn 408 407 409 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 -1
     (nil))

(insn 409 408 410 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:197 -1
     (nil))

(insn 410 409 411 (set (reg:DI 5 di)
        (reg:DI 240)) read_procpar.cpp:197 -1
     (nil))

(call_insn 411 410 412 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 412 411 413 (set (reg:DI 241)
        (reg:DI 0 ax)) read_procpar.cpp:197 -1
     (nil))

(insn 413 412 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 241)) read_procpar.cpp:197 -1
     (nil))

;; token_61 = strtok (0B, " \n");

(insn 414 413 415 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:198 -1
     (nil))

(insn 415 414 416 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 -1
     (nil))

(call_insn 416 415 417 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 417 416 418 (set (reg:DI 242)
        (reg:DI 0 ax)) read_procpar.cpp:198 -1
     (nil))

(insn 418 417 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 242)) read_procpar.cpp:198 -1
     (nil))

;; _62 = strtod (token_61, 0B);

(insn 419 418 420 (set (reg:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))

(insn 420 419 421 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 -1
     (nil))

(insn 421 420 422 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:199 -1
     (nil))

(call_insn 422 421 423 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 423 422 0 (set (reg:DF 120 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 -1
     (nil))

;; procpar_info_23(D)->offset_frequency = _62;

(insn 424 423 425 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))

(insn 425 424 0 (set (mem/j:DF (plus:DI (reg/f:DI 244)
                (const_int 312 [0x138])) [0 procpar_info_23(D)->offset_frequency+0 S8 A64])
        (reg:DF 120 [ D.5603 ])) read_procpar.cpp:199 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 428 427 429 18 "" [0 uses])

(note 429 428 0 NOTE_INSN_BASIC_BLOCK)

;; _63 = strcmp (token_15, "te");

(insn 430 429 431 (set (reg:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 -1
     (nil))

(insn 431 430 432 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b04d640ae40 *.LC14>)) read_procpar.cpp:201 -1
     (nil))

(insn 432 431 433 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:201 -1
     (nil))

(call_insn/i 433 432 434 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 434 433 0 (set (reg:SI 121 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 -1
     (nil))

;; if (_63 == 0)

(insn 435 434 436 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (nil))

(jump_insn 436 435 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:201 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; fgets (&in_line, 255, in_file_9);

(insn 438 437 439 (set (reg:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 -1
     (nil))

(insn 439 438 440 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 -1
     (nil))

(insn 440 439 441 (set (reg:DI 1 dx)
        (reg:DI 246)) read_procpar.cpp:203 -1
     (nil))

(insn 441 440 442 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 -1
     (nil))

(insn 442 441 443 (set (reg:DI 5 di)
        (reg:DI 247)) read_procpar.cpp:203 -1
     (nil))

(call_insn 443 442 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _64 = ferror (in_file_9);

(insn 444 443 445 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 -1
     (nil))

(insn 445 444 446 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:204 -1
     (nil))

(call_insn 446 445 447 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 447 446 0 (set (reg:SI 122 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 -1
     (nil))

;; _65 = _64 != 0;

(insn 448 447 449 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))

(insn 449 448 0 (set (reg:QI 123 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))

;; if (_65 != 0)

(insn 450 449 451 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))

(jump_insn 451 450 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:204 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; __builtin_puts (&"Error reading file."[0]);

(insn 453 452 454 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:205 -1
     (nil))

(call_insn 454 453 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 455 454 456 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 -1
     (nil))

(call_insn 456 455 457 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 457 456 0)

;; Generating RTL for gimple basic block 38

;; 

(code_label 458 457 459 21 "" [0 uses])

(note 459 458 0 NOTE_INSN_BASIC_BLOCK)

;; token_66 = strtok (&in_line, " \n");

(insn 460 459 461 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 -1
     (nil))

(insn 461 460 462 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:210 -1
     (nil))

(insn 462 461 463 (set (reg:DI 5 di)
        (reg:DI 249)) read_procpar.cpp:210 -1
     (nil))

(call_insn 463 462 464 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 464 463 465 (set (reg:DI 250)
        (reg:DI 0 ax)) read_procpar.cpp:210 -1
     (nil))

(insn 465 464 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 250)) read_procpar.cpp:210 -1
     (nil))

;; token_67 = strtok (0B, " \n");

(insn 466 465 467 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:211 -1
     (nil))

(insn 467 466 468 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 -1
     (nil))

(call_insn 468 467 469 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 469 468 470 (set (reg:DI 251)
        (reg:DI 0 ax)) read_procpar.cpp:211 -1
     (nil))

(insn 470 469 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 251)) read_procpar.cpp:211 -1
     (nil))

;; _68 = strtod (token_67, 0B);

(insn 471 470 472 (set (reg:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))

(insn 472 471 473 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 -1
     (nil))

(insn 473 472 474 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:212 -1
     (nil))

(call_insn 474 473 475 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 475 474 0 (set (reg:DF 124 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 -1
     (nil))

;; _69 = (float) _68;

(insn 476 475 0 (set (reg:SF 125 [ D.5604 ])
        (float_truncate:SF (reg:DF 124 [ D.5603 ]))) read_procpar.cpp:212 -1
     (nil))

;; procpar_info_23(D)->te = _69;

(insn 477 476 478 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))

(insn 478 477 0 (set (mem/j:SF (plus:DI (reg/f:DI 253)
                (const_int 320 [0x140])) [0 procpar_info_23(D)->te+0 S4 A64])
        (reg:SF 125 [ D.5604 ])) read_procpar.cpp:212 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; 

(code_label 481 480 482 20 "" [0 uses])

(note 482 481 0 NOTE_INSN_BASIC_BLOCK)

;; _70 = strcmp (token_15, "tm");

(insn 483 482 484 (set (reg:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 -1
     (nil))

(insn 484 483 485 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b04d640aed8 *.LC15>)) read_procpar.cpp:214 -1
     (nil))

(insn 485 484 486 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:214 -1
     (nil))

(call_insn/i 486 485 487 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 487 486 0 (set (reg:SI 126 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 -1
     (nil))

;; if (_70 == 0)

(insn 488 487 489 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (nil))

(jump_insn 489 488 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:214 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; fgets (&in_line, 255, in_file_9);

(insn 491 490 492 (set (reg:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 -1
     (nil))

(insn 492 491 493 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 -1
     (nil))

(insn 493 492 494 (set (reg:DI 1 dx)
        (reg:DI 255)) read_procpar.cpp:216 -1
     (nil))

(insn 494 493 495 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 -1
     (nil))

(insn 495 494 496 (set (reg:DI 5 di)
        (reg:DI 256)) read_procpar.cpp:216 -1
     (nil))

(call_insn 496 495 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _71 = ferror (in_file_9);

(insn 497 496 498 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 -1
     (nil))

(insn 498 497 499 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:217 -1
     (nil))

(call_insn 499 498 500 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 500 499 0 (set (reg:SI 127 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 -1
     (nil))

;; _72 = _71 != 0;

(insn 501 500 502 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))

(insn 502 501 0 (set (reg:QI 128 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))

;; if (_72 != 0)

(insn 503 502 504 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))

(jump_insn 504 503 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:217 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; __builtin_puts (&"Error reading file."[0]);

(insn 506 505 507 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:218 -1
     (nil))

(call_insn 507 506 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 508 507 509 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 -1
     (nil))

(call_insn 509 508 510 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 510 509 0)

;; Generating RTL for gimple basic block 42

;; 

(code_label 511 510 512 23 "" [0 uses])

(note 512 511 0 NOTE_INSN_BASIC_BLOCK)

;; token_73 = strtok (&in_line, " \n");

(insn 513 512 514 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 -1
     (nil))

(insn 514 513 515 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:223 -1
     (nil))

(insn 515 514 516 (set (reg:DI 5 di)
        (reg:DI 258)) read_procpar.cpp:223 -1
     (nil))

(call_insn 516 515 517 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 517 516 518 (set (reg:DI 259)
        (reg:DI 0 ax)) read_procpar.cpp:223 -1
     (nil))

(insn 518 517 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 259)) read_procpar.cpp:223 -1
     (nil))

;; token_74 = strtok (0B, " \n");

(insn 519 518 520 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:224 -1
     (nil))

(insn 520 519 521 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 -1
     (nil))

(call_insn 521 520 522 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 522 521 523 (set (reg:DI 260)
        (reg:DI 0 ax)) read_procpar.cpp:224 -1
     (nil))

(insn 523 522 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 260)) read_procpar.cpp:224 -1
     (nil))

;; _75 = strtod (token_74, 0B);

(insn 524 523 525 (set (reg:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))

(insn 525 524 526 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 -1
     (nil))

(insn 526 525 527 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:225 -1
     (nil))

(call_insn 527 526 528 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 528 527 0 (set (reg:DF 129 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 -1
     (nil))

;; _76 = (float) _75;

(insn 529 528 0 (set (reg:SF 130 [ D.5604 ])
        (float_truncate:SF (reg:DF 129 [ D.5603 ]))) read_procpar.cpp:225 -1
     (nil))

;; procpar_info_23(D)->tm = _76;

(insn 530 529 531 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))

(insn 531 530 0 (set (mem/j:SF (plus:DI (reg/f:DI 262)
                (const_int 324 [0x144])) [0 procpar_info_23(D)->tm+0 S4 A32])
        (reg:SF 130 [ D.5604 ])) read_procpar.cpp:225 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; 

(code_label 534 533 535 22 "" [0 uses])

(note 535 534 0 NOTE_INSN_BASIC_BLOCK)

;; _77 = strcmp (token_15, "gain");

(insn 536 535 537 (set (reg:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 -1
     (nil))

(insn 537 536 538 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b04d6425000 *.LC16>)) read_procpar.cpp:227 -1
     (nil))

(insn 538 537 539 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:227 -1
     (nil))

(call_insn/i 539 538 540 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 540 539 0 (set (reg:SI 131 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 -1
     (nil))

;; if (_77 == 0)

(insn 541 540 542 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (nil))

(jump_insn 542 541 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:227 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; fgets (&in_line, 255, in_file_9);

(insn 544 543 545 (set (reg:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 -1
     (nil))

(insn 545 544 546 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 -1
     (nil))

(insn 546 545 547 (set (reg:DI 1 dx)
        (reg:DI 264)) read_procpar.cpp:229 -1
     (nil))

(insn 547 546 548 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 -1
     (nil))

(insn 548 547 549 (set (reg:DI 5 di)
        (reg:DI 265)) read_procpar.cpp:229 -1
     (nil))

(call_insn 549 548 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _78 = ferror (in_file_9);

(insn 550 549 551 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 -1
     (nil))

(insn 551 550 552 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:230 -1
     (nil))

(call_insn 552 551 553 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 553 552 0 (set (reg:SI 132 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 -1
     (nil))

;; _79 = _78 != 0;

(insn 554 553 555 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))

(insn 555 554 0 (set (reg:QI 133 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))

;; if (_79 != 0)

(insn 556 555 557 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))

(jump_insn 557 556 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:230 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; __builtin_puts (&"Error reading file."[0]);

(insn 559 558 560 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:231 -1
     (nil))

(call_insn 560 559 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 561 560 562 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 -1
     (nil))

(call_insn 562 561 563 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 563 562 0)

;; Generating RTL for gimple basic block 46

;; 

(code_label 564 563 565 25 "" [0 uses])

(note 565 564 0 NOTE_INSN_BASIC_BLOCK)

;; token_80 = strtok (&in_line, " \n");

(insn 566 565 567 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 -1
     (nil))

(insn 567 566 568 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:236 -1
     (nil))

(insn 568 567 569 (set (reg:DI 5 di)
        (reg:DI 267)) read_procpar.cpp:236 -1
     (nil))

(call_insn 569 568 570 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 570 569 571 (set (reg:DI 268)
        (reg:DI 0 ax)) read_procpar.cpp:236 -1
     (nil))

(insn 571 570 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 268)) read_procpar.cpp:236 -1
     (nil))

;; token_81 = strtok (0B, " \n");

(insn 572 571 573 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:237 -1
     (nil))

(insn 573 572 574 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 -1
     (nil))

(call_insn 574 573 575 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 575 574 576 (set (reg:DI 269)
        (reg:DI 0 ax)) read_procpar.cpp:237 -1
     (nil))

(insn 576 575 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 269)) read_procpar.cpp:237 -1
     (nil))

;; _82 = strtod (token_81, 0B);

(insn 577 576 578 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))

(insn 578 577 579 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 -1
     (nil))

(insn 579 578 580 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:238 -1
     (nil))

(call_insn 580 579 581 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 581 580 0 (set (reg:DF 134 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 -1
     (nil))

;; _83 = (float) _82;

(insn 582 581 0 (set (reg:SF 135 [ D.5604 ])
        (float_truncate:SF (reg:DF 134 [ D.5603 ]))) read_procpar.cpp:238 -1
     (nil))

;; procpar_info_23(D)->gain = _83;

(insn 583 582 584 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))

(insn 584 583 0 (set (mem/j:SF (plus:DI (reg/f:DI 271)
                (const_int 328 [0x148])) [0 procpar_info_23(D)->gain+0 S4 A64])
        (reg:SF 135 [ D.5604 ])) read_procpar.cpp:238 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; 

(code_label 587 586 588 24 "" [0 uses])

(note 588 587 0 NOTE_INSN_BASIC_BLOCK)

;; _84 = strcmp (token_15, "pos1");

(insn 589 588 590 (set (reg:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 -1
     (nil))

(insn 590 589 591 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b04d6425098 *.LC17>)) read_procpar.cpp:240 -1
     (nil))

(insn 591 590 592 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:240 -1
     (nil))

(call_insn/i 592 591 593 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 593 592 0 (set (reg:SI 136 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 -1
     (nil))

;; if (_84 == 0)

(insn 594 593 595 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (nil))

(jump_insn 595 594 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:240 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; fgets (&in_line, 255, in_file_9);

(insn 597 596 598 (set (reg:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 -1
     (nil))

(insn 598 597 599 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 -1
     (nil))

(insn 599 598 600 (set (reg:DI 1 dx)
        (reg:DI 273)) read_procpar.cpp:242 -1
     (nil))

(insn 600 599 601 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 -1
     (nil))

(insn 601 600 602 (set (reg:DI 5 di)
        (reg:DI 274)) read_procpar.cpp:242 -1
     (nil))

(call_insn 602 601 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _85 = ferror (in_file_9);

(insn 603 602 604 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 -1
     (nil))

(insn 604 603 605 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:243 -1
     (nil))

(call_insn 605 604 606 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 606 605 0 (set (reg:SI 137 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 -1
     (nil))

;; _86 = _85 != 0;

(insn 607 606 608 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))

(insn 608 607 0 (set (reg:QI 138 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))

;; if (_86 != 0)

(insn 609 608 610 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))

(jump_insn 610 609 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:243 -1
     (nil))

;; Generating RTL for gimple basic block 49

;; __builtin_puts (&"Error reading file."[0]);

(insn 612 611 613 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:244 -1
     (nil))

(call_insn 613 612 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 614 613 615 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 -1
     (nil))

(call_insn 615 614 616 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 616 615 0)

;; Generating RTL for gimple basic block 50

;; 

(code_label 617 616 618 27 "" [0 uses])

(note 618 617 0 NOTE_INSN_BASIC_BLOCK)

;; token_87 = strtok (&in_line, " \n");

(insn 619 618 620 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 -1
     (nil))

(insn 620 619 621 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:249 -1
     (nil))

(insn 621 620 622 (set (reg:DI 5 di)
        (reg:DI 276)) read_procpar.cpp:249 -1
     (nil))

(call_insn 622 621 623 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 623 622 624 (set (reg:DI 277)
        (reg:DI 0 ax)) read_procpar.cpp:249 -1
     (nil))

(insn 624 623 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 277)) read_procpar.cpp:249 -1
     (nil))

;; token_88 = strtok (0B, " \n");

(insn 625 624 626 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:250 -1
     (nil))

(insn 626 625 627 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 -1
     (nil))

(call_insn 627 626 628 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 628 627 629 (set (reg:DI 278)
        (reg:DI 0 ax)) read_procpar.cpp:250 -1
     (nil))

(insn 629 628 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 278)) read_procpar.cpp:250 -1
     (nil))

;; _89 = strtod (token_88, 0B);

(insn 630 629 631 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))

(insn 631 630 632 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 -1
     (nil))

(insn 632 631 633 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:251 -1
     (nil))

(call_insn 633 632 634 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 634 633 0 (set (reg:DF 139 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 -1
     (nil))

;; _90 = (float) _89;

(insn 635 634 0 (set (reg:SF 140 [ D.5604 ])
        (float_truncate:SF (reg:DF 139 [ D.5603 ]))) read_procpar.cpp:251 -1
     (nil))

;; procpar_info_23(D)->pos1 = _90;

(insn 636 635 637 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))

(insn 637 636 0 (set (mem/j:SF (plus:DI (reg/f:DI 280)
                (const_int 332 [0x14c])) [0 procpar_info_23(D)->pos1+0 S4 A32])
        (reg:SF 140 [ D.5604 ])) read_procpar.cpp:251 -1
     (nil))

;; Generating RTL for gimple basic block 51

;; 

(code_label 640 639 641 26 "" [0 uses])

(note 641 640 0 NOTE_INSN_BASIC_BLOCK)

;; _91 = strcmp (token_15, "pos2");

(insn 642 641 643 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 -1
     (nil))

(insn 643 642 644 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b04d6425130 *.LC18>)) read_procpar.cpp:253 -1
     (nil))

(insn 644 643 645 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:253 -1
     (nil))

(call_insn/i 645 644 646 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 646 645 0 (set (reg:SI 141 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 -1
     (nil))

;; if (_91 == 0)

(insn 647 646 648 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (nil))

(jump_insn 648 647 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:253 -1
     (nil))

;; Generating RTL for gimple basic block 52

;; fgets (&in_line, 255, in_file_9);

(insn 650 649 651 (set (reg:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 -1
     (nil))

(insn 651 650 652 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 -1
     (nil))

(insn 652 651 653 (set (reg:DI 1 dx)
        (reg:DI 282)) read_procpar.cpp:255 -1
     (nil))

(insn 653 652 654 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 -1
     (nil))

(insn 654 653 655 (set (reg:DI 5 di)
        (reg:DI 283)) read_procpar.cpp:255 -1
     (nil))

(call_insn 655 654 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _92 = ferror (in_file_9);

(insn 656 655 657 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 -1
     (nil))

(insn 657 656 658 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:256 -1
     (nil))

(call_insn 658 657 659 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 659 658 0 (set (reg:SI 142 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 -1
     (nil))

;; _93 = _92 != 0;

(insn 660 659 661 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))

(insn 661 660 0 (set (reg:QI 143 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))

;; if (_93 != 0)

(insn 662 661 663 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))

(jump_insn 663 662 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:256 -1
     (nil))

;; Generating RTL for gimple basic block 53

;; __builtin_puts (&"Error reading file."[0]);

(insn 665 664 666 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:257 -1
     (nil))

(call_insn 666 665 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 667 666 668 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 -1
     (nil))

(call_insn 668 667 669 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 669 668 0)

;; Generating RTL for gimple basic block 54

;; 

(code_label 670 669 671 29 "" [0 uses])

(note 671 670 0 NOTE_INSN_BASIC_BLOCK)

;; token_94 = strtok (&in_line, " \n");

(insn 672 671 673 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 -1
     (nil))

(insn 673 672 674 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:262 -1
     (nil))

(insn 674 673 675 (set (reg:DI 5 di)
        (reg:DI 285)) read_procpar.cpp:262 -1
     (nil))

(call_insn 675 674 676 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 676 675 677 (set (reg:DI 286)
        (reg:DI 0 ax)) read_procpar.cpp:262 -1
     (nil))

(insn 677 676 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 286)) read_procpar.cpp:262 -1
     (nil))

;; token_95 = strtok (0B, " \n");

(insn 678 677 679 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:263 -1
     (nil))

(insn 679 678 680 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 -1
     (nil))

(call_insn 680 679 681 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 681 680 682 (set (reg:DI 287)
        (reg:DI 0 ax)) read_procpar.cpp:263 -1
     (nil))

(insn 682 681 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 287)) read_procpar.cpp:263 -1
     (nil))

;; _96 = strtod (token_95, 0B);

(insn 683 682 684 (set (reg:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))

(insn 684 683 685 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 -1
     (nil))

(insn 685 684 686 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:264 -1
     (nil))

(call_insn 686 685 687 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 687 686 0 (set (reg:DF 144 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 -1
     (nil))

;; _97 = (float) _96;

(insn 688 687 0 (set (reg:SF 145 [ D.5604 ])
        (float_truncate:SF (reg:DF 144 [ D.5603 ]))) read_procpar.cpp:264 -1
     (nil))

;; procpar_info_23(D)->pos2 = _97;

(insn 689 688 690 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))

(insn 690 689 0 (set (mem/j:SF (plus:DI (reg/f:DI 289)
                (const_int 336 [0x150])) [0 procpar_info_23(D)->pos2+0 S4 A64])
        (reg:SF 145 [ D.5604 ])) read_procpar.cpp:264 -1
     (nil))

;; Generating RTL for gimple basic block 55

;; 

(code_label 693 692 694 28 "" [0 uses])

(note 694 693 0 NOTE_INSN_BASIC_BLOCK)

;; _98 = strcmp (token_15, "pos3");

(insn 695 694 696 (set (reg:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 -1
     (nil))

(insn 696 695 697 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b04d64251c8 *.LC19>)) read_procpar.cpp:266 -1
     (nil))

(insn 697 696 698 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:266 -1
     (nil))

(call_insn/i 698 697 699 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 699 698 0 (set (reg:SI 146 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 -1
     (nil))

;; if (_98 == 0)

(insn 700 699 701 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (nil))

(jump_insn 701 700 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:266 -1
     (nil))

;; Generating RTL for gimple basic block 56

;; fgets (&in_line, 255, in_file_9);

(insn 703 702 704 (set (reg:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 -1
     (nil))

(insn 704 703 705 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 -1
     (nil))

(insn 705 704 706 (set (reg:DI 1 dx)
        (reg:DI 291)) read_procpar.cpp:268 -1
     (nil))

(insn 706 705 707 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 -1
     (nil))

(insn 707 706 708 (set (reg:DI 5 di)
        (reg:DI 292)) read_procpar.cpp:268 -1
     (nil))

(call_insn 708 707 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _99 = ferror (in_file_9);

(insn 709 708 710 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 -1
     (nil))

(insn 710 709 711 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:269 -1
     (nil))

(call_insn 711 710 712 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 712 711 0 (set (reg:SI 147 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 -1
     (nil))

;; _100 = _99 != 0;

(insn 713 712 714 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))

(insn 714 713 0 (set (reg:QI 148 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))

;; if (_100 != 0)

(insn 715 714 716 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))

(jump_insn 716 715 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:269 -1
     (nil))

;; Generating RTL for gimple basic block 57

;; __builtin_puts (&"Error reading file."[0]);

(insn 718 717 719 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:270 -1
     (nil))

(call_insn 719 718 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 720 719 721 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 -1
     (nil))

(call_insn 721 720 722 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 722 721 0)

;; Generating RTL for gimple basic block 58

;; 

(code_label 723 722 724 31 "" [0 uses])

(note 724 723 0 NOTE_INSN_BASIC_BLOCK)

;; token_101 = strtok (&in_line, " \n");

(insn 725 724 726 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 -1
     (nil))

(insn 726 725 727 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:275 -1
     (nil))

(insn 727 726 728 (set (reg:DI 5 di)
        (reg:DI 294)) read_procpar.cpp:275 -1
     (nil))

(call_insn 728 727 729 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 729 728 730 (set (reg:DI 295)
        (reg:DI 0 ax)) read_procpar.cpp:275 -1
     (nil))

(insn 730 729 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 295)) read_procpar.cpp:275 -1
     (nil))

;; token_102 = strtok (0B, " \n");

(insn 731 730 732 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:276 -1
     (nil))

(insn 732 731 733 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 -1
     (nil))

(call_insn 733 732 734 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 734 733 735 (set (reg:DI 296)
        (reg:DI 0 ax)) read_procpar.cpp:276 -1
     (nil))

(insn 735 734 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 296)) read_procpar.cpp:276 -1
     (nil))

;; _103 = strtod (token_102, 0B);

(insn 736 735 737 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))

(insn 737 736 738 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 -1
     (nil))

(insn 738 737 739 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:277 -1
     (nil))

(call_insn 739 738 740 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 740 739 0 (set (reg:DF 149 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 -1
     (nil))

;; _104 = (float) _103;

(insn 741 740 0 (set (reg:SF 150 [ D.5604 ])
        (float_truncate:SF (reg:DF 149 [ D.5603 ]))) read_procpar.cpp:277 -1
     (nil))

;; procpar_info_23(D)->pos3 = _104;

(insn 742 741 743 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))

(insn 743 742 0 (set (mem/j:SF (plus:DI (reg/f:DI 298)
                (const_int 340 [0x154])) [0 procpar_info_23(D)->pos3+0 S4 A32])
        (reg:SF 150 [ D.5604 ])) read_procpar.cpp:277 -1
     (nil))

;; Generating RTL for gimple basic block 59

;; 

(code_label 746 745 747 30 "" [0 uses])

(note 747 746 0 NOTE_INSN_BASIC_BLOCK)

;; _105 = strcmp (token_15, "vox1");

(insn 748 747 749 (set (reg:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 -1
     (nil))

(insn 749 748 750 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b04d6425260 *.LC20>)) read_procpar.cpp:279 -1
     (nil))

(insn 750 749 751 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:279 -1
     (nil))

(call_insn/i 751 750 752 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 752 751 0 (set (reg:SI 151 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 -1
     (nil))

;; if (_105 == 0)

(insn 753 752 754 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (nil))

(jump_insn 754 753 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:279 -1
     (nil))

;; Generating RTL for gimple basic block 60

;; fgets (&in_line, 255, in_file_9);

(insn 756 755 757 (set (reg:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 -1
     (nil))

(insn 757 756 758 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 -1
     (nil))

(insn 758 757 759 (set (reg:DI 1 dx)
        (reg:DI 300)) read_procpar.cpp:281 -1
     (nil))

(insn 759 758 760 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 -1
     (nil))

(insn 760 759 761 (set (reg:DI 5 di)
        (reg:DI 301)) read_procpar.cpp:281 -1
     (nil))

(call_insn 761 760 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _106 = ferror (in_file_9);

(insn 762 761 763 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 -1
     (nil))

(insn 763 762 764 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:282 -1
     (nil))

(call_insn 764 763 765 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 765 764 0 (set (reg:SI 152 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 -1
     (nil))

;; _107 = _106 != 0;

(insn 766 765 767 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))

(insn 767 766 0 (set (reg:QI 153 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))

;; if (_107 != 0)

(insn 768 767 769 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))

(jump_insn 769 768 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:282 -1
     (nil))

;; Generating RTL for gimple basic block 61

;; __builtin_puts (&"Error reading file."[0]);

(insn 771 770 772 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:283 -1
     (nil))

(call_insn 772 771 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 773 772 774 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 -1
     (nil))

(call_insn 774 773 775 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 775 774 0)

;; Generating RTL for gimple basic block 62

;; 

(code_label 776 775 777 33 "" [0 uses])

(note 777 776 0 NOTE_INSN_BASIC_BLOCK)

;; token_108 = strtok (&in_line, " \n");

(insn 778 777 779 (parallel [
            (set (reg:DI 303)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 -1
     (nil))

(insn 779 778 780 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:288 -1
     (nil))

(insn 780 779 781 (set (reg:DI 5 di)
        (reg:DI 303)) read_procpar.cpp:288 -1
     (nil))

(call_insn 781 780 782 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 782 781 783 (set (reg:DI 304)
        (reg:DI 0 ax)) read_procpar.cpp:288 -1
     (nil))

(insn 783 782 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 304)) read_procpar.cpp:288 -1
     (nil))

;; token_109 = strtok (0B, " \n");

(insn 784 783 785 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:289 -1
     (nil))

(insn 785 784 786 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 -1
     (nil))

(call_insn 786 785 787 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 787 786 788 (set (reg:DI 305)
        (reg:DI 0 ax)) read_procpar.cpp:289 -1
     (nil))

(insn 788 787 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 305)) read_procpar.cpp:289 -1
     (nil))

;; _110 = strtod (token_109, 0B);

(insn 789 788 790 (set (reg:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))

(insn 790 789 791 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 -1
     (nil))

(insn 791 790 792 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:290 -1
     (nil))

(call_insn 792 791 793 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 793 792 0 (set (reg:DF 154 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 -1
     (nil))

;; _111 = (float) _110;

(insn 794 793 0 (set (reg:SF 155 [ D.5604 ])
        (float_truncate:SF (reg:DF 154 [ D.5603 ]))) read_procpar.cpp:290 -1
     (nil))

;; procpar_info_23(D)->vox1 = _111;

(insn 795 794 796 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))

(insn 796 795 0 (set (mem/j:SF (plus:DI (reg/f:DI 307)
                (const_int 344 [0x158])) [0 procpar_info_23(D)->vox1+0 S4 A64])
        (reg:SF 155 [ D.5604 ])) read_procpar.cpp:290 -1
     (nil))

;; Generating RTL for gimple basic block 63

;; 

(code_label 799 798 800 32 "" [0 uses])

(note 800 799 0 NOTE_INSN_BASIC_BLOCK)

;; _112 = strcmp (token_15, "vox2");

(insn 801 800 802 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 -1
     (nil))

(insn 802 801 803 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b04d64252f8 *.LC21>)) read_procpar.cpp:292 -1
     (nil))

(insn 803 802 804 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:292 -1
     (nil))

(call_insn/i 804 803 805 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 805 804 0 (set (reg:SI 156 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 -1
     (nil))

;; if (_112 == 0)

(insn 806 805 807 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (nil))

(jump_insn 807 806 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:292 -1
     (nil))

;; Generating RTL for gimple basic block 64

;; fgets (&in_line, 255, in_file_9);

(insn 809 808 810 (set (reg:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 -1
     (nil))

(insn 810 809 811 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 -1
     (nil))

(insn 811 810 812 (set (reg:DI 1 dx)
        (reg:DI 309)) read_procpar.cpp:294 -1
     (nil))

(insn 812 811 813 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 -1
     (nil))

(insn 813 812 814 (set (reg:DI 5 di)
        (reg:DI 310)) read_procpar.cpp:294 -1
     (nil))

(call_insn 814 813 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _113 = ferror (in_file_9);

(insn 815 814 816 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 -1
     (nil))

(insn 816 815 817 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:295 -1
     (nil))

(call_insn 817 816 818 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 818 817 0 (set (reg:SI 157 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 -1
     (nil))

;; _114 = _113 != 0;

(insn 819 818 820 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))

(insn 820 819 0 (set (reg:QI 158 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))

;; if (_114 != 0)

(insn 821 820 822 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))

(jump_insn 822 821 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:295 -1
     (nil))

;; Generating RTL for gimple basic block 65

;; __builtin_puts (&"Error reading file."[0]);

(insn 824 823 825 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:296 -1
     (nil))

(call_insn 825 824 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 826 825 827 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 -1
     (nil))

(call_insn 827 826 828 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 828 827 0)

;; Generating RTL for gimple basic block 66

;; 

(code_label 829 828 830 35 "" [0 uses])

(note 830 829 0 NOTE_INSN_BASIC_BLOCK)

;; token_115 = strtok (&in_line, " \n");

(insn 831 830 832 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 -1
     (nil))

(insn 832 831 833 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:301 -1
     (nil))

(insn 833 832 834 (set (reg:DI 5 di)
        (reg:DI 312)) read_procpar.cpp:301 -1
     (nil))

(call_insn 834 833 835 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 835 834 836 (set (reg:DI 313)
        (reg:DI 0 ax)) read_procpar.cpp:301 -1
     (nil))

(insn 836 835 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 313)) read_procpar.cpp:301 -1
     (nil))

;; token_116 = strtok (0B, " \n");

(insn 837 836 838 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:302 -1
     (nil))

(insn 838 837 839 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 -1
     (nil))

(call_insn 839 838 840 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 840 839 841 (set (reg:DI 314)
        (reg:DI 0 ax)) read_procpar.cpp:302 -1
     (nil))

(insn 841 840 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 314)) read_procpar.cpp:302 -1
     (nil))

;; _117 = strtod (token_116, 0B);

(insn 842 841 843 (set (reg:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))

(insn 843 842 844 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 -1
     (nil))

(insn 844 843 845 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:303 -1
     (nil))

(call_insn 845 844 846 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 846 845 0 (set (reg:DF 159 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 -1
     (nil))

;; _118 = (float) _117;

(insn 847 846 0 (set (reg:SF 160 [ D.5604 ])
        (float_truncate:SF (reg:DF 159 [ D.5603 ]))) read_procpar.cpp:303 -1
     (nil))

;; procpar_info_23(D)->vox2 = _118;

(insn 848 847 849 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))

(insn 849 848 0 (set (mem/j:SF (plus:DI (reg/f:DI 316)
                (const_int 348 [0x15c])) [0 procpar_info_23(D)->vox2+0 S4 A32])
        (reg:SF 160 [ D.5604 ])) read_procpar.cpp:303 -1
     (nil))

;; Generating RTL for gimple basic block 67

;; 

(code_label 852 851 853 34 "" [0 uses])

(note 853 852 0 NOTE_INSN_BASIC_BLOCK)

;; _119 = strcmp (token_15, "vox3");

(insn 854 853 855 (set (reg:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 -1
     (nil))

(insn 855 854 856 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b04d6425390 *.LC22>)) read_procpar.cpp:305 -1
     (nil))

(insn 856 855 857 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:305 -1
     (nil))

(call_insn/i 857 856 858 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 858 857 0 (set (reg:SI 161 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 -1
     (nil))

;; if (_119 == 0)

(insn 859 858 860 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (nil))

(jump_insn 860 859 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:305 -1
     (nil))

;; Generating RTL for gimple basic block 68

;; fgets (&in_line, 255, in_file_9);

(insn 862 861 863 (set (reg:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 -1
     (nil))

(insn 863 862 864 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 -1
     (nil))

(insn 864 863 865 (set (reg:DI 1 dx)
        (reg:DI 318)) read_procpar.cpp:307 -1
     (nil))

(insn 865 864 866 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 -1
     (nil))

(insn 866 865 867 (set (reg:DI 5 di)
        (reg:DI 319)) read_procpar.cpp:307 -1
     (nil))

(call_insn 867 866 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _120 = ferror (in_file_9);

(insn 868 867 869 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 -1
     (nil))

(insn 869 868 870 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:308 -1
     (nil))

(call_insn 870 869 871 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 871 870 0 (set (reg:SI 162 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 -1
     (nil))

;; _121 = _120 != 0;

(insn 872 871 873 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))

(insn 873 872 0 (set (reg:QI 163 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))

;; if (_121 != 0)

(insn 874 873 875 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))

(jump_insn 875 874 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:308 -1
     (nil))

;; Generating RTL for gimple basic block 69

;; __builtin_puts (&"Error reading file."[0]);

(insn 877 876 878 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:309 -1
     (nil))

(call_insn 878 877 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 879 878 880 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 -1
     (nil))

(call_insn 880 879 881 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 881 880 0)

;; Generating RTL for gimple basic block 70

;; 

(code_label 882 881 883 37 "" [0 uses])

(note 883 882 0 NOTE_INSN_BASIC_BLOCK)

;; token_122 = strtok (&in_line, " \n");

(insn 884 883 885 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 -1
     (nil))

(insn 885 884 886 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:314 -1
     (nil))

(insn 886 885 887 (set (reg:DI 5 di)
        (reg:DI 321)) read_procpar.cpp:314 -1
     (nil))

(call_insn 887 886 888 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 888 887 889 (set (reg:DI 322)
        (reg:DI 0 ax)) read_procpar.cpp:314 -1
     (nil))

(insn 889 888 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 322)) read_procpar.cpp:314 -1
     (nil))

;; token_123 = strtok (0B, " \n");

(insn 890 889 891 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:315 -1
     (nil))

(insn 891 890 892 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 -1
     (nil))

(call_insn 892 891 893 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 893 892 894 (set (reg:DI 323)
        (reg:DI 0 ax)) read_procpar.cpp:315 -1
     (nil))

(insn 894 893 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 323)) read_procpar.cpp:315 -1
     (nil))

;; _124 = strtod (token_123, 0B);

(insn 895 894 896 (set (reg:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))

(insn 896 895 897 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 -1
     (nil))

(insn 897 896 898 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:316 -1
     (nil))

(call_insn 898 897 899 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 899 898 0 (set (reg:DF 164 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 -1
     (nil))

;; _125 = (float) _124;

(insn 900 899 0 (set (reg:SF 165 [ D.5604 ])
        (float_truncate:SF (reg:DF 164 [ D.5603 ]))) read_procpar.cpp:316 -1
     (nil))

;; procpar_info_23(D)->vox3 = _125;

(insn 901 900 902 (set (reg/f:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))

(insn 902 901 0 (set (mem/j:SF (plus:DI (reg/f:DI 325)
                (const_int 352 [0x160])) [0 procpar_info_23(D)->vox3+0 S4 A64])
        (reg:SF 165 [ D.5604 ])) read_procpar.cpp:316 -1
     (nil))

;; Generating RTL for gimple basic block 71

;; 

(code_label 905 904 906 36 "" [0 uses])

(note 906 905 0 NOTE_INSN_BASIC_BLOCK)

;; _126 = strcmp (token_15, "vtheta");

(insn 907 906 908 (set (reg:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 -1
     (nil))

(insn 908 907 909 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b04d6425428 *.LC23>)) read_procpar.cpp:318 -1
     (nil))

(insn 909 908 910 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:318 -1
     (nil))

(call_insn/i 910 909 911 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 911 910 0 (set (reg:SI 166 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 -1
     (nil))

;; if (_126 == 0)

(insn 912 911 913 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (nil))

(jump_insn 913 912 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:318 -1
     (nil))

;; Generating RTL for gimple basic block 72

;; fgets (&in_line, 255, in_file_9);

(insn 915 914 916 (set (reg:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 -1
     (nil))

(insn 916 915 917 (parallel [
            (set (reg:DI 328)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 -1
     (nil))

(insn 917 916 918 (set (reg:DI 1 dx)
        (reg:DI 327)) read_procpar.cpp:320 -1
     (nil))

(insn 918 917 919 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 -1
     (nil))

(insn 919 918 920 (set (reg:DI 5 di)
        (reg:DI 328)) read_procpar.cpp:320 -1
     (nil))

(call_insn 920 919 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _127 = ferror (in_file_9);

(insn 921 920 922 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 -1
     (nil))

(insn 922 921 923 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:321 -1
     (nil))

(call_insn 923 922 924 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 924 923 0 (set (reg:SI 167 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 -1
     (nil))

;; _128 = _127 != 0;

(insn 925 924 926 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))

(insn 926 925 0 (set (reg:QI 168 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))

;; if (_128 != 0)

(insn 927 926 928 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))

(jump_insn 928 927 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:321 -1
     (nil))

;; Generating RTL for gimple basic block 73

;; __builtin_puts (&"Error reading file."[0]);

(insn 930 929 931 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:322 -1
     (nil))

(call_insn 931 930 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 932 931 933 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 -1
     (nil))

(call_insn 933 932 934 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 934 933 0)

;; Generating RTL for gimple basic block 74

;; 

(code_label 935 934 936 38 "" [0 uses])

(note 936 935 0 NOTE_INSN_BASIC_BLOCK)

;; token_129 = strtok (&in_line, " \n");

(insn 937 936 938 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 -1
     (nil))

(insn 938 937 939 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:327 -1
     (nil))

(insn 939 938 940 (set (reg:DI 5 di)
        (reg:DI 330)) read_procpar.cpp:327 -1
     (nil))

(call_insn 940 939 941 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 941 940 942 (set (reg:DI 331)
        (reg:DI 0 ax)) read_procpar.cpp:327 -1
     (nil))

(insn 942 941 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 331)) read_procpar.cpp:327 -1
     (nil))

;; token_130 = strtok (0B, " \n");

(insn 943 942 944 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:328 -1
     (nil))

(insn 944 943 945 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 -1
     (nil))

(call_insn 945 944 946 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 946 945 947 (set (reg:DI 332)
        (reg:DI 0 ax)) read_procpar.cpp:328 -1
     (nil))

(insn 947 946 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 332)) read_procpar.cpp:328 -1
     (nil))

;; _131 = strtod (token_130, 0B);

(insn 948 947 949 (set (reg:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))

(insn 949 948 950 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 -1
     (nil))

(insn 950 949 951 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:329 -1
     (nil))

(call_insn 951 950 952 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 952 951 0 (set (reg:DF 169 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 -1
     (nil))

;; _132 = (float) _131;

(insn 953 952 0 (set (reg:SF 170 [ D.5604 ])
        (float_truncate:SF (reg:DF 169 [ D.5603 ]))) read_procpar.cpp:329 -1
     (nil))

;; procpar_info_23(D)->vtheta = _132;

(insn 954 953 955 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))

(insn 955 954 0 (set (mem/j:SF (plus:DI (reg/f:DI 334)
                (const_int 368 [0x170])) [0 procpar_info_23(D)->vtheta+0 S4 A64])
        (reg:SF 170 [ D.5604 ])) read_procpar.cpp:329 -1
     (nil))

;; Generating RTL for gimple basic block 75

;; 

(code_label 956 955 957 7 "" [0 uses])

(note 957 956 0 NOTE_INSN_BASIC_BLOCK)

;; fgets (&in_line, 5000, in_file_9);

(insn 958 957 959 (set (reg:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 -1
     (nil))

(insn 959 958 960 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 -1
     (nil))

(insn 960 959 961 (set (reg:DI 1 dx)
        (reg:DI 335)) read_procpar.cpp:339 -1
     (nil))

(insn 961 960 962 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 -1
     (nil))

(insn 962 961 963 (set (reg:DI 5 di)
        (reg:DI 336)) read_procpar.cpp:339 -1
     (nil))

(call_insn 963 962 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 76

;; _133 = ferror (in_file_9);

(insn 965 964 966 (set (reg:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 -1
     (nil))

(insn 966 965 967 (set (reg:DI 5 di)
        (reg:DI 337)) read_procpar.cpp:341 -1
     (nil))

(call_insn 967 966 968 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 968 967 0 (set (reg:SI 171 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 -1
     (nil))

;; _134 = _133 != 0;

(insn 969 968 970 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))

(insn 970 969 0 (set (reg:QI 172 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))

;; if (_134 != 0)

(insn 971 970 972 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))

(jump_insn 972 971 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:341 -1
     (nil))

;; Generating RTL for gimple basic block 77

;; __builtin_puts (&"Error reading file."[0]);

(insn 974 973 975 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:342 -1
     (nil))

(call_insn 975 974 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; exit (4);

(insn 976 975 977 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 -1
     (nil))

(call_insn 977 976 978 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 978 977 0)

;; Generating RTL for gimple basic block 78

;; 

(code_label 979 978 980 4 "" [0 uses])

(note 980 979 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = feof (in_file_9);

(insn 981 980 982 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 -1
     (nil))

(insn 982 981 983 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:51 -1
     (nil))

(call_insn 983 982 984 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x2b04d6292b00 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 984 983 0 (set (reg:SI 87 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 -1
     (nil))

;; _13 = _12 == 0;

(insn 985 984 986 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))

(insn 986 985 0 (set (reg:QI 88 [ D.5602 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))

;; if (_13 != 0)

(insn 988 986 989 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))

(jump_insn 989 988 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) read_procpar.cpp:51 -1
     (nil))

;; Generating RTL for gimple basic block 79

;; if (in_file_9 != 0B)

(insn 991 990 992 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 -1
     (nil))

(jump_insn 992 991 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) read_procpar.cpp:354 -1
     (nil))

;; Generating RTL for gimple basic block 80

;; __builtin_puts (&"okay"[0]);

(insn 994 993 995 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2b04d64254c0 *.LC24>)) read_procpar.cpp:356 -1
     (nil))

(call_insn 995 994 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _135 = stdout;

(insn 996 995 0 (set (reg/f:DI 173 [ D.5607 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x2b04d627c098 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 -1
     (nil))

;; fflush (_135);

(insn 997 996 998 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.5607 ])) read_procpar.cpp:357 -1
     (nil))

(call_insn 998 997 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2b04d627ba00 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; fclose (in_file_9);

(insn 999 998 1000 (set (reg:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 -1
     (nil))

(insn 1000 999 1001 (set (reg:DI 5 di)
        (reg:DI 339)) read_procpar.cpp:358 -1
     (nil))

(call_insn 1001 1000 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b04d627b900 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 81

;; 

(code_label 1002 1001 1003 40 "" [0 uses])

(note 1003 1002 0 NOTE_INSN_BASIC_BLOCK)

;; _136 = 2;

(insn 1004 1003 0 (set (reg:SI 174 [ D.5601 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 -1
     (nil))

;; in_line ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 82

;; <L98>:

(code_label 1005 1004 1006 41 "" [0 uses])

(note 1006 1005 0 NOTE_INSN_BASIC_BLOCK)

;; return _136;

(insn 1007 1006 1008 (set (reg:SI 175 [ <retval> ])
        (reg:SI 174 [ D.5601 ])) read_procpar.cpp:364 -1
     (nil))

(jump_insn 1008 1007 1009 (set (pc)
        (label_ref 0)) read_procpar.cpp:364 -1
     (nil))

(barrier 1009 1008 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 83 into block 82...
Merged blocks 82 and 83.
Merged 82 and 83 without moving.
Removing jump 1008.
Merging block 84 into block 82...
Merged blocks 82 and 84.
Merged 82 and 84 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) read_procpar.cpp:20 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) read_procpar.cpp:20 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5608+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:20 -1
     (nil))
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 83 [ D.5599 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 83 [ D.5599 ])) read_procpar.cpp:28 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b04d640a5f0 *.LC0>)) read_procpar.cpp:34 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 176)) read_procpar.cpp:34 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b04d627bd00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 84 [ D.5600 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 84 [ D.5600 ])) read_procpar.cpp:34 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) read_procpar.cpp:35 -1
     (nil)
 -> 27)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b04d640a688 *.LC1>)) read_procpar.cpp:36 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 4 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 -1
     (nil))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 26 25 27)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 27 26 28 5 2 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 1 dx)
        (reg:DI 177)) read_procpar.cpp:41 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 5 di)
        (reg:DI 178)) read_procpar.cpp:41 -1
     (nil))
(call_insn 34 33 35 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 5 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg:DI 179)) read_procpar.cpp:42 -1
     (nil))
(call_insn 37 36 38 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 5 (set (reg:SI 85 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))
(insn 40 39 41 5 (set (reg:QI 86 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:42 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) read_procpar.cpp:42 -1
     (nil)
 -> 49)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:43 -1
     (nil))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 6 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 -1
     (nil))
(call_insn 47 46 48 6 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 48 47 49)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 49 48 50 7 3 "" [1 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 51 50 52 7 (set (pc)
        (label_ref 979)) read_procpar.cpp:51 -1
     (nil)
 -> 979)
;;  succ:       79

(barrier 52 51 987)
;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       79
(code_label 987 52 53 8 39 "" [1 uses])
(note 53 987 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 -1
     (nil))
(insn 55 54 56 8 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 -1
     (nil))
(insn 56 55 57 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b04d640a7b8 *.LC3>)) read_procpar.cpp:65 -1
     (nil))
(insn 57 56 58 8 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:65 -1
     (nil))
(call_insn 58 57 59 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 59 58 60 8 (set (reg:DI 181)
        (reg:DI 0 ax)) read_procpar.cpp:65 -1
     (nil))
(insn 60 59 61 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 181)) read_procpar.cpp:65 -1
     (nil))
(insn 61 60 62 8 (set (reg:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 -1
     (nil))
(insn 62 61 63 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b04d640a850 *.LC4>)) read_procpar.cpp:80 -1
     (nil))
(insn 63 62 64 8 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:80 -1
     (nil))
(call_insn/i 64 63 65 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 66 8 (set (reg:SI 89 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 -1
     (nil))
(insn 66 65 67 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:80 -1
     (nil))
(jump_insn 67 66 68 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) read_procpar.cpp:80 -1
     (nil)
 -> 112)
;;  succ:       9 (FALLTHRU)
;;              12

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 -1
     (nil))
(insn 70 69 71 9 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 -1
     (nil))
(insn 71 70 72 9 (set (reg:DI 1 dx)
        (reg:DI 183)) read_procpar.cpp:90 -1
     (nil))
(insn 72 71 73 9 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 -1
     (nil))
(insn 73 72 74 9 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:90 -1
     (nil))
(call_insn 74 73 75 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 75 74 76 9 (set (reg:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 -1
     (nil))
(insn 76 75 77 9 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:92 -1
     (nil))
(call_insn 77 76 78 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 9 (set (reg:SI 90 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 -1
     (nil))
(insn 79 78 80 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))
(insn 80 79 81 9 (set (reg:QI 91 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))
(insn 81 80 82 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:92 -1
     (nil))
(jump_insn 82 81 83 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) read_procpar.cpp:92 -1
     (nil)
 -> 89)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:93 -1
     (nil))
(call_insn 85 84 86 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 86 85 87 10 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 -1
     (nil))
(call_insn 87 86 88 10 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 88 87 89)
;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 89 88 90 11 6 "" [1 uses])
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 11 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 -1
     (nil))
(insn 92 91 93 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:106 -1
     (nil))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (reg:DI 186)) read_procpar.cpp:106 -1
     (nil))
(call_insn 94 93 95 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 95 94 96 11 (set (reg:DI 187)
        (reg:DI 0 ax)) read_procpar.cpp:106 -1
     (nil))
(insn 96 95 97 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 187)) read_procpar.cpp:106 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:110 -1
     (nil))
(insn 98 97 99 11 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 -1
     (nil))
(call_insn 99 98 100 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 11 (set (reg:DI 188)
        (reg:DI 0 ax)) read_procpar.cpp:110 -1
     (nil))
(insn 101 100 102 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 188)) read_procpar.cpp:110 -1
     (nil))
(insn 102 101 103 11 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))
(insn 103 102 104 11 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:115 -1
     (nil))
(call_insn 105 104 106 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 11 (set (reg:DF 92 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 -1
     (nil))
(insn 107 106 108 11 (set (reg:SF 93 [ D.5604 ])
        (float_truncate:SF (reg:DF 92 [ D.5603 ]))) read_procpar.cpp:115 -1
     (nil))
(insn 108 107 109 11 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 -1
     (nil))
(insn 109 108 110 11 (set (mem/j:SF (reg/f:DI 190) [0 procpar_info_23(D)->acquision_time+0 S4 A64])
        (reg:SF 93 [ D.5604 ])) read_procpar.cpp:115 -1
     (nil))
(jump_insn 110 109 111 11 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 111 110 112)
;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 112 111 113 12 5 "" [1 uses])
(note 113 112 114 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 12 (set (reg:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 -1
     (nil))
(insn 115 114 116 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b04d640a980 *.LC6>)) read_procpar.cpp:122 -1
     (nil))
(insn 116 115 117 12 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:122 -1
     (nil))
(call_insn/i 117 116 118 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 118 117 119 12 (set (reg:SI 94 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 -1
     (nil))
(insn 119 118 120 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:122 -1
     (nil))
(jump_insn 120 119 121 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) read_procpar.cpp:122 -1
     (nil)
 -> 163)
;;  succ:       13 (FALLTHRU)
;;              16

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 13 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 -1
     (nil))
(insn 123 122 124 13 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 -1
     (nil))
(insn 124 123 125 13 (set (reg:DI 1 dx)
        (reg:DI 192)) read_procpar.cpp:125 -1
     (nil))
(insn 125 124 126 13 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 -1
     (nil))
(insn 126 125 127 13 (set (reg:DI 5 di)
        (reg:DI 193)) read_procpar.cpp:125 -1
     (nil))
(call_insn 127 126 128 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 128 127 129 13 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 -1
     (nil))
(insn 129 128 130 13 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:126 -1
     (nil))
(call_insn 130 129 131 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 131 130 132 13 (set (reg:SI 95 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 -1
     (nil))
(insn 132 131 133 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))
(insn 133 132 134 13 (set (reg:QI 96 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))
(insn 134 133 135 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:126 -1
     (nil))
(jump_insn 135 134 136 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) read_procpar.cpp:126 -1
     (nil)
 -> 142)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 136 135 137 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:127 -1
     (nil))
(call_insn 138 137 139 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 139 138 140 14 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 -1
     (nil))
(call_insn 140 139 141 14 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 141 140 142)
;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 142 141 143 15 9 "" [1 uses])
(note 143 142 144 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 15 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 -1
     (nil))
(insn 145 144 146 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b04d640aa18 *.LC7>)) read_procpar.cpp:132 -1
     (nil))
(insn 146 145 147 15 (set (reg:DI 5 di)
        (reg:DI 195)) read_procpar.cpp:132 -1
     (nil))
(call_insn 147 146 148 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 148 147 149 15 (set (reg:DI 196)
        (reg:DI 0 ax)) read_procpar.cpp:132 -1
     (nil))
(insn 149 148 150 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 196)) read_procpar.cpp:132 -1
     (nil))
(insn 150 149 151 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b04d640aab0 *.LC8>)) read_procpar.cpp:133 -1
     (nil))
(insn 151 150 152 15 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 -1
     (nil))
(call_insn 152 151 153 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 153 152 154 15 (set (reg:DI 197)
        (reg:DI 0 ax)) read_procpar.cpp:133 -1
     (nil))
(insn 154 153 155 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 197)) read_procpar.cpp:133 -1
     (nil))
(insn 155 154 156 15 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))
(insn 156 155 157 15 (parallel [
            (set (reg/f:DI 97 [ D.5605 ])
                (plus:DI (reg/f:DI 198)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 157 156 158 15 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 -1
     (nil))
(insn 158 157 159 15 (set (reg:DI 4 si)
        (reg:DI 199)) read_procpar.cpp:134 -1
     (nil))
(insn 159 158 160 15 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.5605 ])) read_procpar.cpp:134 -1
     (nil))
(call_insn 160 159 161 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b04d60bd600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 161 160 162 15 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 162 161 163)
;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 163 162 164 16 8 "" [1 uses])
(note 164 163 165 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 16 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 -1
     (nil))
(insn 166 165 167 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b04d640ab48 *.LC9>)) read_procpar.cpp:136 -1
     (nil))
(insn 167 166 168 16 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:136 -1
     (nil))
(call_insn/i 168 167 169 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 169 168 170 16 (set (reg:SI 98 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 -1
     (nil))
(insn 170 169 171 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:136 -1
     (nil))
(jump_insn 171 170 172 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) read_procpar.cpp:136 -1
     (nil)
 -> 216)
;;  succ:       17 (FALLTHRU)
;;              20

;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 172 171 173 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 17 (set (reg:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 -1
     (nil))
(insn 174 173 175 17 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 -1
     (nil))
(insn 175 174 176 17 (set (reg:DI 1 dx)
        (reg:DI 201)) read_procpar.cpp:138 -1
     (nil))
(insn 176 175 177 17 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 -1
     (nil))
(insn 177 176 178 17 (set (reg:DI 5 di)
        (reg:DI 202)) read_procpar.cpp:138 -1
     (nil))
(call_insn 178 177 179 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 179 178 180 17 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 -1
     (nil))
(insn 180 179 181 17 (set (reg:DI 5 di)
        (reg:DI 203)) read_procpar.cpp:139 -1
     (nil))
(call_insn 181 180 182 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 182 181 183 17 (set (reg:SI 99 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 -1
     (nil))
(insn 183 182 184 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))
(insn 184 183 185 17 (set (reg:QI 100 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))
(insn 185 184 186 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:139 -1
     (nil))
(jump_insn 186 185 187 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) read_procpar.cpp:139 -1
     (nil)
 -> 193)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 187 186 188 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:140 -1
     (nil))
(call_insn 189 188 190 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 190 189 191 18 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 -1
     (nil))
(call_insn 191 190 192 18 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 192 191 193)
;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 193 192 194 19 11 "" [1 uses])
(note 194 193 195 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 19 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 -1
     (nil))
(insn 196 195 197 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:145 -1
     (nil))
(insn 197 196 198 19 (set (reg:DI 5 di)
        (reg:DI 204)) read_procpar.cpp:145 -1
     (nil))
(call_insn 198 197 199 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 199 198 200 19 (set (reg:DI 205)
        (reg:DI 0 ax)) read_procpar.cpp:145 -1
     (nil))
(insn 200 199 201 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 205)) read_procpar.cpp:145 -1
     (nil))
(insn 201 200 202 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:146 -1
     (nil))
(insn 202 201 203 19 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 -1
     (nil))
(call_insn 203 202 204 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 204 203 205 19 (set (reg:DI 206)
        (reg:DI 0 ax)) read_procpar.cpp:146 -1
     (nil))
(insn 205 204 206 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 206)) read_procpar.cpp:146 -1
     (nil))
(insn 206 205 207 19 (set (reg:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))
(insn 207 206 208 19 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 -1
     (nil))
(insn 208 207 209 19 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:147 -1
     (nil))
(call_insn 209 208 210 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 19 (set (reg:DF 101 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 -1
     (nil))
(insn 211 210 212 19 (set (reg:SF 102 [ D.5604 ])
        (float_truncate:SF (reg:DF 101 [ D.5603 ]))) read_procpar.cpp:147 -1
     (nil))
(insn 212 211 213 19 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 -1
     (nil))
(insn 213 212 214 19 (set (mem/j:SF (plus:DI (reg/f:DI 208)
                (const_int 292 [0x124])) [0 procpar_info_23(D)->filter+0 S4 A32])
        (reg:SF 102 [ D.5604 ])) read_procpar.cpp:147 -1
     (nil))
(jump_insn 214 213 215 19 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 215 214 216)
;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 216 215 217 20 10 "" [1 uses])
(note 217 216 218 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 20 (set (reg:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 -1
     (nil))
(insn 219 218 220 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b04d640abe0 *.LC10>)) read_procpar.cpp:149 -1
     (nil))
(insn 220 219 221 20 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:149 -1
     (nil))
(call_insn/i 221 220 222 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 222 221 223 20 (set (reg:SI 103 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 -1
     (nil))
(insn 223 222 224 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:149 -1
     (nil))
(jump_insn 224 223 225 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) read_procpar.cpp:149 -1
     (nil)
 -> 270)
;;  succ:       21 (FALLTHRU)
;;              24

;; basic block 21, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 225 224 226 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 21 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 -1
     (nil))
(insn 227 226 228 21 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 -1
     (nil))
(insn 228 227 229 21 (set (reg:DI 1 dx)
        (reg:DI 210)) read_procpar.cpp:151 -1
     (nil))
(insn 229 228 230 21 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 -1
     (nil))
(insn 230 229 231 21 (set (reg:DI 5 di)
        (reg:DI 211)) read_procpar.cpp:151 -1
     (nil))
(call_insn 231 230 232 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 232 231 233 21 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 -1
     (nil))
(insn 233 232 234 21 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:152 -1
     (nil))
(call_insn 234 233 235 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 235 234 236 21 (set (reg:SI 104 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 -1
     (nil))
(insn 236 235 237 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))
(insn 237 236 238 21 (set (reg:QI 105 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))
(insn 238 237 239 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:152 -1
     (nil))
(jump_insn 239 238 240 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) read_procpar.cpp:152 -1
     (nil)
 -> 246)
;;  succ:       22 (FALLTHRU)
;;              23

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 240 239 241 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:153 -1
     (nil))
(call_insn 242 241 243 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 22 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 -1
     (nil))
(call_insn 244 243 245 22 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 245 244 246)
;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 246 245 247 23 13 "" [1 uses])
(note 247 246 248 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 23 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 -1
     (nil))
(insn 249 248 250 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:158 -1
     (nil))
(insn 250 249 251 23 (set (reg:DI 5 di)
        (reg:DI 213)) read_procpar.cpp:158 -1
     (nil))
(call_insn 251 250 252 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 23 (set (reg:DI 214)
        (reg:DI 0 ax)) read_procpar.cpp:158 -1
     (nil))
(insn 253 252 254 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 214)) read_procpar.cpp:158 -1
     (nil))
(insn 254 253 255 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:159 -1
     (nil))
(insn 255 254 256 23 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 -1
     (nil))
(call_insn 256 255 257 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 257 256 258 23 (set (reg:DI 215)
        (reg:DI 0 ax)) read_procpar.cpp:159 -1
     (nil))
(insn 258 257 259 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 215)) read_procpar.cpp:159 -1
     (nil))
(insn 259 258 260 23 (set (reg:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))
(insn 260 259 261 23 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 -1
     (nil))
(insn 261 260 262 23 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 -1
     (nil))
(insn 262 261 263 23 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:160 -1
     (nil))
(call_insn 263 262 264 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b04d634d300 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 264 263 265 23 (set (reg:DI 106 [ D.5606 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 -1
     (nil))
(insn 265 264 266 23 (set (reg:SI 107 [ D.5601 ])
        (subreg:SI (reg:DI 106 [ D.5606 ]) 0)) read_procpar.cpp:160 -1
     (nil))
(insn 266 265 267 23 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 -1
     (nil))
(insn 267 266 268 23 (set (mem/j:SI (plus:DI (reg/f:DI 217)
                (const_int 296 [0x128])) [0 procpar_info_23(D)->num_transients+0 S4 A64])
        (reg:SI 107 [ D.5601 ])) read_procpar.cpp:160 -1
     (nil))
(jump_insn 268 267 269 23 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 269 268 270)
;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 270 269 271 24 12 "" [1 uses])
(note 271 270 272 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 24 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 -1
     (nil))
(insn 273 272 274 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b04d640ac78 *.LC11>)) read_procpar.cpp:162 -1
     (nil))
(insn 274 273 275 24 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:162 -1
     (nil))
(call_insn/i 275 274 276 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 276 275 277 24 (set (reg:SI 108 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 -1
     (nil))
(insn 277 276 278 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:162 -1
     (nil))
(jump_insn 278 277 279 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) read_procpar.cpp:162 -1
     (nil)
 -> 324)
;;  succ:       25 (FALLTHRU)
;;              28

;; basic block 25, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 279 278 280 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 25 (set (reg:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 -1
     (nil))
(insn 281 280 282 25 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 -1
     (nil))
(insn 282 281 283 25 (set (reg:DI 1 dx)
        (reg:DI 219)) read_procpar.cpp:164 -1
     (nil))
(insn 283 282 284 25 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 -1
     (nil))
(insn 284 283 285 25 (set (reg:DI 5 di)
        (reg:DI 220)) read_procpar.cpp:164 -1
     (nil))
(call_insn 285 284 286 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 286 285 287 25 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 -1
     (nil))
(insn 287 286 288 25 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:165 -1
     (nil))
(call_insn 288 287 289 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 289 288 290 25 (set (reg:SI 109 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 -1
     (nil))
(insn 290 289 291 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))
(insn 291 290 292 25 (set (reg:QI 110 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))
(insn 292 291 293 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:165 -1
     (nil))
(jump_insn 293 292 294 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) read_procpar.cpp:165 -1
     (nil)
 -> 300)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 294 293 295 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:166 -1
     (nil))
(call_insn 296 295 297 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 297 296 298 26 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 -1
     (nil))
(call_insn 298 297 299 26 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 299 298 300)
;; basic block 27, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
(code_label 300 299 301 27 15 "" [1 uses])
(note 301 300 302 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 27 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 -1
     (nil))
(insn 303 302 304 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:171 -1
     (nil))
(insn 304 303 305 27 (set (reg:DI 5 di)
        (reg:DI 222)) read_procpar.cpp:171 -1
     (nil))
(call_insn 305 304 306 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 306 305 307 27 (set (reg:DI 223)
        (reg:DI 0 ax)) read_procpar.cpp:171 -1
     (nil))
(insn 307 306 308 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 223)) read_procpar.cpp:171 -1
     (nil))
(insn 308 307 309 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:172 -1
     (nil))
(insn 309 308 310 27 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 -1
     (nil))
(call_insn 310 309 311 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 311 310 312 27 (set (reg:DI 224)
        (reg:DI 0 ax)) read_procpar.cpp:172 -1
     (nil))
(insn 312 311 313 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 224)) read_procpar.cpp:172 -1
     (nil))
(insn 313 312 314 27 (set (reg:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))
(insn 314 313 315 27 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 -1
     (nil))
(insn 315 314 316 27 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 -1
     (nil))
(insn 316 315 317 27 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:173 -1
     (nil))
(call_insn 317 316 318 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b04d634d300 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 318 317 319 27 (set (reg:DI 111 [ D.5606 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 -1
     (nil))
(insn 319 318 320 27 (set (reg:SI 112 [ D.5601 ])
        (subreg:SI (reg:DI 111 [ D.5606 ]) 0)) read_procpar.cpp:173 -1
     (nil))
(insn 320 319 321 27 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 -1
     (nil))
(insn 321 320 322 27 (set (mem/j:SI (plus:DI (reg/f:DI 226)
                (const_int 300 [0x12c])) [0 procpar_info_23(D)->num_points+0 S4 A32])
        (reg:SI 112 [ D.5601 ])) read_procpar.cpp:173 -1
     (nil))
(jump_insn 322 321 323 27 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 323 322 324)
;; basic block 28, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 324 323 325 28 14 "" [1 uses])
(note 325 324 326 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 28 (set (reg:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 -1
     (nil))
(insn 327 326 328 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2b04d640ad10 *.LC12>)) read_procpar.cpp:175 -1
     (nil))
(insn 328 327 329 28 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:175 -1
     (nil))
(call_insn/i 329 328 330 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 330 329 331 28 (set (reg:SI 113 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 -1
     (nil))
(insn 331 330 332 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:175 -1
     (nil))
(jump_insn 332 331 333 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) read_procpar.cpp:175 -1
     (nil)
 -> 376)
;;  succ:       29 (FALLTHRU)
;;              32

;; basic block 29, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 333 332 334 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 29 (set (reg:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 -1
     (nil))
(insn 335 334 336 29 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 -1
     (nil))
(insn 336 335 337 29 (set (reg:DI 1 dx)
        (reg:DI 228)) read_procpar.cpp:177 -1
     (nil))
(insn 337 336 338 29 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 -1
     (nil))
(insn 338 337 339 29 (set (reg:DI 5 di)
        (reg:DI 229)) read_procpar.cpp:177 -1
     (nil))
(call_insn 339 338 340 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 340 339 341 29 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 -1
     (nil))
(insn 341 340 342 29 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:178 -1
     (nil))
(call_insn 342 341 343 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 343 342 344 29 (set (reg:SI 114 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 -1
     (nil))
(insn 344 343 345 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))
(insn 345 344 346 29 (set (reg:QI 115 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))
(insn 346 345 347 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:178 -1
     (nil))
(jump_insn 347 346 348 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) read_procpar.cpp:178 -1
     (nil)
 -> 354)
;;  succ:       30 (FALLTHRU)
;;              31

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 348 347 349 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:179 -1
     (nil))
(call_insn 350 349 351 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 351 350 352 30 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 -1
     (nil))
(call_insn 352 351 353 30 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 353 352 354)
;; basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29
(code_label 354 353 355 31 17 "" [1 uses])
(note 355 354 356 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 31 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 -1
     (nil))
(insn 357 356 358 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:184 -1
     (nil))
(insn 358 357 359 31 (set (reg:DI 5 di)
        (reg:DI 231)) read_procpar.cpp:184 -1
     (nil))
(call_insn 359 358 360 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 360 359 361 31 (set (reg:DI 232)
        (reg:DI 0 ax)) read_procpar.cpp:184 -1
     (nil))
(insn 361 360 362 31 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 232)) read_procpar.cpp:184 -1
     (nil))
(insn 362 361 363 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:185 -1
     (nil))
(insn 363 362 364 31 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 -1
     (nil))
(call_insn 364 363 365 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 365 364 366 31 (set (reg:DI 233)
        (reg:DI 0 ax)) read_procpar.cpp:185 -1
     (nil))
(insn 366 365 367 31 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 233)) read_procpar.cpp:185 -1
     (nil))
(insn 367 366 368 31 (set (reg:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))
(insn 368 367 369 31 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 -1
     (nil))
(insn 369 368 370 31 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:186 -1
     (nil))
(call_insn 370 369 371 31 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 31 (set (reg:DF 116 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 -1
     (nil))
(insn 372 371 373 31 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 -1
     (nil))
(insn 373 372 374 31 (set (mem/j:DF (plus:DI (reg/f:DI 235)
                (const_int 304 [0x130])) [0 procpar_info_23(D)->main_frequency+0 S8 A64])
        (reg:DF 116 [ D.5603 ])) read_procpar.cpp:186 -1
     (nil))
(jump_insn 374 373 375 31 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 375 374 376)
;; basic block 32, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
(code_label 376 375 377 32 16 "" [1 uses])
(note 377 376 378 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 32 (set (reg:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 -1
     (nil))
(insn 379 378 380 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b04d640ada8 *.LC13>)) read_procpar.cpp:188 -1
     (nil))
(insn 380 379 381 32 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:188 -1
     (nil))
(call_insn/i 381 380 382 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 382 381 383 32 (set (reg:SI 117 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 -1
     (nil))
(insn 383 382 384 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:188 -1
     (nil))
(jump_insn 384 383 385 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) read_procpar.cpp:188 -1
     (nil)
 -> 428)
;;  succ:       33 (FALLTHRU)
;;              36

;; basic block 33, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 385 384 386 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 33 (set (reg:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 -1
     (nil))
(insn 387 386 388 33 (parallel [
            (set (reg:DI 238)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 -1
     (nil))
(insn 388 387 389 33 (set (reg:DI 1 dx)
        (reg:DI 237)) read_procpar.cpp:190 -1
     (nil))
(insn 389 388 390 33 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 -1
     (nil))
(insn 390 389 391 33 (set (reg:DI 5 di)
        (reg:DI 238)) read_procpar.cpp:190 -1
     (nil))
(call_insn 391 390 392 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 392 391 393 33 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 -1
     (nil))
(insn 393 392 394 33 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:191 -1
     (nil))
(call_insn 394 393 395 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 395 394 396 33 (set (reg:SI 118 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 -1
     (nil))
(insn 396 395 397 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))
(insn 397 396 398 33 (set (reg:QI 119 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))
(insn 398 397 399 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:191 -1
     (nil))
(jump_insn 399 398 400 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) read_procpar.cpp:191 -1
     (nil)
 -> 406)
;;  succ:       34 (FALLTHRU)
;;              35

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 400 399 401 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:192 -1
     (nil))
(call_insn 402 401 403 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 403 402 404 34 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 -1
     (nil))
(call_insn 404 403 405 34 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 405 404 406)
;; basic block 35, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
(code_label 406 405 407 35 19 "" [1 uses])
(note 407 406 408 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 35 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 -1
     (nil))
(insn 409 408 410 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:197 -1
     (nil))
(insn 410 409 411 35 (set (reg:DI 5 di)
        (reg:DI 240)) read_procpar.cpp:197 -1
     (nil))
(call_insn 411 410 412 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 412 411 413 35 (set (reg:DI 241)
        (reg:DI 0 ax)) read_procpar.cpp:197 -1
     (nil))
(insn 413 412 414 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 241)) read_procpar.cpp:197 -1
     (nil))
(insn 414 413 415 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:198 -1
     (nil))
(insn 415 414 416 35 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 -1
     (nil))
(call_insn 416 415 417 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 417 416 418 35 (set (reg:DI 242)
        (reg:DI 0 ax)) read_procpar.cpp:198 -1
     (nil))
(insn 418 417 419 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 242)) read_procpar.cpp:198 -1
     (nil))
(insn 419 418 420 35 (set (reg:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))
(insn 420 419 421 35 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 -1
     (nil))
(insn 421 420 422 35 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:199 -1
     (nil))
(call_insn 422 421 423 35 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 423 422 424 35 (set (reg:DF 120 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 -1
     (nil))
(insn 424 423 425 35 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 -1
     (nil))
(insn 425 424 426 35 (set (mem/j:DF (plus:DI (reg/f:DI 244)
                (const_int 312 [0x138])) [0 procpar_info_23(D)->offset_frequency+0 S8 A64])
        (reg:DF 120 [ D.5603 ])) read_procpar.cpp:199 -1
     (nil))
(jump_insn 426 425 427 35 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 427 426 428)
;; basic block 36, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
(code_label 428 427 429 36 18 "" [1 uses])
(note 429 428 430 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 36 (set (reg:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 -1
     (nil))
(insn 431 430 432 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b04d640ae40 *.LC14>)) read_procpar.cpp:201 -1
     (nil))
(insn 432 431 433 36 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:201 -1
     (nil))
(call_insn/i 433 432 434 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 434 433 435 36 (set (reg:SI 121 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 -1
     (nil))
(insn 435 434 436 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:201 -1
     (nil))
(jump_insn 436 435 437 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 481)
            (pc))) read_procpar.cpp:201 -1
     (nil)
 -> 481)
;;  succ:       37 (FALLTHRU)
;;              40

;; basic block 37, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 437 436 438 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 37 (set (reg:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 -1
     (nil))
(insn 439 438 440 37 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 -1
     (nil))
(insn 440 439 441 37 (set (reg:DI 1 dx)
        (reg:DI 246)) read_procpar.cpp:203 -1
     (nil))
(insn 441 440 442 37 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 -1
     (nil))
(insn 442 441 443 37 (set (reg:DI 5 di)
        (reg:DI 247)) read_procpar.cpp:203 -1
     (nil))
(call_insn 443 442 444 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 444 443 445 37 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 -1
     (nil))
(insn 445 444 446 37 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:204 -1
     (nil))
(call_insn 446 445 447 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 447 446 448 37 (set (reg:SI 122 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 -1
     (nil))
(insn 448 447 449 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))
(insn 449 448 450 37 (set (reg:QI 123 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))
(insn 450 449 451 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:204 -1
     (nil))
(jump_insn 451 450 452 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) read_procpar.cpp:204 -1
     (nil)
 -> 458)
;;  succ:       38 (FALLTHRU)
;;              39

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 (FALLTHRU)
(note 452 451 453 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 38 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:205 -1
     (nil))
(call_insn 454 453 455 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 455 454 456 38 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 -1
     (nil))
(call_insn 456 455 457 38 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 457 456 458)
;; basic block 39, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 458 457 459 39 21 "" [1 uses])
(note 459 458 460 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 39 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 -1
     (nil))
(insn 461 460 462 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:210 -1
     (nil))
(insn 462 461 463 39 (set (reg:DI 5 di)
        (reg:DI 249)) read_procpar.cpp:210 -1
     (nil))
(call_insn 463 462 464 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 464 463 465 39 (set (reg:DI 250)
        (reg:DI 0 ax)) read_procpar.cpp:210 -1
     (nil))
(insn 465 464 466 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 250)) read_procpar.cpp:210 -1
     (nil))
(insn 466 465 467 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:211 -1
     (nil))
(insn 467 466 468 39 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 -1
     (nil))
(call_insn 468 467 469 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 469 468 470 39 (set (reg:DI 251)
        (reg:DI 0 ax)) read_procpar.cpp:211 -1
     (nil))
(insn 470 469 471 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 251)) read_procpar.cpp:211 -1
     (nil))
(insn 471 470 472 39 (set (reg:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))
(insn 472 471 473 39 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 -1
     (nil))
(insn 473 472 474 39 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:212 -1
     (nil))
(call_insn 474 473 475 39 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 475 474 476 39 (set (reg:DF 124 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 -1
     (nil))
(insn 476 475 477 39 (set (reg:SF 125 [ D.5604 ])
        (float_truncate:SF (reg:DF 124 [ D.5603 ]))) read_procpar.cpp:212 -1
     (nil))
(insn 477 476 478 39 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 -1
     (nil))
(insn 478 477 479 39 (set (mem/j:SF (plus:DI (reg/f:DI 253)
                (const_int 320 [0x140])) [0 procpar_info_23(D)->te+0 S4 A64])
        (reg:SF 125 [ D.5604 ])) read_procpar.cpp:212 -1
     (nil))
(jump_insn 479 478 480 39 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 480 479 481)
;; basic block 40, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
(code_label 481 480 482 40 20 "" [1 uses])
(note 482 481 483 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 40 (set (reg:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 -1
     (nil))
(insn 484 483 485 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b04d640aed8 *.LC15>)) read_procpar.cpp:214 -1
     (nil))
(insn 485 484 486 40 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:214 -1
     (nil))
(call_insn/i 486 485 487 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 487 486 488 40 (set (reg:SI 126 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 -1
     (nil))
(insn 488 487 489 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:214 -1
     (nil))
(jump_insn 489 488 490 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 534)
            (pc))) read_procpar.cpp:214 -1
     (nil)
 -> 534)
;;  succ:       41 (FALLTHRU)
;;              44

;; basic block 41, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 490 489 491 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 41 (set (reg:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 -1
     (nil))
(insn 492 491 493 41 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 -1
     (nil))
(insn 493 492 494 41 (set (reg:DI 1 dx)
        (reg:DI 255)) read_procpar.cpp:216 -1
     (nil))
(insn 494 493 495 41 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 -1
     (nil))
(insn 495 494 496 41 (set (reg:DI 5 di)
        (reg:DI 256)) read_procpar.cpp:216 -1
     (nil))
(call_insn 496 495 497 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 497 496 498 41 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 -1
     (nil))
(insn 498 497 499 41 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:217 -1
     (nil))
(call_insn 499 498 500 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 500 499 501 41 (set (reg:SI 127 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 -1
     (nil))
(insn 501 500 502 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))
(insn 502 501 503 41 (set (reg:QI 128 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))
(insn 503 502 504 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:217 -1
     (nil))
(jump_insn 504 503 505 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) read_procpar.cpp:217 -1
     (nil)
 -> 511)
;;  succ:       42 (FALLTHRU)
;;              43

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       41 (FALLTHRU)
(note 505 504 506 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:218 -1
     (nil))
(call_insn 507 506 508 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 508 507 509 42 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 -1
     (nil))
(call_insn 509 508 510 42 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 510 509 511)
;; basic block 43, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       41
(code_label 511 510 512 43 23 "" [1 uses])
(note 512 511 513 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 43 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 -1
     (nil))
(insn 514 513 515 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:223 -1
     (nil))
(insn 515 514 516 43 (set (reg:DI 5 di)
        (reg:DI 258)) read_procpar.cpp:223 -1
     (nil))
(call_insn 516 515 517 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 517 516 518 43 (set (reg:DI 259)
        (reg:DI 0 ax)) read_procpar.cpp:223 -1
     (nil))
(insn 518 517 519 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 259)) read_procpar.cpp:223 -1
     (nil))
(insn 519 518 520 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:224 -1
     (nil))
(insn 520 519 521 43 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 -1
     (nil))
(call_insn 521 520 522 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 522 521 523 43 (set (reg:DI 260)
        (reg:DI 0 ax)) read_procpar.cpp:224 -1
     (nil))
(insn 523 522 524 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 260)) read_procpar.cpp:224 -1
     (nil))
(insn 524 523 525 43 (set (reg:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))
(insn 525 524 526 43 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 -1
     (nil))
(insn 526 525 527 43 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:225 -1
     (nil))
(call_insn 527 526 528 43 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 528 527 529 43 (set (reg:DF 129 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 -1
     (nil))
(insn 529 528 530 43 (set (reg:SF 130 [ D.5604 ])
        (float_truncate:SF (reg:DF 129 [ D.5603 ]))) read_procpar.cpp:225 -1
     (nil))
(insn 530 529 531 43 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 -1
     (nil))
(insn 531 530 532 43 (set (mem/j:SF (plus:DI (reg/f:DI 262)
                (const_int 324 [0x144])) [0 procpar_info_23(D)->tm+0 S4 A32])
        (reg:SF 130 [ D.5604 ])) read_procpar.cpp:225 -1
     (nil))
(jump_insn 532 531 533 43 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 533 532 534)
;; basic block 44, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
(code_label 534 533 535 44 22 "" [1 uses])
(note 535 534 536 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 44 (set (reg:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 -1
     (nil))
(insn 537 536 538 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b04d6425000 *.LC16>)) read_procpar.cpp:227 -1
     (nil))
(insn 538 537 539 44 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:227 -1
     (nil))
(call_insn/i 539 538 540 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 540 539 541 44 (set (reg:SI 131 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 -1
     (nil))
(insn 541 540 542 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:227 -1
     (nil))
(jump_insn 542 541 543 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 587)
            (pc))) read_procpar.cpp:227 -1
     (nil)
 -> 587)
;;  succ:       45 (FALLTHRU)
;;              48

;; basic block 45, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 543 542 544 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 45 (set (reg:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 -1
     (nil))
(insn 545 544 546 45 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 -1
     (nil))
(insn 546 545 547 45 (set (reg:DI 1 dx)
        (reg:DI 264)) read_procpar.cpp:229 -1
     (nil))
(insn 547 546 548 45 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 -1
     (nil))
(insn 548 547 549 45 (set (reg:DI 5 di)
        (reg:DI 265)) read_procpar.cpp:229 -1
     (nil))
(call_insn 549 548 550 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 550 549 551 45 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 -1
     (nil))
(insn 551 550 552 45 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:230 -1
     (nil))
(call_insn 552 551 553 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 553 552 554 45 (set (reg:SI 132 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 -1
     (nil))
(insn 554 553 555 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))
(insn 555 554 556 45 (set (reg:QI 133 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))
(insn 556 555 557 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:230 -1
     (nil))
(jump_insn 557 556 558 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 564)
            (pc))) read_procpar.cpp:230 -1
     (nil)
 -> 564)
;;  succ:       46 (FALLTHRU)
;;              47

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       45 (FALLTHRU)
(note 558 557 559 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 559 558 560 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:231 -1
     (nil))
(call_insn 560 559 561 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 561 560 562 46 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 -1
     (nil))
(call_insn 562 561 563 46 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 563 562 564)
;; basic block 47, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       45
(code_label 564 563 565 47 25 "" [1 uses])
(note 565 564 566 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 47 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 -1
     (nil))
(insn 567 566 568 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:236 -1
     (nil))
(insn 568 567 569 47 (set (reg:DI 5 di)
        (reg:DI 267)) read_procpar.cpp:236 -1
     (nil))
(call_insn 569 568 570 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 570 569 571 47 (set (reg:DI 268)
        (reg:DI 0 ax)) read_procpar.cpp:236 -1
     (nil))
(insn 571 570 572 47 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 268)) read_procpar.cpp:236 -1
     (nil))
(insn 572 571 573 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:237 -1
     (nil))
(insn 573 572 574 47 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 -1
     (nil))
(call_insn 574 573 575 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 575 574 576 47 (set (reg:DI 269)
        (reg:DI 0 ax)) read_procpar.cpp:237 -1
     (nil))
(insn 576 575 577 47 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 269)) read_procpar.cpp:237 -1
     (nil))
(insn 577 576 578 47 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))
(insn 578 577 579 47 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 -1
     (nil))
(insn 579 578 580 47 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:238 -1
     (nil))
(call_insn 580 579 581 47 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 581 580 582 47 (set (reg:DF 134 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 -1
     (nil))
(insn 582 581 583 47 (set (reg:SF 135 [ D.5604 ])
        (float_truncate:SF (reg:DF 134 [ D.5603 ]))) read_procpar.cpp:238 -1
     (nil))
(insn 583 582 584 47 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 -1
     (nil))
(insn 584 583 585 47 (set (mem/j:SF (plus:DI (reg/f:DI 271)
                (const_int 328 [0x148])) [0 procpar_info_23(D)->gain+0 S4 A64])
        (reg:SF 135 [ D.5604 ])) read_procpar.cpp:238 -1
     (nil))
(jump_insn 585 584 586 47 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 586 585 587)
;; basic block 48, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
(code_label 587 586 588 48 24 "" [1 uses])
(note 588 587 589 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 48 (set (reg:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 -1
     (nil))
(insn 590 589 591 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b04d6425098 *.LC17>)) read_procpar.cpp:240 -1
     (nil))
(insn 591 590 592 48 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:240 -1
     (nil))
(call_insn/i 592 591 593 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 593 592 594 48 (set (reg:SI 136 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 -1
     (nil))
(insn 594 593 595 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:240 -1
     (nil))
(jump_insn 595 594 596 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 640)
            (pc))) read_procpar.cpp:240 -1
     (nil)
 -> 640)
;;  succ:       49 (FALLTHRU)
;;              52

;; basic block 49, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 596 595 597 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 49 (set (reg:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 -1
     (nil))
(insn 598 597 599 49 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 -1
     (nil))
(insn 599 598 600 49 (set (reg:DI 1 dx)
        (reg:DI 273)) read_procpar.cpp:242 -1
     (nil))
(insn 600 599 601 49 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 -1
     (nil))
(insn 601 600 602 49 (set (reg:DI 5 di)
        (reg:DI 274)) read_procpar.cpp:242 -1
     (nil))
(call_insn 602 601 603 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 603 602 604 49 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 -1
     (nil))
(insn 604 603 605 49 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:243 -1
     (nil))
(call_insn 605 604 606 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 606 605 607 49 (set (reg:SI 137 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 -1
     (nil))
(insn 607 606 608 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))
(insn 608 607 609 49 (set (reg:QI 138 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))
(insn 609 608 610 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:243 -1
     (nil))
(jump_insn 610 609 611 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) read_procpar.cpp:243 -1
     (nil)
 -> 617)
;;  succ:       50 (FALLTHRU)
;;              51

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 (FALLTHRU)
(note 611 610 612 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:244 -1
     (nil))
(call_insn 613 612 614 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 614 613 615 50 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 -1
     (nil))
(call_insn 615 614 616 50 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 616 615 617)
;; basic block 51, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       49
(code_label 617 616 618 51 27 "" [1 uses])
(note 618 617 619 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 51 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 -1
     (nil))
(insn 620 619 621 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:249 -1
     (nil))
(insn 621 620 622 51 (set (reg:DI 5 di)
        (reg:DI 276)) read_procpar.cpp:249 -1
     (nil))
(call_insn 622 621 623 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 623 622 624 51 (set (reg:DI 277)
        (reg:DI 0 ax)) read_procpar.cpp:249 -1
     (nil))
(insn 624 623 625 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 277)) read_procpar.cpp:249 -1
     (nil))
(insn 625 624 626 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:250 -1
     (nil))
(insn 626 625 627 51 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 -1
     (nil))
(call_insn 627 626 628 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 628 627 629 51 (set (reg:DI 278)
        (reg:DI 0 ax)) read_procpar.cpp:250 -1
     (nil))
(insn 629 628 630 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 278)) read_procpar.cpp:250 -1
     (nil))
(insn 630 629 631 51 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))
(insn 631 630 632 51 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 -1
     (nil))
(insn 632 631 633 51 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:251 -1
     (nil))
(call_insn 633 632 634 51 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 634 633 635 51 (set (reg:DF 139 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 -1
     (nil))
(insn 635 634 636 51 (set (reg:SF 140 [ D.5604 ])
        (float_truncate:SF (reg:DF 139 [ D.5603 ]))) read_procpar.cpp:251 -1
     (nil))
(insn 636 635 637 51 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 -1
     (nil))
(insn 637 636 638 51 (set (mem/j:SF (plus:DI (reg/f:DI 280)
                (const_int 332 [0x14c])) [0 procpar_info_23(D)->pos1+0 S4 A32])
        (reg:SF 140 [ D.5604 ])) read_procpar.cpp:251 -1
     (nil))
(jump_insn 638 637 639 51 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 639 638 640)
;; basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 640 639 641 52 26 "" [1 uses])
(note 641 640 642 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 52 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 -1
     (nil))
(insn 643 642 644 52 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b04d6425130 *.LC18>)) read_procpar.cpp:253 -1
     (nil))
(insn 644 643 645 52 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:253 -1
     (nil))
(call_insn/i 645 644 646 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 646 645 647 52 (set (reg:SI 141 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 -1
     (nil))
(insn 647 646 648 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:253 -1
     (nil))
(jump_insn 648 647 649 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 693)
            (pc))) read_procpar.cpp:253 -1
     (nil)
 -> 693)
;;  succ:       53 (FALLTHRU)
;;              56

;; basic block 53, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       52 (FALLTHRU)
(note 649 648 650 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 53 (set (reg:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 -1
     (nil))
(insn 651 650 652 53 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 -1
     (nil))
(insn 652 651 653 53 (set (reg:DI 1 dx)
        (reg:DI 282)) read_procpar.cpp:255 -1
     (nil))
(insn 653 652 654 53 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 -1
     (nil))
(insn 654 653 655 53 (set (reg:DI 5 di)
        (reg:DI 283)) read_procpar.cpp:255 -1
     (nil))
(call_insn 655 654 656 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 656 655 657 53 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 -1
     (nil))
(insn 657 656 658 53 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:256 -1
     (nil))
(call_insn 658 657 659 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 659 658 660 53 (set (reg:SI 142 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 -1
     (nil))
(insn 660 659 661 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))
(insn 661 660 662 53 (set (reg:QI 143 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))
(insn 662 661 663 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:256 -1
     (nil))
(jump_insn 663 662 664 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 670)
            (pc))) read_procpar.cpp:256 -1
     (nil)
 -> 670)
;;  succ:       54 (FALLTHRU)
;;              55

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL)
;;  pred:       53 (FALLTHRU)
(note 664 663 665 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:257 -1
     (nil))
(call_insn 666 665 667 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 667 666 668 54 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 -1
     (nil))
(call_insn 668 667 669 54 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 669 668 670)
;; basic block 55, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       53
(code_label 670 669 671 55 29 "" [1 uses])
(note 671 670 672 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 672 671 673 55 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 -1
     (nil))
(insn 673 672 674 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:262 -1
     (nil))
(insn 674 673 675 55 (set (reg:DI 5 di)
        (reg:DI 285)) read_procpar.cpp:262 -1
     (nil))
(call_insn 675 674 676 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 676 675 677 55 (set (reg:DI 286)
        (reg:DI 0 ax)) read_procpar.cpp:262 -1
     (nil))
(insn 677 676 678 55 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 286)) read_procpar.cpp:262 -1
     (nil))
(insn 678 677 679 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:263 -1
     (nil))
(insn 679 678 680 55 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 -1
     (nil))
(call_insn 680 679 681 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 681 680 682 55 (set (reg:DI 287)
        (reg:DI 0 ax)) read_procpar.cpp:263 -1
     (nil))
(insn 682 681 683 55 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 287)) read_procpar.cpp:263 -1
     (nil))
(insn 683 682 684 55 (set (reg:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))
(insn 684 683 685 55 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 -1
     (nil))
(insn 685 684 686 55 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:264 -1
     (nil))
(call_insn 686 685 687 55 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 687 686 688 55 (set (reg:DF 144 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 -1
     (nil))
(insn 688 687 689 55 (set (reg:SF 145 [ D.5604 ])
        (float_truncate:SF (reg:DF 144 [ D.5603 ]))) read_procpar.cpp:264 -1
     (nil))
(insn 689 688 690 55 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 -1
     (nil))
(insn 690 689 691 55 (set (mem/j:SF (plus:DI (reg/f:DI 289)
                (const_int 336 [0x150])) [0 procpar_info_23(D)->pos2+0 S4 A64])
        (reg:SF 145 [ D.5604 ])) read_procpar.cpp:264 -1
     (nil))
(jump_insn 691 690 692 55 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 692 691 693)
;; basic block 56, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       52
(code_label 693 692 694 56 28 "" [1 uses])
(note 694 693 695 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 695 694 696 56 (set (reg:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 -1
     (nil))
(insn 696 695 697 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b04d64251c8 *.LC19>)) read_procpar.cpp:266 -1
     (nil))
(insn 697 696 698 56 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:266 -1
     (nil))
(call_insn/i 698 697 699 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 699 698 700 56 (set (reg:SI 146 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 -1
     (nil))
(insn 700 699 701 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:266 -1
     (nil))
(jump_insn 701 700 702 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 746)
            (pc))) read_procpar.cpp:266 -1
     (nil)
 -> 746)
;;  succ:       57 (FALLTHRU)
;;              60

;; basic block 57, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       56 (FALLTHRU)
(note 702 701 703 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 57 (set (reg:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 -1
     (nil))
(insn 704 703 705 57 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 -1
     (nil))
(insn 705 704 706 57 (set (reg:DI 1 dx)
        (reg:DI 291)) read_procpar.cpp:268 -1
     (nil))
(insn 706 705 707 57 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 -1
     (nil))
(insn 707 706 708 57 (set (reg:DI 5 di)
        (reg:DI 292)) read_procpar.cpp:268 -1
     (nil))
(call_insn 708 707 709 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 709 708 710 57 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 -1
     (nil))
(insn 710 709 711 57 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:269 -1
     (nil))
(call_insn 711 710 712 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 712 711 713 57 (set (reg:SI 147 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 -1
     (nil))
(insn 713 712 714 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))
(insn 714 713 715 57 (set (reg:QI 148 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))
(insn 715 714 716 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:269 -1
     (nil))
(jump_insn 716 715 717 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 723)
            (pc))) read_procpar.cpp:269 -1
     (nil)
 -> 723)
;;  succ:       58 (FALLTHRU)
;;              59

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       57 (FALLTHRU)
(note 717 716 718 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 718 717 719 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:270 -1
     (nil))
(call_insn 719 718 720 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 720 719 721 58 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 -1
     (nil))
(call_insn 721 720 722 58 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 722 721 723)
;; basic block 59, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       57
(code_label 723 722 724 59 31 "" [1 uses])
(note 724 723 725 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 59 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 -1
     (nil))
(insn 726 725 727 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:275 -1
     (nil))
(insn 727 726 728 59 (set (reg:DI 5 di)
        (reg:DI 294)) read_procpar.cpp:275 -1
     (nil))
(call_insn 728 727 729 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 729 728 730 59 (set (reg:DI 295)
        (reg:DI 0 ax)) read_procpar.cpp:275 -1
     (nil))
(insn 730 729 731 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 295)) read_procpar.cpp:275 -1
     (nil))
(insn 731 730 732 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:276 -1
     (nil))
(insn 732 731 733 59 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 -1
     (nil))
(call_insn 733 732 734 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 734 733 735 59 (set (reg:DI 296)
        (reg:DI 0 ax)) read_procpar.cpp:276 -1
     (nil))
(insn 735 734 736 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 296)) read_procpar.cpp:276 -1
     (nil))
(insn 736 735 737 59 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))
(insn 737 736 738 59 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 -1
     (nil))
(insn 738 737 739 59 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:277 -1
     (nil))
(call_insn 739 738 740 59 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 740 739 741 59 (set (reg:DF 149 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 -1
     (nil))
(insn 741 740 742 59 (set (reg:SF 150 [ D.5604 ])
        (float_truncate:SF (reg:DF 149 [ D.5603 ]))) read_procpar.cpp:277 -1
     (nil))
(insn 742 741 743 59 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 -1
     (nil))
(insn 743 742 744 59 (set (mem/j:SF (plus:DI (reg/f:DI 298)
                (const_int 340 [0x154])) [0 procpar_info_23(D)->pos3+0 S4 A32])
        (reg:SF 150 [ D.5604 ])) read_procpar.cpp:277 -1
     (nil))
(jump_insn 744 743 745 59 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 745 744 746)
;; basic block 60, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       56
(code_label 746 745 747 60 30 "" [1 uses])
(note 747 746 748 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 748 747 749 60 (set (reg:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 -1
     (nil))
(insn 749 748 750 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b04d6425260 *.LC20>)) read_procpar.cpp:279 -1
     (nil))
(insn 750 749 751 60 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:279 -1
     (nil))
(call_insn/i 751 750 752 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 752 751 753 60 (set (reg:SI 151 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 -1
     (nil))
(insn 753 752 754 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:279 -1
     (nil))
(jump_insn 754 753 755 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 799)
            (pc))) read_procpar.cpp:279 -1
     (nil)
 -> 799)
;;  succ:       61 (FALLTHRU)
;;              64

;; basic block 61, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 (FALLTHRU)
(note 755 754 756 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 757 61 (set (reg:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 -1
     (nil))
(insn 757 756 758 61 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 -1
     (nil))
(insn 758 757 759 61 (set (reg:DI 1 dx)
        (reg:DI 300)) read_procpar.cpp:281 -1
     (nil))
(insn 759 758 760 61 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 -1
     (nil))
(insn 760 759 761 61 (set (reg:DI 5 di)
        (reg:DI 301)) read_procpar.cpp:281 -1
     (nil))
(call_insn 761 760 762 61 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 762 761 763 61 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 -1
     (nil))
(insn 763 762 764 61 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:282 -1
     (nil))
(call_insn 764 763 765 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 765 764 766 61 (set (reg:SI 152 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 -1
     (nil))
(insn 766 765 767 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))
(insn 767 766 768 61 (set (reg:QI 153 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))
(insn 768 767 769 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:282 -1
     (nil))
(jump_insn 769 768 770 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 776)
            (pc))) read_procpar.cpp:282 -1
     (nil)
 -> 776)
;;  succ:       62 (FALLTHRU)
;;              63

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL)
;;  pred:       61 (FALLTHRU)
(note 770 769 771 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:283 -1
     (nil))
(call_insn 772 771 773 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 773 772 774 62 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 -1
     (nil))
(call_insn 774 773 775 62 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 775 774 776)
;; basic block 63, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       61
(code_label 776 775 777 63 33 "" [1 uses])
(note 777 776 778 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 778 777 779 63 (parallel [
            (set (reg:DI 303)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 -1
     (nil))
(insn 779 778 780 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:288 -1
     (nil))
(insn 780 779 781 63 (set (reg:DI 5 di)
        (reg:DI 303)) read_procpar.cpp:288 -1
     (nil))
(call_insn 781 780 782 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 782 781 783 63 (set (reg:DI 304)
        (reg:DI 0 ax)) read_procpar.cpp:288 -1
     (nil))
(insn 783 782 784 63 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 304)) read_procpar.cpp:288 -1
     (nil))
(insn 784 783 785 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:289 -1
     (nil))
(insn 785 784 786 63 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 -1
     (nil))
(call_insn 786 785 787 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 787 786 788 63 (set (reg:DI 305)
        (reg:DI 0 ax)) read_procpar.cpp:289 -1
     (nil))
(insn 788 787 789 63 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 305)) read_procpar.cpp:289 -1
     (nil))
(insn 789 788 790 63 (set (reg:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))
(insn 790 789 791 63 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 -1
     (nil))
(insn 791 790 792 63 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:290 -1
     (nil))
(call_insn 792 791 793 63 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 793 792 794 63 (set (reg:DF 154 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 -1
     (nil))
(insn 794 793 795 63 (set (reg:SF 155 [ D.5604 ])
        (float_truncate:SF (reg:DF 154 [ D.5603 ]))) read_procpar.cpp:290 -1
     (nil))
(insn 795 794 796 63 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 -1
     (nil))
(insn 796 795 797 63 (set (mem/j:SF (plus:DI (reg/f:DI 307)
                (const_int 344 [0x158])) [0 procpar_info_23(D)->vox1+0 S4 A64])
        (reg:SF 155 [ D.5604 ])) read_procpar.cpp:290 -1
     (nil))
(jump_insn 797 796 798 63 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 798 797 799)
;; basic block 64, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       60
(code_label 799 798 800 64 32 "" [1 uses])
(note 800 799 801 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 801 800 802 64 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 -1
     (nil))
(insn 802 801 803 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b04d64252f8 *.LC21>)) read_procpar.cpp:292 -1
     (nil))
(insn 803 802 804 64 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:292 -1
     (nil))
(call_insn/i 804 803 805 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 805 804 806 64 (set (reg:SI 156 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 -1
     (nil))
(insn 806 805 807 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:292 -1
     (nil))
(jump_insn 807 806 808 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 852)
            (pc))) read_procpar.cpp:292 -1
     (nil)
 -> 852)
;;  succ:       65 (FALLTHRU)
;;              68

;; basic block 65, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 (FALLTHRU)
(note 808 807 809 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 65 (set (reg:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 -1
     (nil))
(insn 810 809 811 65 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 -1
     (nil))
(insn 811 810 812 65 (set (reg:DI 1 dx)
        (reg:DI 309)) read_procpar.cpp:294 -1
     (nil))
(insn 812 811 813 65 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 -1
     (nil))
(insn 813 812 814 65 (set (reg:DI 5 di)
        (reg:DI 310)) read_procpar.cpp:294 -1
     (nil))
(call_insn 814 813 815 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 815 814 816 65 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 -1
     (nil))
(insn 816 815 817 65 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:295 -1
     (nil))
(call_insn 817 816 818 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 818 817 819 65 (set (reg:SI 157 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 -1
     (nil))
(insn 819 818 820 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))
(insn 820 819 821 65 (set (reg:QI 158 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))
(insn 821 820 822 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:295 -1
     (nil))
(jump_insn 822 821 823 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 829)
            (pc))) read_procpar.cpp:295 -1
     (nil)
 -> 829)
;;  succ:       66 (FALLTHRU)
;;              67

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       65 (FALLTHRU)
(note 823 822 824 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 824 823 825 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:296 -1
     (nil))
(call_insn 825 824 826 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 826 825 827 66 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 -1
     (nil))
(call_insn 827 826 828 66 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 828 827 829)
;; basic block 67, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       65
(code_label 829 828 830 67 35 "" [1 uses])
(note 830 829 831 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 67 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 -1
     (nil))
(insn 832 831 833 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:301 -1
     (nil))
(insn 833 832 834 67 (set (reg:DI 5 di)
        (reg:DI 312)) read_procpar.cpp:301 -1
     (nil))
(call_insn 834 833 835 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 835 834 836 67 (set (reg:DI 313)
        (reg:DI 0 ax)) read_procpar.cpp:301 -1
     (nil))
(insn 836 835 837 67 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 313)) read_procpar.cpp:301 -1
     (nil))
(insn 837 836 838 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:302 -1
     (nil))
(insn 838 837 839 67 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 -1
     (nil))
(call_insn 839 838 840 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 840 839 841 67 (set (reg:DI 314)
        (reg:DI 0 ax)) read_procpar.cpp:302 -1
     (nil))
(insn 841 840 842 67 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 314)) read_procpar.cpp:302 -1
     (nil))
(insn 842 841 843 67 (set (reg:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))
(insn 843 842 844 67 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 -1
     (nil))
(insn 844 843 845 67 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:303 -1
     (nil))
(call_insn 845 844 846 67 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 846 845 847 67 (set (reg:DF 159 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 -1
     (nil))
(insn 847 846 848 67 (set (reg:SF 160 [ D.5604 ])
        (float_truncate:SF (reg:DF 159 [ D.5603 ]))) read_procpar.cpp:303 -1
     (nil))
(insn 848 847 849 67 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 -1
     (nil))
(insn 849 848 850 67 (set (mem/j:SF (plus:DI (reg/f:DI 316)
                (const_int 348 [0x15c])) [0 procpar_info_23(D)->vox2+0 S4 A32])
        (reg:SF 160 [ D.5604 ])) read_procpar.cpp:303 -1
     (nil))
(jump_insn 850 849 851 67 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 851 850 852)
;; basic block 68, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       64
(code_label 852 851 853 68 34 "" [1 uses])
(note 853 852 854 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 854 853 855 68 (set (reg:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 -1
     (nil))
(insn 855 854 856 68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b04d6425390 *.LC22>)) read_procpar.cpp:305 -1
     (nil))
(insn 856 855 857 68 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:305 -1
     (nil))
(call_insn/i 857 856 858 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 858 857 859 68 (set (reg:SI 161 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 -1
     (nil))
(insn 859 858 860 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:305 -1
     (nil))
(jump_insn 860 859 861 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 905)
            (pc))) read_procpar.cpp:305 -1
     (nil)
 -> 905)
;;  succ:       69 (FALLTHRU)
;;              72

;; basic block 69, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 (FALLTHRU)
(note 861 860 862 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 862 861 863 69 (set (reg:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 -1
     (nil))
(insn 863 862 864 69 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 -1
     (nil))
(insn 864 863 865 69 (set (reg:DI 1 dx)
        (reg:DI 318)) read_procpar.cpp:307 -1
     (nil))
(insn 865 864 866 69 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 -1
     (nil))
(insn 866 865 867 69 (set (reg:DI 5 di)
        (reg:DI 319)) read_procpar.cpp:307 -1
     (nil))
(call_insn 867 866 868 69 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 868 867 869 69 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 -1
     (nil))
(insn 869 868 870 69 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:308 -1
     (nil))
(call_insn 870 869 871 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 871 870 872 69 (set (reg:SI 162 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 -1
     (nil))
(insn 872 871 873 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))
(insn 873 872 874 69 (set (reg:QI 163 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))
(insn 874 873 875 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:308 -1
     (nil))
(jump_insn 875 874 876 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 882)
            (pc))) read_procpar.cpp:308 -1
     (nil)
 -> 882)
;;  succ:       70 (FALLTHRU)
;;              71

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 (FALLTHRU)
(note 876 875 877 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:309 -1
     (nil))
(call_insn 878 877 879 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 879 878 880 70 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 -1
     (nil))
(call_insn 880 879 881 70 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 881 880 882)
;; basic block 71, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       69
(code_label 882 881 883 71 37 "" [1 uses])
(note 883 882 884 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 71 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 -1
     (nil))
(insn 885 884 886 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:314 -1
     (nil))
(insn 886 885 887 71 (set (reg:DI 5 di)
        (reg:DI 321)) read_procpar.cpp:314 -1
     (nil))
(call_insn 887 886 888 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 888 887 889 71 (set (reg:DI 322)
        (reg:DI 0 ax)) read_procpar.cpp:314 -1
     (nil))
(insn 889 888 890 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 322)) read_procpar.cpp:314 -1
     (nil))
(insn 890 889 891 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:315 -1
     (nil))
(insn 891 890 892 71 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 -1
     (nil))
(call_insn 892 891 893 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 893 892 894 71 (set (reg:DI 323)
        (reg:DI 0 ax)) read_procpar.cpp:315 -1
     (nil))
(insn 894 893 895 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 323)) read_procpar.cpp:315 -1
     (nil))
(insn 895 894 896 71 (set (reg:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))
(insn 896 895 897 71 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 -1
     (nil))
(insn 897 896 898 71 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:316 -1
     (nil))
(call_insn 898 897 899 71 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 899 898 900 71 (set (reg:DF 164 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 -1
     (nil))
(insn 900 899 901 71 (set (reg:SF 165 [ D.5604 ])
        (float_truncate:SF (reg:DF 164 [ D.5603 ]))) read_procpar.cpp:316 -1
     (nil))
(insn 901 900 902 71 (set (reg/f:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 -1
     (nil))
(insn 902 901 903 71 (set (mem/j:SF (plus:DI (reg/f:DI 325)
                (const_int 352 [0x160])) [0 procpar_info_23(D)->vox3+0 S4 A64])
        (reg:SF 165 [ D.5604 ])) read_procpar.cpp:316 -1
     (nil))
(jump_insn 903 902 904 71 (set (pc)
        (label_ref 956)) -1
     (nil)
 -> 956)
;;  succ:       76

(barrier 904 903 905)
;; basic block 72, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       68
(code_label 905 904 906 72 36 "" [1 uses])
(note 906 905 907 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 907 906 908 72 (set (reg:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 -1
     (nil))
(insn 908 907 909 72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b04d6425428 *.LC23>)) read_procpar.cpp:318 -1
     (nil))
(insn 909 908 910 72 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:318 -1
     (nil))
(call_insn/i 910 909 911 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 911 910 912 72 (set (reg:SI 166 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 -1
     (nil))
(insn 912 911 913 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:318 -1
     (nil))
(jump_insn 913 912 914 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 956)
            (pc))) read_procpar.cpp:318 -1
     (nil)
 -> 956)
;;  succ:       73 (FALLTHRU)
;;              76

;; basic block 73, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       72 (FALLTHRU)
(note 914 913 915 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 915 914 916 73 (set (reg:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 -1
     (nil))
(insn 916 915 917 73 (parallel [
            (set (reg:DI 328)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 -1
     (nil))
(insn 917 916 918 73 (set (reg:DI 1 dx)
        (reg:DI 327)) read_procpar.cpp:320 -1
     (nil))
(insn 918 917 919 73 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 -1
     (nil))
(insn 919 918 920 73 (set (reg:DI 5 di)
        (reg:DI 328)) read_procpar.cpp:320 -1
     (nil))
(call_insn 920 919 921 73 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 921 920 922 73 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 -1
     (nil))
(insn 922 921 923 73 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:321 -1
     (nil))
(call_insn 923 922 924 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 924 923 925 73 (set (reg:SI 167 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 -1
     (nil))
(insn 925 924 926 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))
(insn 926 925 927 73 (set (reg:QI 168 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))
(insn 927 926 928 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:321 -1
     (nil))
(jump_insn 928 927 929 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 935)
            (pc))) read_procpar.cpp:321 -1
     (nil)
 -> 935)
;;  succ:       74 (FALLTHRU)
;;              75

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       73 (FALLTHRU)
(note 929 928 930 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 931 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:322 -1
     (nil))
(call_insn 931 930 932 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 932 931 933 74 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 -1
     (nil))
(call_insn 933 932 934 74 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 934 933 935)
;; basic block 75, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       73
(code_label 935 934 936 75 38 "" [1 uses])
(note 936 935 937 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 75 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 -1
     (nil))
(insn 938 937 939 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:327 -1
     (nil))
(insn 939 938 940 75 (set (reg:DI 5 di)
        (reg:DI 330)) read_procpar.cpp:327 -1
     (nil))
(call_insn 940 939 941 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 941 940 942 75 (set (reg:DI 331)
        (reg:DI 0 ax)) read_procpar.cpp:327 -1
     (nil))
(insn 942 941 943 75 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 331)) read_procpar.cpp:327 -1
     (nil))
(insn 943 942 944 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:328 -1
     (nil))
(insn 944 943 945 75 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 -1
     (nil))
(call_insn 945 944 946 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 946 945 947 75 (set (reg:DI 332)
        (reg:DI 0 ax)) read_procpar.cpp:328 -1
     (nil))
(insn 947 946 948 75 (set (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 332)) read_procpar.cpp:328 -1
     (nil))
(insn 948 947 949 75 (set (reg:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))
(insn 949 948 950 75 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 -1
     (nil))
(insn 950 949 951 75 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:329 -1
     (nil))
(call_insn 951 950 952 75 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 952 951 953 75 (set (reg:DF 169 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 -1
     (nil))
(insn 953 952 954 75 (set (reg:SF 170 [ D.5604 ])
        (float_truncate:SF (reg:DF 169 [ D.5603 ]))) read_procpar.cpp:329 -1
     (nil))
(insn 954 953 955 75 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 -1
     (nil))
(insn 955 954 956 75 (set (mem/j:SF (plus:DI (reg/f:DI 334)
                (const_int 368 [0x170])) [0 procpar_info_23(D)->vtheta+0 S4 A64])
        (reg:SF 170 [ D.5604 ])) read_procpar.cpp:329 -1
     (nil))
;;  succ:       76 (FALLTHRU)

;; basic block 76, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              15
;;              19
;;              23
;;              27
;;              31
;;              35
;;              39
;;              43
;;              47
;;              51
;;              55
;;              59
;;              63
;;              67
;;              71
;;              72
;;              75 (FALLTHRU)
(code_label 956 955 957 76 7 "" [17 uses])
(note 957 956 958 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 958 957 959 76 (set (reg:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 -1
     (nil))
(insn 959 958 960 76 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 -1
     (nil))
(insn 960 959 961 76 (set (reg:DI 1 dx)
        (reg:DI 335)) read_procpar.cpp:339 -1
     (nil))
(insn 961 960 962 76 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 -1
     (nil))
(insn 962 961 963 76 (set (reg:DI 5 di)
        (reg:DI 336)) read_procpar.cpp:339 -1
     (nil))
(call_insn 963 962 964 76 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       77 (FALLTHRU)

;; basic block 77, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL)
;;  pred:       76 (FALLTHRU)
(note 964 963 965 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 965 964 966 77 (set (reg:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 -1
     (nil))
(insn 966 965 967 77 (set (reg:DI 5 di)
        (reg:DI 337)) read_procpar.cpp:341 -1
     (nil))
(call_insn 967 966 968 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 968 967 969 77 (set (reg:SI 171 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 -1
     (nil))
(insn 969 968 970 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))
(insn 970 969 971 77 (set (reg:QI 172 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))
(insn 971 970 972 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:341 -1
     (nil))
(jump_insn 972 971 973 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 979)
            (pc))) read_procpar.cpp:341 -1
     (nil)
 -> 979)
;;  succ:       78 (FALLTHRU)
;;              79 (DFS_BACK)

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL)
;;  pred:       77 (FALLTHRU)
(note 973 972 974 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 974 973 975 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:342 -1
     (nil))
(call_insn 975 974 976 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 976 975 977 78 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 -1
     (nil))
(call_insn 977 976 978 78 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 978 977 979)
;; basic block 79, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              77 (DFS_BACK)
(code_label 979 978 980 79 4 "" [2 uses])
(note 980 979 981 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 981 980 982 79 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 -1
     (nil))
(insn 982 981 983 79 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:51 -1
     (nil))
(call_insn 983 982 984 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x2b04d6292b00 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 984 983 985 79 (set (reg:SI 87 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 -1
     (nil))
(insn 985 984 986 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))
(insn 986 985 988 79 (set (reg:QI 88 [ D.5602 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))
(insn 988 986 989 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:51 -1
     (nil))
(jump_insn 989 988 990 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) read_procpar.cpp:51 -1
     (nil)
 -> 987)
;;  succ:       8
;;              80 (FALLTHRU)

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL)
;;  pred:       79 (FALLTHRU)
(note 990 989 991 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 991 990 992 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 -1
     (nil))
(jump_insn 992 991 993 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1002)
            (pc))) read_procpar.cpp:354 -1
     (nil)
 -> 1002)
;;  succ:       81 (FALLTHRU)
;;              82

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL)
;;  pred:       80 (FALLTHRU)
(note 993 992 994 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 994 993 995 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2b04d64254c0 *.LC24>)) read_procpar.cpp:356 -1
     (nil))
(call_insn 995 994 996 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 996 995 997 81 (set (reg/f:DI 173 [ D.5607 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x2b04d627c098 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 -1
     (nil))
(insn 997 996 998 81 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.5607 ])) read_procpar.cpp:357 -1
     (nil))
(call_insn 998 997 999 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2b04d627ba00 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 999 998 1000 81 (set (reg:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 -1
     (nil))
(insn 1000 999 1001 81 (set (reg:DI 5 di)
        (reg:DI 339)) read_procpar.cpp:358 -1
     (nil))
(call_insn 1001 1000 1002 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b04d627b900 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       82 (FALLTHRU)

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;;              81 (FALLTHRU)
(code_label 1002 1001 1003 82 40 "" [1 uses])
(note 1003 1002 1004 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1004 1003 1007 82 (set (reg:SI 174 [ D.5601 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 -1
     (nil))
(insn 1007 1004 1011 82 (set (reg:SI 175 [ <retval> ])
        (reg:SI 174 [ D.5601 ])) read_procpar.cpp:364 -1
     (nil))
(insn 1011 1007 1012 82 (set (reg/i:SI 0 ax)
        (reg:SI 175 [ <retval> ])) read_procpar.cpp:365 -1
     (nil))
(insn 1012 1011 1013 82 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5608+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_procpar.cpp:365 -1
     (nil))
(jump_insn 1013 1012 1019 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1016)
            (pc))) read_procpar.cpp:365 -1
     (nil)
 -> 1016)
;;  succ:       86
;;              85 (FALLTHRU)

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
(note 1019 1013 1014 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(call_insn 1014 1019 1015 85 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b04d63c1800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_procpar.cpp:365 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 1015 1014 1016)
;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       82
(code_label 1016 1015 1020 86 42 "" [1 uses])
(note 1020 1016 1017 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1017 1020 0 86 (use (reg/i:SI 0 ax)) read_procpar.cpp:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

