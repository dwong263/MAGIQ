
;; Function int read_procpar(Procpar_info*, char*) (_Z12read_procparP12Procpar_infoPc, funcdef_no=2, decl_uid=5386, cgraph_uid=2, symbol_order=2)



try_optimize_cfg iteration 1

Removing jump 116.
Removing jump 167.
Removing jump 220.
Removing jump 274.
Removing jump 328.
Removing jump 380.
Removing jump 432.
Removing jump 485.
Removing jump 538.
Removing jump 591.
Removing jump 644.
Removing jump 697.
Removing jump 750.
Removing jump 803.
Removing jump 856.
Removing jump 909.
Removing jump 986.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) read_procpar.cpp:20 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) read_procpar.cpp:20 89 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5711+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:20 986 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 87 [ D.5702 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 87 [ D.5702 ])) read_procpar.cpp:28 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7d7ebbe360 *.LC0>)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7d7ee2c510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 88 [ D.5703 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 88 [ D.5703 ])) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) read_procpar.cpp:35 612 {*jcc_1}
     (nil)
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7d7ebbe3f0 *.LC1>)) read_procpar.cpp:36 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 90 {*movsi_internal}
     (nil))
(call_insn 25 24 27 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 27 25 28 4 2 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 218 {*adddi_1}
     (nil))
(insn 31 30 32 4 (set (reg:DI 1 dx)
        (reg:DI 181)) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 4 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 89 {*movdi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 5 di)
        (reg:DI 183)) read_procpar.cpp:42 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 4 (set (reg:SI 89 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 90 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:42 3 {*cmpsi_ccno_1}
     (nil))
(insn 40 39 41 4 (set (reg:QI 90 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 607 {*setcc_qi}
     (nil))
(insn 41 40 42 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:42 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) read_procpar.cpp:42 612 {*jcc_1}
     (nil)
 -> 49)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:43 89 {*movdi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 5 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 90 {*movsi_internal}
     (nil))
(call_insn 47 46 49 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              77 [100.0%]  (FALLTHRU)
(code_label 49 47 50 6 3 "" [1 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 89 {*movdi_internal}
     (nil))
(insn 52 51 53 6 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:51 89 {*movdi_internal}
     (nil))
(call_insn 53 52 54 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f7d7ee3e510 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 6 (set (reg:SI 91 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 90 {*movsi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:51 3 {*cmpsi_ccno_1}
     (nil))
(insn 56 55 57 6 (set (reg:QI 92 [ D.5705 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 607 {*setcc_qi}
     (nil))
(insn 57 56 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:51 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 58 57 59 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) read_procpar.cpp:51 612 {*jcc_1}
     (nil)
 -> 988)
;;  succ:       7 (FALLTHRU)
;;              78

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 217 {*addsi_1}
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 218 {*adddi_1}
     (nil))
(insn 62 61 63 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7d7ebbe510 *.LC3>)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(call_insn 64 63 65 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 66 7 (set (reg:DI 186)
        (reg:DI 0 ax)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 66 65 67 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 186)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(insn 68 67 69 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7d7ebbe5a0 *.LC4>)) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(insn 69 68 70 7 (set (reg:DI 5 di)
        (reg:DI 187)) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(call_insn/i 70 69 71 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 7 (set (reg:SI 93 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 90 {*movsi_internal}
     (nil))
(insn 72 71 73 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:80 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) read_procpar.cpp:80 612 {*jcc_1}
     (nil)
 -> 118)
;;  succ:       8 (FALLTHRU)
;;              11

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 8 (set (reg:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(insn 76 75 77 8 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 218 {*adddi_1}
     (nil))
(insn 77 76 78 8 (set (reg:DI 1 dx)
        (reg:DI 188)) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(insn 78 77 79 8 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 90 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(call_insn 80 79 81 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 81 80 82 8 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(insn 82 81 83 8 (set (reg:DI 5 di)
        (reg:DI 190)) read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(call_insn 83 82 84 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 8 (set (reg:SI 94 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 90 {*movsi_internal}
     (nil))
(insn 85 84 86 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:92 3 {*cmpsi_ccno_1}
     (nil))
(insn 86 85 87 8 (set (reg:QI 95 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 607 {*setcc_qi}
     (nil))
(insn 87 86 88 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:92 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) read_procpar.cpp:92 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:93 89 {*movdi_internal}
     (nil))
(call_insn 91 90 92 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 9 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 90 {*movsi_internal}
     (nil))
(call_insn 93 92 95 9 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 95 93 96 10 6 "" [1 uses])
(note 96 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 10 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 218 {*adddi_1}
     (nil))
(insn 98 97 99 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 99 98 100 10 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(call_insn 100 99 101 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 101 100 102 10 (set (reg:DI 192)
        (reg:DI 0 ax)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 192)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 103 102 104 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 104 103 105 10 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(call_insn 105 104 106 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 10 (set (reg:DI 193)
        (reg:DI 0 ax)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 107 106 108 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 193)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 108 107 109 10 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 109 108 110 10 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn 111 110 112 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 112 111 113 10 (set (reg:DF 96 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 128 {*movdf_internal}
     (nil))
(insn 113 112 114 10 (set (reg:SF 97 [ D.5707 ])
        (float_truncate:SF (reg:DF 96 [ D.5706 ]))) read_procpar.cpp:115 157 {*truncdfsf_fast_sse}
     (nil))
(insn 114 113 115 10 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 115 114 118 10 (set (mem/j:SF (reg/f:DI 195) [0 procpar_info_38(D)->acquision_time+0 S4 A64])
        (reg:SF 97 [ D.5707 ])) read_procpar.cpp:115 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 118 115 119 11 5 "" [1 uses])
(note 119 118 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 11 (set (reg:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 121 120 122 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7d7ebbe6c0 *.LC6>)) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 122 121 123 11 (set (reg:DI 5 di)
        (reg:DI 196)) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(call_insn/i 123 122 124 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 124 123 125 11 (set (reg:SI 98 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 90 {*movsi_internal}
     (nil))
(insn 125 124 126 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:122 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 126 125 127 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) read_procpar.cpp:122 612 {*jcc_1}
     (nil)
 -> 169)
;;  succ:       12 (FALLTHRU)
;;              15

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 127 126 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 12 (set (reg:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 129 128 130 12 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 218 {*adddi_1}
     (nil))
(insn 130 129 131 12 (set (reg:DI 1 dx)
        (reg:DI 197)) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 131 130 132 12 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 90 {*movsi_internal}
     (nil))
(insn 132 131 133 12 (set (reg:DI 5 di)
        (reg:DI 198)) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(call_insn 133 132 134 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 134 133 135 12 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(insn 135 134 136 12 (set (reg:DI 5 di)
        (reg:DI 199)) read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(call_insn 136 135 137 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 12 (set (reg:SI 99 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 90 {*movsi_internal}
     (nil))
(insn 138 137 139 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:126 3 {*cmpsi_ccno_1}
     (nil))
(insn 139 138 140 12 (set (reg:QI 100 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 607 {*setcc_qi}
     (nil))
(insn 140 139 141 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:126 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 141 140 142 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) read_procpar.cpp:126 612 {*jcc_1}
     (nil)
 -> 148)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 142 141 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:127 89 {*movdi_internal}
     (nil))
(call_insn 144 143 145 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 145 144 146 13 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 90 {*movsi_internal}
     (nil))
(call_insn 146 145 148 13 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 148 146 149 14 9 "" [1 uses])
(note 149 148 150 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 14 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 218 {*adddi_1}
     (nil))
(insn 151 150 152 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7d7ebbe750 *.LC7>)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 152 151 153 14 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(call_insn 153 152 154 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 14 (set (reg:DI 201)
        (reg:DI 0 ax)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 155 154 156 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 201)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 156 155 157 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7d7ebbe7e0 *.LC8>)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 157 156 158 14 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(call_insn 158 157 159 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 159 158 160 14 (set (reg:DI 202)
        (reg:DI 0 ax)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 160 159 161 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 202)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 161 160 162 14 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 162 161 163 14 (parallel [
            (set (reg/f:DI 101 [ D.5708 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 163 162 164 14 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 164 163 165 14 (set (reg:DI 4 si)
        (reg:DI 204)) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 165 164 166 14 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.5708 ])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(call_insn 166 165 169 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f7d7f0635e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 169 166 170 15 8 "" [1 uses])
(note 170 169 171 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 15 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 172 171 173 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f7d7ebbe870 *.LC9>)) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 173 172 174 15 (set (reg:DI 5 di)
        (reg:DI 205)) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(call_insn/i 174 173 175 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 15 (set (reg:SI 102 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 90 {*movsi_internal}
     (nil))
(insn 176 175 177 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:136 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 177 176 178 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) read_procpar.cpp:136 612 {*jcc_1}
     (nil)
 -> 222)
;;  succ:       16 (FALLTHRU)
;;              19

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 178 177 179 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 16 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 180 179 181 16 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 218 {*adddi_1}
     (nil))
(insn 181 180 182 16 (set (reg:DI 1 dx)
        (reg:DI 206)) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 182 181 183 16 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 90 {*movsi_internal}
     (nil))
(insn 183 182 184 16 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(call_insn 184 183 185 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 185 184 186 16 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(insn 186 185 187 16 (set (reg:DI 5 di)
        (reg:DI 208)) read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(call_insn 187 186 188 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 16 (set (reg:SI 103 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 90 {*movsi_internal}
     (nil))
(insn 189 188 190 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:139 3 {*cmpsi_ccno_1}
     (nil))
(insn 190 189 191 16 (set (reg:QI 104 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 607 {*setcc_qi}
     (nil))
(insn 191 190 192 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:139 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 192 191 193 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) read_procpar.cpp:139 612 {*jcc_1}
     (nil)
 -> 199)
;;  succ:       17 (FALLTHRU)
;;              18

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 193 192 194 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:140 89 {*movdi_internal}
     (nil))
(call_insn 195 194 196 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 17 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 90 {*movsi_internal}
     (nil))
(call_insn 197 196 199 17 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 199 197 200 18 11 "" [1 uses])
(note 200 199 201 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 18 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 218 {*adddi_1}
     (nil))
(insn 202 201 203 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 203 202 204 18 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(call_insn 204 203 205 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 205 204 206 18 (set (reg:DI 210)
        (reg:DI 0 ax)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 206 205 207 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 210)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 207 206 208 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 208 207 209 18 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn 209 208 210 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 18 (set (reg:DI 211)
        (reg:DI 0 ax)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 211 210 212 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 211)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 212 211 213 18 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 213 212 214 18 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 214 213 215 18 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(call_insn 215 214 216 18 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 216 215 217 18 (set (reg:DF 105 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 128 {*movdf_internal}
     (nil))
(insn 217 216 218 18 (set (reg:SF 106 [ D.5707 ])
        (float_truncate:SF (reg:DF 105 [ D.5706 ]))) read_procpar.cpp:147 157 {*truncdfsf_fast_sse}
     (nil))
(insn 218 217 219 18 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 219 218 222 18 (set (mem/j:SF (plus:DI (reg/f:DI 213)
                (const_int 292 [0x124])) [0 procpar_info_38(D)->filter+0 S4 A32])
        (reg:SF 106 [ D.5707 ])) read_procpar.cpp:147 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 222 219 223 19 10 "" [1 uses])
(note 223 222 224 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 19 (set (reg:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(insn 225 224 226 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7d7ebbe900 *.LC10>)) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(insn 226 225 227 19 (set (reg:DI 5 di)
        (reg:DI 214)) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(call_insn/i 227 226 228 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 228 227 229 19 (set (reg:SI 107 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 90 {*movsi_internal}
     (nil))
(insn 229 228 230 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:149 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 230 229 231 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) read_procpar.cpp:149 612 {*jcc_1}
     (nil)
 -> 276)
;;  succ:       20 (FALLTHRU)
;;              23

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 231 230 232 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 20 (set (reg:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(insn 233 232 234 20 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 218 {*adddi_1}
     (nil))
(insn 234 233 235 20 (set (reg:DI 1 dx)
        (reg:DI 215)) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(insn 235 234 236 20 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 90 {*movsi_internal}
     (nil))
(insn 236 235 237 20 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(call_insn 237 236 238 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 238 237 239 20 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(insn 239 238 240 20 (set (reg:DI 5 di)
        (reg:DI 217)) read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(call_insn 240 239 241 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 241 240 242 20 (set (reg:SI 108 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 90 {*movsi_internal}
     (nil))
(insn 242 241 243 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:152 3 {*cmpsi_ccno_1}
     (nil))
(insn 243 242 244 20 (set (reg:QI 109 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 607 {*setcc_qi}
     (nil))
(insn 244 243 245 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:152 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 245 244 246 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) read_procpar.cpp:152 612 {*jcc_1}
     (nil)
 -> 252)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 246 245 247 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:153 89 {*movdi_internal}
     (nil))
(call_insn 248 247 249 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 249 248 250 21 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 90 {*movsi_internal}
     (nil))
(call_insn 250 249 252 21 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 22, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 252 250 253 22 13 "" [1 uses])
(note 253 252 254 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 22 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 218 {*adddi_1}
     (nil))
(insn 255 254 256 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 256 255 257 22 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(call_insn 257 256 258 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 258 257 259 22 (set (reg:DI 219)
        (reg:DI 0 ax)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 259 258 260 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 219)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 260 259 261 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 261 260 262 22 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(call_insn 262 261 263 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 263 262 264 22 (set (reg:DI 220)
        (reg:DI 0 ax)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 264 263 265 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 220)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 265 264 266 22 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 266 265 267 22 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
(insn 267 266 268 22 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 268 267 269 22 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(call_insn 269 268 270 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f7d7eef91b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 270 269 271 22 (set (reg:DI 110 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 271 270 272 22 (set (reg:SI 111 [ D.5704 ])
        (subreg:SI (reg:DI 110 [ D.5709 ]) 0)) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
(insn 272 271 273 22 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 273 272 276 22 (set (mem/j:SI (plus:DI (reg/f:DI 222)
                (const_int 296 [0x128])) [0 procpar_info_38(D)->num_transients+0 S4 A64])
        (reg:SI 111 [ D.5704 ])) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 276 273 277 23 12 "" [1 uses])
(note 277 276 278 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 23 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(insn 279 278 280 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f7d7ebbe990 *.LC11>)) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(insn 280 279 281 23 (set (reg:DI 5 di)
        (reg:DI 223)) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(call_insn/i 281 280 282 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 282 281 283 23 (set (reg:SI 112 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 90 {*movsi_internal}
     (nil))
(insn 283 282 284 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:162 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 284 283 285 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) read_procpar.cpp:162 612 {*jcc_1}
     (nil)
 -> 330)
;;  succ:       24 (FALLTHRU)
;;              27

;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 285 284 286 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 24 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(insn 287 286 288 24 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 218 {*adddi_1}
     (nil))
(insn 288 287 289 24 (set (reg:DI 1 dx)
        (reg:DI 224)) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(insn 289 288 290 24 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 90 {*movsi_internal}
     (nil))
(insn 290 289 291 24 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(call_insn 291 290 292 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 292 291 293 24 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 293 292 294 24 (set (reg:DI 5 di)
        (reg:DI 226)) read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(call_insn 294 293 295 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 295 294 296 24 (set (reg:SI 113 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 90 {*movsi_internal}
     (nil))
(insn 296 295 297 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:165 3 {*cmpsi_ccno_1}
     (nil))
(insn 297 296 298 24 (set (reg:QI 114 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 607 {*setcc_qi}
     (nil))
(insn 298 297 299 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:165 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 299 298 300 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) read_procpar.cpp:165 612 {*jcc_1}
     (nil)
 -> 306)
;;  succ:       25 (FALLTHRU)
;;              26

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 300 299 301 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:166 89 {*movdi_internal}
     (nil))
(call_insn 302 301 303 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 303 302 304 25 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 90 {*movsi_internal}
     (nil))
(call_insn 304 303 306 25 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 26, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 306 304 307 26 15 "" [1 uses])
(note 307 306 308 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 26 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 218 {*adddi_1}
     (nil))
(insn 309 308 310 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 310 309 311 26 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(call_insn 311 310 312 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 312 311 313 26 (set (reg:DI 228)
        (reg:DI 0 ax)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 313 312 314 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 228)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 314 313 315 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 315 314 316 26 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(call_insn 316 315 317 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 317 316 318 26 (set (reg:DI 229)
        (reg:DI 0 ax)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 318 317 319 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 229)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 319 318 320 26 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 320 319 321 26 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
(insn 321 320 322 26 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 322 321 323 26 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(call_insn 323 322 324 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f7d7eef91b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 324 323 325 26 (set (reg:DI 115 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 325 324 326 26 (set (reg:SI 116 [ D.5704 ])
        (subreg:SI (reg:DI 115 [ D.5709 ]) 0)) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
(insn 326 325 327 26 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 327 326 330 26 (set (mem/j:SI (plus:DI (reg/f:DI 231)
                (const_int 300 [0x12c])) [0 procpar_info_38(D)->num_points+0 S4 A32])
        (reg:SI 116 [ D.5704 ])) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 27, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 330 327 331 27 14 "" [1 uses])
(note 331 330 332 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 27 (set (reg:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 333 332 334 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7d7ebbea20 *.LC12>)) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 334 333 335 27 (set (reg:DI 5 di)
        (reg:DI 232)) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(call_insn/i 335 334 336 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 336 335 337 27 (set (reg:SI 117 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 90 {*movsi_internal}
     (nil))
(insn 337 336 338 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:175 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 338 337 339 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) read_procpar.cpp:175 612 {*jcc_1}
     (nil)
 -> 382)
;;  succ:       28 (FALLTHRU)
;;              31

;; basic block 28, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 339 338 340 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 28 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 341 340 342 28 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 218 {*adddi_1}
     (nil))
(insn 342 341 343 28 (set (reg:DI 1 dx)
        (reg:DI 233)) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 343 342 344 28 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 90 {*movsi_internal}
     (nil))
(insn 344 343 345 28 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(call_insn 345 344 346 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 346 345 347 28 (set (reg:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(insn 347 346 348 28 (set (reg:DI 5 di)
        (reg:DI 235)) read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(call_insn 348 347 349 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 349 348 350 28 (set (reg:SI 118 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 90 {*movsi_internal}
     (nil))
(insn 350 349 351 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:178 3 {*cmpsi_ccno_1}
     (nil))
(insn 351 350 352 28 (set (reg:QI 119 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 607 {*setcc_qi}
     (nil))
(insn 352 351 353 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:178 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 353 352 354 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 360)
            (pc))) read_procpar.cpp:178 612 {*jcc_1}
     (nil)
 -> 360)
;;  succ:       29 (FALLTHRU)
;;              30

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 354 353 355 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:179 89 {*movdi_internal}
     (nil))
(call_insn 356 355 357 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 357 356 358 29 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 90 {*movsi_internal}
     (nil))
(call_insn 358 357 360 29 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 30, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
(code_label 360 358 361 30 17 "" [1 uses])
(note 361 360 362 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 30 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 218 {*adddi_1}
     (nil))
(insn 363 362 364 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 364 363 365 30 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(call_insn 365 364 366 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 366 365 367 30 (set (reg:DI 237)
        (reg:DI 0 ax)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 367 366 368 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 237)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 368 367 369 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 369 368 370 30 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(call_insn 370 369 371 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 30 (set (reg:DI 238)
        (reg:DI 0 ax)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 372 371 373 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 238)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 373 372 374 30 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 374 373 375 30 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 375 374 376 30 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(call_insn 376 375 377 30 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 377 376 378 30 (set (reg:DF 120 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 128 {*movdf_internal}
     (nil))
(insn 378 377 379 30 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 379 378 382 30 (set (mem/j:DF (plus:DI (reg/f:DI 240)
                (const_int 304 [0x130])) [0 procpar_info_38(D)->main_frequency+0 S8 A64])
        (reg:DF 120 [ D.5706 ])) read_procpar.cpp:186 128 {*movdf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 382 379 383 31 16 "" [1 uses])
(note 383 382 384 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 31 (set (reg:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 385 384 386 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f7d7ebbeab0 *.LC13>)) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 386 385 387 31 (set (reg:DI 5 di)
        (reg:DI 241)) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(call_insn/i 387 386 388 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 388 387 389 31 (set (reg:SI 121 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 389 388 390 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:188 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 390 389 391 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) read_procpar.cpp:188 612 {*jcc_1}
     (nil)
 -> 434)
;;  succ:       32 (FALLTHRU)
;;              35

;; basic block 32, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 (FALLTHRU)
(note 391 390 392 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 32 (set (reg:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 393 392 394 32 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 218 {*adddi_1}
     (nil))
(insn 394 393 395 32 (set (reg:DI 1 dx)
        (reg:DI 242)) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 395 394 396 32 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 396 395 397 32 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(call_insn 397 396 398 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 398 397 399 32 (set (reg:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(insn 399 398 400 32 (set (reg:DI 5 di)
        (reg:DI 244)) read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(call_insn 400 399 401 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 401 400 402 32 (set (reg:SI 122 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 90 {*movsi_internal}
     (nil))
(insn 402 401 403 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:191 3 {*cmpsi_ccno_1}
     (nil))
(insn 403 402 404 32 (set (reg:QI 123 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 607 {*setcc_qi}
     (nil))
(insn 404 403 405 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:191 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 405 404 406 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 412)
            (pc))) read_procpar.cpp:191 612 {*jcc_1}
     (nil)
 -> 412)
;;  succ:       33 (FALLTHRU)
;;              34

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 406 405 407 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:192 89 {*movdi_internal}
     (nil))
(call_insn 408 407 409 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 33 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 90 {*movsi_internal}
     (nil))
(call_insn 410 409 412 33 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 34, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
(code_label 412 410 413 34 19 "" [1 uses])
(note 413 412 414 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 34 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 218 {*adddi_1}
     (nil))
(insn 415 414 416 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 416 415 417 34 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(call_insn 417 416 418 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 418 417 419 34 (set (reg:DI 246)
        (reg:DI 0 ax)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 419 418 420 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 246)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 420 419 421 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 421 420 422 34 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(call_insn 422 421 423 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 423 422 424 34 (set (reg:DI 247)
        (reg:DI 0 ax)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 424 423 425 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 247)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 425 424 426 34 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 426 425 427 34 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 427 426 428 34 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(call_insn 428 427 429 34 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 429 428 430 34 (set (reg:DF 124 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 128 {*movdf_internal}
     (nil))
(insn 430 429 431 34 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 431 430 434 34 (set (mem/j:DF (plus:DI (reg/f:DI 249)
                (const_int 312 [0x138])) [0 procpar_info_38(D)->offset_frequency+0 S8 A64])
        (reg:DF 124 [ D.5706 ])) read_procpar.cpp:199 128 {*movdf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 35, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       31
(code_label 434 431 435 35 18 "" [1 uses])
(note 435 434 436 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 437 35 (set (reg:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 437 436 438 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f7d7ebbeb40 *.LC14>)) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 438 437 439 35 (set (reg:DI 5 di)
        (reg:DI 250)) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(call_insn/i 439 438 440 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 440 439 441 35 (set (reg:SI 125 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 90 {*movsi_internal}
     (nil))
(insn 441 440 442 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:201 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 442 441 443 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) read_procpar.cpp:201 612 {*jcc_1}
     (nil)
 -> 487)
;;  succ:       36 (FALLTHRU)
;;              39

;; basic block 36, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 (FALLTHRU)
(note 443 442 444 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 36 (set (reg:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(insn 445 444 446 36 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 218 {*adddi_1}
     (nil))
(insn 446 445 447 36 (set (reg:DI 1 dx)
        (reg:DI 251)) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(insn 447 446 448 36 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 90 {*movsi_internal}
     (nil))
(insn 448 447 449 36 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(call_insn 449 448 450 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 450 449 451 36 (set (reg:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 451 450 452 36 (set (reg:DI 5 di)
        (reg:DI 253)) read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(call_insn 452 451 453 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 453 452 454 36 (set (reg:SI 126 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 90 {*movsi_internal}
     (nil))
(insn 454 453 455 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:204 3 {*cmpsi_ccno_1}
     (nil))
(insn 455 454 456 36 (set (reg:QI 127 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 607 {*setcc_qi}
     (nil))
(insn 456 455 457 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:204 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 457 456 458 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) read_procpar.cpp:204 612 {*jcc_1}
     (nil)
 -> 464)
;;  succ:       37 (FALLTHRU)
;;              38

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 458 457 459 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:205 89 {*movdi_internal}
     (nil))
(call_insn 460 459 461 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 461 460 462 37 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 90 {*movsi_internal}
     (nil))
(call_insn 462 461 464 37 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 38, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
(code_label 464 462 465 38 21 "" [1 uses])
(note 465 464 466 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 38 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 218 {*adddi_1}
     (nil))
(insn 467 466 468 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 468 467 469 38 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(call_insn 469 468 470 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 470 469 471 38 (set (reg:DI 255)
        (reg:DI 0 ax)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 471 470 472 38 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 255)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 472 471 473 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 473 472 474 38 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(call_insn 474 473 475 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 475 474 476 38 (set (reg:DI 256)
        (reg:DI 0 ax)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 476 475 477 38 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 256)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 477 476 478 38 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 478 477 479 38 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 479 478 480 38 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(call_insn 480 479 481 38 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 481 480 482 38 (set (reg:DF 128 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 128 {*movdf_internal}
     (nil))
(insn 482 481 483 38 (set (reg:SF 129 [ D.5707 ])
        (float_truncate:SF (reg:DF 128 [ D.5706 ]))) read_procpar.cpp:212 157 {*truncdfsf_fast_sse}
     (nil))
(insn 483 482 484 38 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 484 483 487 38 (set (mem/j:SF (plus:DI (reg/f:DI 258)
                (const_int 320 [0x140])) [0 procpar_info_38(D)->te+0 S4 A64])
        (reg:SF 129 [ D.5707 ])) read_procpar.cpp:212 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 39, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       35
(code_label 487 484 488 39 20 "" [1 uses])
(note 488 487 489 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 39 (set (reg:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 490 489 491 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f7d7ebbebd0 *.LC15>)) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 491 490 492 39 (set (reg:DI 5 di)
        (reg:DI 259)) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(call_insn/i 492 491 493 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 493 492 494 39 (set (reg:SI 130 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 494 493 495 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:214 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 495 494 496 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) read_procpar.cpp:214 612 {*jcc_1}
     (nil)
 -> 540)
;;  succ:       40 (FALLTHRU)
;;              43

;; basic block 40, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
(note 496 495 497 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 40 (set (reg:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 498 497 499 40 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 218 {*adddi_1}
     (nil))
(insn 499 498 500 40 (set (reg:DI 1 dx)
        (reg:DI 260)) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 500 499 501 40 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 501 500 502 40 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(call_insn 502 501 503 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 503 502 504 40 (set (reg:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 89 {*movdi_internal}
     (nil))
(insn 504 503 505 40 (set (reg:DI 5 di)
        (reg:DI 262)) read_procpar.cpp:217 89 {*movdi_internal}
     (nil))
(call_insn 505 504 506 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 506 505 507 40 (set (reg:SI 131 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 90 {*movsi_internal}
     (nil))
(insn 507 506 508 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:217 3 {*cmpsi_ccno_1}
     (nil))
(insn 508 507 509 40 (set (reg:QI 132 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 607 {*setcc_qi}
     (nil))
(insn 509 508 510 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:217 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 510 509 511 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 517)
            (pc))) read_procpar.cpp:217 612 {*jcc_1}
     (nil)
 -> 517)
;;  succ:       41 (FALLTHRU)
;;              42

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 511 510 512 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:218 89 {*movdi_internal}
     (nil))
(call_insn 513 512 514 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 514 513 515 41 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 90 {*movsi_internal}
     (nil))
(call_insn 515 514 517 41 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 42, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
(code_label 517 515 518 42 23 "" [1 uses])
(note 518 517 519 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 42 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 218 {*adddi_1}
     (nil))
(insn 520 519 521 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 521 520 522 42 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(call_insn 522 521 523 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 523 522 524 42 (set (reg:DI 264)
        (reg:DI 0 ax)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 524 523 525 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 264)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 525 524 526 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 526 525 527 42 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(call_insn 527 526 528 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 528 527 529 42 (set (reg:DI 265)
        (reg:DI 0 ax)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 529 528 530 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 265)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 530 529 531 42 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 531 530 532 42 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 532 531 533 42 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(call_insn 533 532 534 42 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 534 533 535 42 (set (reg:DF 133 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 128 {*movdf_internal}
     (nil))
(insn 535 534 536 42 (set (reg:SF 134 [ D.5707 ])
        (float_truncate:SF (reg:DF 133 [ D.5706 ]))) read_procpar.cpp:225 157 {*truncdfsf_fast_sse}
     (nil))
(insn 536 535 537 42 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 537 536 540 42 (set (mem/j:SF (plus:DI (reg/f:DI 267)
                (const_int 324 [0x144])) [0 procpar_info_38(D)->tm+0 S4 A32])
        (reg:SF 134 [ D.5707 ])) read_procpar.cpp:225 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 43, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
(code_label 540 537 541 43 22 "" [1 uses])
(note 541 540 542 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 43 (set (reg:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(insn 543 542 544 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7d7ebbec60 *.LC16>)) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(insn 544 543 545 43 (set (reg:DI 5 di)
        (reg:DI 268)) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(call_insn/i 545 544 546 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 546 545 547 43 (set (reg:SI 135 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 90 {*movsi_internal}
     (nil))
(insn 547 546 548 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:227 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 548 547 549 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) read_procpar.cpp:227 612 {*jcc_1}
     (nil)
 -> 593)
;;  succ:       44 (FALLTHRU)
;;              47

;; basic block 44, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       43 (FALLTHRU)
(note 549 548 550 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 551 44 (set (reg:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(insn 551 550 552 44 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 218 {*adddi_1}
     (nil))
(insn 552 551 553 44 (set (reg:DI 1 dx)
        (reg:DI 269)) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(insn 553 552 554 44 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 90 {*movsi_internal}
     (nil))
(insn 554 553 555 44 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(call_insn 555 554 556 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 556 555 557 44 (set (reg:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 89 {*movdi_internal}
     (nil))
(insn 557 556 558 44 (set (reg:DI 5 di)
        (reg:DI 271)) read_procpar.cpp:230 89 {*movdi_internal}
     (nil))
(call_insn 558 557 559 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 559 558 560 44 (set (reg:SI 136 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 90 {*movsi_internal}
     (nil))
(insn 560 559 561 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:230 3 {*cmpsi_ccno_1}
     (nil))
(insn 561 560 562 44 (set (reg:QI 137 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 607 {*setcc_qi}
     (nil))
(insn 562 561 563 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:230 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 563 562 564 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 570)
            (pc))) read_procpar.cpp:230 612 {*jcc_1}
     (nil)
 -> 570)
;;  succ:       45 (FALLTHRU)
;;              46

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 564 563 565 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:231 89 {*movdi_internal}
     (nil))
(call_insn 566 565 567 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 567 566 568 45 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 90 {*movsi_internal}
     (nil))
(call_insn 568 567 570 45 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 46, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
(code_label 570 568 571 46 25 "" [1 uses])
(note 571 570 572 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 46 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 218 {*adddi_1}
     (nil))
(insn 573 572 574 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 574 573 575 46 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(call_insn 575 574 576 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 576 575 577 46 (set (reg:DI 273)
        (reg:DI 0 ax)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 577 576 578 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 273)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 578 577 579 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 579 578 580 46 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(call_insn 580 579 581 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 581 580 582 46 (set (reg:DI 274)
        (reg:DI 0 ax)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 582 581 583 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 274)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 583 582 584 46 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 584 583 585 46 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 585 584 586 46 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(call_insn 586 585 587 46 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 587 586 588 46 (set (reg:DF 138 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 128 {*movdf_internal}
     (nil))
(insn 588 587 589 46 (set (reg:SF 139 [ D.5707 ])
        (float_truncate:SF (reg:DF 138 [ D.5706 ]))) read_procpar.cpp:238 157 {*truncdfsf_fast_sse}
     (nil))
(insn 589 588 590 46 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 590 589 593 46 (set (mem/j:SF (plus:DI (reg/f:DI 276)
                (const_int 328 [0x148])) [0 procpar_info_38(D)->gain+0 S4 A64])
        (reg:SF 139 [ D.5707 ])) read_procpar.cpp:238 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 47, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       43
(code_label 593 590 594 47 24 "" [1 uses])
(note 594 593 595 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 47 (set (reg:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(insn 596 595 597 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7d7ebbecf0 *.LC17>)) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(insn 597 596 598 47 (set (reg:DI 5 di)
        (reg:DI 277)) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(call_insn/i 598 597 599 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 599 598 600 47 (set (reg:SI 140 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 90 {*movsi_internal}
     (nil))
(insn 600 599 601 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:240 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 601 600 602 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 646)
            (pc))) read_procpar.cpp:240 612 {*jcc_1}
     (nil)
 -> 646)
;;  succ:       48 (FALLTHRU)
;;              51

;; basic block 48, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
(note 602 601 603 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 48 (set (reg:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 604 603 605 48 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 218 {*adddi_1}
     (nil))
(insn 605 604 606 48 (set (reg:DI 1 dx)
        (reg:DI 278)) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 606 605 607 48 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 90 {*movsi_internal}
     (nil))
(insn 607 606 608 48 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn 608 607 609 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 609 608 610 48 (set (reg:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 89 {*movdi_internal}
     (nil))
(insn 610 609 611 48 (set (reg:DI 5 di)
        (reg:DI 280)) read_procpar.cpp:243 89 {*movdi_internal}
     (nil))
(call_insn 611 610 612 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 612 611 613 48 (set (reg:SI 141 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 90 {*movsi_internal}
     (nil))
(insn 613 612 614 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:243 3 {*cmpsi_ccno_1}
     (nil))
(insn 614 613 615 48 (set (reg:QI 142 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 607 {*setcc_qi}
     (nil))
(insn 615 614 616 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:243 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 616 615 617 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) read_procpar.cpp:243 612 {*jcc_1}
     (nil)
 -> 623)
;;  succ:       49 (FALLTHRU)
;;              50

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 617 616 618 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(call_insn 619 618 620 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 620 619 621 49 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 90 {*movsi_internal}
     (nil))
(call_insn 621 620 623 49 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 50, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 623 621 624 50 27 "" [1 uses])
(note 624 623 625 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 50 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 218 {*adddi_1}
     (nil))
(insn 626 625 627 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 627 626 628 50 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(call_insn 628 627 629 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 629 628 630 50 (set (reg:DI 282)
        (reg:DI 0 ax)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 630 629 631 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 282)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 631 630 632 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 632 631 633 50 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(call_insn 633 632 634 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 634 633 635 50 (set (reg:DI 283)
        (reg:DI 0 ax)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 635 634 636 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 283)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 636 635 637 50 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 637 636 638 50 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 638 637 639 50 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(call_insn 639 638 640 50 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 640 639 641 50 (set (reg:DF 143 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 128 {*movdf_internal}
     (nil))
(insn 641 640 642 50 (set (reg:SF 144 [ D.5707 ])
        (float_truncate:SF (reg:DF 143 [ D.5706 ]))) read_procpar.cpp:251 157 {*truncdfsf_fast_sse}
     (nil))
(insn 642 641 643 50 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 643 642 646 50 (set (mem/j:SF (plus:DI (reg/f:DI 285)
                (const_int 332 [0x14c])) [0 procpar_info_38(D)->pos1+0 S4 A32])
        (reg:SF 144 [ D.5707 ])) read_procpar.cpp:251 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 51, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       47
(code_label 646 643 647 51 26 "" [1 uses])
(note 647 646 648 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 51 (set (reg:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(insn 649 648 650 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7d7ebbed80 *.LC18>)) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(insn 650 649 651 51 (set (reg:DI 5 di)
        (reg:DI 286)) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(call_insn/i 651 650 652 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 652 651 653 51 (set (reg:SI 145 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 90 {*movsi_internal}
     (nil))
(insn 653 652 654 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:253 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 654 653 655 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) read_procpar.cpp:253 612 {*jcc_1}
     (nil)
 -> 699)
;;  succ:       52 (FALLTHRU)
;;              55

;; basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       51 (FALLTHRU)
(note 655 654 656 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 52 (set (reg:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(insn 657 656 658 52 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 218 {*adddi_1}
     (nil))
(insn 658 657 659 52 (set (reg:DI 1 dx)
        (reg:DI 287)) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(insn 659 658 660 52 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 90 {*movsi_internal}
     (nil))
(insn 660 659 661 52 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(call_insn 661 660 662 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 662 661 663 52 (set (reg:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 89 {*movdi_internal}
     (nil))
(insn 663 662 664 52 (set (reg:DI 5 di)
        (reg:DI 289)) read_procpar.cpp:256 89 {*movdi_internal}
     (nil))
(call_insn 664 663 665 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 665 664 666 52 (set (reg:SI 146 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 90 {*movsi_internal}
     (nil))
(insn 666 665 667 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:256 3 {*cmpsi_ccno_1}
     (nil))
(insn 667 666 668 52 (set (reg:QI 147 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 607 {*setcc_qi}
     (nil))
(insn 668 667 669 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:256 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 669 668 670 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 676)
            (pc))) read_procpar.cpp:256 612 {*jcc_1}
     (nil)
 -> 676)
;;  succ:       53 (FALLTHRU)
;;              54

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       52 (FALLTHRU)
(note 670 669 671 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:257 89 {*movdi_internal}
     (nil))
(call_insn 672 671 673 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 673 672 674 53 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 90 {*movsi_internal}
     (nil))
(call_insn 674 673 676 53 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 54, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL)
;;  pred:       52
(code_label 676 674 677 54 29 "" [1 uses])
(note 677 676 678 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 679 54 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 218 {*adddi_1}
     (nil))
(insn 679 678 680 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 680 679 681 54 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(call_insn 681 680 682 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 682 681 683 54 (set (reg:DI 291)
        (reg:DI 0 ax)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 683 682 684 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 291)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 684 683 685 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 685 684 686 54 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(call_insn 686 685 687 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 687 686 688 54 (set (reg:DI 292)
        (reg:DI 0 ax)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 688 687 689 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 292)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 689 688 690 54 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 690 689 691 54 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 691 690 692 54 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(call_insn 692 691 693 54 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 693 692 694 54 (set (reg:DF 148 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 128 {*movdf_internal}
     (nil))
(insn 694 693 695 54 (set (reg:SF 149 [ D.5707 ])
        (float_truncate:SF (reg:DF 148 [ D.5706 ]))) read_procpar.cpp:264 157 {*truncdfsf_fast_sse}
     (nil))
(insn 695 694 696 54 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 696 695 699 54 (set (mem/j:SF (plus:DI (reg/f:DI 294)
                (const_int 336 [0x150])) [0 procpar_info_38(D)->pos2+0 S4 A64])
        (reg:SF 149 [ D.5707 ])) read_procpar.cpp:264 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 55, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       51
(code_label 699 696 700 55 28 "" [1 uses])
(note 700 699 701 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 55 (set (reg:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 702 701 703 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7d7ebbee10 *.LC19>)) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 703 702 704 55 (set (reg:DI 5 di)
        (reg:DI 295)) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(call_insn/i 704 703 705 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 705 704 706 55 (set (reg:SI 150 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 90 {*movsi_internal}
     (nil))
(insn 706 705 707 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:266 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 707 706 708 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) read_procpar.cpp:266 612 {*jcc_1}
     (nil)
 -> 752)
;;  succ:       56 (FALLTHRU)
;;              59

;; basic block 56, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       55 (FALLTHRU)
(note 708 707 709 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 56 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(insn 710 709 711 56 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 218 {*adddi_1}
     (nil))
(insn 711 710 712 56 (set (reg:DI 1 dx)
        (reg:DI 296)) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(insn 712 711 713 56 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 90 {*movsi_internal}
     (nil))
(insn 713 712 714 56 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(call_insn 714 713 715 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 715 714 716 56 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 89 {*movdi_internal}
     (nil))
(insn 716 715 717 56 (set (reg:DI 5 di)
        (reg:DI 298)) read_procpar.cpp:269 89 {*movdi_internal}
     (nil))
(call_insn 717 716 718 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 718 717 719 56 (set (reg:SI 151 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 90 {*movsi_internal}
     (nil))
(insn 719 718 720 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:269 3 {*cmpsi_ccno_1}
     (nil))
(insn 720 719 721 56 (set (reg:QI 152 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 607 {*setcc_qi}
     (nil))
(insn 721 720 722 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 152 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:269 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 722 721 723 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 729)
            (pc))) read_procpar.cpp:269 612 {*jcc_1}
     (nil)
 -> 729)
;;  succ:       57 (FALLTHRU)
;;              58

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       56 (FALLTHRU)
(note 723 722 724 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 724 723 725 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:270 89 {*movdi_internal}
     (nil))
(call_insn 725 724 726 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 726 725 727 57 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 90 {*movsi_internal}
     (nil))
(call_insn 727 726 729 57 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 58, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       56
(code_label 729 727 730 58 31 "" [1 uses])
(note 730 729 731 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 58 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 218 {*adddi_1}
     (nil))
(insn 732 731 733 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 733 732 734 58 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(call_insn 734 733 735 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 735 734 736 58 (set (reg:DI 300)
        (reg:DI 0 ax)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 736 735 737 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 300)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 737 736 738 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 738 737 739 58 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(call_insn 739 738 740 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 740 739 741 58 (set (reg:DI 301)
        (reg:DI 0 ax)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 741 740 742 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 301)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 742 741 743 58 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 743 742 744 58 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 744 743 745 58 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(call_insn 745 744 746 58 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 746 745 747 58 (set (reg:DF 153 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 128 {*movdf_internal}
     (nil))
(insn 747 746 748 58 (set (reg:SF 154 [ D.5707 ])
        (float_truncate:SF (reg:DF 153 [ D.5706 ]))) read_procpar.cpp:277 157 {*truncdfsf_fast_sse}
     (nil))
(insn 748 747 749 58 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 749 748 752 58 (set (mem/j:SF (plus:DI (reg/f:DI 303)
                (const_int 340 [0x154])) [0 procpar_info_38(D)->pos3+0 S4 A32])
        (reg:SF 154 [ D.5707 ])) read_procpar.cpp:277 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 59, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       55
(code_label 752 749 753 59 30 "" [1 uses])
(note 753 752 754 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 755 59 (set (reg:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(insn 755 754 756 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7d7ebbeea0 *.LC20>)) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(insn 756 755 757 59 (set (reg:DI 5 di)
        (reg:DI 304)) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(call_insn/i 757 756 758 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 758 757 759 59 (set (reg:SI 155 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 90 {*movsi_internal}
     (nil))
(insn 759 758 760 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:279 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 760 759 761 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 805)
            (pc))) read_procpar.cpp:279 612 {*jcc_1}
     (nil)
 -> 805)
;;  succ:       60 (FALLTHRU)
;;              63

;; basic block 60, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       59 (FALLTHRU)
(note 761 760 762 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 762 761 763 60 (set (reg:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(insn 763 762 764 60 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 218 {*adddi_1}
     (nil))
(insn 764 763 765 60 (set (reg:DI 1 dx)
        (reg:DI 305)) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(insn 765 764 766 60 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 90 {*movsi_internal}
     (nil))
(insn 766 765 767 60 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(call_insn 767 766 768 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 768 767 769 60 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(insn 769 768 770 60 (set (reg:DI 5 di)
        (reg:DI 307)) read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(call_insn 770 769 771 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 771 770 772 60 (set (reg:SI 156 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 90 {*movsi_internal}
     (nil))
(insn 772 771 773 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:282 3 {*cmpsi_ccno_1}
     (nil))
(insn 773 772 774 60 (set (reg:QI 157 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 607 {*setcc_qi}
     (nil))
(insn 774 773 775 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:282 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 775 774 776 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) read_procpar.cpp:282 612 {*jcc_1}
     (nil)
 -> 782)
;;  succ:       61 (FALLTHRU)
;;              62

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 (FALLTHRU)
(note 776 775 777 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:283 89 {*movdi_internal}
     (nil))
(call_insn 778 777 779 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 779 778 780 61 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 90 {*movsi_internal}
     (nil))
(call_insn 780 779 782 61 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 62, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL)
;;  pred:       60
(code_label 782 780 783 62 33 "" [1 uses])
(note 783 782 784 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 62 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 218 {*adddi_1}
     (nil))
(insn 785 784 786 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 786 785 787 62 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(call_insn 787 786 788 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 788 787 789 62 (set (reg:DI 309)
        (reg:DI 0 ax)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 789 788 790 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 309)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 790 789 791 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 791 790 792 62 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(call_insn 792 791 793 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 793 792 794 62 (set (reg:DI 310)
        (reg:DI 0 ax)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 794 793 795 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 310)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 795 794 796 62 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 796 795 797 62 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 797 796 798 62 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(call_insn 798 797 799 62 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 799 798 800 62 (set (reg:DF 158 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 128 {*movdf_internal}
     (nil))
(insn 800 799 801 62 (set (reg:SF 159 [ D.5707 ])
        (float_truncate:SF (reg:DF 158 [ D.5706 ]))) read_procpar.cpp:290 157 {*truncdfsf_fast_sse}
     (nil))
(insn 801 800 802 62 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 802 801 805 62 (set (mem/j:SF (plus:DI (reg/f:DI 312)
                (const_int 344 [0x158])) [0 procpar_info_38(D)->vox1+0 S4 A64])
        (reg:SF 159 [ D.5707 ])) read_procpar.cpp:290 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 63, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       59
(code_label 805 802 806 63 32 "" [1 uses])
(note 806 805 807 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 63 (set (reg:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 808 807 809 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7d7ebbef30 *.LC21>)) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 809 808 810 63 (set (reg:DI 5 di)
        (reg:DI 313)) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(call_insn/i 810 809 811 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 811 810 812 63 (set (reg:SI 160 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 90 {*movsi_internal}
     (nil))
(insn 812 811 813 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:292 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 813 812 814 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 858)
            (pc))) read_procpar.cpp:292 612 {*jcc_1}
     (nil)
 -> 858)
;;  succ:       64 (FALLTHRU)
;;              67

;; basic block 64, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       63 (FALLTHRU)
(note 814 813 815 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 815 814 816 64 (set (reg:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 816 815 817 64 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 218 {*adddi_1}
     (nil))
(insn 817 816 818 64 (set (reg:DI 1 dx)
        (reg:DI 314)) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 818 817 819 64 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 819 818 820 64 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(call_insn 820 819 821 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 821 820 822 64 (set (reg:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 89 {*movdi_internal}
     (nil))
(insn 822 821 823 64 (set (reg:DI 5 di)
        (reg:DI 316)) read_procpar.cpp:295 89 {*movdi_internal}
     (nil))
(call_insn 823 822 824 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 824 823 825 64 (set (reg:SI 161 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 90 {*movsi_internal}
     (nil))
(insn 825 824 826 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:295 3 {*cmpsi_ccno_1}
     (nil))
(insn 826 825 827 64 (set (reg:QI 162 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 607 {*setcc_qi}
     (nil))
(insn 827 826 828 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:295 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 828 827 829 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 835)
            (pc))) read_procpar.cpp:295 612 {*jcc_1}
     (nil)
 -> 835)
;;  succ:       65 (FALLTHRU)
;;              66

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 (FALLTHRU)
(note 829 828 830 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 830 829 831 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(call_insn 831 830 832 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 832 831 833 65 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 90 {*movsi_internal}
     (nil))
(call_insn 833 832 835 65 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 66, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       64
(code_label 835 833 836 66 35 "" [1 uses])
(note 836 835 837 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 66 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 218 {*adddi_1}
     (nil))
(insn 838 837 839 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 839 838 840 66 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(call_insn 840 839 841 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 841 840 842 66 (set (reg:DI 318)
        (reg:DI 0 ax)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 842 841 843 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 318)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 843 842 844 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 844 843 845 66 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(call_insn 845 844 846 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 846 845 847 66 (set (reg:DI 319)
        (reg:DI 0 ax)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 847 846 848 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 319)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 848 847 849 66 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 849 848 850 66 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 850 849 851 66 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(call_insn 851 850 852 66 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 852 851 853 66 (set (reg:DF 163 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 128 {*movdf_internal}
     (nil))
(insn 853 852 854 66 (set (reg:SF 164 [ D.5707 ])
        (float_truncate:SF (reg:DF 163 [ D.5706 ]))) read_procpar.cpp:303 157 {*truncdfsf_fast_sse}
     (nil))
(insn 854 853 855 66 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 855 854 858 66 (set (mem/j:SF (plus:DI (reg/f:DI 321)
                (const_int 348 [0x15c])) [0 procpar_info_38(D)->vox2+0 S4 A32])
        (reg:SF 164 [ D.5707 ])) read_procpar.cpp:303 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 67, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       63
(code_label 858 855 859 67 34 "" [1 uses])
(note 859 858 860 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 67 (set (reg:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(insn 861 860 862 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7d7ebe4000 *.LC22>)) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(insn 862 861 863 67 (set (reg:DI 5 di)
        (reg:DI 322)) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(call_insn/i 863 862 864 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 864 863 865 67 (set (reg:SI 165 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 90 {*movsi_internal}
     (nil))
(insn 865 864 866 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:305 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 866 865 867 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 911)
            (pc))) read_procpar.cpp:305 612 {*jcc_1}
     (nil)
 -> 911)
;;  succ:       68 (FALLTHRU)
;;              71

;; basic block 68, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       67 (FALLTHRU)
(note 867 866 868 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 868 867 869 68 (set (reg:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(insn 869 868 870 68 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 218 {*adddi_1}
     (nil))
(insn 870 869 871 68 (set (reg:DI 1 dx)
        (reg:DI 323)) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(insn 871 870 872 68 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 90 {*movsi_internal}
     (nil))
(insn 872 871 873 68 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(call_insn 873 872 874 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 874 873 875 68 (set (reg:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 89 {*movdi_internal}
     (nil))
(insn 875 874 876 68 (set (reg:DI 5 di)
        (reg:DI 325)) read_procpar.cpp:308 89 {*movdi_internal}
     (nil))
(call_insn 876 875 877 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 877 876 878 68 (set (reg:SI 166 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 90 {*movsi_internal}
     (nil))
(insn 878 877 879 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:308 3 {*cmpsi_ccno_1}
     (nil))
(insn 879 878 880 68 (set (reg:QI 167 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 607 {*setcc_qi}
     (nil))
(insn 880 879 881 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:308 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 881 880 882 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 888)
            (pc))) read_procpar.cpp:308 612 {*jcc_1}
     (nil)
 -> 888)
;;  succ:       69 (FALLTHRU)
;;              70

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 (FALLTHRU)
(note 882 881 883 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:309 89 {*movdi_internal}
     (nil))
(call_insn 884 883 885 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 885 884 886 69 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 90 {*movsi_internal}
     (nil))
(call_insn 886 885 888 69 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 70, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       68
(code_label 888 886 889 70 37 "" [1 uses])
(note 889 888 890 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 70 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 218 {*adddi_1}
     (nil))
(insn 891 890 892 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 892 891 893 70 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(call_insn 893 892 894 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 894 893 895 70 (set (reg:DI 327)
        (reg:DI 0 ax)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 895 894 896 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 327)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 896 895 897 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 897 896 898 70 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(call_insn 898 897 899 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 899 898 900 70 (set (reg:DI 328)
        (reg:DI 0 ax)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 900 899 901 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 328)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 901 900 902 70 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 902 901 903 70 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 903 902 904 70 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(call_insn 904 903 905 70 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 905 904 906 70 (set (reg:DF 168 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 128 {*movdf_internal}
     (nil))
(insn 906 905 907 70 (set (reg:SF 169 [ D.5707 ])
        (float_truncate:SF (reg:DF 168 [ D.5706 ]))) read_procpar.cpp:316 157 {*truncdfsf_fast_sse}
     (nil))
(insn 907 906 908 70 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 908 907 911 70 (set (mem/j:SF (plus:DI (reg/f:DI 330)
                (const_int 352 [0x160])) [0 procpar_info_38(D)->vox3+0 S4 A64])
        (reg:SF 169 [ D.5707 ])) read_procpar.cpp:316 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 71, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       67
(code_label 911 908 912 71 36 "" [1 uses])
(note 912 911 913 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 913 912 914 71 (set (reg:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(insn 914 913 915 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f7d7ebe4090 *.LC23>)) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(insn 915 914 916 71 (set (reg:DI 5 di)
        (reg:DI 331)) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(call_insn/i 916 915 917 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 917 916 918 71 (set (reg:SI 170 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 90 {*movsi_internal}
     (nil))
(insn 918 917 919 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:318 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 919 918 920 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) read_procpar.cpp:318 612 {*jcc_1}
     (nil)
 -> 962)
;;  succ:       72 (FALLTHRU)
;;              75

;; basic block 72, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       71 (FALLTHRU)
(note 920 919 921 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 72 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(insn 922 921 923 72 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 218 {*adddi_1}
     (nil))
(insn 923 922 924 72 (set (reg:DI 1 dx)
        (reg:DI 332)) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(insn 924 923 925 72 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 90 {*movsi_internal}
     (nil))
(insn 925 924 926 72 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(call_insn 926 925 927 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 927 926 928 72 (set (reg:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(insn 928 927 929 72 (set (reg:DI 5 di)
        (reg:DI 334)) read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(call_insn 929 928 930 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 930 929 931 72 (set (reg:SI 171 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 90 {*movsi_internal}
     (nil))
(insn 931 930 932 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:321 3 {*cmpsi_ccno_1}
     (nil))
(insn 932 931 933 72 (set (reg:QI 172 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 607 {*setcc_qi}
     (nil))
(insn 933 932 934 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:321 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 934 933 935 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 941)
            (pc))) read_procpar.cpp:321 612 {*jcc_1}
     (nil)
 -> 941)
;;  succ:       73 (FALLTHRU)
;;              74

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       72 (FALLTHRU)
(note 935 934 936 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:322 89 {*movdi_internal}
     (nil))
(call_insn 937 936 938 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 938 937 939 73 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 90 {*movsi_internal}
     (nil))
(call_insn 939 938 941 73 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 74, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       72
(code_label 941 939 942 74 38 "" [1 uses])
(note 942 941 943 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 943 942 944 74 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 218 {*adddi_1}
     (nil))
(insn 944 943 945 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 945 944 946 74 (set (reg:DI 5 di)
        (reg:DI 335)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(call_insn 946 945 947 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 947 946 948 74 (set (reg:DI 336)
        (reg:DI 0 ax)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 948 947 949 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 336)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 949 948 950 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 950 949 951 74 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(call_insn 951 950 952 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 952 951 953 74 (set (reg:DI 337)
        (reg:DI 0 ax)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 953 952 954 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 337)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 954 953 955 74 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 955 954 956 74 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 956 955 957 74 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(call_insn 957 956 958 74 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 958 957 959 74 (set (reg:DF 173 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 128 {*movdf_internal}
     (nil))
(insn 959 958 960 74 (set (reg:SF 174 [ D.5707 ])
        (float_truncate:SF (reg:DF 173 [ D.5706 ]))) read_procpar.cpp:329 157 {*truncdfsf_fast_sse}
     (nil))
(insn 960 959 961 74 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 961 960 962 74 (set (mem/j:SF (plus:DI (reg/f:DI 339)
                (const_int 368 [0x170])) [0 procpar_info_38(D)->vtheta+0 S4 A64])
        (reg:SF 174 [ D.5707 ])) read_procpar.cpp:329 129 {*movsf_internal}
     (nil))
;;  succ:       75 (FALLTHRU)

;; basic block 75, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;;              18 [100.0%]  (FALLTHRU)
;;              22 [100.0%]  (FALLTHRU)
;;              26 [100.0%]  (FALLTHRU)
;;              30 [100.0%]  (FALLTHRU)
;;              34 [100.0%]  (FALLTHRU)
;;              38 [100.0%]  (FALLTHRU)
;;              42 [100.0%]  (FALLTHRU)
;;              46 [100.0%]  (FALLTHRU)
;;              50 [100.0%]  (FALLTHRU)
;;              54 [100.0%]  (FALLTHRU)
;;              58 [100.0%]  (FALLTHRU)
;;              62 [100.0%]  (FALLTHRU)
;;              66 [100.0%]  (FALLTHRU)
;;              70 [100.0%]  (FALLTHRU)
;;              71
;;              74 (FALLTHRU)
(code_label 962 961 963 75 7 "" [1 uses])
(note 963 962 964 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 75 (set (reg:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(insn 965 964 966 75 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 218 {*adddi_1}
     (nil))
(insn 966 965 967 75 (set (reg:DI 1 dx)
        (reg:DI 340)) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(insn 967 966 968 75 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 90 {*movsi_internal}
     (nil))
(insn 968 967 969 75 (set (reg:DI 5 di)
        (reg:DI 341)) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(call_insn 969 968 970 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 970 969 971 75 (set (reg:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 89 {*movdi_internal}
     (nil))
(insn 971 970 972 75 (set (reg:DI 5 di)
        (reg:DI 342)) read_procpar.cpp:341 89 {*movdi_internal}
     (nil))
(call_insn 972 971 973 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 973 972 974 75 (set (reg:SI 175 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 90 {*movsi_internal}
     (nil))
(insn 974 973 975 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:341 3 {*cmpsi_ccno_1}
     (nil))
(insn 975 974 976 75 (set (reg:QI 176 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 607 {*setcc_qi}
     (nil))
(insn 976 975 977 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:341 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 977 976 978 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 984)
            (pc))) read_procpar.cpp:341 612 {*jcc_1}
     (nil)
 -> 984)
;;  succ:       76 (FALLTHRU)
;;              77

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       75 (FALLTHRU)
(note 978 977 979 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 979 978 980 76 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:342 89 {*movdi_internal}
     (nil))
(call_insn 980 979 981 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 981 980 982 76 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 90 {*movsi_internal}
     (nil))
(call_insn 982 981 984 76 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 77, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL)
;;  pred:       75
(code_label 984 982 985 77 39 "" [1 uses])
(note 985 984 988 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 988 985 989 78 4 "" [1 uses])
(note 989 988 990 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 990 989 991 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 991 990 992 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1001)
            (pc))) read_procpar.cpp:354 612 {*jcc_1}
     (nil)
 -> 1001)
;;  succ:       79 (FALLTHRU)
;;              80

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL)
;;  pred:       78 (FALLTHRU)
(note 992 991 993 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 79 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7d7ebe4120 *.LC24>)) read_procpar.cpp:356 89 {*movdi_internal}
     (nil))
(call_insn 994 993 995 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 995 994 996 79 (set (reg/f:DI 177 [ D.5710 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f7d7ee2a000 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 996 995 997 79 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.5710 ])) read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(call_insn 997 996 998 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x7f7d7ee2c288 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 998 997 999 79 (set (reg:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 89 {*movdi_internal}
     (nil))
(insn 999 998 1000 79 (set (reg:DI 5 di)
        (reg:DI 343)) read_procpar.cpp:358 89 {*movdi_internal}
     (nil))
(call_insn 1000 999 1001 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7d7ee2c1b0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       80 (FALLTHRU)

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;;              79 (FALLTHRU)
(code_label 1001 1000 1002 80 40 "" [1 uses])
(note 1002 1001 1003 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1003 1002 1006 80 (set (reg:SI 178 [ D.5704 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 90 {*movsi_internal}
     (nil))
(insn 1006 1003 1010 80 (set (reg:SI 179 [ <retval> ])
        (reg:SI 178 [ D.5704 ])) read_procpar.cpp:364 90 {*movsi_internal}
     (nil))
(insn 1010 1006 1011 80 (set (reg/i:SI 0 ax)
        (reg:SI 179 [ <retval> ])) read_procpar.cpp:365 90 {*movsi_internal}
     (nil))
(insn 1011 1010 1012 80 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5711+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_procpar.cpp:365 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1012 1011 1018 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1015)
            (pc))) read_procpar.cpp:365 612 {*jcc_1}
     (nil)
 -> 1015)
;;  succ:       82
;;              81 (FALLTHRU)

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
(note 1018 1012 1013 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(call_insn 1013 1018 1015 81 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7d7ef6abd0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_procpar.cpp:365 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       80
(code_label 1015 1013 1019 82 42 "" [1 uses])
(note 1019 1015 1016 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1019 0 82 (use (reg/i:SI 0 ax)) read_procpar.cpp:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

