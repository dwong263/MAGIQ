
;; Function int read_procpar(Procpar_info*, char*) (_Z12read_procparP12Procpar_infoPc, funcdef_no=2, decl_uid=5284, symbol_order=2)



try_optimize_cfg iteration 1

Removing jump 51.
Removing jump 110.
Removing jump 161.
Removing jump 214.
Removing jump 268.
Removing jump 322.
Removing jump 374.
Removing jump 426.
Removing jump 479.
Removing jump 532.
Removing jump 585.
Removing jump 638.
Removing jump 691.
Removing jump 744.
Removing jump 797.
Removing jump 850.
Removing jump 903.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) read_procpar.cpp:20 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) read_procpar.cpp:20 89 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5608+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:20 964 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 83 [ D.5599 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 83 [ D.5599 ])) read_procpar.cpp:28 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b04d640a5f0 *.LC0>)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 176)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b04d627bd00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 84 [ D.5600 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 84 [ D.5600 ])) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) read_procpar.cpp:35 596 {*jcc_1}
     (nil)
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b04d640a688 *.LC1>)) read_procpar.cpp:36 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 90 {*movsi_internal}
     (nil))
(call_insn 25 24 27 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 27 25 28 4 2 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 221 {*adddi_1}
     (nil))
(insn 31 30 32 4 (set (reg:DI 1 dx)
        (reg:DI 177)) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg:DI 178)) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 4 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 89 {*movdi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 5 di)
        (reg:DI 179)) read_procpar.cpp:42 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 4 (set (reg:SI 85 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 90 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:42 3 {*cmpsi_ccno_1}
     (nil))
(insn 40 39 41 4 (set (reg:QI 86 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 592 {*setcc_qi}
     (nil))
(insn 41 40 42 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:42 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) read_procpar.cpp:42 596 {*jcc_1}
     (nil)
 -> 49)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:43 89 {*movdi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 5 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 90 {*movsi_internal}
     (nil))
(call_insn 47 46 49 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 49 47 50 6 3 "" [1 uses])
(note 50 49 987 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       78 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       78
(code_label 987 50 53 7 39 "" [1 uses])
(note 53 987 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 220 {*addsi_1}
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 221 {*adddi_1}
     (nil))
(insn 56 55 57 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b04d640a7b8 *.LC3>)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 57 56 58 7 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(call_insn 58 57 59 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 59 58 60 7 (set (reg:DI 181)
        (reg:DI 0 ax)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 60 59 61 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 181)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 61 60 62 7 (set (reg:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(insn 62 61 63 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b04d640a850 *.LC4>)) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(call_insn/i 64 63 65 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 66 7 (set (reg:SI 89 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 90 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:80 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 67 66 68 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) read_procpar.cpp:80 596 {*jcc_1}
     (nil)
 -> 112)
;;  succ:       8 (FALLTHRU)
;;              11

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(insn 70 69 71 8 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 221 {*adddi_1}
     (nil))
(insn 71 70 72 8 (set (reg:DI 1 dx)
        (reg:DI 183)) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(insn 72 71 73 8 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 90 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(call_insn 74 73 75 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 75 74 76 8 (set (reg:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(call_insn 77 76 78 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 8 (set (reg:SI 90 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 90 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:92 3 {*cmpsi_ccno_1}
     (nil))
(insn 80 79 81 8 (set (reg:QI 91 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 592 {*setcc_qi}
     (nil))
(insn 81 80 82 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:92 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 82 81 83 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) read_procpar.cpp:92 596 {*jcc_1}
     (nil)
 -> 89)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:93 89 {*movdi_internal}
     (nil))
(call_insn 85 84 86 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 86 85 87 9 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 90 {*movsi_internal}
     (nil))
(call_insn 87 86 89 9 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 89 87 90 10 6 "" [1 uses])
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 10 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 221 {*adddi_1}
     (nil))
(insn 92 91 93 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 93 92 94 10 (set (reg:DI 5 di)
        (reg:DI 186)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(call_insn 94 93 95 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 95 94 96 10 (set (reg:DI 187)
        (reg:DI 0 ax)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 96 95 97 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 187)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 97 96 98 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 98 97 99 10 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(call_insn 99 98 100 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 10 (set (reg:DI 188)
        (reg:DI 0 ax)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 101 100 102 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 188)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 103 102 104 10 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 104 103 105 10 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn 105 104 106 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 10 (set (reg:DF 92 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 128 {*movdf_internal}
     (nil))
(insn 107 106 108 10 (set (reg:SF 93 [ D.5604 ])
        (float_truncate:SF (reg:DF 92 [ D.5603 ]))) read_procpar.cpp:115 157 {*truncdfsf_fast_sse}
     (nil))
(insn 108 107 109 10 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 109 108 112 10 (set (mem/j:SF (reg/f:DI 190) [0 procpar_info_23(D)->acquision_time+0 S4 A64])
        (reg:SF 93 [ D.5604 ])) read_procpar.cpp:115 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 112 109 113 11 5 "" [1 uses])
(note 113 112 114 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 11 (set (reg:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 115 114 116 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b04d640a980 *.LC6>)) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 116 115 117 11 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(call_insn/i 117 116 118 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 118 117 119 11 (set (reg:SI 94 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 90 {*movsi_internal}
     (nil))
(insn 119 118 120 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:122 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 120 119 121 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) read_procpar.cpp:122 596 {*jcc_1}
     (nil)
 -> 163)
;;  succ:       12 (FALLTHRU)
;;              15

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 121 120 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 12 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 123 122 124 12 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 221 {*adddi_1}
     (nil))
(insn 124 123 125 12 (set (reg:DI 1 dx)
        (reg:DI 192)) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 125 124 126 12 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 90 {*movsi_internal}
     (nil))
(insn 126 125 127 12 (set (reg:DI 5 di)
        (reg:DI 193)) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(call_insn 127 126 128 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 128 127 129 12 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(insn 129 128 130 12 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(call_insn 130 129 131 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 131 130 132 12 (set (reg:SI 95 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 90 {*movsi_internal}
     (nil))
(insn 132 131 133 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:126 3 {*cmpsi_ccno_1}
     (nil))
(insn 133 132 134 12 (set (reg:QI 96 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 592 {*setcc_qi}
     (nil))
(insn 134 133 135 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:126 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 135 134 136 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) read_procpar.cpp:126 596 {*jcc_1}
     (nil)
 -> 142)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 136 135 137 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:127 89 {*movdi_internal}
     (nil))
(call_insn 138 137 139 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 139 138 140 13 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 90 {*movsi_internal}
     (nil))
(call_insn 140 139 142 13 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 142 140 143 14 9 "" [1 uses])
(note 143 142 144 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 14 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 221 {*adddi_1}
     (nil))
(insn 145 144 146 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b04d640aa18 *.LC7>)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 146 145 147 14 (set (reg:DI 5 di)
        (reg:DI 195)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(call_insn 147 146 148 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 148 147 149 14 (set (reg:DI 196)
        (reg:DI 0 ax)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 149 148 150 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 196)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 150 149 151 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b04d640aab0 *.LC8>)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 151 150 152 14 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(call_insn 152 151 153 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 153 152 154 14 (set (reg:DI 197)
        (reg:DI 0 ax)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 154 153 155 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 197)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 155 154 156 14 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 156 155 157 14 (parallel [
            (set (reg/f:DI 97 [ D.5605 ])
                (plus:DI (reg/f:DI 198)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 157 156 158 14 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 158 157 159 14 (set (reg:DI 4 si)
        (reg:DI 199)) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 159 158 160 14 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.5605 ])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(call_insn 160 159 163 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b04d60bd600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 163 160 164 15 8 "" [1 uses])
(note 164 163 165 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 15 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 166 165 167 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b04d640ab48 *.LC9>)) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 167 166 168 15 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(call_insn/i 168 167 169 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 169 168 170 15 (set (reg:SI 98 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 90 {*movsi_internal}
     (nil))
(insn 170 169 171 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:136 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 171 170 172 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) read_procpar.cpp:136 596 {*jcc_1}
     (nil)
 -> 216)
;;  succ:       16 (FALLTHRU)
;;              19

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 172 171 173 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 16 (set (reg:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 174 173 175 16 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 221 {*adddi_1}
     (nil))
(insn 175 174 176 16 (set (reg:DI 1 dx)
        (reg:DI 201)) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 176 175 177 16 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 90 {*movsi_internal}
     (nil))
(insn 177 176 178 16 (set (reg:DI 5 di)
        (reg:DI 202)) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(call_insn 178 177 179 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 179 178 180 16 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(insn 180 179 181 16 (set (reg:DI 5 di)
        (reg:DI 203)) read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(call_insn 181 180 182 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 182 181 183 16 (set (reg:SI 99 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 90 {*movsi_internal}
     (nil))
(insn 183 182 184 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:139 3 {*cmpsi_ccno_1}
     (nil))
(insn 184 183 185 16 (set (reg:QI 100 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 592 {*setcc_qi}
     (nil))
(insn 185 184 186 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:139 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 186 185 187 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) read_procpar.cpp:139 596 {*jcc_1}
     (nil)
 -> 193)
;;  succ:       17 (FALLTHRU)
;;              18

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 187 186 188 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:140 89 {*movdi_internal}
     (nil))
(call_insn 189 188 190 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 190 189 191 17 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 90 {*movsi_internal}
     (nil))
(call_insn 191 190 193 17 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 193 191 194 18 11 "" [1 uses])
(note 194 193 195 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 18 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 221 {*adddi_1}
     (nil))
(insn 196 195 197 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 197 196 198 18 (set (reg:DI 5 di)
        (reg:DI 204)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(call_insn 198 197 199 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 199 198 200 18 (set (reg:DI 205)
        (reg:DI 0 ax)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 200 199 201 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 205)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 201 200 202 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 202 201 203 18 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn 203 202 204 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 204 203 205 18 (set (reg:DI 206)
        (reg:DI 0 ax)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 205 204 206 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 206)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 206 205 207 18 (set (reg:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 207 206 208 18 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 208 207 209 18 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(call_insn 209 208 210 18 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 18 (set (reg:DF 101 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 128 {*movdf_internal}
     (nil))
(insn 211 210 212 18 (set (reg:SF 102 [ D.5604 ])
        (float_truncate:SF (reg:DF 101 [ D.5603 ]))) read_procpar.cpp:147 157 {*truncdfsf_fast_sse}
     (nil))
(insn 212 211 213 18 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 213 212 216 18 (set (mem/j:SF (plus:DI (reg/f:DI 208)
                (const_int 292 [0x124])) [0 procpar_info_23(D)->filter+0 S4 A32])
        (reg:SF 102 [ D.5604 ])) read_procpar.cpp:147 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 216 213 217 19 10 "" [1 uses])
(note 217 216 218 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 19 (set (reg:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(insn 219 218 220 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b04d640abe0 *.LC10>)) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(insn 220 219 221 19 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(call_insn/i 221 220 222 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 222 221 223 19 (set (reg:SI 103 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 90 {*movsi_internal}
     (nil))
(insn 223 222 224 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:149 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 224 223 225 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) read_procpar.cpp:149 596 {*jcc_1}
     (nil)
 -> 270)
;;  succ:       20 (FALLTHRU)
;;              23

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 225 224 226 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 20 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(insn 227 226 228 20 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 221 {*adddi_1}
     (nil))
(insn 228 227 229 20 (set (reg:DI 1 dx)
        (reg:DI 210)) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(insn 229 228 230 20 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 90 {*movsi_internal}
     (nil))
(insn 230 229 231 20 (set (reg:DI 5 di)
        (reg:DI 211)) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(call_insn 231 230 232 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 232 231 233 20 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(insn 233 232 234 20 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(call_insn 234 233 235 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 235 234 236 20 (set (reg:SI 104 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 90 {*movsi_internal}
     (nil))
(insn 236 235 237 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:152 3 {*cmpsi_ccno_1}
     (nil))
(insn 237 236 238 20 (set (reg:QI 105 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 592 {*setcc_qi}
     (nil))
(insn 238 237 239 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:152 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 239 238 240 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) read_procpar.cpp:152 596 {*jcc_1}
     (nil)
 -> 246)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 240 239 241 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:153 89 {*movdi_internal}
     (nil))
(call_insn 242 241 243 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 21 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 90 {*movsi_internal}
     (nil))
(call_insn 244 243 246 21 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 22, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 246 244 247 22 13 "" [1 uses])
(note 247 246 248 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 22 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 221 {*adddi_1}
     (nil))
(insn 249 248 250 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 250 249 251 22 (set (reg:DI 5 di)
        (reg:DI 213)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(call_insn 251 250 252 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 22 (set (reg:DI 214)
        (reg:DI 0 ax)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 253 252 254 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 214)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 254 253 255 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 255 254 256 22 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(call_insn 256 255 257 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 257 256 258 22 (set (reg:DI 215)
        (reg:DI 0 ax)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 258 257 259 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 215)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 259 258 260 22 (set (reg:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 260 259 261 22 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
(insn 261 260 262 22 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 262 261 263 22 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(call_insn 263 262 264 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b04d634d300 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 264 263 265 22 (set (reg:DI 106 [ D.5606 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 265 264 266 22 (set (reg:SI 107 [ D.5601 ])
        (subreg:SI (reg:DI 106 [ D.5606 ]) 0)) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
(insn 266 265 267 22 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 267 266 270 22 (set (mem/j:SI (plus:DI (reg/f:DI 217)
                (const_int 296 [0x128])) [0 procpar_info_23(D)->num_transients+0 S4 A64])
        (reg:SI 107 [ D.5601 ])) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 23, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 270 267 271 23 12 "" [1 uses])
(note 271 270 272 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 23 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(insn 273 272 274 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b04d640ac78 *.LC11>)) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(insn 274 273 275 23 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(call_insn/i 275 274 276 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 276 275 277 23 (set (reg:SI 108 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 90 {*movsi_internal}
     (nil))
(insn 277 276 278 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:162 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 278 277 279 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) read_procpar.cpp:162 596 {*jcc_1}
     (nil)
 -> 324)
;;  succ:       24 (FALLTHRU)
;;              27

;; basic block 24, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 279 278 280 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 24 (set (reg:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(insn 281 280 282 24 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 221 {*adddi_1}
     (nil))
(insn 282 281 283 24 (set (reg:DI 1 dx)
        (reg:DI 219)) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(insn 283 282 284 24 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 90 {*movsi_internal}
     (nil))
(insn 284 283 285 24 (set (reg:DI 5 di)
        (reg:DI 220)) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(call_insn 285 284 286 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 286 285 287 24 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 287 286 288 24 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(call_insn 288 287 289 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 289 288 290 24 (set (reg:SI 109 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 90 {*movsi_internal}
     (nil))
(insn 290 289 291 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:165 3 {*cmpsi_ccno_1}
     (nil))
(insn 291 290 292 24 (set (reg:QI 110 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 592 {*setcc_qi}
     (nil))
(insn 292 291 293 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:165 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 293 292 294 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) read_procpar.cpp:165 596 {*jcc_1}
     (nil)
 -> 300)
;;  succ:       25 (FALLTHRU)
;;              26

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 294 293 295 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:166 89 {*movdi_internal}
     (nil))
(call_insn 296 295 297 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 297 296 298 25 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 90 {*movsi_internal}
     (nil))
(call_insn 298 297 300 25 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 26, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 300 298 301 26 15 "" [1 uses])
(note 301 300 302 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 26 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 221 {*adddi_1}
     (nil))
(insn 303 302 304 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 304 303 305 26 (set (reg:DI 5 di)
        (reg:DI 222)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(call_insn 305 304 306 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 306 305 307 26 (set (reg:DI 223)
        (reg:DI 0 ax)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 307 306 308 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 223)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 308 307 309 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 309 308 310 26 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(call_insn 310 309 311 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 311 310 312 26 (set (reg:DI 224)
        (reg:DI 0 ax)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 312 311 313 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 224)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 313 312 314 26 (set (reg:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 314 313 315 26 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
(insn 315 314 316 26 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 316 315 317 26 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(call_insn 317 316 318 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b04d634d300 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 318 317 319 26 (set (reg:DI 111 [ D.5606 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 319 318 320 26 (set (reg:SI 112 [ D.5601 ])
        (subreg:SI (reg:DI 111 [ D.5606 ]) 0)) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
(insn 320 319 321 26 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 321 320 324 26 (set (mem/j:SI (plus:DI (reg/f:DI 226)
                (const_int 300 [0x12c])) [0 procpar_info_23(D)->num_points+0 S4 A32])
        (reg:SI 112 [ D.5601 ])) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 27, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 324 321 325 27 14 "" [1 uses])
(note 325 324 326 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 27 (set (reg:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 327 326 328 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2b04d640ad10 *.LC12>)) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 328 327 329 27 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(call_insn/i 329 328 330 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 330 329 331 27 (set (reg:SI 113 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 90 {*movsi_internal}
     (nil))
(insn 331 330 332 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:175 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 332 331 333 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) read_procpar.cpp:175 596 {*jcc_1}
     (nil)
 -> 376)
;;  succ:       28 (FALLTHRU)
;;              31

;; basic block 28, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 333 332 334 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 28 (set (reg:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 335 334 336 28 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 221 {*adddi_1}
     (nil))
(insn 336 335 337 28 (set (reg:DI 1 dx)
        (reg:DI 228)) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 337 336 338 28 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 90 {*movsi_internal}
     (nil))
(insn 338 337 339 28 (set (reg:DI 5 di)
        (reg:DI 229)) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(call_insn 339 338 340 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 340 339 341 28 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(insn 341 340 342 28 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(call_insn 342 341 343 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 343 342 344 28 (set (reg:SI 114 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 90 {*movsi_internal}
     (nil))
(insn 344 343 345 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:178 3 {*cmpsi_ccno_1}
     (nil))
(insn 345 344 346 28 (set (reg:QI 115 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 592 {*setcc_qi}
     (nil))
(insn 346 345 347 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:178 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 347 346 348 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) read_procpar.cpp:178 596 {*jcc_1}
     (nil)
 -> 354)
;;  succ:       29 (FALLTHRU)
;;              30

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 348 347 349 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:179 89 {*movdi_internal}
     (nil))
(call_insn 350 349 351 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 351 350 352 29 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 90 {*movsi_internal}
     (nil))
(call_insn 352 351 354 29 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 30, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
(code_label 354 352 355 30 17 "" [1 uses])
(note 355 354 356 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 30 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 221 {*adddi_1}
     (nil))
(insn 357 356 358 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 358 357 359 30 (set (reg:DI 5 di)
        (reg:DI 231)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(call_insn 359 358 360 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 360 359 361 30 (set (reg:DI 232)
        (reg:DI 0 ax)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 361 360 362 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 232)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 362 361 363 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 363 362 364 30 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(call_insn 364 363 365 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 365 364 366 30 (set (reg:DI 233)
        (reg:DI 0 ax)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 366 365 367 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 233)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 367 366 368 30 (set (reg:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 368 367 369 30 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 369 368 370 30 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(call_insn 370 369 371 30 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 30 (set (reg:DF 116 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 128 {*movdf_internal}
     (nil))
(insn 372 371 373 30 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 373 372 376 30 (set (mem/j:DF (plus:DI (reg/f:DI 235)
                (const_int 304 [0x130])) [0 procpar_info_23(D)->main_frequency+0 S8 A64])
        (reg:DF 116 [ D.5603 ])) read_procpar.cpp:186 128 {*movdf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 376 373 377 31 16 "" [1 uses])
(note 377 376 378 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 31 (set (reg:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 379 378 380 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b04d640ada8 *.LC13>)) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 380 379 381 31 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(call_insn/i 381 380 382 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 382 381 383 31 (set (reg:SI 117 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 383 382 384 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:188 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 384 383 385 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) read_procpar.cpp:188 596 {*jcc_1}
     (nil)
 -> 428)
;;  succ:       32 (FALLTHRU)
;;              35

;; basic block 32, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 (FALLTHRU)
(note 385 384 386 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 32 (set (reg:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 387 386 388 32 (parallel [
            (set (reg:DI 238)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 221 {*adddi_1}
     (nil))
(insn 388 387 389 32 (set (reg:DI 1 dx)
        (reg:DI 237)) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 389 388 390 32 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 390 389 391 32 (set (reg:DI 5 di)
        (reg:DI 238)) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(call_insn 391 390 392 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 392 391 393 32 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(insn 393 392 394 32 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(call_insn 394 393 395 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 395 394 396 32 (set (reg:SI 118 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 90 {*movsi_internal}
     (nil))
(insn 396 395 397 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:191 3 {*cmpsi_ccno_1}
     (nil))
(insn 397 396 398 32 (set (reg:QI 119 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 592 {*setcc_qi}
     (nil))
(insn 398 397 399 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:191 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 399 398 400 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) read_procpar.cpp:191 596 {*jcc_1}
     (nil)
 -> 406)
;;  succ:       33 (FALLTHRU)
;;              34

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 400 399 401 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:192 89 {*movdi_internal}
     (nil))
(call_insn 402 401 403 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 403 402 404 33 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 90 {*movsi_internal}
     (nil))
(call_insn 404 403 406 33 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 34, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
(code_label 406 404 407 34 19 "" [1 uses])
(note 407 406 408 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 34 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 221 {*adddi_1}
     (nil))
(insn 409 408 410 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 410 409 411 34 (set (reg:DI 5 di)
        (reg:DI 240)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(call_insn 411 410 412 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 412 411 413 34 (set (reg:DI 241)
        (reg:DI 0 ax)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 413 412 414 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 241)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 414 413 415 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 415 414 416 34 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(call_insn 416 415 417 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 417 416 418 34 (set (reg:DI 242)
        (reg:DI 0 ax)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 418 417 419 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 242)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 419 418 420 34 (set (reg:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 420 419 421 34 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 421 420 422 34 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(call_insn 422 421 423 34 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 423 422 424 34 (set (reg:DF 120 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 128 {*movdf_internal}
     (nil))
(insn 424 423 425 34 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 425 424 428 34 (set (mem/j:DF (plus:DI (reg/f:DI 244)
                (const_int 312 [0x138])) [0 procpar_info_23(D)->offset_frequency+0 S8 A64])
        (reg:DF 120 [ D.5603 ])) read_procpar.cpp:199 128 {*movdf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 35, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       31
(code_label 428 425 429 35 18 "" [1 uses])
(note 429 428 430 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 35 (set (reg:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 431 430 432 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b04d640ae40 *.LC14>)) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 432 431 433 35 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(call_insn/i 433 432 434 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 434 433 435 35 (set (reg:SI 121 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 90 {*movsi_internal}
     (nil))
(insn 435 434 436 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:201 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 436 435 437 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 481)
            (pc))) read_procpar.cpp:201 596 {*jcc_1}
     (nil)
 -> 481)
;;  succ:       36 (FALLTHRU)
;;              39

;; basic block 36, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 (FALLTHRU)
(note 437 436 438 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 36 (set (reg:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(insn 439 438 440 36 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 221 {*adddi_1}
     (nil))
(insn 440 439 441 36 (set (reg:DI 1 dx)
        (reg:DI 246)) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(insn 441 440 442 36 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 90 {*movsi_internal}
     (nil))
(insn 442 441 443 36 (set (reg:DI 5 di)
        (reg:DI 247)) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(call_insn 443 442 444 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 444 443 445 36 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 445 444 446 36 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(call_insn 446 445 447 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 447 446 448 36 (set (reg:SI 122 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 90 {*movsi_internal}
     (nil))
(insn 448 447 449 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:204 3 {*cmpsi_ccno_1}
     (nil))
(insn 449 448 450 36 (set (reg:QI 123 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 592 {*setcc_qi}
     (nil))
(insn 450 449 451 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:204 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 451 450 452 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) read_procpar.cpp:204 596 {*jcc_1}
     (nil)
 -> 458)
;;  succ:       37 (FALLTHRU)
;;              38

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 452 451 453 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:205 89 {*movdi_internal}
     (nil))
(call_insn 454 453 455 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 455 454 456 37 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 90 {*movsi_internal}
     (nil))
(call_insn 456 455 458 37 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 38, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
(code_label 458 456 459 38 21 "" [1 uses])
(note 459 458 460 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 38 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 221 {*adddi_1}
     (nil))
(insn 461 460 462 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 462 461 463 38 (set (reg:DI 5 di)
        (reg:DI 249)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(call_insn 463 462 464 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 464 463 465 38 (set (reg:DI 250)
        (reg:DI 0 ax)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 465 464 466 38 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 250)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 466 465 467 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 467 466 468 38 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(call_insn 468 467 469 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 469 468 470 38 (set (reg:DI 251)
        (reg:DI 0 ax)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 470 469 471 38 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 251)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 471 470 472 38 (set (reg:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 472 471 473 38 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 473 472 474 38 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(call_insn 474 473 475 38 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 475 474 476 38 (set (reg:DF 124 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 128 {*movdf_internal}
     (nil))
(insn 476 475 477 38 (set (reg:SF 125 [ D.5604 ])
        (float_truncate:SF (reg:DF 124 [ D.5603 ]))) read_procpar.cpp:212 157 {*truncdfsf_fast_sse}
     (nil))
(insn 477 476 478 38 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 478 477 481 38 (set (mem/j:SF (plus:DI (reg/f:DI 253)
                (const_int 320 [0x140])) [0 procpar_info_23(D)->te+0 S4 A64])
        (reg:SF 125 [ D.5604 ])) read_procpar.cpp:212 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 39, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       35
(code_label 481 478 482 39 20 "" [1 uses])
(note 482 481 483 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 39 (set (reg:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 484 483 485 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b04d640aed8 *.LC15>)) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 485 484 486 39 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(call_insn/i 486 485 487 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 487 486 488 39 (set (reg:SI 126 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 488 487 489 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:214 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 489 488 490 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 534)
            (pc))) read_procpar.cpp:214 596 {*jcc_1}
     (nil)
 -> 534)
;;  succ:       40 (FALLTHRU)
;;              43

;; basic block 40, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
(note 490 489 491 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 40 (set (reg:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 492 491 493 40 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 221 {*adddi_1}
     (nil))
(insn 493 492 494 40 (set (reg:DI 1 dx)
        (reg:DI 255)) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 494 493 495 40 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 495 494 496 40 (set (reg:DI 5 di)
        (reg:DI 256)) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(call_insn 496 495 497 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 497 496 498 40 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 89 {*movdi_internal}
     (nil))
(insn 498 497 499 40 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:217 89 {*movdi_internal}
     (nil))
(call_insn 499 498 500 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 500 499 501 40 (set (reg:SI 127 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 90 {*movsi_internal}
     (nil))
(insn 501 500 502 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:217 3 {*cmpsi_ccno_1}
     (nil))
(insn 502 501 503 40 (set (reg:QI 128 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 592 {*setcc_qi}
     (nil))
(insn 503 502 504 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:217 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 504 503 505 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) read_procpar.cpp:217 596 {*jcc_1}
     (nil)
 -> 511)
;;  succ:       41 (FALLTHRU)
;;              42

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 505 504 506 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:218 89 {*movdi_internal}
     (nil))
(call_insn 507 506 508 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 508 507 509 41 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 90 {*movsi_internal}
     (nil))
(call_insn 509 508 511 41 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 42, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
(code_label 511 509 512 42 23 "" [1 uses])
(note 512 511 513 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 42 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 221 {*adddi_1}
     (nil))
(insn 514 513 515 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 515 514 516 42 (set (reg:DI 5 di)
        (reg:DI 258)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(call_insn 516 515 517 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 517 516 518 42 (set (reg:DI 259)
        (reg:DI 0 ax)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 518 517 519 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 259)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 519 518 520 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 520 519 521 42 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(call_insn 521 520 522 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 522 521 523 42 (set (reg:DI 260)
        (reg:DI 0 ax)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 523 522 524 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 260)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 524 523 525 42 (set (reg:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 525 524 526 42 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 526 525 527 42 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(call_insn 527 526 528 42 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 528 527 529 42 (set (reg:DF 129 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 128 {*movdf_internal}
     (nil))
(insn 529 528 530 42 (set (reg:SF 130 [ D.5604 ])
        (float_truncate:SF (reg:DF 129 [ D.5603 ]))) read_procpar.cpp:225 157 {*truncdfsf_fast_sse}
     (nil))
(insn 530 529 531 42 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 531 530 534 42 (set (mem/j:SF (plus:DI (reg/f:DI 262)
                (const_int 324 [0x144])) [0 procpar_info_23(D)->tm+0 S4 A32])
        (reg:SF 130 [ D.5604 ])) read_procpar.cpp:225 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 43, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
(code_label 534 531 535 43 22 "" [1 uses])
(note 535 534 536 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 43 (set (reg:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(insn 537 536 538 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b04d6425000 *.LC16>)) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(insn 538 537 539 43 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(call_insn/i 539 538 540 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 540 539 541 43 (set (reg:SI 131 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 90 {*movsi_internal}
     (nil))
(insn 541 540 542 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:227 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 542 541 543 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 587)
            (pc))) read_procpar.cpp:227 596 {*jcc_1}
     (nil)
 -> 587)
;;  succ:       44 (FALLTHRU)
;;              47

;; basic block 44, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       43 (FALLTHRU)
(note 543 542 544 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 44 (set (reg:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(insn 545 544 546 44 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 221 {*adddi_1}
     (nil))
(insn 546 545 547 44 (set (reg:DI 1 dx)
        (reg:DI 264)) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(insn 547 546 548 44 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 90 {*movsi_internal}
     (nil))
(insn 548 547 549 44 (set (reg:DI 5 di)
        (reg:DI 265)) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(call_insn 549 548 550 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 550 549 551 44 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 89 {*movdi_internal}
     (nil))
(insn 551 550 552 44 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:230 89 {*movdi_internal}
     (nil))
(call_insn 552 551 553 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 553 552 554 44 (set (reg:SI 132 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 90 {*movsi_internal}
     (nil))
(insn 554 553 555 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:230 3 {*cmpsi_ccno_1}
     (nil))
(insn 555 554 556 44 (set (reg:QI 133 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 592 {*setcc_qi}
     (nil))
(insn 556 555 557 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:230 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 557 556 558 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 564)
            (pc))) read_procpar.cpp:230 596 {*jcc_1}
     (nil)
 -> 564)
;;  succ:       45 (FALLTHRU)
;;              46

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 558 557 559 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 559 558 560 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:231 89 {*movdi_internal}
     (nil))
(call_insn 560 559 561 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 561 560 562 45 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 90 {*movsi_internal}
     (nil))
(call_insn 562 561 564 45 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 46, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
(code_label 564 562 565 46 25 "" [1 uses])
(note 565 564 566 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 46 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 221 {*adddi_1}
     (nil))
(insn 567 566 568 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 568 567 569 46 (set (reg:DI 5 di)
        (reg:DI 267)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(call_insn 569 568 570 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 570 569 571 46 (set (reg:DI 268)
        (reg:DI 0 ax)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 571 570 572 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 268)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 572 571 573 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 573 572 574 46 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(call_insn 574 573 575 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 575 574 576 46 (set (reg:DI 269)
        (reg:DI 0 ax)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 576 575 577 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 269)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 577 576 578 46 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 578 577 579 46 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 579 578 580 46 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(call_insn 580 579 581 46 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 581 580 582 46 (set (reg:DF 134 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 128 {*movdf_internal}
     (nil))
(insn 582 581 583 46 (set (reg:SF 135 [ D.5604 ])
        (float_truncate:SF (reg:DF 134 [ D.5603 ]))) read_procpar.cpp:238 157 {*truncdfsf_fast_sse}
     (nil))
(insn 583 582 584 46 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 584 583 587 46 (set (mem/j:SF (plus:DI (reg/f:DI 271)
                (const_int 328 [0x148])) [0 procpar_info_23(D)->gain+0 S4 A64])
        (reg:SF 135 [ D.5604 ])) read_procpar.cpp:238 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 47, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       43
(code_label 587 584 588 47 24 "" [1 uses])
(note 588 587 589 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 47 (set (reg:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(insn 590 589 591 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b04d6425098 *.LC17>)) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(insn 591 590 592 47 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(call_insn/i 592 591 593 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 593 592 594 47 (set (reg:SI 136 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 90 {*movsi_internal}
     (nil))
(insn 594 593 595 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:240 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 595 594 596 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 640)
            (pc))) read_procpar.cpp:240 596 {*jcc_1}
     (nil)
 -> 640)
;;  succ:       48 (FALLTHRU)
;;              51

;; basic block 48, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
(note 596 595 597 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 48 (set (reg:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 598 597 599 48 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 221 {*adddi_1}
     (nil))
(insn 599 598 600 48 (set (reg:DI 1 dx)
        (reg:DI 273)) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 600 599 601 48 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 90 {*movsi_internal}
     (nil))
(insn 601 600 602 48 (set (reg:DI 5 di)
        (reg:DI 274)) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn 602 601 603 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 603 602 604 48 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 89 {*movdi_internal}
     (nil))
(insn 604 603 605 48 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:243 89 {*movdi_internal}
     (nil))
(call_insn 605 604 606 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 606 605 607 48 (set (reg:SI 137 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 90 {*movsi_internal}
     (nil))
(insn 607 606 608 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:243 3 {*cmpsi_ccno_1}
     (nil))
(insn 608 607 609 48 (set (reg:QI 138 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 592 {*setcc_qi}
     (nil))
(insn 609 608 610 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:243 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 610 609 611 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) read_procpar.cpp:243 596 {*jcc_1}
     (nil)
 -> 617)
;;  succ:       49 (FALLTHRU)
;;              50

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 611 610 612 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(call_insn 613 612 614 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 614 613 615 49 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 90 {*movsi_internal}
     (nil))
(call_insn 615 614 617 49 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 50, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 617 615 618 50 27 "" [1 uses])
(note 618 617 619 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 50 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 221 {*adddi_1}
     (nil))
(insn 620 619 621 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 621 620 622 50 (set (reg:DI 5 di)
        (reg:DI 276)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(call_insn 622 621 623 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 623 622 624 50 (set (reg:DI 277)
        (reg:DI 0 ax)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 624 623 625 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 277)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 625 624 626 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 626 625 627 50 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(call_insn 627 626 628 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 628 627 629 50 (set (reg:DI 278)
        (reg:DI 0 ax)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 629 628 630 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 278)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 630 629 631 50 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 631 630 632 50 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 632 631 633 50 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(call_insn 633 632 634 50 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 634 633 635 50 (set (reg:DF 139 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 128 {*movdf_internal}
     (nil))
(insn 635 634 636 50 (set (reg:SF 140 [ D.5604 ])
        (float_truncate:SF (reg:DF 139 [ D.5603 ]))) read_procpar.cpp:251 157 {*truncdfsf_fast_sse}
     (nil))
(insn 636 635 637 50 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 637 636 640 50 (set (mem/j:SF (plus:DI (reg/f:DI 280)
                (const_int 332 [0x14c])) [0 procpar_info_23(D)->pos1+0 S4 A32])
        (reg:SF 140 [ D.5604 ])) read_procpar.cpp:251 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 51, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       47
(code_label 640 637 641 51 26 "" [1 uses])
(note 641 640 642 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 51 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(insn 643 642 644 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b04d6425130 *.LC18>)) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(insn 644 643 645 51 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(call_insn/i 645 644 646 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 646 645 647 51 (set (reg:SI 141 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 90 {*movsi_internal}
     (nil))
(insn 647 646 648 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:253 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 648 647 649 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 693)
            (pc))) read_procpar.cpp:253 596 {*jcc_1}
     (nil)
 -> 693)
;;  succ:       52 (FALLTHRU)
;;              55

;; basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       51 (FALLTHRU)
(note 649 648 650 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 52 (set (reg:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(insn 651 650 652 52 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 221 {*adddi_1}
     (nil))
(insn 652 651 653 52 (set (reg:DI 1 dx)
        (reg:DI 282)) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(insn 653 652 654 52 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 90 {*movsi_internal}
     (nil))
(insn 654 653 655 52 (set (reg:DI 5 di)
        (reg:DI 283)) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(call_insn 655 654 656 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 656 655 657 52 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 89 {*movdi_internal}
     (nil))
(insn 657 656 658 52 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:256 89 {*movdi_internal}
     (nil))
(call_insn 658 657 659 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 659 658 660 52 (set (reg:SI 142 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 90 {*movsi_internal}
     (nil))
(insn 660 659 661 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:256 3 {*cmpsi_ccno_1}
     (nil))
(insn 661 660 662 52 (set (reg:QI 143 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 592 {*setcc_qi}
     (nil))
(insn 662 661 663 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:256 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 663 662 664 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 670)
            (pc))) read_procpar.cpp:256 596 {*jcc_1}
     (nil)
 -> 670)
;;  succ:       53 (FALLTHRU)
;;              54

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       52 (FALLTHRU)
(note 664 663 665 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:257 89 {*movdi_internal}
     (nil))
(call_insn 666 665 667 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 667 666 668 53 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 90 {*movsi_internal}
     (nil))
(call_insn 668 667 670 53 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 54, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL)
;;  pred:       52
(code_label 670 668 671 54 29 "" [1 uses])
(note 671 670 672 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 672 671 673 54 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 221 {*adddi_1}
     (nil))
(insn 673 672 674 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 674 673 675 54 (set (reg:DI 5 di)
        (reg:DI 285)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(call_insn 675 674 676 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 676 675 677 54 (set (reg:DI 286)
        (reg:DI 0 ax)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 677 676 678 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 286)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 678 677 679 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 679 678 680 54 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(call_insn 680 679 681 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 681 680 682 54 (set (reg:DI 287)
        (reg:DI 0 ax)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 682 681 683 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 287)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 683 682 684 54 (set (reg:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 684 683 685 54 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 685 684 686 54 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(call_insn 686 685 687 54 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 687 686 688 54 (set (reg:DF 144 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 128 {*movdf_internal}
     (nil))
(insn 688 687 689 54 (set (reg:SF 145 [ D.5604 ])
        (float_truncate:SF (reg:DF 144 [ D.5603 ]))) read_procpar.cpp:264 157 {*truncdfsf_fast_sse}
     (nil))
(insn 689 688 690 54 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 690 689 693 54 (set (mem/j:SF (plus:DI (reg/f:DI 289)
                (const_int 336 [0x150])) [0 procpar_info_23(D)->pos2+0 S4 A64])
        (reg:SF 145 [ D.5604 ])) read_procpar.cpp:264 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 55, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       51
(code_label 693 690 694 55 28 "" [1 uses])
(note 694 693 695 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 695 694 696 55 (set (reg:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 696 695 697 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b04d64251c8 *.LC19>)) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 697 696 698 55 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(call_insn/i 698 697 699 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 699 698 700 55 (set (reg:SI 146 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 90 {*movsi_internal}
     (nil))
(insn 700 699 701 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:266 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 701 700 702 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 746)
            (pc))) read_procpar.cpp:266 596 {*jcc_1}
     (nil)
 -> 746)
;;  succ:       56 (FALLTHRU)
;;              59

;; basic block 56, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       55 (FALLTHRU)
(note 702 701 703 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 56 (set (reg:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(insn 704 703 705 56 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 221 {*adddi_1}
     (nil))
(insn 705 704 706 56 (set (reg:DI 1 dx)
        (reg:DI 291)) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(insn 706 705 707 56 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 90 {*movsi_internal}
     (nil))
(insn 707 706 708 56 (set (reg:DI 5 di)
        (reg:DI 292)) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(call_insn 708 707 709 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 709 708 710 56 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 89 {*movdi_internal}
     (nil))
(insn 710 709 711 56 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:269 89 {*movdi_internal}
     (nil))
(call_insn 711 710 712 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 712 711 713 56 (set (reg:SI 147 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 90 {*movsi_internal}
     (nil))
(insn 713 712 714 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:269 3 {*cmpsi_ccno_1}
     (nil))
(insn 714 713 715 56 (set (reg:QI 148 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 592 {*setcc_qi}
     (nil))
(insn 715 714 716 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:269 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 716 715 717 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 723)
            (pc))) read_procpar.cpp:269 596 {*jcc_1}
     (nil)
 -> 723)
;;  succ:       57 (FALLTHRU)
;;              58

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       56 (FALLTHRU)
(note 717 716 718 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 718 717 719 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:270 89 {*movdi_internal}
     (nil))
(call_insn 719 718 720 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 720 719 721 57 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 90 {*movsi_internal}
     (nil))
(call_insn 721 720 723 57 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 58, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       56
(code_label 723 721 724 58 31 "" [1 uses])
(note 724 723 725 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 58 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 221 {*adddi_1}
     (nil))
(insn 726 725 727 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 727 726 728 58 (set (reg:DI 5 di)
        (reg:DI 294)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(call_insn 728 727 729 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 729 728 730 58 (set (reg:DI 295)
        (reg:DI 0 ax)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 730 729 731 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 295)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 731 730 732 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 732 731 733 58 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(call_insn 733 732 734 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 734 733 735 58 (set (reg:DI 296)
        (reg:DI 0 ax)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 735 734 736 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 296)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 736 735 737 58 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 737 736 738 58 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 738 737 739 58 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(call_insn 739 738 740 58 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 740 739 741 58 (set (reg:DF 149 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 128 {*movdf_internal}
     (nil))
(insn 741 740 742 58 (set (reg:SF 150 [ D.5604 ])
        (float_truncate:SF (reg:DF 149 [ D.5603 ]))) read_procpar.cpp:277 157 {*truncdfsf_fast_sse}
     (nil))
(insn 742 741 743 58 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 743 742 746 58 (set (mem/j:SF (plus:DI (reg/f:DI 298)
                (const_int 340 [0x154])) [0 procpar_info_23(D)->pos3+0 S4 A32])
        (reg:SF 150 [ D.5604 ])) read_procpar.cpp:277 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 59, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       55
(code_label 746 743 747 59 30 "" [1 uses])
(note 747 746 748 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 748 747 749 59 (set (reg:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(insn 749 748 750 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b04d6425260 *.LC20>)) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(insn 750 749 751 59 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(call_insn/i 751 750 752 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 752 751 753 59 (set (reg:SI 151 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 90 {*movsi_internal}
     (nil))
(insn 753 752 754 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:279 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 754 753 755 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 799)
            (pc))) read_procpar.cpp:279 596 {*jcc_1}
     (nil)
 -> 799)
;;  succ:       60 (FALLTHRU)
;;              63

;; basic block 60, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       59 (FALLTHRU)
(note 755 754 756 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 757 60 (set (reg:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(insn 757 756 758 60 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 221 {*adddi_1}
     (nil))
(insn 758 757 759 60 (set (reg:DI 1 dx)
        (reg:DI 300)) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(insn 759 758 760 60 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 90 {*movsi_internal}
     (nil))
(insn 760 759 761 60 (set (reg:DI 5 di)
        (reg:DI 301)) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(call_insn 761 760 762 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 762 761 763 60 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(insn 763 762 764 60 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(call_insn 764 763 765 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 765 764 766 60 (set (reg:SI 152 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 90 {*movsi_internal}
     (nil))
(insn 766 765 767 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:282 3 {*cmpsi_ccno_1}
     (nil))
(insn 767 766 768 60 (set (reg:QI 153 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 592 {*setcc_qi}
     (nil))
(insn 768 767 769 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:282 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 769 768 770 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 776)
            (pc))) read_procpar.cpp:282 596 {*jcc_1}
     (nil)
 -> 776)
;;  succ:       61 (FALLTHRU)
;;              62

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 (FALLTHRU)
(note 770 769 771 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:283 89 {*movdi_internal}
     (nil))
(call_insn 772 771 773 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 773 772 774 61 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 90 {*movsi_internal}
     (nil))
(call_insn 774 773 776 61 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 62, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL)
;;  pred:       60
(code_label 776 774 777 62 33 "" [1 uses])
(note 777 776 778 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 778 777 779 62 (parallel [
            (set (reg:DI 303)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 221 {*adddi_1}
     (nil))
(insn 779 778 780 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 780 779 781 62 (set (reg:DI 5 di)
        (reg:DI 303)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(call_insn 781 780 782 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 782 781 783 62 (set (reg:DI 304)
        (reg:DI 0 ax)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 783 782 784 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 304)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 784 783 785 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 785 784 786 62 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(call_insn 786 785 787 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 787 786 788 62 (set (reg:DI 305)
        (reg:DI 0 ax)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 788 787 789 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 305)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 789 788 790 62 (set (reg:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 790 789 791 62 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 791 790 792 62 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(call_insn 792 791 793 62 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 793 792 794 62 (set (reg:DF 154 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 128 {*movdf_internal}
     (nil))
(insn 794 793 795 62 (set (reg:SF 155 [ D.5604 ])
        (float_truncate:SF (reg:DF 154 [ D.5603 ]))) read_procpar.cpp:290 157 {*truncdfsf_fast_sse}
     (nil))
(insn 795 794 796 62 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 796 795 799 62 (set (mem/j:SF (plus:DI (reg/f:DI 307)
                (const_int 344 [0x158])) [0 procpar_info_23(D)->vox1+0 S4 A64])
        (reg:SF 155 [ D.5604 ])) read_procpar.cpp:290 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 63, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       59
(code_label 799 796 800 63 32 "" [1 uses])
(note 800 799 801 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 801 800 802 63 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 802 801 803 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b04d64252f8 *.LC21>)) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 803 802 804 63 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(call_insn/i 804 803 805 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 805 804 806 63 (set (reg:SI 156 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 90 {*movsi_internal}
     (nil))
(insn 806 805 807 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:292 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 807 806 808 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 852)
            (pc))) read_procpar.cpp:292 596 {*jcc_1}
     (nil)
 -> 852)
;;  succ:       64 (FALLTHRU)
;;              67

;; basic block 64, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       63 (FALLTHRU)
(note 808 807 809 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 64 (set (reg:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 810 809 811 64 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 221 {*adddi_1}
     (nil))
(insn 811 810 812 64 (set (reg:DI 1 dx)
        (reg:DI 309)) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 812 811 813 64 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 813 812 814 64 (set (reg:DI 5 di)
        (reg:DI 310)) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(call_insn 814 813 815 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 815 814 816 64 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 89 {*movdi_internal}
     (nil))
(insn 816 815 817 64 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:295 89 {*movdi_internal}
     (nil))
(call_insn 817 816 818 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 818 817 819 64 (set (reg:SI 157 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 90 {*movsi_internal}
     (nil))
(insn 819 818 820 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:295 3 {*cmpsi_ccno_1}
     (nil))
(insn 820 819 821 64 (set (reg:QI 158 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 592 {*setcc_qi}
     (nil))
(insn 821 820 822 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:295 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 822 821 823 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 829)
            (pc))) read_procpar.cpp:295 596 {*jcc_1}
     (nil)
 -> 829)
;;  succ:       65 (FALLTHRU)
;;              66

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 (FALLTHRU)
(note 823 822 824 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 824 823 825 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(call_insn 825 824 826 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 826 825 827 65 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 90 {*movsi_internal}
     (nil))
(call_insn 827 826 829 65 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 66, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       64
(code_label 829 827 830 66 35 "" [1 uses])
(note 830 829 831 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 66 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 221 {*adddi_1}
     (nil))
(insn 832 831 833 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 833 832 834 66 (set (reg:DI 5 di)
        (reg:DI 312)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(call_insn 834 833 835 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 835 834 836 66 (set (reg:DI 313)
        (reg:DI 0 ax)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 836 835 837 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 313)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 837 836 838 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 838 837 839 66 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(call_insn 839 838 840 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 840 839 841 66 (set (reg:DI 314)
        (reg:DI 0 ax)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 841 840 842 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 314)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 842 841 843 66 (set (reg:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 843 842 844 66 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 844 843 845 66 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(call_insn 845 844 846 66 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 846 845 847 66 (set (reg:DF 159 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 128 {*movdf_internal}
     (nil))
(insn 847 846 848 66 (set (reg:SF 160 [ D.5604 ])
        (float_truncate:SF (reg:DF 159 [ D.5603 ]))) read_procpar.cpp:303 157 {*truncdfsf_fast_sse}
     (nil))
(insn 848 847 849 66 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 849 848 852 66 (set (mem/j:SF (plus:DI (reg/f:DI 316)
                (const_int 348 [0x15c])) [0 procpar_info_23(D)->vox2+0 S4 A32])
        (reg:SF 160 [ D.5604 ])) read_procpar.cpp:303 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 67, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       63
(code_label 852 849 853 67 34 "" [1 uses])
(note 853 852 854 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 854 853 855 67 (set (reg:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(insn 855 854 856 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b04d6425390 *.LC22>)) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(insn 856 855 857 67 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(call_insn/i 857 856 858 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 858 857 859 67 (set (reg:SI 161 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 90 {*movsi_internal}
     (nil))
(insn 859 858 860 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:305 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 860 859 861 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 905)
            (pc))) read_procpar.cpp:305 596 {*jcc_1}
     (nil)
 -> 905)
;;  succ:       68 (FALLTHRU)
;;              71

;; basic block 68, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       67 (FALLTHRU)
(note 861 860 862 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 862 861 863 68 (set (reg:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(insn 863 862 864 68 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 221 {*adddi_1}
     (nil))
(insn 864 863 865 68 (set (reg:DI 1 dx)
        (reg:DI 318)) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(insn 865 864 866 68 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 90 {*movsi_internal}
     (nil))
(insn 866 865 867 68 (set (reg:DI 5 di)
        (reg:DI 319)) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(call_insn 867 866 868 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 868 867 869 68 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 89 {*movdi_internal}
     (nil))
(insn 869 868 870 68 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:308 89 {*movdi_internal}
     (nil))
(call_insn 870 869 871 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 871 870 872 68 (set (reg:SI 162 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 90 {*movsi_internal}
     (nil))
(insn 872 871 873 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:308 3 {*cmpsi_ccno_1}
     (nil))
(insn 873 872 874 68 (set (reg:QI 163 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 592 {*setcc_qi}
     (nil))
(insn 874 873 875 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:308 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 875 874 876 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 882)
            (pc))) read_procpar.cpp:308 596 {*jcc_1}
     (nil)
 -> 882)
;;  succ:       69 (FALLTHRU)
;;              70

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 (FALLTHRU)
(note 876 875 877 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:309 89 {*movdi_internal}
     (nil))
(call_insn 878 877 879 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 879 878 880 69 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 90 {*movsi_internal}
     (nil))
(call_insn 880 879 882 69 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 70, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       68
(code_label 882 880 883 70 37 "" [1 uses])
(note 883 882 884 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 70 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 221 {*adddi_1}
     (nil))
(insn 885 884 886 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 886 885 887 70 (set (reg:DI 5 di)
        (reg:DI 321)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(call_insn 887 886 888 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 888 887 889 70 (set (reg:DI 322)
        (reg:DI 0 ax)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 889 888 890 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 322)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 890 889 891 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 891 890 892 70 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(call_insn 892 891 893 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 893 892 894 70 (set (reg:DI 323)
        (reg:DI 0 ax)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 894 893 895 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 323)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 895 894 896 70 (set (reg:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 896 895 897 70 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 897 896 898 70 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(call_insn 898 897 899 70 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 899 898 900 70 (set (reg:DF 164 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 128 {*movdf_internal}
     (nil))
(insn 900 899 901 70 (set (reg:SF 165 [ D.5604 ])
        (float_truncate:SF (reg:DF 164 [ D.5603 ]))) read_procpar.cpp:316 157 {*truncdfsf_fast_sse}
     (nil))
(insn 901 900 902 70 (set (reg/f:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 902 901 905 70 (set (mem/j:SF (plus:DI (reg/f:DI 325)
                (const_int 352 [0x160])) [0 procpar_info_23(D)->vox3+0 S4 A64])
        (reg:SF 165 [ D.5604 ])) read_procpar.cpp:316 129 {*movsf_internal}
     (nil))
;;  succ:       75 [100.0%]  (FALLTHRU)

;; basic block 71, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       67
(code_label 905 902 906 71 36 "" [1 uses])
(note 906 905 907 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 907 906 908 71 (set (reg:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(insn 908 907 909 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b04d6425428 *.LC23>)) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(insn 909 908 910 71 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(call_insn/i 910 909 911 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b04d60bd300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 911 910 912 71 (set (reg:SI 166 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 90 {*movsi_internal}
     (nil))
(insn 912 911 913 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:318 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 913 912 914 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 956)
            (pc))) read_procpar.cpp:318 596 {*jcc_1}
     (nil)
 -> 956)
;;  succ:       72 (FALLTHRU)
;;              75

;; basic block 72, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       71 (FALLTHRU)
(note 914 913 915 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 915 914 916 72 (set (reg:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(insn 916 915 917 72 (parallel [
            (set (reg:DI 328)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 221 {*adddi_1}
     (nil))
(insn 917 916 918 72 (set (reg:DI 1 dx)
        (reg:DI 327)) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(insn 918 917 919 72 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 90 {*movsi_internal}
     (nil))
(insn 919 918 920 72 (set (reg:DI 5 di)
        (reg:DI 328)) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(call_insn 920 919 921 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 921 920 922 72 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(insn 922 921 923 72 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(call_insn 923 922 924 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 924 923 925 72 (set (reg:SI 167 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 90 {*movsi_internal}
     (nil))
(insn 925 924 926 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:321 3 {*cmpsi_ccno_1}
     (nil))
(insn 926 925 927 72 (set (reg:QI 168 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 592 {*setcc_qi}
     (nil))
(insn 927 926 928 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:321 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 928 927 929 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 935)
            (pc))) read_procpar.cpp:321 596 {*jcc_1}
     (nil)
 -> 935)
;;  succ:       73 (FALLTHRU)
;;              74

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       72 (FALLTHRU)
(note 929 928 930 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 931 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:322 89 {*movdi_internal}
     (nil))
(call_insn 931 930 932 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 932 931 933 73 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 90 {*movsi_internal}
     (nil))
(call_insn 933 932 935 73 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 74, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       72
(code_label 935 933 936 74 38 "" [1 uses])
(note 936 935 937 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 74 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 221 {*adddi_1}
     (nil))
(insn 938 937 939 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 939 938 940 74 (set (reg:DI 5 di)
        (reg:DI 330)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(call_insn 940 939 941 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 941 940 942 74 (set (reg:DI 331)
        (reg:DI 0 ax)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 942 941 943 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 331)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 943 942 944 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b04d640a8e8 *.LC5>)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 944 943 945 74 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(call_insn 945 944 946 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x2b04d62faa00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 946 945 947 74 (set (reg:DI 332)
        (reg:DI 0 ax)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 947 946 948 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 332)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 948 947 949 74 (set (reg:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 949 948 950 74 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 950 949 951 74 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(call_insn 951 950 952 74 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x2b04d634d000 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 952 951 953 74 (set (reg:DF 169 [ D.5603 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 128 {*movdf_internal}
     (nil))
(insn 953 952 954 74 (set (reg:SF 170 [ D.5604 ])
        (float_truncate:SF (reg:DF 169 [ D.5603 ]))) read_procpar.cpp:329 157 {*truncdfsf_fast_sse}
     (nil))
(insn 954 953 955 74 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 955 954 956 74 (set (mem/j:SF (plus:DI (reg/f:DI 334)
                (const_int 368 [0x170])) [0 procpar_info_23(D)->vtheta+0 S4 A64])
        (reg:SF 170 [ D.5604 ])) read_procpar.cpp:329 129 {*movsf_internal}
     (nil))
;;  succ:       75 (FALLTHRU)

;; basic block 75, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;;              18 [100.0%]  (FALLTHRU)
;;              22 [100.0%]  (FALLTHRU)
;;              26 [100.0%]  (FALLTHRU)
;;              30 [100.0%]  (FALLTHRU)
;;              34 [100.0%]  (FALLTHRU)
;;              38 [100.0%]  (FALLTHRU)
;;              42 [100.0%]  (FALLTHRU)
;;              46 [100.0%]  (FALLTHRU)
;;              50 [100.0%]  (FALLTHRU)
;;              54 [100.0%]  (FALLTHRU)
;;              58 [100.0%]  (FALLTHRU)
;;              62 [100.0%]  (FALLTHRU)
;;              66 [100.0%]  (FALLTHRU)
;;              70 [100.0%]  (FALLTHRU)
;;              71
;;              74 (FALLTHRU)
(code_label 956 955 957 75 7 "" [1 uses])
(note 957 956 958 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 958 957 959 75 (set (reg:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(insn 959 958 960 75 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 221 {*adddi_1}
     (nil))
(insn 960 959 961 75 (set (reg:DI 1 dx)
        (reg:DI 335)) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(insn 961 960 962 75 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 90 {*movsi_internal}
     (nil))
(insn 962 961 963 75 (set (reg:DI 5 di)
        (reg:DI 336)) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(call_insn 963 962 964 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b04d628bc00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       76 (FALLTHRU)

;; basic block 76, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       75 (FALLTHRU)
(note 964 963 965 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 965 964 966 76 (set (reg:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 89 {*movdi_internal}
     (nil))
(insn 966 965 967 76 (set (reg:DI 5 di)
        (reg:DI 337)) read_procpar.cpp:341 89 {*movdi_internal}
     (nil))
(call_insn 967 966 968 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2b04d6292c00 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 968 967 969 76 (set (reg:SI 171 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 90 {*movsi_internal}
     (nil))
(insn 969 968 970 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:341 3 {*cmpsi_ccno_1}
     (nil))
(insn 970 969 971 76 (set (reg:QI 172 [ D.5602 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 592 {*setcc_qi}
     (nil))
(insn 971 970 972 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:341 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 972 971 973 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 979)
            (pc))) read_procpar.cpp:341 596 {*jcc_1}
     (nil)
 -> 979)
;;  succ:       77 (FALLTHRU)
;;              78 (DFS_BACK)

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL)
;;  pred:       76 (FALLTHRU)
(note 973 972 974 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 974 973 975 77 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b04d640a720 *.LC2>)) read_procpar.cpp:342 89 {*movdi_internal}
     (nil))
(call_insn 975 974 976 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 976 975 977 77 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 90 {*movsi_internal}
     (nil))
(call_insn 977 976 979 77 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b04d60e5900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

;; basic block 78, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              76 (DFS_BACK)
(code_label 979 977 980 78 4 "" [1 uses])
(note 980 979 981 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 981 980 982 78 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 89 {*movdi_internal}
     (nil))
(insn 982 981 983 78 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:51 89 {*movdi_internal}
     (nil))
(call_insn 983 982 984 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x2b04d6292b00 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 984 983 985 78 (set (reg:SI 87 [ D.5601 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 90 {*movsi_internal}
     (nil))
(insn 985 984 986 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.5601 ])
            (const_int 0 [0]))) read_procpar.cpp:51 3 {*cmpsi_ccno_1}
     (nil))
(insn 986 985 988 78 (set (reg:QI 88 [ D.5602 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 592 {*setcc_qi}
     (nil))
(insn 988 986 989 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.5602 ])
            (const_int 0 [0]))) read_procpar.cpp:51 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 989 988 990 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) read_procpar.cpp:51 596 {*jcc_1}
     (nil)
 -> 987)
;;  succ:       7
;;              79 (FALLTHRU)

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL)
;;  pred:       78 (FALLTHRU)
(note 990 989 991 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 991 990 992 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 992 991 993 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1002)
            (pc))) read_procpar.cpp:354 596 {*jcc_1}
     (nil)
 -> 1002)
;;  succ:       80 (FALLTHRU)
;;              81

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL)
;;  pred:       79 (FALLTHRU)
(note 993 992 994 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 994 993 995 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2b04d64254c0 *.LC24>)) read_procpar.cpp:356 89 {*movdi_internal}
     (nil))
(call_insn 995 994 996 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b04d60ca900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 996 995 997 80 (set (reg/f:DI 173 [ D.5607 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x2b04d627c098 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 997 996 998 80 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.5607 ])) read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(call_insn 998 997 999 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2b04d627ba00 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 999 998 1000 80 (set (reg:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1000 999 1001 80 (set (reg:DI 5 di)
        (reg:DI 339)) read_procpar.cpp:358 89 {*movdi_internal}
     (nil))
(call_insn 1001 1000 1002 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b04d627b900 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       81 (FALLTHRU)

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              80 (FALLTHRU)
(code_label 1002 1001 1003 81 40 "" [1 uses])
(note 1003 1002 1004 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1004 1003 1007 81 (set (reg:SI 174 [ D.5601 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 90 {*movsi_internal}
     (nil))
(insn 1007 1004 1011 81 (set (reg:SI 175 [ <retval> ])
        (reg:SI 174 [ D.5601 ])) read_procpar.cpp:364 90 {*movsi_internal}
     (nil))
(insn 1011 1007 1012 81 (set (reg/i:SI 0 ax)
        (reg:SI 175 [ <retval> ])) read_procpar.cpp:365 90 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 81 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5608+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_procpar.cpp:365 968 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1013 1012 1019 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1016)
            (pc))) read_procpar.cpp:365 596 {*jcc_1}
     (nil)
 -> 1016)
;;  succ:       83
;;              82 (FALLTHRU)

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
(note 1019 1013 1014 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(call_insn 1014 1019 1016 82 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b04d63c1800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_procpar.cpp:365 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       81
(code_label 1016 1014 1020 83 42 "" [1 uses])
(note 1020 1016 1017 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1017 1020 0 83 (use (reg/i:SI 0 ax)) read_procpar.cpp:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

