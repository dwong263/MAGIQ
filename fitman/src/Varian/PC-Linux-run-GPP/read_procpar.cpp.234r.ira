
;; Function int read_procpar(Procpar_info*, char*) (_Z12read_procparP12Procpar_infoPc, funcdef_no=2, decl_uid=5386, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 83 n_edges 101 count 83 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 144.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 184.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 240.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 250.
verify found no changes in insn with uid = 257.
verify found no changes in insn with uid = 262.
verify found no changes in insn with uid = 269.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 291.
verify found no changes in insn with uid = 294.
verify found no changes in insn with uid = 302.
verify found no changes in insn with uid = 304.
verify found no changes in insn with uid = 311.
verify found no changes in insn with uid = 316.
verify found no changes in insn with uid = 323.
verify found no changes in insn with uid = 335.
verify found no changes in insn with uid = 345.
verify found no changes in insn with uid = 348.
verify found no changes in insn with uid = 356.
verify found no changes in insn with uid = 358.
verify found no changes in insn with uid = 365.
verify found no changes in insn with uid = 370.
verify found no changes in insn with uid = 376.
verify found no changes in insn with uid = 387.
verify found no changes in insn with uid = 397.
verify found no changes in insn with uid = 400.
verify found no changes in insn with uid = 408.
verify found no changes in insn with uid = 410.
verify found no changes in insn with uid = 417.
verify found no changes in insn with uid = 422.
verify found no changes in insn with uid = 428.
verify found no changes in insn with uid = 439.
verify found no changes in insn with uid = 449.
verify found no changes in insn with uid = 452.
verify found no changes in insn with uid = 460.
verify found no changes in insn with uid = 462.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 474.
verify found no changes in insn with uid = 480.
verify found no changes in insn with uid = 492.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 505.
verify found no changes in insn with uid = 513.
verify found no changes in insn with uid = 515.
verify found no changes in insn with uid = 522.
verify found no changes in insn with uid = 527.
verify found no changes in insn with uid = 533.
verify found no changes in insn with uid = 545.
verify found no changes in insn with uid = 555.
verify found no changes in insn with uid = 558.
verify found no changes in insn with uid = 566.
verify found no changes in insn with uid = 568.
verify found no changes in insn with uid = 575.
verify found no changes in insn with uid = 580.
verify found no changes in insn with uid = 586.
verify found no changes in insn with uid = 598.
verify found no changes in insn with uid = 608.
verify found no changes in insn with uid = 611.
verify found no changes in insn with uid = 619.
verify found no changes in insn with uid = 621.
verify found no changes in insn with uid = 628.
verify found no changes in insn with uid = 633.
verify found no changes in insn with uid = 639.
verify found no changes in insn with uid = 651.
verify found no changes in insn with uid = 661.
verify found no changes in insn with uid = 664.
verify found no changes in insn with uid = 672.
verify found no changes in insn with uid = 674.
verify found no changes in insn with uid = 681.
verify found no changes in insn with uid = 686.
verify found no changes in insn with uid = 692.
verify found no changes in insn with uid = 704.
verify found no changes in insn with uid = 714.
verify found no changes in insn with uid = 717.
verify found no changes in insn with uid = 725.
verify found no changes in insn with uid = 727.
verify found no changes in insn with uid = 734.
verify found no changes in insn with uid = 739.
verify found no changes in insn with uid = 745.
verify found no changes in insn with uid = 757.
verify found no changes in insn with uid = 767.
verify found no changes in insn with uid = 770.
verify found no changes in insn with uid = 778.
verify found no changes in insn with uid = 780.
verify found no changes in insn with uid = 787.
verify found no changes in insn with uid = 792.
verify found no changes in insn with uid = 798.
verify found no changes in insn with uid = 810.
verify found no changes in insn with uid = 820.
verify found no changes in insn with uid = 823.
verify found no changes in insn with uid = 831.
verify found no changes in insn with uid = 833.
verify found no changes in insn with uid = 840.
verify found no changes in insn with uid = 845.
verify found no changes in insn with uid = 851.
verify found no changes in insn with uid = 863.
verify found no changes in insn with uid = 873.
verify found no changes in insn with uid = 876.
verify found no changes in insn with uid = 884.
verify found no changes in insn with uid = 886.
verify found no changes in insn with uid = 893.
verify found no changes in insn with uid = 898.
verify found no changes in insn with uid = 904.
verify found no changes in insn with uid = 916.
verify found no changes in insn with uid = 926.
verify found no changes in insn with uid = 929.
verify found no changes in insn with uid = 937.
verify found no changes in insn with uid = 939.
verify found no changes in insn with uid = 946.
verify found no changes in insn with uid = 951.
verify found no changes in insn with uid = 957.
verify found no changes in insn with uid = 969.
verify found no changes in insn with uid = 972.
verify found no changes in insn with uid = 980.
verify found no changes in insn with uid = 982.
verify found no changes in insn with uid = 994.
verify found no changes in insn with uid = 997.
verify found no changes in insn with uid = 1000.
verify found no changes in insn with uid = 1013.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r343: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r343,l0) best DIREG, allocno GENERAL_REGS
    r342: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r342,l0) best DIREG, allocno GENERAL_REGS
    r341: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r341,l0) best DIREG, allocno GENERAL_REGS
    r340: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r340,l0) best DREG, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r338,l0) best DIREG, allocno GENERAL_REGS
    r337: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r337,l0) best AREG, allocno GENERAL_REGS
    r336: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r336,l0) best AREG, allocno GENERAL_REGS
    r335: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r335,l0) best DIREG, allocno GENERAL_REGS
    r334: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r334,l0) best DIREG, allocno GENERAL_REGS
    r333: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r333,l0) best DIREG, allocno GENERAL_REGS
    r332: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r332,l0) best DREG, allocno GENERAL_REGS
    r331: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r331,l0) best DIREG, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r329,l0) best DIREG, allocno GENERAL_REGS
    r328: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r328,l0) best AREG, allocno GENERAL_REGS
    r327: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r327,l0) best AREG, allocno GENERAL_REGS
    r326: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r326,l0) best DIREG, allocno GENERAL_REGS
    r325: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r325,l0) best DIREG, allocno GENERAL_REGS
    r324: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r324,l0) best DIREG, allocno GENERAL_REGS
    r323: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r323,l0) best DREG, allocno GENERAL_REGS
    r322: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r322,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r320,l0) best DIREG, allocno GENERAL_REGS
    r319: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r319,l0) best AREG, allocno GENERAL_REGS
    r318: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r318,l0) best AREG, allocno GENERAL_REGS
    r317: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r317,l0) best DIREG, allocno GENERAL_REGS
    r316: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r316,l0) best DIREG, allocno GENERAL_REGS
    r315: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r315,l0) best DIREG, allocno GENERAL_REGS
    r314: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r314,l0) best DREG, allocno GENERAL_REGS
    r313: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r313,l0) best DIREG, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r311,l0) best DIREG, allocno GENERAL_REGS
    r310: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r310,l0) best AREG, allocno GENERAL_REGS
    r309: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r309,l0) best AREG, allocno GENERAL_REGS
    r308: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r308,l0) best DIREG, allocno GENERAL_REGS
    r307: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r307,l0) best DIREG, allocno GENERAL_REGS
    r306: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r306,l0) best DIREG, allocno GENERAL_REGS
    r305: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r305,l0) best DREG, allocno GENERAL_REGS
    r304: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r304,l0) best DIREG, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r302,l0) best DIREG, allocno GENERAL_REGS
    r301: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r301,l0) best AREG, allocno GENERAL_REGS
    r300: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r300,l0) best AREG, allocno GENERAL_REGS
    r299: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r299,l0) best DIREG, allocno GENERAL_REGS
    r298: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r298,l0) best DIREG, allocno GENERAL_REGS
    r297: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r297,l0) best DIREG, allocno GENERAL_REGS
    r296: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r296,l0) best DREG, allocno GENERAL_REGS
    r295: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r295,l0) best DIREG, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r293,l0) best DIREG, allocno GENERAL_REGS
    r292: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r292,l0) best AREG, allocno GENERAL_REGS
    r291: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r291,l0) best AREG, allocno GENERAL_REGS
    r290: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r290,l0) best DIREG, allocno GENERAL_REGS
    r289: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r289,l0) best DIREG, allocno GENERAL_REGS
    r288: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r288,l0) best DIREG, allocno GENERAL_REGS
    r287: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r287,l0) best DREG, allocno GENERAL_REGS
    r286: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r286,l0) best DIREG, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r284,l0) best DIREG, allocno GENERAL_REGS
    r283: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r283,l0) best AREG, allocno GENERAL_REGS
    r282: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r282,l0) best AREG, allocno GENERAL_REGS
    r281: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r281,l0) best DIREG, allocno GENERAL_REGS
    r280: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r280,l0) best DIREG, allocno GENERAL_REGS
    r279: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r279,l0) best DIREG, allocno GENERAL_REGS
    r278: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r278,l0) best DREG, allocno GENERAL_REGS
    r277: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r277,l0) best DIREG, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r275,l0) best DIREG, allocno GENERAL_REGS
    r274: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r274,l0) best AREG, allocno GENERAL_REGS
    r273: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r273,l0) best AREG, allocno GENERAL_REGS
    r272: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r272,l0) best DIREG, allocno GENERAL_REGS
    r271: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r271,l0) best DIREG, allocno GENERAL_REGS
    r270: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r270,l0) best DIREG, allocno GENERAL_REGS
    r269: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r269,l0) best DREG, allocno GENERAL_REGS
    r268: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r268,l0) best DIREG, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r266,l0) best DIREG, allocno GENERAL_REGS
    r265: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r265,l0) best AREG, allocno GENERAL_REGS
    r264: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r264,l0) best AREG, allocno GENERAL_REGS
    r263: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r263,l0) best DIREG, allocno GENERAL_REGS
    r262: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r262,l0) best DIREG, allocno GENERAL_REGS
    r261: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r261,l0) best DIREG, allocno GENERAL_REGS
    r260: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r260,l0) best DREG, allocno GENERAL_REGS
    r259: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r259,l0) best DIREG, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r257,l0) best DIREG, allocno GENERAL_REGS
    r256: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r256,l0) best AREG, allocno GENERAL_REGS
    r255: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r255,l0) best AREG, allocno GENERAL_REGS
    r254: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r254,l0) best DIREG, allocno GENERAL_REGS
    r253: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r253,l0) best DIREG, allocno GENERAL_REGS
    r252: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r252,l0) best DIREG, allocno GENERAL_REGS
    r251: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r251,l0) best DREG, allocno GENERAL_REGS
    r250: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a148 (r250,l0) best DIREG, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r248,l0) best DIREG, allocno GENERAL_REGS
    r247: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r247,l0) best AREG, allocno GENERAL_REGS
    r246: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a153 (r246,l0) best AREG, allocno GENERAL_REGS
    r245: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a154 (r245,l0) best DIREG, allocno GENERAL_REGS
    r244: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r244,l0) best DIREG, allocno GENERAL_REGS
    r243: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r243,l0) best DIREG, allocno GENERAL_REGS
    r242: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r242,l0) best DREG, allocno GENERAL_REGS
    r241: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r241,l0) best DIREG, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a164 (r239,l0) best DIREG, allocno GENERAL_REGS
    r238: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a165 (r238,l0) best AREG, allocno GENERAL_REGS
    r237: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a166 (r237,l0) best AREG, allocno GENERAL_REGS
    r236: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a167 (r236,l0) best DIREG, allocno GENERAL_REGS
    r235: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a170 (r235,l0) best DIREG, allocno GENERAL_REGS
    r234: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r234,l0) best DIREG, allocno GENERAL_REGS
    r233: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r233,l0) best DREG, allocno GENERAL_REGS
    r232: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a174 (r232,l0) best DIREG, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a178 (r230,l0) best DIREG, allocno GENERAL_REGS
    r229: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a179 (r229,l0) best AREG, allocno GENERAL_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a181 (r227,l0) best DIREG, allocno GENERAL_REGS
    r226: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a184 (r226,l0) best DIREG, allocno GENERAL_REGS
    r225: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a185 (r225,l0) best DIREG, allocno GENERAL_REGS
    r224: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r224,l0) best DREG, allocno GENERAL_REGS
    r223: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r223,l0) best DIREG, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a192 (r221,l0) best DIREG, allocno GENERAL_REGS
    r220: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a193 (r220,l0) best AREG, allocno GENERAL_REGS
    r219: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a194 (r219,l0) best AREG, allocno GENERAL_REGS
    r218: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a195 (r218,l0) best DIREG, allocno GENERAL_REGS
    r217: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r217,l0) best DIREG, allocno GENERAL_REGS
    r216: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a199 (r216,l0) best DIREG, allocno GENERAL_REGS
    r215: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a200 (r215,l0) best DREG, allocno GENERAL_REGS
    r214: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r214,l0) best DIREG, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a206 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a207 (r211,l0) best AREG, allocno GENERAL_REGS
    r210: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a208 (r210,l0) best AREG, allocno GENERAL_REGS
    r209: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a209 (r209,l0) best DIREG, allocno GENERAL_REGS
    r208: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a212 (r208,l0) best DIREG, allocno GENERAL_REGS
    r207: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a213 (r207,l0) best DIREG, allocno GENERAL_REGS
    r206: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a214 (r206,l0) best DREG, allocno GENERAL_REGS
    r205: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a216 (r205,l0) best DIREG, allocno GENERAL_REGS
    r204: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a218 (r204,l0) best SIREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a220 (r202,l0) best AREG, allocno GENERAL_REGS
    r201: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a221 (r201,l0) best AREG, allocno GENERAL_REGS
    r200: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a222 (r200,l0) best DIREG, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a225 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a226 (r198,l0) best DIREG, allocno GENERAL_REGS
    r197: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a227 (r197,l0) best DREG, allocno GENERAL_REGS
    r196: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a229 (r196,l0) best DIREG, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a233 (r194,l0) best DIREG, allocno GENERAL_REGS
    r193: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a234 (r193,l0) best AREG, allocno GENERAL_REGS
    r192: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a235 (r192,l0) best AREG, allocno GENERAL_REGS
    r191: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a236 (r191,l0) best DIREG, allocno GENERAL_REGS
    r190: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a239 (r190,l0) best DIREG, allocno GENERAL_REGS
    r189: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a240 (r189,l0) best DIREG, allocno GENERAL_REGS
    r188: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a241 (r188,l0) best DREG, allocno GENERAL_REGS
    r187: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a243 (r187,l0) best DIREG, allocno GENERAL_REGS
    r186: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a244 (r186,l0) best AREG, allocno GENERAL_REGS
    r185: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a245 (r185,l0) best DIREG, allocno GENERAL_REGS
    r184: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a248 (r184,l0) best DIREG, allocno GENERAL_REGS
    r183: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a251 (r183,l0) best DIREG, allocno GENERAL_REGS
    r182: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a252 (r182,l0) best DIREG, allocno GENERAL_REGS
    r181: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a253 (r181,l0) best DREG, allocno GENERAL_REGS
    r180: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a255 (r180,l0) best DIREG, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r175,l0) best AREG, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a11 (r173,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r171,l0) best AREG, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a25 (r168,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r166,l0) best AREG, allocno GENERAL_REGS
    r165: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r165,l0) best AREG, allocno GENERAL_REGS
    r164: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a39 (r163,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r160,l0) best AREG, allocno GENERAL_REGS
    r159: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a53 (r158,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r156,l0) best AREG, allocno GENERAL_REGS
    r155: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r155,l0) best AREG, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a66 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a67 (r153,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r151,l0) best AREG, allocno GENERAL_REGS
    r150: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r150,l0) best AREG, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a80 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a81 (r148,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r146,l0) best AREG, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a94 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a95 (r143,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r140,l0) best AREG, allocno GENERAL_REGS
    r139: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a108 (r139,l0) best SSE_REGS, allocno SSE_REGS
    r138: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a109 (r138,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r136,l0) best AREG, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a122 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a123 (r133,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a136 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a137 (r128,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a147 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a150 (r124,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r122,l0) best AREG, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a163 (r120,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a173 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a177 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a183 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a191 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a197 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a201 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a204 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a205 (r105,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a211 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a215 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a217 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a224 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a228 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a231 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a232 (r96,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a238 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a242 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a247 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a250 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a254 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a6(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a11(r173,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a12(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a14(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a15(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a18(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a22(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r168,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a26(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a28(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a29(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a31(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a32(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a36(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a38(r164,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a39(r163,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a40(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a42(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a43(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a45(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a46(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a48(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a50(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r159,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a53(r158,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a54(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a56(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a57(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a59(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a60(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a64(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a66(r154,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a67(r153,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a68(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a70(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a71(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a72(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a73(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a74(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a78(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a79(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a80(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a81(r148,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a82(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a84(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a85(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a86(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a87(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a88(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a90(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a91(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a92(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a94(r144,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a95(r143,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a96(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a97(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a98(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a99(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a100(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a101(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a102(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a103(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a104(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a105(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a106(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a108(r139,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a109(r138,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a110(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a111(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a112(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a113(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a114(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a115(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a116(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a117(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a118(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a119(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a120(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a121(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a122(r134,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a123(r133,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a124(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a125(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a126(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a127(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a128(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a129(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a130(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a134(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a135(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a136(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a137(r128,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a138(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a139(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a140(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a141(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a143(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a144(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a146(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a147(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a148(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a150(r124,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a151(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a153(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a154(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a155(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a156(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a157(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a158(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a159(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a160(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a161(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a162(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a163(r120,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a164(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a165(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a166(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a167(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a168(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a169(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a170(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a171(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a172(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a173(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a174(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a175(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a176(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a177(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a178(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a180(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a181(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a182(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a183(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a184(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a185(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a186(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a187(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a188(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a189(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a190(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a191(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a192(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a193(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a194(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a195(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a196(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a197(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a198(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a199(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a200(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a201(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a202(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a203(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a204(r106,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a205(r105,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a206(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a207(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a208(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a209(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a210(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a211(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a212(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a213(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a214(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a215(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a216(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a217(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a218(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a219(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a220(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a221(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a222(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a223(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a224(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a225(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a226(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a227(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a228(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a229(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a230(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a231(r97,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a232(r96,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a233(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a234(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a235(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a236(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a237(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a238(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a239(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a240(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a241(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a242(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a243(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a244(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a245(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a246(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a247(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a248(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a249(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a250(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a251(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a252(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a253(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a254(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a255(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a256(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5

   Insn 1016(l0): point = 0
   Insn 1013(l0): point = 3
   Insn 1012(l0): point = 6
   Insn 1011(l0): point = 8
   Insn 1010(l0): point = 10
   Insn 1006(l0): point = 12
   Insn 1003(l0): point = 14
   Insn 1000(l0): point = 17
   Insn 999(l0): point = 19
   Insn 998(l0): point = 21
   Insn 997(l0): point = 23
   Insn 996(l0): point = 25
   Insn 995(l0): point = 27
   Insn 994(l0): point = 29
   Insn 993(l0): point = 31
   Insn 991(l0): point = 34
   Insn 990(l0): point = 36
   Insn 982(l0): point = 39
   Insn 981(l0): point = 41
   Insn 980(l0): point = 43
   Insn 979(l0): point = 45
   Insn 939(l0): point = 48
   Insn 938(l0): point = 50
   Insn 937(l0): point = 52
   Insn 936(l0): point = 54
   Insn 886(l0): point = 57
   Insn 885(l0): point = 59
   Insn 884(l0): point = 61
   Insn 883(l0): point = 63
   Insn 833(l0): point = 66
   Insn 832(l0): point = 68
   Insn 831(l0): point = 70
   Insn 830(l0): point = 72
   Insn 780(l0): point = 75
   Insn 779(l0): point = 77
   Insn 778(l0): point = 79
   Insn 777(l0): point = 81
   Insn 727(l0): point = 84
   Insn 726(l0): point = 86
   Insn 725(l0): point = 88
   Insn 724(l0): point = 90
   Insn 674(l0): point = 93
   Insn 673(l0): point = 95
   Insn 672(l0): point = 97
   Insn 671(l0): point = 99
   Insn 621(l0): point = 102
   Insn 620(l0): point = 104
   Insn 619(l0): point = 106
   Insn 618(l0): point = 108
   Insn 568(l0): point = 111
   Insn 567(l0): point = 113
   Insn 566(l0): point = 115
   Insn 565(l0): point = 117
   Insn 515(l0): point = 120
   Insn 514(l0): point = 122
   Insn 513(l0): point = 124
   Insn 512(l0): point = 126
   Insn 462(l0): point = 129
   Insn 461(l0): point = 131
   Insn 460(l0): point = 133
   Insn 459(l0): point = 135
   Insn 410(l0): point = 138
   Insn 409(l0): point = 140
   Insn 408(l0): point = 142
   Insn 407(l0): point = 144
   Insn 358(l0): point = 147
   Insn 357(l0): point = 149
   Insn 356(l0): point = 151
   Insn 355(l0): point = 153
   Insn 304(l0): point = 156
   Insn 303(l0): point = 158
   Insn 302(l0): point = 160
   Insn 301(l0): point = 162
   Insn 250(l0): point = 165
   Insn 249(l0): point = 167
   Insn 248(l0): point = 169
   Insn 247(l0): point = 171
   Insn 197(l0): point = 174
   Insn 196(l0): point = 176
   Insn 195(l0): point = 178
   Insn 194(l0): point = 180
   Insn 146(l0): point = 183
   Insn 145(l0): point = 185
   Insn 144(l0): point = 187
   Insn 143(l0): point = 189
   Insn 93(l0): point = 192
   Insn 92(l0): point = 194
   Insn 91(l0): point = 196
   Insn 90(l0): point = 198
   Insn 58(l0): point = 201
   Insn 57(l0): point = 203
   Insn 56(l0): point = 205
   Insn 55(l0): point = 207
   Insn 54(l0): point = 209
   Insn 53(l0): point = 211
   Insn 52(l0): point = 213
   Insn 51(l0): point = 215
   Insn 1052(l0): point = 218
   Insn 977(l0): point = 221
   Insn 976(l0): point = 223
   Insn 975(l0): point = 225
   Insn 974(l0): point = 227
   Insn 973(l0): point = 229
   Insn 972(l0): point = 231
   Insn 971(l0): point = 233
   Insn 970(l0): point = 235
   Insn 969(l0): point = 237
   Insn 968(l0): point = 239
   Insn 967(l0): point = 241
   Insn 966(l0): point = 243
   Insn 965(l0): point = 245
   Insn 964(l0): point = 247
   Insn 961(l0): point = 250
   Insn 960(l0): point = 252
   Insn 959(l0): point = 254
   Insn 958(l0): point = 256
   Insn 957(l0): point = 258
   Insn 956(l0): point = 260
   Insn 955(l0): point = 262
   Insn 954(l0): point = 264
   Insn 953(l0): point = 266
   Insn 952(l0): point = 268
   Insn 951(l0): point = 270
   Insn 950(l0): point = 272
   Insn 949(l0): point = 274
   Insn 948(l0): point = 276
   Insn 947(l0): point = 278
   Insn 946(l0): point = 280
   Insn 945(l0): point = 282
   Insn 944(l0): point = 284
   Insn 943(l0): point = 286
   Insn 934(l0): point = 289
   Insn 933(l0): point = 291
   Insn 932(l0): point = 293
   Insn 931(l0): point = 295
   Insn 930(l0): point = 297
   Insn 929(l0): point = 299
   Insn 928(l0): point = 301
   Insn 927(l0): point = 303
   Insn 926(l0): point = 305
   Insn 925(l0): point = 307
   Insn 924(l0): point = 309
   Insn 923(l0): point = 311
   Insn 922(l0): point = 313
   Insn 921(l0): point = 315
   Insn 1020(l0): point = 318
   Insn 115(l0): point = 320
   Insn 114(l0): point = 322
   Insn 113(l0): point = 324
   Insn 112(l0): point = 326
   Insn 111(l0): point = 328
   Insn 110(l0): point = 330
   Insn 109(l0): point = 332
   Insn 108(l0): point = 334
   Insn 107(l0): point = 336
   Insn 106(l0): point = 338
   Insn 105(l0): point = 340
   Insn 104(l0): point = 342
   Insn 103(l0): point = 344
   Insn 102(l0): point = 346
   Insn 101(l0): point = 348
   Insn 100(l0): point = 350
   Insn 99(l0): point = 352
   Insn 98(l0): point = 354
   Insn 97(l0): point = 356
   Insn 88(l0): point = 359
   Insn 87(l0): point = 361
   Insn 86(l0): point = 363
   Insn 85(l0): point = 365
   Insn 84(l0): point = 367
   Insn 83(l0): point = 369
   Insn 82(l0): point = 371
   Insn 81(l0): point = 373
   Insn 80(l0): point = 375
   Insn 79(l0): point = 377
   Insn 78(l0): point = 379
   Insn 77(l0): point = 381
   Insn 76(l0): point = 383
   Insn 75(l0): point = 385
   Insn 1022(l0): point = 388
   Insn 166(l0): point = 390
   Insn 165(l0): point = 392
   Insn 164(l0): point = 394
   Insn 163(l0): point = 396
   Insn 162(l0): point = 398
   Insn 161(l0): point = 400
   Insn 160(l0): point = 402
   Insn 159(l0): point = 404
   Insn 158(l0): point = 406
   Insn 157(l0): point = 408
   Insn 156(l0): point = 410
   Insn 155(l0): point = 412
   Insn 154(l0): point = 414
   Insn 153(l0): point = 416
   Insn 152(l0): point = 418
   Insn 151(l0): point = 420
   Insn 150(l0): point = 422
   Insn 141(l0): point = 425
   Insn 140(l0): point = 427
   Insn 139(l0): point = 429
   Insn 138(l0): point = 431
   Insn 137(l0): point = 433
   Insn 136(l0): point = 435
   Insn 135(l0): point = 437
   Insn 134(l0): point = 439
   Insn 133(l0): point = 441
   Insn 132(l0): point = 443
   Insn 131(l0): point = 445
   Insn 130(l0): point = 447
   Insn 129(l0): point = 449
   Insn 128(l0): point = 451
   Insn 1024(l0): point = 454
   Insn 219(l0): point = 456
   Insn 218(l0): point = 458
   Insn 217(l0): point = 460
   Insn 216(l0): point = 462
   Insn 215(l0): point = 464
   Insn 214(l0): point = 466
   Insn 213(l0): point = 468
   Insn 212(l0): point = 470
   Insn 211(l0): point = 472
   Insn 210(l0): point = 474
   Insn 209(l0): point = 476
   Insn 208(l0): point = 478
   Insn 207(l0): point = 480
   Insn 206(l0): point = 482
   Insn 205(l0): point = 484
   Insn 204(l0): point = 486
   Insn 203(l0): point = 488
   Insn 202(l0): point = 490
   Insn 201(l0): point = 492
   Insn 192(l0): point = 495
   Insn 191(l0): point = 497
   Insn 190(l0): point = 499
   Insn 189(l0): point = 501
   Insn 188(l0): point = 503
   Insn 187(l0): point = 505
   Insn 186(l0): point = 507
   Insn 185(l0): point = 509
   Insn 184(l0): point = 511
   Insn 183(l0): point = 513
   Insn 182(l0): point = 515
   Insn 181(l0): point = 517
   Insn 180(l0): point = 519
   Insn 179(l0): point = 521
   Insn 1026(l0): point = 524
   Insn 273(l0): point = 526
   Insn 272(l0): point = 528
   Insn 271(l0): point = 530
   Insn 270(l0): point = 532
   Insn 269(l0): point = 534
   Insn 268(l0): point = 536
   Insn 267(l0): point = 538
   Insn 266(l0): point = 540
   Insn 265(l0): point = 542
   Insn 264(l0): point = 544
   Insn 263(l0): point = 546
   Insn 262(l0): point = 548
   Insn 261(l0): point = 550
   Insn 260(l0): point = 552
   Insn 259(l0): point = 554
   Insn 258(l0): point = 556
   Insn 257(l0): point = 558
   Insn 256(l0): point = 560
   Insn 255(l0): point = 562
   Insn 254(l0): point = 564
   Insn 245(l0): point = 567
   Insn 244(l0): point = 569
   Insn 243(l0): point = 571
   Insn 242(l0): point = 573
   Insn 241(l0): point = 575
   Insn 240(l0): point = 577
   Insn 239(l0): point = 579
   Insn 238(l0): point = 581
   Insn 237(l0): point = 583
   Insn 236(l0): point = 585
   Insn 235(l0): point = 587
   Insn 234(l0): point = 589
   Insn 233(l0): point = 591
   Insn 232(l0): point = 593
   Insn 1028(l0): point = 596
   Insn 327(l0): point = 598
   Insn 326(l0): point = 600
   Insn 325(l0): point = 602
   Insn 324(l0): point = 604
   Insn 323(l0): point = 606
   Insn 322(l0): point = 608
   Insn 321(l0): point = 610
   Insn 320(l0): point = 612
   Insn 319(l0): point = 614
   Insn 318(l0): point = 616
   Insn 317(l0): point = 618
   Insn 316(l0): point = 620
   Insn 315(l0): point = 622
   Insn 314(l0): point = 624
   Insn 313(l0): point = 626
   Insn 312(l0): point = 628
   Insn 311(l0): point = 630
   Insn 310(l0): point = 632
   Insn 309(l0): point = 634
   Insn 308(l0): point = 636
   Insn 299(l0): point = 639
   Insn 298(l0): point = 641
   Insn 297(l0): point = 643
   Insn 296(l0): point = 645
   Insn 295(l0): point = 647
   Insn 294(l0): point = 649
   Insn 293(l0): point = 651
   Insn 292(l0): point = 653
   Insn 291(l0): point = 655
   Insn 290(l0): point = 657
   Insn 289(l0): point = 659
   Insn 288(l0): point = 661
   Insn 287(l0): point = 663
   Insn 286(l0): point = 665
   Insn 1030(l0): point = 668
   Insn 379(l0): point = 670
   Insn 378(l0): point = 672
   Insn 377(l0): point = 674
   Insn 376(l0): point = 676
   Insn 375(l0): point = 678
   Insn 374(l0): point = 680
   Insn 373(l0): point = 682
   Insn 372(l0): point = 684
   Insn 371(l0): point = 686
   Insn 370(l0): point = 688
   Insn 369(l0): point = 690
   Insn 368(l0): point = 692
   Insn 367(l0): point = 694
   Insn 366(l0): point = 696
   Insn 365(l0): point = 698
   Insn 364(l0): point = 700
   Insn 363(l0): point = 702
   Insn 362(l0): point = 704
   Insn 353(l0): point = 707
   Insn 352(l0): point = 709
   Insn 351(l0): point = 711
   Insn 350(l0): point = 713
   Insn 349(l0): point = 715
   Insn 348(l0): point = 717
   Insn 347(l0): point = 719
   Insn 346(l0): point = 721
   Insn 345(l0): point = 723
   Insn 344(l0): point = 725
   Insn 343(l0): point = 727
   Insn 342(l0): point = 729
   Insn 341(l0): point = 731
   Insn 340(l0): point = 733
   Insn 1032(l0): point = 736
   Insn 431(l0): point = 738
   Insn 430(l0): point = 740
   Insn 429(l0): point = 742
   Insn 428(l0): point = 744
   Insn 427(l0): point = 746
   Insn 426(l0): point = 748
   Insn 425(l0): point = 750
   Insn 424(l0): point = 752
   Insn 423(l0): point = 754
   Insn 422(l0): point = 756
   Insn 421(l0): point = 758
   Insn 420(l0): point = 760
   Insn 419(l0): point = 762
   Insn 418(l0): point = 764
   Insn 417(l0): point = 766
   Insn 416(l0): point = 768
   Insn 415(l0): point = 770
   Insn 414(l0): point = 772
   Insn 405(l0): point = 775
   Insn 404(l0): point = 777
   Insn 403(l0): point = 779
   Insn 402(l0): point = 781
   Insn 401(l0): point = 783
   Insn 400(l0): point = 785
   Insn 399(l0): point = 787
   Insn 398(l0): point = 789
   Insn 397(l0): point = 791
   Insn 396(l0): point = 793
   Insn 395(l0): point = 795
   Insn 394(l0): point = 797
   Insn 393(l0): point = 799
   Insn 392(l0): point = 801
   Insn 1034(l0): point = 804
   Insn 484(l0): point = 806
   Insn 483(l0): point = 808
   Insn 482(l0): point = 810
   Insn 481(l0): point = 812
   Insn 480(l0): point = 814
   Insn 479(l0): point = 816
   Insn 478(l0): point = 818
   Insn 477(l0): point = 820
   Insn 476(l0): point = 822
   Insn 475(l0): point = 824
   Insn 474(l0): point = 826
   Insn 473(l0): point = 828
   Insn 472(l0): point = 830
   Insn 471(l0): point = 832
   Insn 470(l0): point = 834
   Insn 469(l0): point = 836
   Insn 468(l0): point = 838
   Insn 467(l0): point = 840
   Insn 466(l0): point = 842
   Insn 457(l0): point = 845
   Insn 456(l0): point = 847
   Insn 455(l0): point = 849
   Insn 454(l0): point = 851
   Insn 453(l0): point = 853
   Insn 452(l0): point = 855
   Insn 451(l0): point = 857
   Insn 450(l0): point = 859
   Insn 449(l0): point = 861
   Insn 448(l0): point = 863
   Insn 447(l0): point = 865
   Insn 446(l0): point = 867
   Insn 445(l0): point = 869
   Insn 444(l0): point = 871
   Insn 1036(l0): point = 874
   Insn 537(l0): point = 876
   Insn 536(l0): point = 878
   Insn 535(l0): point = 880
   Insn 534(l0): point = 882
   Insn 533(l0): point = 884
   Insn 532(l0): point = 886
   Insn 531(l0): point = 888
   Insn 530(l0): point = 890
   Insn 529(l0): point = 892
   Insn 528(l0): point = 894
   Insn 527(l0): point = 896
   Insn 526(l0): point = 898
   Insn 525(l0): point = 900
   Insn 524(l0): point = 902
   Insn 523(l0): point = 904
   Insn 522(l0): point = 906
   Insn 521(l0): point = 908
   Insn 520(l0): point = 910
   Insn 519(l0): point = 912
   Insn 510(l0): point = 915
   Insn 509(l0): point = 917
   Insn 508(l0): point = 919
   Insn 507(l0): point = 921
   Insn 506(l0): point = 923
   Insn 505(l0): point = 925
   Insn 504(l0): point = 927
   Insn 503(l0): point = 929
   Insn 502(l0): point = 931
   Insn 501(l0): point = 933
   Insn 500(l0): point = 935
   Insn 499(l0): point = 937
   Insn 498(l0): point = 939
   Insn 497(l0): point = 941
   Insn 1038(l0): point = 944
   Insn 590(l0): point = 946
   Insn 589(l0): point = 948
   Insn 588(l0): point = 950
   Insn 587(l0): point = 952
   Insn 586(l0): point = 954
   Insn 585(l0): point = 956
   Insn 584(l0): point = 958
   Insn 583(l0): point = 960
   Insn 582(l0): point = 962
   Insn 581(l0): point = 964
   Insn 580(l0): point = 966
   Insn 579(l0): point = 968
   Insn 578(l0): point = 970
   Insn 577(l0): point = 972
   Insn 576(l0): point = 974
   Insn 575(l0): point = 976
   Insn 574(l0): point = 978
   Insn 573(l0): point = 980
   Insn 572(l0): point = 982
   Insn 563(l0): point = 985
   Insn 562(l0): point = 987
   Insn 561(l0): point = 989
   Insn 560(l0): point = 991
   Insn 559(l0): point = 993
   Insn 558(l0): point = 995
   Insn 557(l0): point = 997
   Insn 556(l0): point = 999
   Insn 555(l0): point = 1001
   Insn 554(l0): point = 1003
   Insn 553(l0): point = 1005
   Insn 552(l0): point = 1007
   Insn 551(l0): point = 1009
   Insn 550(l0): point = 1011
   Insn 1040(l0): point = 1014
   Insn 643(l0): point = 1016
   Insn 642(l0): point = 1018
   Insn 641(l0): point = 1020
   Insn 640(l0): point = 1022
   Insn 639(l0): point = 1024
   Insn 638(l0): point = 1026
   Insn 637(l0): point = 1028
   Insn 636(l0): point = 1030
   Insn 635(l0): point = 1032
   Insn 634(l0): point = 1034
   Insn 633(l0): point = 1036
   Insn 632(l0): point = 1038
   Insn 631(l0): point = 1040
   Insn 630(l0): point = 1042
   Insn 629(l0): point = 1044
   Insn 628(l0): point = 1046
   Insn 627(l0): point = 1048
   Insn 626(l0): point = 1050
   Insn 625(l0): point = 1052
   Insn 616(l0): point = 1055
   Insn 615(l0): point = 1057
   Insn 614(l0): point = 1059
   Insn 613(l0): point = 1061
   Insn 612(l0): point = 1063
   Insn 611(l0): point = 1065
   Insn 610(l0): point = 1067
   Insn 609(l0): point = 1069
   Insn 608(l0): point = 1071
   Insn 607(l0): point = 1073
   Insn 606(l0): point = 1075
   Insn 605(l0): point = 1077
   Insn 604(l0): point = 1079
   Insn 603(l0): point = 1081
   Insn 1042(l0): point = 1084
   Insn 696(l0): point = 1086
   Insn 695(l0): point = 1088
   Insn 694(l0): point = 1090
   Insn 693(l0): point = 1092
   Insn 692(l0): point = 1094
   Insn 691(l0): point = 1096
   Insn 690(l0): point = 1098
   Insn 689(l0): point = 1100
   Insn 688(l0): point = 1102
   Insn 687(l0): point = 1104
   Insn 686(l0): point = 1106
   Insn 685(l0): point = 1108
   Insn 684(l0): point = 1110
   Insn 683(l0): point = 1112
   Insn 682(l0): point = 1114
   Insn 681(l0): point = 1116
   Insn 680(l0): point = 1118
   Insn 679(l0): point = 1120
   Insn 678(l0): point = 1122
   Insn 669(l0): point = 1125
   Insn 668(l0): point = 1127
   Insn 667(l0): point = 1129
   Insn 666(l0): point = 1131
   Insn 665(l0): point = 1133
   Insn 664(l0): point = 1135
   Insn 663(l0): point = 1137
   Insn 662(l0): point = 1139
   Insn 661(l0): point = 1141
   Insn 660(l0): point = 1143
   Insn 659(l0): point = 1145
   Insn 658(l0): point = 1147
   Insn 657(l0): point = 1149
   Insn 656(l0): point = 1151
   Insn 1044(l0): point = 1154
   Insn 749(l0): point = 1156
   Insn 748(l0): point = 1158
   Insn 747(l0): point = 1160
   Insn 746(l0): point = 1162
   Insn 745(l0): point = 1164
   Insn 744(l0): point = 1166
   Insn 743(l0): point = 1168
   Insn 742(l0): point = 1170
   Insn 741(l0): point = 1172
   Insn 740(l0): point = 1174
   Insn 739(l0): point = 1176
   Insn 738(l0): point = 1178
   Insn 737(l0): point = 1180
   Insn 736(l0): point = 1182
   Insn 735(l0): point = 1184
   Insn 734(l0): point = 1186
   Insn 733(l0): point = 1188
   Insn 732(l0): point = 1190
   Insn 731(l0): point = 1192
   Insn 722(l0): point = 1195
   Insn 721(l0): point = 1197
   Insn 720(l0): point = 1199
   Insn 719(l0): point = 1201
   Insn 718(l0): point = 1203
   Insn 717(l0): point = 1205
   Insn 716(l0): point = 1207
   Insn 715(l0): point = 1209
   Insn 714(l0): point = 1211
   Insn 713(l0): point = 1213
   Insn 712(l0): point = 1215
   Insn 711(l0): point = 1217
   Insn 710(l0): point = 1219
   Insn 709(l0): point = 1221
   Insn 1046(l0): point = 1224
   Insn 802(l0): point = 1226
   Insn 801(l0): point = 1228
   Insn 800(l0): point = 1230
   Insn 799(l0): point = 1232
   Insn 798(l0): point = 1234
   Insn 797(l0): point = 1236
   Insn 796(l0): point = 1238
   Insn 795(l0): point = 1240
   Insn 794(l0): point = 1242
   Insn 793(l0): point = 1244
   Insn 792(l0): point = 1246
   Insn 791(l0): point = 1248
   Insn 790(l0): point = 1250
   Insn 789(l0): point = 1252
   Insn 788(l0): point = 1254
   Insn 787(l0): point = 1256
   Insn 786(l0): point = 1258
   Insn 785(l0): point = 1260
   Insn 784(l0): point = 1262
   Insn 775(l0): point = 1265
   Insn 774(l0): point = 1267
   Insn 773(l0): point = 1269
   Insn 772(l0): point = 1271
   Insn 771(l0): point = 1273
   Insn 770(l0): point = 1275
   Insn 769(l0): point = 1277
   Insn 768(l0): point = 1279
   Insn 767(l0): point = 1281
   Insn 766(l0): point = 1283
   Insn 765(l0): point = 1285
   Insn 764(l0): point = 1287
   Insn 763(l0): point = 1289
   Insn 762(l0): point = 1291
   Insn 1048(l0): point = 1294
   Insn 855(l0): point = 1296
   Insn 854(l0): point = 1298
   Insn 853(l0): point = 1300
   Insn 852(l0): point = 1302
   Insn 851(l0): point = 1304
   Insn 850(l0): point = 1306
   Insn 849(l0): point = 1308
   Insn 848(l0): point = 1310
   Insn 847(l0): point = 1312
   Insn 846(l0): point = 1314
   Insn 845(l0): point = 1316
   Insn 844(l0): point = 1318
   Insn 843(l0): point = 1320
   Insn 842(l0): point = 1322
   Insn 841(l0): point = 1324
   Insn 840(l0): point = 1326
   Insn 839(l0): point = 1328
   Insn 838(l0): point = 1330
   Insn 837(l0): point = 1332
   Insn 828(l0): point = 1335
   Insn 827(l0): point = 1337
   Insn 826(l0): point = 1339
   Insn 825(l0): point = 1341
   Insn 824(l0): point = 1343
   Insn 823(l0): point = 1345
   Insn 822(l0): point = 1347
   Insn 821(l0): point = 1349
   Insn 820(l0): point = 1351
   Insn 819(l0): point = 1353
   Insn 818(l0): point = 1355
   Insn 817(l0): point = 1357
   Insn 816(l0): point = 1359
   Insn 815(l0): point = 1361
   Insn 919(l0): point = 1364
   Insn 918(l0): point = 1366
   Insn 917(l0): point = 1368
   Insn 916(l0): point = 1370
   Insn 915(l0): point = 1372
   Insn 914(l0): point = 1374
   Insn 913(l0): point = 1376
   Insn 1050(l0): point = 1379
   Insn 908(l0): point = 1381
   Insn 907(l0): point = 1383
   Insn 906(l0): point = 1385
   Insn 905(l0): point = 1387
   Insn 904(l0): point = 1389
   Insn 903(l0): point = 1391
   Insn 902(l0): point = 1393
   Insn 901(l0): point = 1395
   Insn 900(l0): point = 1397
   Insn 899(l0): point = 1399
   Insn 898(l0): point = 1401
   Insn 897(l0): point = 1403
   Insn 896(l0): point = 1405
   Insn 895(l0): point = 1407
   Insn 894(l0): point = 1409
   Insn 893(l0): point = 1411
   Insn 892(l0): point = 1413
   Insn 891(l0): point = 1415
   Insn 890(l0): point = 1417
   Insn 881(l0): point = 1420
   Insn 880(l0): point = 1422
   Insn 879(l0): point = 1424
   Insn 878(l0): point = 1426
   Insn 877(l0): point = 1428
   Insn 876(l0): point = 1430
   Insn 875(l0): point = 1432
   Insn 874(l0): point = 1434
   Insn 873(l0): point = 1436
   Insn 872(l0): point = 1438
   Insn 871(l0): point = 1440
   Insn 870(l0): point = 1442
   Insn 869(l0): point = 1444
   Insn 868(l0): point = 1446
   Insn 866(l0): point = 1449
   Insn 865(l0): point = 1451
   Insn 864(l0): point = 1453
   Insn 863(l0): point = 1455
   Insn 862(l0): point = 1457
   Insn 861(l0): point = 1459
   Insn 860(l0): point = 1461
   Insn 813(l0): point = 1464
   Insn 812(l0): point = 1466
   Insn 811(l0): point = 1468
   Insn 810(l0): point = 1470
   Insn 809(l0): point = 1472
   Insn 808(l0): point = 1474
   Insn 807(l0): point = 1476
   Insn 760(l0): point = 1479
   Insn 759(l0): point = 1481
   Insn 758(l0): point = 1483
   Insn 757(l0): point = 1485
   Insn 756(l0): point = 1487
   Insn 755(l0): point = 1489
   Insn 754(l0): point = 1491
   Insn 707(l0): point = 1494
   Insn 706(l0): point = 1496
   Insn 705(l0): point = 1498
   Insn 704(l0): point = 1500
   Insn 703(l0): point = 1502
   Insn 702(l0): point = 1504
   Insn 701(l0): point = 1506
   Insn 654(l0): point = 1509
   Insn 653(l0): point = 1511
   Insn 652(l0): point = 1513
   Insn 651(l0): point = 1515
   Insn 650(l0): point = 1517
   Insn 649(l0): point = 1519
   Insn 648(l0): point = 1521
   Insn 601(l0): point = 1524
   Insn 600(l0): point = 1526
   Insn 599(l0): point = 1528
   Insn 598(l0): point = 1530
   Insn 597(l0): point = 1532
   Insn 596(l0): point = 1534
   Insn 595(l0): point = 1536
   Insn 548(l0): point = 1539
   Insn 547(l0): point = 1541
   Insn 546(l0): point = 1543
   Insn 545(l0): point = 1545
   Insn 544(l0): point = 1547
   Insn 543(l0): point = 1549
   Insn 542(l0): point = 1551
   Insn 495(l0): point = 1554
   Insn 494(l0): point = 1556
   Insn 493(l0): point = 1558
   Insn 492(l0): point = 1560
   Insn 491(l0): point = 1562
   Insn 490(l0): point = 1564
   Insn 489(l0): point = 1566
   Insn 442(l0): point = 1569
   Insn 441(l0): point = 1571
   Insn 440(l0): point = 1573
   Insn 439(l0): point = 1575
   Insn 438(l0): point = 1577
   Insn 437(l0): point = 1579
   Insn 436(l0): point = 1581
   Insn 390(l0): point = 1584
   Insn 389(l0): point = 1586
   Insn 388(l0): point = 1588
   Insn 387(l0): point = 1590
   Insn 386(l0): point = 1592
   Insn 385(l0): point = 1594
   Insn 384(l0): point = 1596
   Insn 338(l0): point = 1599
   Insn 337(l0): point = 1601
   Insn 336(l0): point = 1603
   Insn 335(l0): point = 1605
   Insn 334(l0): point = 1607
   Insn 333(l0): point = 1609
   Insn 332(l0): point = 1611
   Insn 284(l0): point = 1614
   Insn 283(l0): point = 1616
   Insn 282(l0): point = 1618
   Insn 281(l0): point = 1620
   Insn 280(l0): point = 1622
   Insn 279(l0): point = 1624
   Insn 278(l0): point = 1626
   Insn 230(l0): point = 1629
   Insn 229(l0): point = 1631
   Insn 228(l0): point = 1633
   Insn 227(l0): point = 1635
   Insn 226(l0): point = 1637
   Insn 225(l0): point = 1639
   Insn 224(l0): point = 1641
   Insn 177(l0): point = 1644
   Insn 176(l0): point = 1646
   Insn 175(l0): point = 1648
   Insn 174(l0): point = 1650
   Insn 173(l0): point = 1652
   Insn 172(l0): point = 1654
   Insn 171(l0): point = 1656
   Insn 126(l0): point = 1659
   Insn 125(l0): point = 1661
   Insn 124(l0): point = 1663
   Insn 123(l0): point = 1665
   Insn 122(l0): point = 1667
   Insn 121(l0): point = 1669
   Insn 120(l0): point = 1671
   Insn 73(l0): point = 1674
   Insn 72(l0): point = 1676
   Insn 71(l0): point = 1678
   Insn 70(l0): point = 1680
   Insn 69(l0): point = 1682
   Insn 68(l0): point = 1684
   Insn 67(l0): point = 1686
   Insn 66(l0): point = 1688
   Insn 65(l0): point = 1690
   Insn 64(l0): point = 1692
   Insn 63(l0): point = 1694
   Insn 62(l0): point = 1696
   Insn 61(l0): point = 1698
   Insn 60(l0): point = 1700
   Insn 47(l0): point = 1703
   Insn 46(l0): point = 1705
   Insn 45(l0): point = 1707
   Insn 44(l0): point = 1709
   Insn 42(l0): point = 1712
   Insn 41(l0): point = 1714
   Insn 40(l0): point = 1716
   Insn 39(l0): point = 1718
   Insn 38(l0): point = 1720
   Insn 37(l0): point = 1722
   Insn 36(l0): point = 1724
   Insn 35(l0): point = 1726
   Insn 34(l0): point = 1728
   Insn 33(l0): point = 1730
   Insn 32(l0): point = 1732
   Insn 31(l0): point = 1734
   Insn 30(l0): point = 1736
   Insn 29(l0): point = 1738
   Insn 25(l0): point = 1741
   Insn 24(l0): point = 1743
   Insn 23(l0): point = 1745
   Insn 22(l0): point = 1747
   Insn 20(l0): point = 1750
   Insn 19(l0): point = 1752
   Insn 18(l0): point = 1754
   Insn 17(l0): point = 1756
   Insn 16(l0): point = 1758
   Insn 15(l0): point = 1760
   Insn 14(l0): point = 1762
   Insn 13(l0): point = 1764
   Insn 12(l0): point = 1766
   Insn 11(l0): point = 1768
   Insn 10(l0): point = 1770
   Insn 9(l0): point = 1772
   Insn 8(l0): point = 1774
   Insn 5(l0): point = 1776
   Insn 3(l0): point = 1778
   Insn 2(l0): point = 1780
 a0(r179): [11..12]
 a1(r178): [13..14]
 a2(r343): [20..21]
 a3(r177): [26..27]
 a4(r176): [224..225]
 a5(r175): [228..229]
 a6(r342): [234..235]
 a7(r341): [240..245]
 a8(r340): [244..247]
 a9(r339): [251..252]
 a10(r174): [251..254]
 a11(r173): [255..256]
 a12(r338): [261..264]
 a13(r337): [267..268]
 a14(r336): [277..278]
 a15(r335): [283..286]
 a16(r172): [292..293]
 a17(r171): [296..297]
 a18(r334): [302..303]
 a19(r333): [308..313]
 a20(r332): [312..315]
 a21(r170): [1367..1368]
 a22(r331): [1373..1376]
 a23(r330): [1382..1383]
 a24(r169): [1382..1385]
 a25(r168): [1386..1387]
 a26(r329): [1392..1395]
 a27(r328): [1398..1399]
 a28(r327): [1408..1409]
 a29(r326): [1414..1417]
 a30(r167): [1423..1424]
 a31(r166): [1427..1428]
 a32(r325): [1433..1434]
 a33(r324): [1439..1444]
 a34(r323): [1443..1446]
 a35(r165): [1452..1453]
 a36(r322): [1458..1461]
 a37(r321): [1297..1298]
 a38(r164): [1297..1300]
 a39(r163): [1301..1302]
 a40(r320): [1307..1310]
 a41(r319): [1313..1314]
 a42(r318): [1323..1324]
 a43(r317): [1329..1332]
 a44(r162): [1338..1339]
 a45(r161): [1342..1343]
 a46(r316): [1348..1349]
 a47(r315): [1354..1359]
 a48(r314): [1358..1361]
 a49(r160): [1467..1468]
 a50(r313): [1473..1476]
 a51(r312): [1227..1228]
 a52(r159): [1227..1230]
 a53(r158): [1231..1232]
 a54(r311): [1237..1240]
 a55(r310): [1243..1244]
 a56(r309): [1253..1254]
 a57(r308): [1259..1262]
 a58(r157): [1268..1269]
 a59(r156): [1272..1273]
 a60(r307): [1278..1279]
 a61(r306): [1284..1289]
 a62(r305): [1288..1291]
 a63(r155): [1482..1483]
 a64(r304): [1488..1491]
 a65(r303): [1157..1158]
 a66(r154): [1157..1160]
 a67(r153): [1161..1162]
 a68(r302): [1167..1170]
 a69(r301): [1173..1174]
 a70(r300): [1183..1184]
 a71(r299): [1189..1192]
 a72(r152): [1198..1199]
 a73(r151): [1202..1203]
 a74(r298): [1208..1209]
 a75(r297): [1214..1219]
 a76(r296): [1218..1221]
 a77(r150): [1497..1498]
 a78(r295): [1503..1506]
 a79(r294): [1087..1088]
 a80(r149): [1087..1090]
 a81(r148): [1091..1092]
 a82(r293): [1097..1100]
 a83(r292): [1103..1104]
 a84(r291): [1113..1114]
 a85(r290): [1119..1122]
 a86(r147): [1128..1129]
 a87(r146): [1132..1133]
 a88(r289): [1138..1139]
 a89(r288): [1144..1149]
 a90(r287): [1148..1151]
 a91(r145): [1512..1513]
 a92(r286): [1518..1521]
 a93(r285): [1017..1018]
 a94(r144): [1017..1020]
 a95(r143): [1021..1022]
 a96(r284): [1027..1030]
 a97(r283): [1033..1034]
 a98(r282): [1043..1044]
 a99(r281): [1049..1052]
 a100(r142): [1058..1059]
 a101(r141): [1062..1063]
 a102(r280): [1068..1069]
 a103(r279): [1074..1079]
 a104(r278): [1078..1081]
 a105(r140): [1527..1528]
 a106(r277): [1533..1536]
 a107(r276): [947..948]
 a108(r139): [947..950]
 a109(r138): [951..952]
 a110(r275): [957..960]
 a111(r274): [963..964]
 a112(r273): [973..974]
 a113(r272): [979..982]
 a114(r137): [988..989]
 a115(r136): [992..993]
 a116(r271): [998..999]
 a117(r270): [1004..1009]
 a118(r269): [1008..1011]
 a119(r135): [1542..1543]
 a120(r268): [1548..1551]
 a121(r267): [877..878]
 a122(r134): [877..880]
 a123(r133): [881..882]
 a124(r266): [887..890]
 a125(r265): [893..894]
 a126(r264): [903..904]
 a127(r263): [909..912]
 a128(r132): [918..919]
 a129(r131): [922..923]
 a130(r262): [928..929]
 a131(r261): [934..939]
 a132(r260): [938..941]
 a133(r130): [1557..1558]
 a134(r259): [1563..1566]
 a135(r258): [807..808]
 a136(r129): [807..810]
 a137(r128): [811..812]
 a138(r257): [817..820]
 a139(r256): [823..824]
 a140(r255): [833..834]
 a141(r254): [839..842]
 a142(r127): [848..849]
 a143(r126): [852..853]
 a144(r253): [858..859]
 a145(r252): [864..869]
 a146(r251): [868..871]
 a147(r125): [1572..1573]
 a148(r250): [1578..1581]
 a149(r249): [739..740]
 a150(r124): [739..742]
 a151(r248): [747..750]
 a152(r247): [753..754]
 a153(r246): [763..764]
 a154(r245): [769..772]
 a155(r123): [778..779]
 a156(r122): [782..783]
 a157(r244): [788..789]
 a158(r243): [794..799]
 a159(r242): [798..801]
 a160(r121): [1587..1588]
 a161(r241): [1593..1596]
 a162(r240): [671..672]
 a163(r120): [671..674]
 a164(r239): [679..682]
 a165(r238): [685..686]
 a166(r237): [695..696]
 a167(r236): [701..704]
 a168(r119): [710..711]
 a169(r118): [714..715]
 a170(r235): [720..721]
 a171(r234): [726..731]
 a172(r233): [730..733]
 a173(r117): [1602..1603]
 a174(r232): [1608..1611]
 a175(r231): [599..600]
 a176(r116): [599..602]
 a177(r115): [603..604]
 a178(r230): [609..614]
 a179(r229): [617..618]
 a180(r228): [627..628]
 a181(r227): [633..636]
 a182(r114): [642..643]
 a183(r113): [646..647]
 a184(r226): [652..653]
 a185(r225): [658..663]
 a186(r224): [662..665]
 a187(r112): [1617..1618]
 a188(r223): [1623..1626]
 a189(r222): [527..528]
 a190(r111): [527..530]
 a191(r110): [531..532]
 a192(r221): [537..542]
 a193(r220): [545..546]
 a194(r219): [555..556]
 a195(r218): [561..564]
 a196(r109): [570..571]
 a197(r108): [574..575]
 a198(r217): [580..581]
 a199(r216): [586..591]
 a200(r215): [590..593]
 a201(r107): [1632..1633]
 a202(r214): [1638..1641]
 a203(r213): [457..458]
 a204(r106): [457..460]
 a205(r105): [461..462]
 a206(r212): [467..470]
 a207(r211): [473..474]
 a208(r210): [483..484]
 a209(r209): [489..492]
 a210(r104): [498..499]
 a211(r103): [502..503]
 a212(r208): [508..509]
 a213(r207): [514..519]
 a214(r206): [518..521]
 a215(r102): [1647..1648]
 a216(r205): [1653..1656]
 a217(r101): [393..398]
 a218(r204): [395..396]
 a219(r203): [399..400]
 a220(r202): [403..404]
 a221(r201): [413..414]
 a222(r200): [419..422]
 a223(r100): [428..429]
 a224(r99): [432..433]
 a225(r199): [438..439]
 a226(r198): [444..449]
 a227(r197): [448..451]
 a228(r98): [1662..1663]
 a229(r196): [1668..1671]
 a230(r195): [321..322]
 a231(r97): [321..324]
 a232(r96): [325..326]
 a233(r194): [331..334]
 a234(r193): [337..338]
 a235(r192): [347..348]
 a236(r191): [353..356]
 a237(r95): [362..363]
 a238(r94): [366..367]
 a239(r190): [372..373]
 a240(r189): [378..383]
 a241(r188): [382..385]
 a242(r93): [1677..1678]
 a243(r187): [1683..1686]
 a244(r186): [1689..1690]
 a245(r185): [1695..1698]
 a246(r92): [204..205]
 a247(r91): [208..209]
 a248(r184): [214..215]
 a249(r90): [1715..1716]
 a250(r89): [1719..1720]
 a251(r183): [1725..1726]
 a252(r182): [1731..1736]
 a253(r181): [1735..1738]
 a254(r88): [1755..1756]
 a255(r180): [1761..1764]
 a256(r87): [1769..1770]
Compressing live ranges: from 1783 to 442 - 24%
Ranges after the compression:
 a0(r179): [0..1]
 a1(r178): [2..3]
 a2(r343): [4..5]
 a3(r177): [6..7]
 a4(r176): [14..15]
 a5(r175): [16..17]
 a6(r342): [18..19]
 a7(r341): [20..21]
 a8(r340): [20..21]
 a9(r339): [22..23]
 a10(r174): [22..23]
 a11(r173): [24..25]
 a12(r338): [26..27]
 a13(r337): [28..29]
 a14(r336): [30..31]
 a15(r335): [32..33]
 a16(r172): [34..35]
 a17(r171): [36..37]
 a18(r334): [38..39]
 a19(r333): [40..41]
 a20(r332): [40..41]
 a21(r170): [336..337]
 a22(r331): [338..339]
 a23(r330): [340..341]
 a24(r169): [340..341]
 a25(r168): [342..343]
 a26(r329): [344..345]
 a27(r328): [346..347]
 a28(r327): [348..349]
 a29(r326): [350..351]
 a30(r167): [352..353]
 a31(r166): [354..355]
 a32(r325): [356..357]
 a33(r324): [358..359]
 a34(r323): [358..359]
 a35(r165): [360..361]
 a36(r322): [362..363]
 a37(r321): [316..317]
 a38(r164): [316..317]
 a39(r163): [318..319]
 a40(r320): [320..321]
 a41(r319): [322..323]
 a42(r318): [324..325]
 a43(r317): [326..327]
 a44(r162): [328..329]
 a45(r161): [330..331]
 a46(r316): [332..333]
 a47(r315): [334..335]
 a48(r314): [334..335]
 a49(r160): [364..365]
 a50(r313): [366..367]
 a51(r312): [296..297]
 a52(r159): [296..297]
 a53(r158): [298..299]
 a54(r311): [300..301]
 a55(r310): [302..303]
 a56(r309): [304..305]
 a57(r308): [306..307]
 a58(r157): [308..309]
 a59(r156): [310..311]
 a60(r307): [312..313]
 a61(r306): [314..315]
 a62(r305): [314..315]
 a63(r155): [368..369]
 a64(r304): [370..371]
 a65(r303): [276..277]
 a66(r154): [276..277]
 a67(r153): [278..279]
 a68(r302): [280..281]
 a69(r301): [282..283]
 a70(r300): [284..285]
 a71(r299): [286..287]
 a72(r152): [288..289]
 a73(r151): [290..291]
 a74(r298): [292..293]
 a75(r297): [294..295]
 a76(r296): [294..295]
 a77(r150): [372..373]
 a78(r295): [374..375]
 a79(r294): [256..257]
 a80(r149): [256..257]
 a81(r148): [258..259]
 a82(r293): [260..261]
 a83(r292): [262..263]
 a84(r291): [264..265]
 a85(r290): [266..267]
 a86(r147): [268..269]
 a87(r146): [270..271]
 a88(r289): [272..273]
 a89(r288): [274..275]
 a90(r287): [274..275]
 a91(r145): [376..377]
 a92(r286): [378..379]
 a93(r285): [236..237]
 a94(r144): [236..237]
 a95(r143): [238..239]
 a96(r284): [240..241]
 a97(r283): [242..243]
 a98(r282): [244..245]
 a99(r281): [246..247]
 a100(r142): [248..249]
 a101(r141): [250..251]
 a102(r280): [252..253]
 a103(r279): [254..255]
 a104(r278): [254..255]
 a105(r140): [380..381]
 a106(r277): [382..383]
 a107(r276): [216..217]
 a108(r139): [216..217]
 a109(r138): [218..219]
 a110(r275): [220..221]
 a111(r274): [222..223]
 a112(r273): [224..225]
 a113(r272): [226..227]
 a114(r137): [228..229]
 a115(r136): [230..231]
 a116(r271): [232..233]
 a117(r270): [234..235]
 a118(r269): [234..235]
 a119(r135): [384..385]
 a120(r268): [386..387]
 a121(r267): [196..197]
 a122(r134): [196..197]
 a123(r133): [198..199]
 a124(r266): [200..201]
 a125(r265): [202..203]
 a126(r264): [204..205]
 a127(r263): [206..207]
 a128(r132): [208..209]
 a129(r131): [210..211]
 a130(r262): [212..213]
 a131(r261): [214..215]
 a132(r260): [214..215]
 a133(r130): [388..389]
 a134(r259): [390..391]
 a135(r258): [176..177]
 a136(r129): [176..177]
 a137(r128): [178..179]
 a138(r257): [180..181]
 a139(r256): [182..183]
 a140(r255): [184..185]
 a141(r254): [186..187]
 a142(r127): [188..189]
 a143(r126): [190..191]
 a144(r253): [192..193]
 a145(r252): [194..195]
 a146(r251): [194..195]
 a147(r125): [392..393]
 a148(r250): [394..395]
 a149(r249): [158..159]
 a150(r124): [158..159]
 a151(r248): [160..161]
 a152(r247): [162..163]
 a153(r246): [164..165]
 a154(r245): [166..167]
 a155(r123): [168..169]
 a156(r122): [170..171]
 a157(r244): [172..173]
 a158(r243): [174..175]
 a159(r242): [174..175]
 a160(r121): [396..397]
 a161(r241): [398..399]
 a162(r240): [140..141]
 a163(r120): [140..141]
 a164(r239): [142..143]
 a165(r238): [144..145]
 a166(r237): [146..147]
 a167(r236): [148..149]
 a168(r119): [150..151]
 a169(r118): [152..153]
 a170(r235): [154..155]
 a171(r234): [156..157]
 a172(r233): [156..157]
 a173(r117): [400..401]
 a174(r232): [402..403]
 a175(r231): [120..121]
 a176(r116): [120..121]
 a177(r115): [122..123]
 a178(r230): [124..125]
 a179(r229): [126..127]
 a180(r228): [128..129]
 a181(r227): [130..131]
 a182(r114): [132..133]
 a183(r113): [134..135]
 a184(r226): [136..137]
 a185(r225): [138..139]
 a186(r224): [138..139]
 a187(r112): [404..405]
 a188(r223): [406..407]
 a189(r222): [100..101]
 a190(r111): [100..101]
 a191(r110): [102..103]
 a192(r221): [104..105]
 a193(r220): [106..107]
 a194(r219): [108..109]
 a195(r218): [110..111]
 a196(r109): [112..113]
 a197(r108): [114..115]
 a198(r217): [116..117]
 a199(r216): [118..119]
 a200(r215): [118..119]
 a201(r107): [408..409]
 a202(r214): [410..411]
 a203(r213): [80..81]
 a204(r106): [80..81]
 a205(r105): [82..83]
 a206(r212): [84..85]
 a207(r211): [86..87]
 a208(r210): [88..89]
 a209(r209): [90..91]
 a210(r104): [92..93]
 a211(r103): [94..95]
 a212(r208): [96..97]
 a213(r207): [98..99]
 a214(r206): [98..99]
 a215(r102): [412..413]
 a216(r205): [414..415]
 a217(r101): [62..63]
 a218(r204): [62..63]
 a219(r203): [64..65]
 a220(r202): [66..67]
 a221(r201): [68..69]
 a222(r200): [70..71]
 a223(r100): [72..73]
 a224(r99): [74..75]
 a225(r199): [76..77]
 a226(r198): [78..79]
 a227(r197): [78..79]
 a228(r98): [416..417]
 a229(r196): [418..419]
 a230(r195): [42..43]
 a231(r97): [42..43]
 a232(r96): [44..45]
 a233(r194): [46..47]
 a234(r193): [48..49]
 a235(r192): [50..51]
 a236(r191): [52..53]
 a237(r95): [54..55]
 a238(r94): [56..57]
 a239(r190): [58..59]
 a240(r189): [60..61]
 a241(r188): [60..61]
 a242(r93): [420..421]
 a243(r187): [422..423]
 a244(r186): [424..425]
 a245(r185): [426..427]
 a246(r92): [8..9]
 a247(r91): [10..11]
 a248(r184): [12..13]
 a249(r90): [428..429]
 a250(r89): [430..431]
 a251(r183): [432..433]
 a252(r182): [434..435]
 a253(r181): [434..435]
 a254(r88): [436..437]
 a255(r180): [438..439]
 a256(r87): [440..441]
  pref0:a150(r124)<-hr21@1
  pref1:a163(r120)<-hr21@1
  regions=1, blocks=83, points=442
    allocnos=257 (big 0), copies=0, conflicts=0, ranges=257
Disposition:
  256:r87  l0     0  254:r88  l0     0  250:r89  l0     0  249:r90  l0     0
  247:r91  l0     0  246:r92  l0     0  242:r93  l0     0  238:r94  l0     0
  237:r95  l0     0  232:r96  l0    21  231:r97  l0    21  228:r98  l0     0
  224:r99  l0     0  223:r100 l0     0  217:r101 l0     1  215:r102 l0     0
  211:r103 l0     0  210:r104 l0     0  205:r105 l0    21  204:r106 l0    21
  201:r107 l0     0  197:r108 l0     0  196:r109 l0     0  191:r110 l0     0
  190:r111 l0     1  187:r112 l0     0  183:r113 l0     0  182:r114 l0     0
  177:r115 l0     0  176:r116 l0     1  173:r117 l0     0  169:r118 l0     0
  168:r119 l0     0  163:r120 l0     1  160:r121 l0     0  156:r122 l0     0
  155:r123 l0     0  150:r124 l0     1  147:r125 l0     0  143:r126 l0     0
  142:r127 l0     0  137:r128 l0    21  136:r129 l0    21  133:r130 l0     0
  129:r131 l0     0  128:r132 l0     0  123:r133 l0    21  122:r134 l0    21
  119:r135 l0     0  115:r136 l0     0  114:r137 l0     0  109:r138 l0    21
  108:r139 l0    21  105:r140 l0     0  101:r141 l0     0  100:r142 l0     0
   95:r143 l0    21   94:r144 l0    21   91:r145 l0     0   87:r146 l0     0
   86:r147 l0     0   81:r148 l0    21   80:r149 l0    21   77:r150 l0     0
   73:r151 l0     0   72:r152 l0     0   67:r153 l0    21   66:r154 l0    21
   63:r155 l0     0   59:r156 l0     0   58:r157 l0     0   53:r158 l0    21
   52:r159 l0    21   49:r160 l0     0   45:r161 l0     0   44:r162 l0     0
   39:r163 l0    21   38:r164 l0    21   35:r165 l0     0   31:r166 l0     0
   30:r167 l0     0   25:r168 l0    21   24:r169 l0    21   21:r170 l0     0
   17:r171 l0     0   16:r172 l0     0   11:r173 l0    21   10:r174 l0    21
    5:r175 l0     0    4:r176 l0     0    3:r177 l0     0    1:r178 l0     0
    0:r179 l0     0  255:r180 l0     0  253:r181 l0     1  252:r182 l0     0
  251:r183 l0     0  248:r184 l0     0  245:r185 l0     0  244:r186 l0     0
  243:r187 l0     0  241:r188 l0     1  240:r189 l0     0  239:r190 l0     0
  236:r191 l0     0  235:r192 l0     0  234:r193 l0     0  233:r194 l0     0
  230:r195 l0     0  229:r196 l0     0  227:r197 l0     1  226:r198 l0     0
  225:r199 l0     0  222:r200 l0     0  221:r201 l0     0  220:r202 l0     0
  219:r203 l0     0  218:r204 l0     0  216:r205 l0     0  214:r206 l0     1
  213:r207 l0     0  212:r208 l0     0  209:r209 l0     0  208:r210 l0     0
  207:r211 l0     0  206:r212 l0     0  203:r213 l0     0  202:r214 l0     0
  200:r215 l0     1  199:r216 l0     0  198:r217 l0     0  195:r218 l0     0
  194:r219 l0     0  193:r220 l0     0  192:r221 l0     0  189:r222 l0     0
  188:r223 l0     0  186:r224 l0     1  185:r225 l0     0  184:r226 l0     0
  181:r227 l0     0  180:r228 l0     0  179:r229 l0     0  178:r230 l0     0
  175:r231 l0     0  174:r232 l0     0  172:r233 l0     1  171:r234 l0     0
  170:r235 l0     0  167:r236 l0     0  166:r237 l0     0  165:r238 l0     0
  164:r239 l0     0  162:r240 l0     0  161:r241 l0     0  159:r242 l0     1
  158:r243 l0     0  157:r244 l0     0  154:r245 l0     0  153:r246 l0     0
  152:r247 l0     0  151:r248 l0     0  149:r249 l0     0  148:r250 l0     0
  146:r251 l0     1  145:r252 l0     0  144:r253 l0     0  141:r254 l0     0
  140:r255 l0     0  139:r256 l0     0  138:r257 l0     0  135:r258 l0     0
  134:r259 l0     0  132:r260 l0     1  131:r261 l0     0  130:r262 l0     0
  127:r263 l0     0  126:r264 l0     0  125:r265 l0     0  124:r266 l0     0
  121:r267 l0     0  120:r268 l0     0  118:r269 l0     1  117:r270 l0     0
  116:r271 l0     0  113:r272 l0     0  112:r273 l0     0  111:r274 l0     0
  110:r275 l0     0  107:r276 l0     0  106:r277 l0     0  104:r278 l0     1
  103:r279 l0     0  102:r280 l0     0   99:r281 l0     0   98:r282 l0     0
   97:r283 l0     0   96:r284 l0     0   93:r285 l0     0   92:r286 l0     0
   90:r287 l0     1   89:r288 l0     0   88:r289 l0     0   85:r290 l0     0
   84:r291 l0     0   83:r292 l0     0   82:r293 l0     0   79:r294 l0     0
   78:r295 l0     0   76:r296 l0     1   75:r297 l0     0   74:r298 l0     0
   71:r299 l0     0   70:r300 l0     0   69:r301 l0     0   68:r302 l0     0
   65:r303 l0     0   64:r304 l0     0   62:r305 l0     1   61:r306 l0     0
   60:r307 l0     0   57:r308 l0     0   56:r309 l0     0   55:r310 l0     0
   54:r311 l0     0   51:r312 l0     0   50:r313 l0     0   48:r314 l0     1
   47:r315 l0     0   46:r316 l0     0   43:r317 l0     0   42:r318 l0     0
   41:r319 l0     0   40:r320 l0     0   37:r321 l0     0   36:r322 l0     0
   34:r323 l0     1   33:r324 l0     0   32:r325 l0     0   29:r326 l0     0
   28:r327 l0     0   27:r328 l0     0   26:r329 l0     0   23:r330 l0     0
   22:r331 l0     0   20:r332 l0     1   19:r333 l0     0   18:r334 l0     0
   15:r335 l0     0   14:r336 l0     0   13:r337 l0     0   12:r338 l0     0
    9:r339 l0     0    8:r340 l0     1    7:r341 l0     0    6:r342 l0     0
    2:r343 l0     0
+++Costs: overall -204, reg -204, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int read_procpar(Procpar_info*, char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={155d,77u} r1={175d,21u} r2={154d} r4={243d,90u} r5={306d,153u} r6={1d,82u} r7={1d,235u} r8={153d} r9={153d} r10={153d} r11={153d} r12={153d} r13={153d} r14={153d} r15={153d} r16={1d,81u} r17={253d,60u} r18={153d} r19={153d} r20={1d,259u,1e} r21={154d,14u} r22={154d} r23={154d} r24={154d} r25={154d} r26={154d} r27={154d} r28={154d} r29={153d} r30={153d} r31={153d} r32={153d} r33={153d} r34={153d} r35={153d} r36={153d} r37={154d} r38={154d} r39={153d} r40={153d} r45={153d} r46={153d} r47={153d} r48={153d} r49={153d} r50={153d} r51={153d} r52={153d} r53={153d} r54={153d} r55={153d} r56={153d} r57={153d} r58={153d} r59={153d} r60={153d} r61={153d} r62={153d} r63={153d} r64={153d} r65={153d} r66={153d} r67={153d} r68={153d} r69={153d} r70={153d} r71={153d} r72={153d} r73={153d} r74={153d} r75={153d} r76={153d} r77={153d} r78={153d} r79={153d} r80={153d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} 
;;    total ref usage 12985{11655d,1329u,1e} in 851{698 regular + 153 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 180
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) read_procpar.cpp:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ procpar_info ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) read_procpar.cpp:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ procpar_string ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5711+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:20 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:22 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (const_int 0 [0])) read_procpar.cpp:25 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 87 [ D.5702 ])
        (const_int 5000 [0x1388])) read_procpar.cpp:28 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 87 [ D.5702 ])) read_procpar.cpp:28 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.5702 ])
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
        (const_int 0 [0])) read_procpar.cpp:31 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50064 [0xffffffffffff3c70])) [0 procpar_string+0 S8 A64])) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7d7ebbe360 *.LC0>)) read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 180)) read_procpar.cpp:34 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7d7ee2c510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:34 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 88 [ D.5703 ])
        (reg:DI 0 ax)) read_procpar.cpp:34 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
        (reg/f:DI 88 [ D.5703 ])) read_procpar.cpp:34 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.5703 ])
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:35 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) read_procpar.cpp:35 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7d7ebbe3f0 *.LC1>)) read_procpar.cpp:36 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:36 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:37 90 {*movsi_internal}
     (nil))
(call_insn 25 24 26 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:37 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 181 182 183
(code_label 27 26 28 4 2 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:41 89 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 4 (set (reg:DI 1 dx)
        (reg:DI 181)) read_procpar.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(insn 32 31 33 4 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:41 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg:DI 182)) read_procpar.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(call_insn 34 33 35 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:41 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 4 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:42 89 {*movdi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 5 di)
        (reg:DI 183)) read_procpar.cpp:42 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(call_insn 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:42 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 4 (set (reg:SI 89 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:42 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 39 38 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:42 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.5704 ])
        (nil)))
(insn 40 39 41 4 (set (reg:QI 90 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:42 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 41 40 42 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:42 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ D.5705 ])
        (nil)))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) read_procpar.cpp:42 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:43 89 {*movdi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:43 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 5 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:44 90 {*movsi_internal}
     (nil))
(call_insn 47 46 48 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:44 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 49)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              77 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 184
(code_label 49 48 50 6 3 "" [2 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:51 89 {*movdi_internal}
     (nil))
(insn 52 51 53 6 (set (reg:DI 5 di)
        (reg:DI 184)) read_procpar.cpp:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 184)
        (nil)))
(call_insn 53 52 54 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f7d7ee3e510 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:51 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 6 (set (reg:SI 91 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 55 54 56 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:51 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.5704 ])
        (nil)))
(insn 56 55 57 6 (set (reg:QI 92 [ D.5705 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:51 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 57 56 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:51 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 92 [ D.5705 ])
        (nil)))
(jump_insn 58 57 59 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) read_procpar.cpp:51 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 988)
;;  succ:       7 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 185 186 187
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50036 [0xffffffffffff3c8c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:57 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 61 60 62 7 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:65 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 62 61 63 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7d7ebbe510 *.LC3>)) read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:DI 5 di)
        (reg:DI 185)) read_procpar.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(call_insn 64 63 65 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:65 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 66 7 (set (reg:DI 186)
        (reg:DI 0 ax)) read_procpar.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 66 65 67 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 186)) read_procpar.cpp:65 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(insn 67 66 68 7 (set (reg:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(insn 68 67 69 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7d7ebbe5a0 *.LC4>)) read_procpar.cpp:80 89 {*movdi_internal}
     (nil))
(insn 69 68 70 7 (set (reg:DI 5 di)
        (reg:DI 187)) read_procpar.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 187)
        (nil)))
(call_insn/i 70 69 71 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:80 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 7 (set (reg:SI 93 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 72 71 73 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:80 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.5704 ])
        (nil)))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) read_procpar.cpp:80 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 118)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 188 189 190
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 8 (set (reg:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:90 89 {*movdi_internal}
     (nil))
(insn 76 75 77 8 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:90 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 77 76 78 8 (set (reg:DI 1 dx)
        (reg:DI 188)) read_procpar.cpp:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 78 77 79 8 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:90 90 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (reg:DI 5 di)
        (reg:DI 189)) read_procpar.cpp:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(call_insn 80 79 81 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:90 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 81 80 82 8 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(insn 82 81 83 8 (set (reg:DI 5 di)
        (reg:DI 190)) read_procpar.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(call_insn 83 82 84 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:92 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 8 (set (reg:SI 94 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 85 84 86 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:92 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ D.5704 ])
        (nil)))
(insn 86 85 87 8 (set (reg:QI 95 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:92 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 87 86 88 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:92 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 95 [ D.5705 ])
        (nil)))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) read_procpar.cpp:92 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:93 89 {*movdi_internal}
     (nil))
(call_insn 91 90 92 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:93 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 9 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:94 90 {*movsi_internal}
     (nil))
(call_insn 93 92 94 9 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:94 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 94 93 95)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 191 192 193 194 195
(code_label 95 94 96 10 6 "" [1 uses])
(note 96 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 10 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:106 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 99 98 100 10 (set (reg:DI 5 di)
        (reg:DI 191)) read_procpar.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(call_insn 100 99 101 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:106 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 101 100 102 10 (set (reg:DI 192)
        (reg:DI 0 ax)) read_procpar.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 102 101 103 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 192)) read_procpar.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(insn 103 102 104 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 104 103 105 10 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(call_insn 105 104 106 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:110 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 10 (set (reg:DI 193)
        (reg:DI 0 ax)) read_procpar.cpp:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 107 106 108 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 193)) read_procpar.cpp:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 108 107 109 10 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 109 108 110 10 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 194)) read_procpar.cpp:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(call_insn 111 110 112 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:115 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 112 111 113 10 (set (reg:DF 96 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:115 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 113 112 114 10 (set (reg:SF 97 [ D.5707 ])
        (float_truncate:SF (reg:DF 96 [ D.5706 ]))) read_procpar.cpp:115 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 96 [ D.5706 ])
        (nil)))
(insn 114 113 115 10 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 115 114 1020 10 (set (mem/j:SF (reg/f:DI 195) [0 procpar_info_38(D)->acquision_time+0 S4 A64])
        (reg:SF 97 [ D.5707 ])) read_procpar.cpp:115 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_DEAD (reg:SF 97 [ D.5707 ])
            (nil))))
(jump_insn 1020 115 1021 10 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1021 1020 118)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 196
(code_label 118 1021 119 11 5 "" [1 uses])
(note 119 118 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 11 (set (reg:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 121 120 122 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7d7ebbe6c0 *.LC6>)) read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 122 121 123 11 (set (reg:DI 5 di)
        (reg:DI 196)) read_procpar.cpp:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 196)
        (nil)))
(call_insn/i 123 122 124 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:122 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 124 123 125 11 (set (reg:SI 98 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:122 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 125 124 126 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:122 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.5704 ])
        (nil)))
(jump_insn 126 125 127 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) read_procpar.cpp:122 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 169)
;;  succ:       12 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 197 198 199
(note 127 126 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 12 (set (reg:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 129 128 130 12 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:125 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 12 (set (reg:DI 1 dx)
        (reg:DI 197)) read_procpar.cpp:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 197)
        (nil)))
(insn 131 130 132 12 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:125 90 {*movsi_internal}
     (nil))
(insn 132 131 133 12 (set (reg:DI 5 di)
        (reg:DI 198)) read_procpar.cpp:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(call_insn 133 132 134 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:125 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 134 133 135 12 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(insn 135 134 136 12 (set (reg:DI 5 di)
        (reg:DI 199)) read_procpar.cpp:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(call_insn 136 135 137 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:126 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 12 (set (reg:SI 99 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:126 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 138 137 139 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:126 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.5704 ])
        (nil)))
(insn 139 138 140 12 (set (reg:QI 100 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:126 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 140 139 141 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:126 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 100 [ D.5705 ])
        (nil)))
(jump_insn 141 140 142 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) read_procpar.cpp:126 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 148)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 142 141 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:127 89 {*movdi_internal}
     (nil))
(call_insn 144 143 145 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:127 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 145 144 146 13 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:128 90 {*movsi_internal}
     (nil))
(call_insn 146 145 147 13 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:128 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 147 146 148)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 200 201 202 203 204
(code_label 148 147 149 14 9 "" [1 uses])
(note 149 148 150 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 14 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:132 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 151 150 152 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7d7ebbe750 *.LC7>)) read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 152 151 153 14 (set (reg:DI 5 di)
        (reg:DI 200)) read_procpar.cpp:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(call_insn 153 152 154 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:132 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 14 (set (reg:DI 201)
        (reg:DI 0 ax)) read_procpar.cpp:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 155 154 156 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 201)) read_procpar.cpp:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 201)
        (nil)))
(insn 156 155 157 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7d7ebbe7e0 *.LC8>)) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 157 156 158 14 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(call_insn 158 157 159 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:133 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 159 158 160 14 (set (reg:DI 202)
        (reg:DI 0 ax)) read_procpar.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 160 159 161 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 202)) read_procpar.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(insn 161 160 162 14 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 162 161 163 14 (parallel [
            (set (reg/f:DI 101 [ D.5708 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:134 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 163 162 164 14 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 164 163 165 14 (set (reg:DI 4 si)
        (reg:DI 204)) read_procpar.cpp:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(insn 165 164 166 14 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.5708 ])) read_procpar.cpp:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.5708 ])
        (nil)))
(call_insn 166 165 1022 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f7d7f0635e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:134 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 1022 166 1023 14 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1023 1022 169)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 205
(code_label 169 1023 170 15 8 "" [1 uses])
(note 170 169 171 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 15 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 172 171 173 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f7d7ebbe870 *.LC9>)) read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 173 172 174 15 (set (reg:DI 5 di)
        (reg:DI 205)) read_procpar.cpp:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(call_insn/i 174 173 175 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 15 (set (reg:SI 102 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 176 175 177 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:136 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.5704 ])
        (nil)))
(jump_insn 177 176 178 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) read_procpar.cpp:136 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 222)
;;  succ:       16 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 206 207 208
(note 178 177 179 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 16 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 180 179 181 16 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:138 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 181 180 182 16 (set (reg:DI 1 dx)
        (reg:DI 206)) read_procpar.cpp:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(insn 182 181 183 16 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:138 90 {*movsi_internal}
     (nil))
(insn 183 182 184 16 (set (reg:DI 5 di)
        (reg:DI 207)) read_procpar.cpp:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 207)
        (nil)))
(call_insn 184 183 185 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:138 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 185 184 186 16 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(insn 186 185 187 16 (set (reg:DI 5 di)
        (reg:DI 208)) read_procpar.cpp:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(call_insn 187 186 188 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:139 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 16 (set (reg:SI 103 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:139 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 189 188 190 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:139 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.5704 ])
        (nil)))
(insn 190 189 191 16 (set (reg:QI 104 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:139 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 191 190 192 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:139 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 104 [ D.5705 ])
        (nil)))
(jump_insn 192 191 193 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) read_procpar.cpp:139 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 199)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 193 192 194 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:140 89 {*movdi_internal}
     (nil))
(call_insn 195 194 196 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:140 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 17 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:141 90 {*movsi_internal}
     (nil))
(call_insn 197 196 198 17 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:141 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 198 197 199)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 105 106 209 210 211 212 213
(code_label 199 198 200 18 11 "" [1 uses])
(note 200 199 201 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 18 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:145 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 202 201 203 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 203 202 204 18 (set (reg:DI 5 di)
        (reg:DI 209)) read_procpar.cpp:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 209)
        (nil)))
(call_insn 204 203 205 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 205 204 206 18 (set (reg:DI 210)
        (reg:DI 0 ax)) read_procpar.cpp:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 206 205 207 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 210)) read_procpar.cpp:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(insn 207 206 208 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 208 207 209 18 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn 209 208 210 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 18 (set (reg:DI 211)
        (reg:DI 0 ax)) read_procpar.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 211 210 212 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 211)) read_procpar.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(insn 212 211 213 18 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 213 212 214 18 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 214 213 215 18 (set (reg:DI 5 di)
        (reg:DI 212)) read_procpar.cpp:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 212)
        (nil)))
(call_insn 215 214 216 18 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 216 215 217 18 (set (reg:DF 105 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:147 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 217 216 218 18 (set (reg:SF 106 [ D.5707 ])
        (float_truncate:SF (reg:DF 105 [ D.5706 ]))) read_procpar.cpp:147 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 105 [ D.5706 ])
        (nil)))
(insn 218 217 219 18 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:147 89 {*movdi_internal}
     (nil))
(insn 219 218 1024 18 (set (mem/j:SF (plus:DI (reg/f:DI 213)
                (const_int 292 [0x124])) [0 procpar_info_38(D)->filter+0 S4 A32])
        (reg:SF 106 [ D.5707 ])) read_procpar.cpp:147 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_DEAD (reg:SF 106 [ D.5707 ])
            (nil))))
(jump_insn 1024 219 1025 18 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1025 1024 222)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 214
(code_label 222 1025 223 19 10 "" [1 uses])
(note 223 222 224 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 19 (set (reg:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(insn 225 224 226 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7d7ebbe900 *.LC10>)) read_procpar.cpp:149 89 {*movdi_internal}
     (nil))
(insn 226 225 227 19 (set (reg:DI 5 di)
        (reg:DI 214)) read_procpar.cpp:149 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(call_insn/i 227 226 228 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:149 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 228 227 229 19 (set (reg:SI 107 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:149 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 229 228 230 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:149 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.5704 ])
        (nil)))
(jump_insn 230 229 231 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) read_procpar.cpp:149 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 276)
;;  succ:       20 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 109 215 216 217
(note 231 230 232 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 20 (set (reg:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:151 89 {*movdi_internal}
     (nil))
(insn 233 232 234 20 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:151 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 234 233 235 20 (set (reg:DI 1 dx)
        (reg:DI 215)) read_procpar.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 215)
        (nil)))
(insn 235 234 236 20 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:151 90 {*movsi_internal}
     (nil))
(insn 236 235 237 20 (set (reg:DI 5 di)
        (reg:DI 216)) read_procpar.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 216)
        (nil)))
(call_insn 237 236 238 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 238 237 239 20 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(insn 239 238 240 20 (set (reg:DI 5 di)
        (reg:DI 217)) read_procpar.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 217)
        (nil)))
(call_insn 240 239 241 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:152 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 241 240 242 20 (set (reg:SI 108 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:152 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 242 241 243 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:152 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.5704 ])
        (nil)))
(insn 243 242 244 20 (set (reg:QI 109 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:152 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 244 243 245 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:152 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 109 [ D.5705 ])
        (nil)))
(jump_insn 245 244 246 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) read_procpar.cpp:152 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 252)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 246 245 247 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:153 89 {*movdi_internal}
     (nil))
(call_insn 248 247 249 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:153 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 249 248 250 21 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:154 90 {*movsi_internal}
     (nil))
(call_insn 250 249 251 21 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:154 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 251 250 252)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 111 218 219 220 221 222
(code_label 252 251 253 22 13 "" [1 uses])
(note 253 252 254 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 22 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:158 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 255 254 256 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 256 255 257 22 (set (reg:DI 5 di)
        (reg:DI 218)) read_procpar.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 218)
        (nil)))
(call_insn 257 256 258 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 258 257 259 22 (set (reg:DI 219)
        (reg:DI 0 ax)) read_procpar.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 259 258 260 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 219)) read_procpar.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 219)
        (nil)))
(insn 260 259 261 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 261 260 262 22 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(call_insn 262 261 263 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:159 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 263 262 264 22 (set (reg:DI 220)
        (reg:DI 0 ax)) read_procpar.cpp:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 264 263 265 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 220)) read_procpar.cpp:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 220)
        (nil)))
(insn 265 264 266 22 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 266 265 267 22 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:160 90 {*movsi_internal}
     (nil))
(insn 267 266 268 22 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 268 267 269 22 (set (reg:DI 5 di)
        (reg:DI 221)) read_procpar.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 221)
        (nil)))
(call_insn 269 268 270 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f7d7eef91b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:160 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 270 269 271 22 (set (reg:DI 110 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 271 270 272 22 (set (reg:SI 111 [ D.5704 ])
        (subreg:SI (reg:DI 110 [ D.5709 ]) 0)) read_procpar.cpp:160 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.5709 ])
        (nil)))
(insn 272 271 273 22 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 273 272 1026 22 (set (mem/j:SI (plus:DI (reg/f:DI 222)
                (const_int 296 [0x128])) [0 procpar_info_38(D)->num_transients+0 S4 A64])
        (reg:SI 111 [ D.5704 ])) read_procpar.cpp:160 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (expr_list:REG_DEAD (reg:SI 111 [ D.5704 ])
            (nil))))
(jump_insn 1026 273 1027 22 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1027 1026 276)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112 223
(code_label 276 1027 277 23 12 "" [1 uses])
(note 277 276 278 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 23 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(insn 279 278 280 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f7d7ebbe990 *.LC11>)) read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(insn 280 279 281 23 (set (reg:DI 5 di)
        (reg:DI 223)) read_procpar.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 223)
        (nil)))
(call_insn/i 281 280 282 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:162 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 282 281 283 23 (set (reg:SI 112 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:162 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 283 282 284 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:162 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 112 [ D.5704 ])
        (nil)))
(jump_insn 284 283 285 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) read_procpar.cpp:162 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 330)
;;  succ:       24 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 224 225 226
(note 285 284 286 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 24 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:164 89 {*movdi_internal}
     (nil))
(insn 287 286 288 24 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:164 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 288 287 289 24 (set (reg:DI 1 dx)
        (reg:DI 224)) read_procpar.cpp:164 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 224)
        (nil)))
(insn 289 288 290 24 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:164 90 {*movsi_internal}
     (nil))
(insn 290 289 291 24 (set (reg:DI 5 di)
        (reg:DI 225)) read_procpar.cpp:164 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 225)
        (nil)))
(call_insn 291 290 292 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:164 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 292 291 293 24 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 293 292 294 24 (set (reg:DI 5 di)
        (reg:DI 226)) read_procpar.cpp:165 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 226)
        (nil)))
(call_insn 294 293 295 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:165 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 295 294 296 24 (set (reg:SI 113 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:165 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 296 295 297 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:165 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 113 [ D.5704 ])
        (nil)))
(insn 297 296 298 24 (set (reg:QI 114 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:165 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 298 297 299 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:165 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 114 [ D.5705 ])
        (nil)))
(jump_insn 299 298 300 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) read_procpar.cpp:165 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 306)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 300 299 301 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:166 89 {*movdi_internal}
     (nil))
(call_insn 302 301 303 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:166 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 303 302 304 25 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:167 90 {*movsi_internal}
     (nil))
(call_insn 304 303 305 25 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:167 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 305 304 306)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 116 227 228 229 230 231
(code_label 306 305 307 26 15 "" [1 uses])
(note 307 306 308 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 26 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:171 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 309 308 310 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 310 309 311 26 (set (reg:DI 5 di)
        (reg:DI 227)) read_procpar.cpp:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 227)
        (nil)))
(call_insn 311 310 312 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:171 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 312 311 313 26 (set (reg:DI 228)
        (reg:DI 0 ax)) read_procpar.cpp:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 313 312 314 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 228)) read_procpar.cpp:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 228)
        (nil)))
(insn 314 313 315 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 315 314 316 26 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(call_insn 316 315 317 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:172 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 317 316 318 26 (set (reg:DI 229)
        (reg:DI 0 ax)) read_procpar.cpp:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 318 317 319 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 229)) read_procpar.cpp:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 229)
        (nil)))
(insn 319 318 320 26 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 320 319 321 26 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) read_procpar.cpp:173 90 {*movsi_internal}
     (nil))
(insn 321 320 322 26 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 322 321 323 26 (set (reg:DI 5 di)
        (reg:DI 230)) read_procpar.cpp:173 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(call_insn 323 322 324 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f7d7eef91b0 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:173 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 324 323 325 26 (set (reg:DI 115 [ D.5709 ])
        (reg:DI 0 ax)) read_procpar.cpp:173 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 325 324 326 26 (set (reg:SI 116 [ D.5704 ])
        (subreg:SI (reg:DI 115 [ D.5709 ]) 0)) read_procpar.cpp:173 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ D.5709 ])
        (nil)))
(insn 326 325 327 26 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 327 326 1028 26 (set (mem/j:SI (plus:DI (reg/f:DI 231)
                (const_int 300 [0x12c])) [0 procpar_info_38(D)->num_points+0 S4 A32])
        (reg:SI 116 [ D.5704 ])) read_procpar.cpp:173 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 231)
        (expr_list:REG_DEAD (reg:SI 116 [ D.5704 ])
            (nil))))
(jump_insn 1028 327 1029 26 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1029 1028 330)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 232
(code_label 330 1029 331 27 14 "" [1 uses])
(note 331 330 332 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 27 (set (reg:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 333 332 334 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7d7ebbea20 *.LC12>)) read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 334 333 335 27 (set (reg:DI 5 di)
        (reg:DI 232)) read_procpar.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 232)
        (nil)))
(call_insn/i 335 334 336 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 336 335 337 27 (set (reg:SI 117 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:175 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 337 336 338 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:175 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.5704 ])
        (nil)))
(jump_insn 338 337 339 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) read_procpar.cpp:175 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 382)
;;  succ:       28 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 233 234 235
(note 339 338 340 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 28 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 341 340 342 28 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 342 341 343 28 (set (reg:DI 1 dx)
        (reg:DI 233)) read_procpar.cpp:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 233)
        (nil)))
(insn 343 342 344 28 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:177 90 {*movsi_internal}
     (nil))
(insn 344 343 345 28 (set (reg:DI 5 di)
        (reg:DI 234)) read_procpar.cpp:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 234)
        (nil)))
(call_insn 345 344 346 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:177 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 346 345 347 28 (set (reg:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(insn 347 346 348 28 (set (reg:DI 5 di)
        (reg:DI 235)) read_procpar.cpp:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 235)
        (nil)))
(call_insn 348 347 349 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:178 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 349 348 350 28 (set (reg:SI 118 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:178 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 350 349 351 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:178 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 118 [ D.5704 ])
        (nil)))
(insn 351 350 352 28 (set (reg:QI 119 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:178 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 352 351 353 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:178 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 119 [ D.5705 ])
        (nil)))
(jump_insn 353 352 354 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 360)
            (pc))) read_procpar.cpp:178 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 360)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 354 353 355 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:179 89 {*movdi_internal}
     (nil))
(call_insn 356 355 357 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:179 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 357 356 358 29 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:180 90 {*movsi_internal}
     (nil))
(call_insn 358 357 359 29 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:180 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 359 358 360)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120 236 237 238 239 240
(code_label 360 359 361 30 17 "" [1 uses])
(note 361 360 362 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 30 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:184 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 363 362 364 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 364 363 365 30 (set (reg:DI 5 di)
        (reg:DI 236)) read_procpar.cpp:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 236)
        (nil)))
(call_insn 365 364 366 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:184 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 366 365 367 30 (set (reg:DI 237)
        (reg:DI 0 ax)) read_procpar.cpp:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 367 366 368 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 237)) read_procpar.cpp:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 237)
        (nil)))
(insn 368 367 369 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 369 368 370 30 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(call_insn 370 369 371 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:185 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 30 (set (reg:DI 238)
        (reg:DI 0 ax)) read_procpar.cpp:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 372 371 373 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 238)) read_procpar.cpp:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 238)
        (nil)))
(insn 373 372 374 30 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 374 373 375 30 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 375 374 376 30 (set (reg:DI 5 di)
        (reg:DI 239)) read_procpar.cpp:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 239)
        (nil)))
(call_insn 376 375 377 30 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:186 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 377 376 378 30 (set (reg:DF 120 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:186 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 378 377 379 30 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 379 378 1030 30 (set (mem/j:DF (plus:DI (reg/f:DI 240)
                (const_int 304 [0x130])) [0 procpar_info_38(D)->main_frequency+0 S8 A64])
        (reg:DF 120 [ D.5706 ])) read_procpar.cpp:186 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 240)
        (expr_list:REG_DEAD (reg:DF 120 [ D.5706 ])
            (nil))))
(jump_insn 1030 379 1031 30 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1031 1030 382)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 121 241
(code_label 382 1031 383 31 16 "" [1 uses])
(note 383 382 384 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 31 (set (reg:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 385 384 386 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f7d7ebbeab0 *.LC13>)) read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 386 385 387 31 (set (reg:DI 5 di)
        (reg:DI 241)) read_procpar.cpp:188 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 241)
        (nil)))
(call_insn/i 387 386 388 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:188 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 388 387 389 31 (set (reg:SI 121 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:188 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 389 388 390 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:188 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 121 [ D.5704 ])
        (nil)))
(jump_insn 390 389 391 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) read_procpar.cpp:188 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 434)
;;  succ:       32 (FALLTHRU)
;;              35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 123 242 243 244
(note 391 390 392 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 32 (set (reg:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 393 392 394 32 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:190 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 394 393 395 32 (set (reg:DI 1 dx)
        (reg:DI 242)) read_procpar.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 242)
        (nil)))
(insn 395 394 396 32 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 396 395 397 32 (set (reg:DI 5 di)
        (reg:DI 243)) read_procpar.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 243)
        (nil)))
(call_insn 397 396 398 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:190 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 398 397 399 32 (set (reg:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(insn 399 398 400 32 (set (reg:DI 5 di)
        (reg:DI 244)) read_procpar.cpp:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 244)
        (nil)))
(call_insn 400 399 401 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:191 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 401 400 402 32 (set (reg:SI 122 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:191 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 402 401 403 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:191 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 122 [ D.5704 ])
        (nil)))
(insn 403 402 404 32 (set (reg:QI 123 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:191 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 404 403 405 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:191 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 123 [ D.5705 ])
        (nil)))
(jump_insn 405 404 406 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 412)
            (pc))) read_procpar.cpp:191 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 412)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 406 405 407 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:192 89 {*movdi_internal}
     (nil))
(call_insn 408 407 409 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:192 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 33 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:193 90 {*movsi_internal}
     (nil))
(call_insn 410 409 411 33 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:193 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 411 410 412)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 124 245 246 247 248 249
(code_label 412 411 413 34 19 "" [1 uses])
(note 413 412 414 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 34 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:197 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 415 414 416 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 416 415 417 34 (set (reg:DI 5 di)
        (reg:DI 245)) read_procpar.cpp:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 245)
        (nil)))
(call_insn 417 416 418 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:197 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 418 417 419 34 (set (reg:DI 246)
        (reg:DI 0 ax)) read_procpar.cpp:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 419 418 420 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 246)) read_procpar.cpp:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 246)
        (nil)))
(insn 420 419 421 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 421 420 422 34 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(call_insn 422 421 423 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:198 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 423 422 424 34 (set (reg:DI 247)
        (reg:DI 0 ax)) read_procpar.cpp:198 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 424 423 425 34 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 247)) read_procpar.cpp:198 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 247)
        (nil)))
(insn 425 424 426 34 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 426 425 427 34 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 427 426 428 34 (set (reg:DI 5 di)
        (reg:DI 248)) read_procpar.cpp:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 248)
        (nil)))
(call_insn 428 427 429 34 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:199 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 429 428 430 34 (set (reg:DF 124 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:199 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 430 429 431 34 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 431 430 1032 34 (set (mem/j:DF (plus:DI (reg/f:DI 249)
                (const_int 312 [0x138])) [0 procpar_info_38(D)->offset_frequency+0 S8 A64])
        (reg:DF 124 [ D.5706 ])) read_procpar.cpp:199 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (expr_list:REG_DEAD (reg:DF 124 [ D.5706 ])
            (nil))))
(jump_insn 1032 431 1033 34 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1033 1032 434)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 125 250
(code_label 434 1033 435 35 18 "" [1 uses])
(note 435 434 436 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 437 35 (set (reg:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 437 436 438 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f7d7ebbeb40 *.LC14>)) read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 438 437 439 35 (set (reg:DI 5 di)
        (reg:DI 250)) read_procpar.cpp:201 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 250)
        (nil)))
(call_insn/i 439 438 440 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:201 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 440 439 441 35 (set (reg:SI 125 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:201 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 441 440 442 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:201 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 125 [ D.5704 ])
        (nil)))
(jump_insn 442 441 443 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) read_procpar.cpp:201 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 487)
;;  succ:       36 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 126 127 251 252 253
(note 443 442 444 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 36 (set (reg:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(insn 445 444 446 36 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:203 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 446 445 447 36 (set (reg:DI 1 dx)
        (reg:DI 251)) read_procpar.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 251)
        (nil)))
(insn 447 446 448 36 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:203 90 {*movsi_internal}
     (nil))
(insn 448 447 449 36 (set (reg:DI 5 di)
        (reg:DI 252)) read_procpar.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 252)
        (nil)))
(call_insn 449 448 450 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:203 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 450 449 451 36 (set (reg:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 451 450 452 36 (set (reg:DI 5 di)
        (reg:DI 253)) read_procpar.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 253)
        (nil)))
(call_insn 452 451 453 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:204 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 453 452 454 36 (set (reg:SI 126 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:204 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 454 453 455 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:204 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 126 [ D.5704 ])
        (nil)))
(insn 455 454 456 36 (set (reg:QI 127 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:204 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 456 455 457 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:204 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 127 [ D.5705 ])
        (nil)))
(jump_insn 457 456 458 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) read_procpar.cpp:204 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 464)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 458 457 459 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:205 89 {*movdi_internal}
     (nil))
(call_insn 460 459 461 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:205 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 461 460 462 37 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:206 90 {*movsi_internal}
     (nil))
(call_insn 462 461 463 37 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:206 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 463 462 464)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 128 129 254 255 256 257 258
(code_label 464 463 465 38 21 "" [1 uses])
(note 465 464 466 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 38 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:210 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 467 466 468 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:210 89 {*movdi_internal}
     (nil))
(insn 468 467 469 38 (set (reg:DI 5 di)
        (reg:DI 254)) read_procpar.cpp:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 254)
        (nil)))
(call_insn 469 468 470 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:210 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 470 469 471 38 (set (reg:DI 255)
        (reg:DI 0 ax)) read_procpar.cpp:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 471 470 472 38 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 255)) read_procpar.cpp:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 255)
        (nil)))
(insn 472 471 473 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(insn 473 472 474 38 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:211 89 {*movdi_internal}
     (nil))
(call_insn 474 473 475 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:211 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 475 474 476 38 (set (reg:DI 256)
        (reg:DI 0 ax)) read_procpar.cpp:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 476 475 477 38 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 256)) read_procpar.cpp:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 256)
        (nil)))
(insn 477 476 478 38 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 478 477 479 38 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 479 478 480 38 (set (reg:DI 5 di)
        (reg:DI 257)) read_procpar.cpp:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 257)
        (nil)))
(call_insn 480 479 481 38 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:212 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 481 480 482 38 (set (reg:DF 128 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:212 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 482 481 483 38 (set (reg:SF 129 [ D.5707 ])
        (float_truncate:SF (reg:DF 128 [ D.5706 ]))) read_procpar.cpp:212 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 128 [ D.5706 ])
        (nil)))
(insn 483 482 484 38 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 484 483 1034 38 (set (mem/j:SF (plus:DI (reg/f:DI 258)
                (const_int 320 [0x140])) [0 procpar_info_38(D)->te+0 S4 A64])
        (reg:SF 129 [ D.5707 ])) read_procpar.cpp:212 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:SF 129 [ D.5707 ])
            (nil))))
(jump_insn 1034 484 1035 38 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1035 1034 487)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 130 259
(code_label 487 1035 488 39 20 "" [1 uses])
(note 488 487 489 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 39 (set (reg:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 490 489 491 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f7d7ebbebd0 *.LC15>)) read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 491 490 492 39 (set (reg:DI 5 di)
        (reg:DI 259)) read_procpar.cpp:214 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 259)
        (nil)))
(call_insn/i 492 491 493 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:214 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 493 492 494 39 (set (reg:SI 130 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:214 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 494 493 495 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:214 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 130 [ D.5704 ])
        (nil)))
(jump_insn 495 494 496 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) read_procpar.cpp:214 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 540)
;;  succ:       40 (FALLTHRU)
;;              43
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 131 132 260 261 262
(note 496 495 497 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 40 (set (reg:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 498 497 499 40 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:216 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 499 498 500 40 (set (reg:DI 1 dx)
        (reg:DI 260)) read_procpar.cpp:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 260)
        (nil)))
(insn 500 499 501 40 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 501 500 502 40 (set (reg:DI 5 di)
        (reg:DI 261)) read_procpar.cpp:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 261)
        (nil)))
(call_insn 502 501 503 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:216 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 503 502 504 40 (set (reg:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:217 89 {*movdi_internal}
     (nil))
(insn 504 503 505 40 (set (reg:DI 5 di)
        (reg:DI 262)) read_procpar.cpp:217 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 262)
        (nil)))
(call_insn 505 504 506 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:217 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 506 505 507 40 (set (reg:SI 131 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:217 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 507 506 508 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:217 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 131 [ D.5704 ])
        (nil)))
(insn 508 507 509 40 (set (reg:QI 132 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:217 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 509 508 510 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:217 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 132 [ D.5705 ])
        (nil)))
(jump_insn 510 509 511 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 517)
            (pc))) read_procpar.cpp:217 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 517)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 511 510 512 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:218 89 {*movdi_internal}
     (nil))
(call_insn 513 512 514 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:218 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 514 513 515 41 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:219 90 {*movsi_internal}
     (nil))
(call_insn 515 514 516 41 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:219 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 516 515 517)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 133 134 263 264 265 266 267
(code_label 517 516 518 42 23 "" [1 uses])
(note 518 517 519 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 42 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 520 519 521 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 521 520 522 42 (set (reg:DI 5 di)
        (reg:DI 263)) read_procpar.cpp:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 263)
        (nil)))
(call_insn 522 521 523 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 523 522 524 42 (set (reg:DI 264)
        (reg:DI 0 ax)) read_procpar.cpp:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 524 523 525 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 264)) read_procpar.cpp:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 264)
        (nil)))
(insn 525 524 526 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 526 525 527 42 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(call_insn 527 526 528 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:224 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 528 527 529 42 (set (reg:DI 265)
        (reg:DI 0 ax)) read_procpar.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 529 528 530 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 265)) read_procpar.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 265)
        (nil)))
(insn 530 529 531 42 (set (reg:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 531 530 532 42 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 532 531 533 42 (set (reg:DI 5 di)
        (reg:DI 266)) read_procpar.cpp:225 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 266)
        (nil)))
(call_insn 533 532 534 42 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:225 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 534 533 535 42 (set (reg:DF 133 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:225 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 535 534 536 42 (set (reg:SF 134 [ D.5707 ])
        (float_truncate:SF (reg:DF 133 [ D.5706 ]))) read_procpar.cpp:225 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 133 [ D.5706 ])
        (nil)))
(insn 536 535 537 42 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:225 89 {*movdi_internal}
     (nil))
(insn 537 536 1036 42 (set (mem/j:SF (plus:DI (reg/f:DI 267)
                (const_int 324 [0x144])) [0 procpar_info_38(D)->tm+0 S4 A32])
        (reg:SF 134 [ D.5707 ])) read_procpar.cpp:225 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 267)
        (expr_list:REG_DEAD (reg:SF 134 [ D.5707 ])
            (nil))))
(jump_insn 1036 537 1037 42 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1037 1036 540)
;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 135 268
(code_label 540 1037 541 43 22 "" [1 uses])
(note 541 540 542 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 43 (set (reg:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(insn 543 542 544 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7d7ebbec60 *.LC16>)) read_procpar.cpp:227 89 {*movdi_internal}
     (nil))
(insn 544 543 545 43 (set (reg:DI 5 di)
        (reg:DI 268)) read_procpar.cpp:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 268)
        (nil)))
(call_insn/i 545 544 546 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:227 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 546 545 547 43 (set (reg:SI 135 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:227 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 547 546 548 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:227 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 135 [ D.5704 ])
        (nil)))
(jump_insn 548 547 549 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) read_procpar.cpp:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 593)
;;  succ:       44 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136 137 269 270 271
(note 549 548 550 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 551 44 (set (reg:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:229 89 {*movdi_internal}
     (nil))
(insn 551 550 552 44 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:229 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 552 551 553 44 (set (reg:DI 1 dx)
        (reg:DI 269)) read_procpar.cpp:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 269)
        (nil)))
(insn 553 552 554 44 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:229 90 {*movsi_internal}
     (nil))
(insn 554 553 555 44 (set (reg:DI 5 di)
        (reg:DI 270)) read_procpar.cpp:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(call_insn 555 554 556 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:229 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 556 555 557 44 (set (reg:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:230 89 {*movdi_internal}
     (nil))
(insn 557 556 558 44 (set (reg:DI 5 di)
        (reg:DI 271)) read_procpar.cpp:230 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 271)
        (nil)))
(call_insn 558 557 559 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:230 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 559 558 560 44 (set (reg:SI 136 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:230 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 560 559 561 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:230 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 136 [ D.5704 ])
        (nil)))
(insn 561 560 562 44 (set (reg:QI 137 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:230 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 562 561 563 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:230 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 137 [ D.5705 ])
        (nil)))
(jump_insn 563 562 564 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 570)
            (pc))) read_procpar.cpp:230 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 570)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 564 563 565 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:231 89 {*movdi_internal}
     (nil))
(call_insn 566 565 567 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:231 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 567 566 568 45 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:232 90 {*movsi_internal}
     (nil))
(call_insn 568 567 569 45 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:232 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 569 568 570)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 138 139 272 273 274 275 276
(code_label 570 569 571 46 25 "" [1 uses])
(note 571 570 572 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 46 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:236 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 573 572 574 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:236 89 {*movdi_internal}
     (nil))
(insn 574 573 575 46 (set (reg:DI 5 di)
        (reg:DI 272)) read_procpar.cpp:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 272)
        (nil)))
(call_insn 575 574 576 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:236 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 576 575 577 46 (set (reg:DI 273)
        (reg:DI 0 ax)) read_procpar.cpp:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 577 576 578 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 273)) read_procpar.cpp:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 273)
        (nil)))
(insn 578 577 579 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(insn 579 578 580 46 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:237 89 {*movdi_internal}
     (nil))
(call_insn 580 579 581 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:237 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 581 580 582 46 (set (reg:DI 274)
        (reg:DI 0 ax)) read_procpar.cpp:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 582 581 583 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 274)) read_procpar.cpp:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 274)
        (nil)))
(insn 583 582 584 46 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 584 583 585 46 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 585 584 586 46 (set (reg:DI 5 di)
        (reg:DI 275)) read_procpar.cpp:238 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 275)
        (nil)))
(call_insn 586 585 587 46 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:238 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 587 586 588 46 (set (reg:DF 138 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:238 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 588 587 589 46 (set (reg:SF 139 [ D.5707 ])
        (float_truncate:SF (reg:DF 138 [ D.5706 ]))) read_procpar.cpp:238 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 138 [ D.5706 ])
        (nil)))
(insn 589 588 590 46 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:238 89 {*movdi_internal}
     (nil))
(insn 590 589 1038 46 (set (mem/j:SF (plus:DI (reg/f:DI 276)
                (const_int 328 [0x148])) [0 procpar_info_38(D)->gain+0 S4 A64])
        (reg:SF 139 [ D.5707 ])) read_procpar.cpp:238 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:SF 139 [ D.5707 ])
            (nil))))
(jump_insn 1038 590 1039 46 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1039 1038 593)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140 277
(code_label 593 1039 594 47 24 "" [1 uses])
(note 594 593 595 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 47 (set (reg:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(insn 596 595 597 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7d7ebbecf0 *.LC17>)) read_procpar.cpp:240 89 {*movdi_internal}
     (nil))
(insn 597 596 598 47 (set (reg:DI 5 di)
        (reg:DI 277)) read_procpar.cpp:240 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 277)
        (nil)))
(call_insn/i 598 597 599 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:240 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 599 598 600 47 (set (reg:SI 140 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:240 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 600 599 601 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:240 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 140 [ D.5704 ])
        (nil)))
(jump_insn 601 600 602 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 646)
            (pc))) read_procpar.cpp:240 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 646)
;;  succ:       48 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 142 278 279 280
(note 602 601 603 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 48 (set (reg:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 604 603 605 48 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:242 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 605 604 606 48 (set (reg:DI 1 dx)
        (reg:DI 278)) read_procpar.cpp:242 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 278)
        (nil)))
(insn 606 605 607 48 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:242 90 {*movsi_internal}
     (nil))
(insn 607 606 608 48 (set (reg:DI 5 di)
        (reg:DI 279)) read_procpar.cpp:242 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 279)
        (nil)))
(call_insn 608 607 609 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:242 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 609 608 610 48 (set (reg:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:243 89 {*movdi_internal}
     (nil))
(insn 610 609 611 48 (set (reg:DI 5 di)
        (reg:DI 280)) read_procpar.cpp:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 280)
        (nil)))
(call_insn 611 610 612 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:243 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 612 611 613 48 (set (reg:SI 141 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:243 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 613 612 614 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:243 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 141 [ D.5704 ])
        (nil)))
(insn 614 613 615 48 (set (reg:QI 142 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:243 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 615 614 616 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:243 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 142 [ D.5705 ])
        (nil)))
(jump_insn 616 615 617 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) read_procpar.cpp:243 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 623)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 617 616 618 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(call_insn 619 618 620 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:244 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 620 619 621 49 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:245 90 {*movsi_internal}
     (nil))
(call_insn 621 620 622 49 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:245 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 622 621 623)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 143 144 281 282 283 284 285
(code_label 623 622 624 50 27 "" [1 uses])
(note 624 623 625 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 50 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:249 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 626 625 627 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:249 89 {*movdi_internal}
     (nil))
(insn 627 626 628 50 (set (reg:DI 5 di)
        (reg:DI 281)) read_procpar.cpp:249 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 281)
        (nil)))
(call_insn 628 627 629 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:249 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 629 628 630 50 (set (reg:DI 282)
        (reg:DI 0 ax)) read_procpar.cpp:249 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 630 629 631 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 282)) read_procpar.cpp:249 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 282)
        (nil)))
(insn 631 630 632 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 632 631 633 50 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(call_insn 633 632 634 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:250 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 634 633 635 50 (set (reg:DI 283)
        (reg:DI 0 ax)) read_procpar.cpp:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 635 634 636 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 283)) read_procpar.cpp:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283)
        (nil)))
(insn 636 635 637 50 (set (reg:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 637 636 638 50 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 638 637 639 50 (set (reg:DI 5 di)
        (reg:DI 284)) read_procpar.cpp:251 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 284)
        (nil)))
(call_insn 639 638 640 50 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:251 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 640 639 641 50 (set (reg:DF 143 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:251 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 641 640 642 50 (set (reg:SF 144 [ D.5707 ])
        (float_truncate:SF (reg:DF 143 [ D.5706 ]))) read_procpar.cpp:251 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 143 [ D.5706 ])
        (nil)))
(insn 642 641 643 50 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 643 642 1040 50 (set (mem/j:SF (plus:DI (reg/f:DI 285)
                (const_int 332 [0x14c])) [0 procpar_info_38(D)->pos1+0 S4 A32])
        (reg:SF 144 [ D.5707 ])) read_procpar.cpp:251 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (expr_list:REG_DEAD (reg:SF 144 [ D.5707 ])
            (nil))))
(jump_insn 1040 643 1041 50 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1041 1040 646)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 145 286
(code_label 646 1041 647 51 26 "" [1 uses])
(note 647 646 648 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 51 (set (reg:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(insn 649 648 650 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7d7ebbed80 *.LC18>)) read_procpar.cpp:253 89 {*movdi_internal}
     (nil))
(insn 650 649 651 51 (set (reg:DI 5 di)
        (reg:DI 286)) read_procpar.cpp:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(call_insn/i 651 650 652 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:253 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 652 651 653 51 (set (reg:SI 145 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:253 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 653 652 654 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:253 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 145 [ D.5704 ])
        (nil)))
(jump_insn 654 653 655 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) read_procpar.cpp:253 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 699)
;;  succ:       52 (FALLTHRU)
;;              55
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 146 147 287 288 289
(note 655 654 656 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 52 (set (reg:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:255 89 {*movdi_internal}
     (nil))
(insn 657 656 658 52 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:255 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 658 657 659 52 (set (reg:DI 1 dx)
        (reg:DI 287)) read_procpar.cpp:255 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(insn 659 658 660 52 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:255 90 {*movsi_internal}
     (nil))
(insn 660 659 661 52 (set (reg:DI 5 di)
        (reg:DI 288)) read_procpar.cpp:255 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 288)
        (nil)))
(call_insn 661 660 662 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:255 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 662 661 663 52 (set (reg:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:256 89 {*movdi_internal}
     (nil))
(insn 663 662 664 52 (set (reg:DI 5 di)
        (reg:DI 289)) read_procpar.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (nil)))
(call_insn 664 663 665 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:256 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 665 664 666 52 (set (reg:SI 146 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:256 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 666 665 667 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:256 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 146 [ D.5704 ])
        (nil)))
(insn 667 666 668 52 (set (reg:QI 147 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:256 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 668 667 669 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:256 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 147 [ D.5705 ])
        (nil)))
(jump_insn 669 668 670 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 676)
            (pc))) read_procpar.cpp:256 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 676)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 670 669 671 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:257 89 {*movdi_internal}
     (nil))
(call_insn 672 671 673 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:257 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 673 672 674 53 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:258 90 {*movsi_internal}
     (nil))
(call_insn 674 673 675 53 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:258 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 675 674 676)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 148 149 290 291 292 293 294
(code_label 676 675 677 54 29 "" [1 uses])
(note 677 676 678 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 679 54 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:262 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 679 678 680 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:262 89 {*movdi_internal}
     (nil))
(insn 680 679 681 54 (set (reg:DI 5 di)
        (reg:DI 290)) read_procpar.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 290)
        (nil)))
(call_insn 681 680 682 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:262 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 682 681 683 54 (set (reg:DI 291)
        (reg:DI 0 ax)) read_procpar.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 683 682 684 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 291)) read_procpar.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 291)
        (nil)))
(insn 684 683 685 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(insn 685 684 686 54 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:263 89 {*movdi_internal}
     (nil))
(call_insn 686 685 687 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:263 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 687 686 688 54 (set (reg:DI 292)
        (reg:DI 0 ax)) read_procpar.cpp:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 688 687 689 54 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 292)) read_procpar.cpp:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 292)
        (nil)))
(insn 689 688 690 54 (set (reg:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 690 689 691 54 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 691 690 692 54 (set (reg:DI 5 di)
        (reg:DI 293)) read_procpar.cpp:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 293)
        (nil)))
(call_insn 692 691 693 54 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:264 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 693 692 694 54 (set (reg:DF 148 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:264 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 694 693 695 54 (set (reg:SF 149 [ D.5707 ])
        (float_truncate:SF (reg:DF 148 [ D.5706 ]))) read_procpar.cpp:264 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 148 [ D.5706 ])
        (nil)))
(insn 695 694 696 54 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 696 695 1042 54 (set (mem/j:SF (plus:DI (reg/f:DI 294)
                (const_int 336 [0x150])) [0 procpar_info_38(D)->pos2+0 S4 A64])
        (reg:SF 149 [ D.5707 ])) read_procpar.cpp:264 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 294)
        (expr_list:REG_DEAD (reg:SF 149 [ D.5707 ])
            (nil))))
(jump_insn 1042 696 1043 54 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1043 1042 699)
;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 150 295
(code_label 699 1043 700 55 28 "" [1 uses])
(note 700 699 701 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 55 (set (reg:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 702 701 703 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7d7ebbee10 *.LC19>)) read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 703 702 704 55 (set (reg:DI 5 di)
        (reg:DI 295)) read_procpar.cpp:266 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 295)
        (nil)))
(call_insn/i 704 703 705 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:266 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 705 704 706 55 (set (reg:SI 150 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:266 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 706 705 707 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:266 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 150 [ D.5704 ])
        (nil)))
(jump_insn 707 706 708 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) read_procpar.cpp:266 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 752)
;;  succ:       56 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 151 152 296 297 298
(note 708 707 709 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 56 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(insn 710 709 711 56 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:268 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 711 710 712 56 (set (reg:DI 1 dx)
        (reg:DI 296)) read_procpar.cpp:268 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 296)
        (nil)))
(insn 712 711 713 56 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:268 90 {*movsi_internal}
     (nil))
(insn 713 712 714 56 (set (reg:DI 5 di)
        (reg:DI 297)) read_procpar.cpp:268 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (nil)))
(call_insn 714 713 715 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:268 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 715 714 716 56 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:269 89 {*movdi_internal}
     (nil))
(insn 716 715 717 56 (set (reg:DI 5 di)
        (reg:DI 298)) read_procpar.cpp:269 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (nil)))
(call_insn 717 716 718 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:269 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 718 717 719 56 (set (reg:SI 151 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:269 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 719 718 720 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:269 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 151 [ D.5704 ])
        (nil)))
(insn 720 719 721 56 (set (reg:QI 152 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:269 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 721 720 722 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 152 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:269 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 152 [ D.5705 ])
        (nil)))
(jump_insn 722 721 723 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 729)
            (pc))) read_procpar.cpp:269 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 729)
;;  succ:       57 (FALLTHRU)
;;              58
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 723 722 724 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 724 723 725 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:270 89 {*movdi_internal}
     (nil))
(call_insn 725 724 726 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:270 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 726 725 727 57 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:271 90 {*movsi_internal}
     (nil))
(call_insn 727 726 728 57 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:271 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 728 727 729)
;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 153 154 299 300 301 302 303
(code_label 729 728 730 58 31 "" [1 uses])
(note 730 729 731 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 58 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:275 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 732 731 733 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 733 732 734 58 (set (reg:DI 5 di)
        (reg:DI 299)) read_procpar.cpp:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 299)
        (nil)))
(call_insn 734 733 735 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:275 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 735 734 736 58 (set (reg:DI 300)
        (reg:DI 0 ax)) read_procpar.cpp:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 736 735 737 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 300)) read_procpar.cpp:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 300)
        (nil)))
(insn 737 736 738 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 738 737 739 58 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(call_insn 739 738 740 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:276 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 740 739 741 58 (set (reg:DI 301)
        (reg:DI 0 ax)) read_procpar.cpp:276 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 741 740 742 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 301)) read_procpar.cpp:276 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 301)
        (nil)))
(insn 742 741 743 58 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 743 742 744 58 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 744 743 745 58 (set (reg:DI 5 di)
        (reg:DI 302)) read_procpar.cpp:277 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 302)
        (nil)))
(call_insn 745 744 746 58 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:277 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 746 745 747 58 (set (reg:DF 153 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:277 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 747 746 748 58 (set (reg:SF 154 [ D.5707 ])
        (float_truncate:SF (reg:DF 153 [ D.5706 ]))) read_procpar.cpp:277 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 153 [ D.5706 ])
        (nil)))
(insn 748 747 749 58 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 749 748 1044 58 (set (mem/j:SF (plus:DI (reg/f:DI 303)
                (const_int 340 [0x154])) [0 procpar_info_38(D)->pos3+0 S4 A32])
        (reg:SF 154 [ D.5707 ])) read_procpar.cpp:277 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 303)
        (expr_list:REG_DEAD (reg:SF 154 [ D.5707 ])
            (nil))))
(jump_insn 1044 749 1045 58 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1045 1044 752)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 155 304
(code_label 752 1045 753 59 30 "" [1 uses])
(note 753 752 754 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 755 59 (set (reg:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(insn 755 754 756 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7d7ebbeea0 *.LC20>)) read_procpar.cpp:279 89 {*movdi_internal}
     (nil))
(insn 756 755 757 59 (set (reg:DI 5 di)
        (reg:DI 304)) read_procpar.cpp:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 304)
        (nil)))
(call_insn/i 757 756 758 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:279 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 758 757 759 59 (set (reg:SI 155 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:279 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 759 758 760 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:279 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 155 [ D.5704 ])
        (nil)))
(jump_insn 760 759 761 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 805)
            (pc))) read_procpar.cpp:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 805)
;;  succ:       60 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 156 157 305 306 307
(note 761 760 762 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 762 761 763 60 (set (reg:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(insn 763 762 764 60 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:281 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 764 763 765 60 (set (reg:DI 1 dx)
        (reg:DI 305)) read_procpar.cpp:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 305)
        (nil)))
(insn 765 764 766 60 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:281 90 {*movsi_internal}
     (nil))
(insn 766 765 767 60 (set (reg:DI 5 di)
        (reg:DI 306)) read_procpar.cpp:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 306)
        (nil)))
(call_insn 767 766 768 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:281 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 768 767 769 60 (set (reg:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(insn 769 768 770 60 (set (reg:DI 5 di)
        (reg:DI 307)) read_procpar.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 307)
        (nil)))
(call_insn 770 769 771 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:282 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 771 770 772 60 (set (reg:SI 156 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:282 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 772 771 773 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:282 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 156 [ D.5704 ])
        (nil)))
(insn 773 772 774 60 (set (reg:QI 157 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:282 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 774 773 775 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:282 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 157 [ D.5705 ])
        (nil)))
(jump_insn 775 774 776 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) read_procpar.cpp:282 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 782)
;;  succ:       61 (FALLTHRU)
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 776 775 777 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:283 89 {*movdi_internal}
     (nil))
(call_insn 778 777 779 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:283 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 779 778 780 61 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:284 90 {*movsi_internal}
     (nil))
(call_insn 780 779 781 61 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:284 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 781 780 782)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 158 159 308 309 310 311 312
(code_label 782 781 783 62 33 "" [1 uses])
(note 783 782 784 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 62 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:288 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 785 784 786 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 786 785 787 62 (set (reg:DI 5 di)
        (reg:DI 308)) read_procpar.cpp:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 308)
        (nil)))
(call_insn 787 786 788 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:288 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 788 787 789 62 (set (reg:DI 309)
        (reg:DI 0 ax)) read_procpar.cpp:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 789 788 790 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 309)) read_procpar.cpp:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 309)
        (nil)))
(insn 790 789 791 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(insn 791 790 792 62 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:289 89 {*movdi_internal}
     (nil))
(call_insn 792 791 793 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:289 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 793 792 794 62 (set (reg:DI 310)
        (reg:DI 0 ax)) read_procpar.cpp:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 794 793 795 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 310)) read_procpar.cpp:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 310)
        (nil)))
(insn 795 794 796 62 (set (reg:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 796 795 797 62 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 797 796 798 62 (set (reg:DI 5 di)
        (reg:DI 311)) read_procpar.cpp:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 311)
        (nil)))
(call_insn 798 797 799 62 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 799 798 800 62 (set (reg:DF 158 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:290 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 800 799 801 62 (set (reg:SF 159 [ D.5707 ])
        (float_truncate:SF (reg:DF 158 [ D.5706 ]))) read_procpar.cpp:290 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 158 [ D.5706 ])
        (nil)))
(insn 801 800 802 62 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:290 89 {*movdi_internal}
     (nil))
(insn 802 801 1046 62 (set (mem/j:SF (plus:DI (reg/f:DI 312)
                (const_int 344 [0x158])) [0 procpar_info_38(D)->vox1+0 S4 A64])
        (reg:SF 159 [ D.5707 ])) read_procpar.cpp:290 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 312)
        (expr_list:REG_DEAD (reg:SF 159 [ D.5707 ])
            (nil))))
(jump_insn 1046 802 1047 62 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1047 1046 805)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 160 313
(code_label 805 1047 806 63 32 "" [1 uses])
(note 806 805 807 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 63 (set (reg:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 808 807 809 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7d7ebbef30 *.LC21>)) read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 809 808 810 63 (set (reg:DI 5 di)
        (reg:DI 313)) read_procpar.cpp:292 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 313)
        (nil)))
(call_insn/i 810 809 811 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:292 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 811 810 812 63 (set (reg:SI 160 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:292 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 812 811 813 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:292 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 160 [ D.5704 ])
        (nil)))
(jump_insn 813 812 814 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 858)
            (pc))) read_procpar.cpp:292 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 858)
;;  succ:       64 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 161 162 314 315 316
(note 814 813 815 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 815 814 816 64 (set (reg:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 816 815 817 64 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:294 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 817 816 818 64 (set (reg:DI 1 dx)
        (reg:DI 314)) read_procpar.cpp:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 314)
        (nil)))
(insn 818 817 819 64 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 819 818 820 64 (set (reg:DI 5 di)
        (reg:DI 315)) read_procpar.cpp:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (nil)))
(call_insn 820 819 821 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:294 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 821 820 822 64 (set (reg:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:295 89 {*movdi_internal}
     (nil))
(insn 822 821 823 64 (set (reg:DI 5 di)
        (reg:DI 316)) read_procpar.cpp:295 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (nil)))
(call_insn 823 822 824 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:295 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 824 823 825 64 (set (reg:SI 161 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:295 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 825 824 826 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:295 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 161 [ D.5704 ])
        (nil)))
(insn 826 825 827 64 (set (reg:QI 162 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 827 826 828 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 162 [ D.5705 ])
        (nil)))
(jump_insn 828 827 829 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 835)
            (pc))) read_procpar.cpp:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 835)
;;  succ:       65 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 829 828 830 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 830 829 831 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(call_insn 831 830 832 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:296 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 832 831 833 65 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:297 90 {*movsi_internal}
     (nil))
(call_insn 833 832 834 65 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:297 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 834 833 835)
;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 163 164 317 318 319 320 321
(code_label 835 834 836 66 35 "" [1 uses])
(note 836 835 837 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 66 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:301 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 838 837 839 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 839 838 840 66 (set (reg:DI 5 di)
        (reg:DI 317)) read_procpar.cpp:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(call_insn 840 839 841 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:301 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 841 840 842 66 (set (reg:DI 318)
        (reg:DI 0 ax)) read_procpar.cpp:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 842 841 843 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 318)) read_procpar.cpp:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 318)
        (nil)))
(insn 843 842 844 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(insn 844 843 845 66 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:302 89 {*movdi_internal}
     (nil))
(call_insn 845 844 846 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:302 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 846 845 847 66 (set (reg:DI 319)
        (reg:DI 0 ax)) read_procpar.cpp:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 847 846 848 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 319)) read_procpar.cpp:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 319)
        (nil)))
(insn 848 847 849 66 (set (reg:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 849 848 850 66 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 850 849 851 66 (set (reg:DI 5 di)
        (reg:DI 320)) read_procpar.cpp:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(call_insn 851 850 852 66 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:303 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 852 851 853 66 (set (reg:DF 163 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:303 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 853 852 854 66 (set (reg:SF 164 [ D.5707 ])
        (float_truncate:SF (reg:DF 163 [ D.5706 ]))) read_procpar.cpp:303 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 163 [ D.5706 ])
        (nil)))
(insn 854 853 855 66 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:303 89 {*movdi_internal}
     (nil))
(insn 855 854 1048 66 (set (mem/j:SF (plus:DI (reg/f:DI 321)
                (const_int 348 [0x15c])) [0 procpar_info_38(D)->vox2+0 S4 A32])
        (reg:SF 164 [ D.5707 ])) read_procpar.cpp:303 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 321)
        (expr_list:REG_DEAD (reg:SF 164 [ D.5707 ])
            (nil))))
(jump_insn 1048 855 1049 66 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1049 1048 858)
;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 165 322
(code_label 858 1049 859 67 34 "" [1 uses])
(note 859 858 860 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 67 (set (reg:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(insn 861 860 862 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7d7ebe4000 *.LC22>)) read_procpar.cpp:305 89 {*movdi_internal}
     (nil))
(insn 862 861 863 67 (set (reg:DI 5 di)
        (reg:DI 322)) read_procpar.cpp:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(call_insn/i 863 862 864 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:305 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 864 863 865 67 (set (reg:SI 165 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:305 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 865 864 866 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:305 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 165 [ D.5704 ])
        (nil)))
(jump_insn 866 865 867 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 911)
            (pc))) read_procpar.cpp:305 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 911)
;;  succ:       68 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 166 167 323 324 325
(note 867 866 868 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 868 867 869 68 (set (reg:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(insn 869 868 870 68 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:307 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 870 869 871 68 (set (reg:DI 1 dx)
        (reg:DI 323)) read_procpar.cpp:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 323)
        (nil)))
(insn 871 870 872 68 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:307 90 {*movsi_internal}
     (nil))
(insn 872 871 873 68 (set (reg:DI 5 di)
        (reg:DI 324)) read_procpar.cpp:307 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(call_insn 873 872 874 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:307 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 874 873 875 68 (set (reg:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:308 89 {*movdi_internal}
     (nil))
(insn 875 874 876 68 (set (reg:DI 5 di)
        (reg:DI 325)) read_procpar.cpp:308 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 325)
        (nil)))
(call_insn 876 875 877 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:308 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 877 876 878 68 (set (reg:SI 166 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:308 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 878 877 879 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:308 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 166 [ D.5704 ])
        (nil)))
(insn 879 878 880 68 (set (reg:QI 167 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:308 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 880 879 881 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:308 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 167 [ D.5705 ])
        (nil)))
(jump_insn 881 880 882 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 888)
            (pc))) read_procpar.cpp:308 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 888)
;;  succ:       69 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 882 881 883 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:309 89 {*movdi_internal}
     (nil))
(call_insn 884 883 885 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:309 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 885 884 886 69 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:310 90 {*movsi_internal}
     (nil))
(call_insn 886 885 887 69 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:310 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 887 886 888)
;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168 169 326 327 328 329 330
(code_label 888 887 889 70 37 "" [1 uses])
(note 889 888 890 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 70 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:314 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 891 890 892 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:314 89 {*movdi_internal}
     (nil))
(insn 892 891 893 70 (set (reg:DI 5 di)
        (reg:DI 326)) read_procpar.cpp:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(call_insn 893 892 894 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:314 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 894 893 895 70 (set (reg:DI 327)
        (reg:DI 0 ax)) read_procpar.cpp:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 895 894 896 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 327)) read_procpar.cpp:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 327)
        (nil)))
(insn 896 895 897 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 897 896 898 70 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(call_insn 898 897 899 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:315 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 899 898 900 70 (set (reg:DI 328)
        (reg:DI 0 ax)) read_procpar.cpp:315 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 900 899 901 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 328)) read_procpar.cpp:315 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 328)
        (nil)))
(insn 901 900 902 70 (set (reg:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 902 901 903 70 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 903 902 904 70 (set (reg:DI 5 di)
        (reg:DI 329)) read_procpar.cpp:316 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 329)
        (nil)))
(call_insn 904 903 905 70 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:316 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 905 904 906 70 (set (reg:DF 168 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:316 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 906 905 907 70 (set (reg:SF 169 [ D.5707 ])
        (float_truncate:SF (reg:DF 168 [ D.5706 ]))) read_procpar.cpp:316 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 168 [ D.5706 ])
        (nil)))
(insn 907 906 908 70 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:316 89 {*movdi_internal}
     (nil))
(insn 908 907 1050 70 (set (mem/j:SF (plus:DI (reg/f:DI 330)
                (const_int 352 [0x160])) [0 procpar_info_38(D)->vox3+0 S4 A64])
        (reg:SF 169 [ D.5707 ])) read_procpar.cpp:316 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 330)
        (expr_list:REG_DEAD (reg:SF 169 [ D.5707 ])
            (nil))))
(jump_insn 1050 908 1051 70 (set (pc)
        (label_ref 962)) 654 {jump}
     (nil)
 -> 962)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1051 1050 911)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 170 331
(code_label 911 1051 912 71 36 "" [1 uses])
(note 912 911 913 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 913 912 914 71 (set (reg:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(insn 914 913 915 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f7d7ebe4090 *.LC23>)) read_procpar.cpp:318 89 {*movdi_internal}
     (nil))
(insn 915 914 916 71 (set (reg:DI 5 di)
        (reg:DI 331)) read_procpar.cpp:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 331)
        (nil)))
(call_insn/i 916 915 917 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7d7f063360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:318 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 917 916 918 71 (set (reg:SI 170 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:318 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 918 917 919 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:318 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 170 [ D.5704 ])
        (nil)))
(jump_insn 919 918 920 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) read_procpar.cpp:318 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 962)
;;  succ:       72 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 171 172 332 333 334
(note 920 919 921 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 72 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:320 89 {*movdi_internal}
     (nil))
(insn 922 921 923 72 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 923 922 924 72 (set (reg:DI 1 dx)
        (reg:DI 332)) read_procpar.cpp:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (nil)))
(insn 924 923 925 72 (set (reg:SI 4 si)
        (const_int 255 [0xff])) read_procpar.cpp:320 90 {*movsi_internal}
     (nil))
(insn 925 924 926 72 (set (reg:DI 5 di)
        (reg:DI 333)) read_procpar.cpp:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 333)
        (nil)))
(call_insn 926 925 927 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:320 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 927 926 928 72 (set (reg:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(insn 928 927 929 72 (set (reg:DI 5 di)
        (reg:DI 334)) read_procpar.cpp:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 334)
        (nil)))
(call_insn 929 928 930 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:321 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 930 929 931 72 (set (reg:SI 171 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:321 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 931 930 932 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:321 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 171 [ D.5704 ])
        (nil)))
(insn 932 931 933 72 (set (reg:QI 172 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:321 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 933 932 934 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:321 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 172 [ D.5705 ])
        (nil)))
(jump_insn 934 933 935 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 941)
            (pc))) read_procpar.cpp:321 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 941)
;;  succ:       73 (FALLTHRU)
;;              74
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 935 934 936 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:322 89 {*movdi_internal}
     (nil))
(call_insn 937 936 938 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:322 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 938 937 939 73 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:323 90 {*movsi_internal}
     (nil))
(call_insn 939 938 940 73 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:323 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 940 939 941)
;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 173 174 335 336 337 338 339
(code_label 941 940 942 74 38 "" [1 uses])
(note 942 941 943 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 943 942 944 74 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:327 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 944 943 945 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:327 89 {*movdi_internal}
     (nil))
(insn 945 944 946 74 (set (reg:DI 5 di)
        (reg:DI 335)) read_procpar.cpp:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 335)
        (nil)))
(call_insn 946 945 947 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:327 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 947 946 948 74 (set (reg:DI 336)
        (reg:DI 0 ax)) read_procpar.cpp:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 948 947 949 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 336)) read_procpar.cpp:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 336)
        (nil)))
(insn 949 948 950 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7d7ebbe630 *.LC5>)) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(insn 950 949 951 74 (set (reg:DI 5 di)
        (const_int 0 [0])) read_procpar.cpp:328 89 {*movdi_internal}
     (nil))
(call_insn 951 950 952 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7d7eea0510 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:328 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 952 951 953 74 (set (reg:DI 337)
        (reg:DI 0 ax)) read_procpar.cpp:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 953 952 954 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])
        (reg:DI 337)) read_procpar.cpp:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 337)
        (nil)))
(insn 954 953 955 74 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50024 [0xffffffffffff3c98])) [0 token+0 S8 A64])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 955 954 956 74 (set (reg:DI 4 si)
        (const_int 0 [0])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 956 955 957 74 (set (reg:DI 5 di)
        (reg:DI 338)) read_procpar.cpp:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 338)
        (nil)))
(call_insn 957 956 958 74 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f7d7eeece58 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:329 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 958 957 959 74 (set (reg:DF 173 [ D.5706 ])
        (reg:DF 21 xmm0)) read_procpar.cpp:329 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 959 958 960 74 (set (reg:SF 174 [ D.5707 ])
        (float_truncate:SF (reg:DF 173 [ D.5706 ]))) read_procpar.cpp:329 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 173 [ D.5706 ])
        (nil)))
(insn 960 959 961 74 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50056 [0xffffffffffff3c78])) [0 procpar_info+0 S8 A64])) read_procpar.cpp:329 89 {*movdi_internal}
     (nil))
(insn 961 960 962 74 (set (mem/j:SF (plus:DI (reg/f:DI 339)
                (const_int 368 [0x170])) [0 procpar_info_38(D)->vtheta+0 S4 A64])
        (reg:SF 174 [ D.5707 ])) read_procpar.cpp:329 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 339)
        (expr_list:REG_DEAD (reg:SF 174 [ D.5707 ])
            (nil))))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;;              10 [100.0%] 
;;              14 [100.0%] 
;;              18 [100.0%] 
;;              22 [100.0%] 
;;              26 [100.0%] 
;;              30 [100.0%] 
;;              34 [100.0%] 
;;              38 [100.0%] 
;;              42 [100.0%] 
;;              46 [100.0%] 
;;              50 [100.0%] 
;;              54 [100.0%] 
;;              58 [100.0%] 
;;              62 [100.0%] 
;;              66 [100.0%] 
;;              71
;;              70 [100.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 176 340 341 342
(code_label 962 961 963 75 7 "" [17 uses])
(note 963 962 964 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 75 (set (reg:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:339 89 {*movdi_internal}
     (nil))
(insn 965 964 966 75 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -50016 [0xffffffffffff3ca0])))
            (clobber (reg:CC 17 flags))
        ]) read_procpar.cpp:339 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 966 965 967 75 (set (reg:DI 1 dx)
        (reg:DI 340)) read_procpar.cpp:339 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 340)
        (nil)))
(insn 967 966 968 75 (set (reg:SI 4 si)
        (const_int 5000 [0x1388])) read_procpar.cpp:339 90 {*movsi_internal}
     (nil))
(insn 968 967 969 75 (set (reg:DI 5 di)
        (reg:DI 341)) read_procpar.cpp:339 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 341)
        (nil)))
(call_insn 969 968 970 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f7d7ee32af8 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:339 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 970 969 971 75 (set (reg:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:341 89 {*movdi_internal}
     (nil))
(insn 971 970 972 75 (set (reg:DI 5 di)
        (reg:DI 342)) read_procpar.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 342)
        (nil)))
(call_insn 972 971 973 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f7d7ee3e6c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:341 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 973 972 974 75 (set (reg:SI 175 [ D.5704 ])
        (reg:SI 0 ax)) read_procpar.cpp:341 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 974 973 975 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.5704 ])
            (const_int 0 [0]))) read_procpar.cpp:341 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 175 [ D.5704 ])
        (nil)))
(insn 975 974 976 75 (set (reg:QI 176 [ D.5705 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) read_procpar.cpp:341 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 976 975 977 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.5705 ])
            (const_int 0 [0]))) read_procpar.cpp:341 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 176 [ D.5705 ])
        (nil)))
(jump_insn 977 976 978 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 984)
            (pc))) read_procpar.cpp:341 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 984)
;;  succ:       76 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 978 977 979 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 979 978 980 76 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7d7ebbe480 *.LC2>)) read_procpar.cpp:342 89 {*movdi_internal}
     (nil))
(call_insn 980 979 981 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:342 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 981 980 982 76 (set (reg:SI 5 di)
        (const_int 4 [0x4])) read_procpar.cpp:343 90 {*movsi_internal}
     (nil))
(call_insn 982 981 983 76 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f7d7f08aca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) read_procpar.cpp:343 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 983 982 984)
;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 984 983 985 77 39 "" [1 uses])
(note 985 984 1052 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1052 985 1053 77 (set (pc)
        (label_ref 49)) read_procpar.cpp:51 654 {jump}
     (nil)
 -> 49)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1053 1052 988)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 988 1053 989 78 4 "" [1 uses])
(note 989 988 990 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 990 989 991 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])
            (const_int 0 [0]))) read_procpar.cpp:354 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 991 990 992 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1001)
            (pc))) read_procpar.cpp:354 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1001)
;;  succ:       79 (FALLTHRU)
;;              80
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 177 343
(note 992 991 993 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 79 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7d7ebe4120 *.LC24>)) read_procpar.cpp:356 89 {*movdi_internal}
     (nil))
(call_insn 994 993 995 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7d7f06f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:356 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 995 994 996 79 (set (reg/f:DI 177 [ D.5710 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f7d7ee2a000 stdout>) [0 stdout+0 S8 A64])) read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 996 995 997 79 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.5710 ])) read_procpar.cpp:357 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177 [ D.5710 ])
        (nil)))
(call_insn 997 996 998 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x7f7d7ee2c288 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:357 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 998 997 999 79 (set (reg:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -50032 [0xffffffffffff3c90])) [0 in_file+0 S8 A64])) read_procpar.cpp:358 89 {*movdi_internal}
     (nil))
(insn 999 998 1000 79 (set (reg:DI 5 di)
        (reg:DI 343)) read_procpar.cpp:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 343)
        (nil)))
(call_insn 1000 999 1001 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7d7ee2c1b0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) read_procpar.cpp:358 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;;              79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 178 179
(code_label 1001 1000 1002 80 40 "" [1 uses])
(note 1002 1001 1003 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1003 1002 1006 80 (set (reg:SI 178 [ D.5704 ])
        (const_int 2 [0x2])) read_procpar.cpp:364 90 {*movsi_internal}
     (nil))
(insn 1006 1003 1010 80 (set (reg:SI 179 [ <retval> ])
        (reg:SI 178 [ D.5704 ])) read_procpar.cpp:364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 178 [ D.5704 ])
        (nil)))
(insn 1010 1006 1011 80 (set (reg/i:SI 0 ax)
        (reg:SI 179 [ <retval> ])) read_procpar.cpp:365 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 179 [ <retval> ])
        (nil)))
(insn 1011 1010 1012 80 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5711+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) read_procpar.cpp:365 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1012 1011 1018 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1015)
            (pc))) read_procpar.cpp:365 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1015)
;;  succ:       82
;;              81 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1018 1012 1013 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(call_insn 1013 1018 1014 81 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7d7ef6abd0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) read_procpar.cpp:365 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1014 1013 1015)
;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1015 1014 1019 82 42 "" [1 uses])
(note 1019 1015 1016 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1019 0 82 (use (reg/i:SI 0 ax)) read_procpar.cpp:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

